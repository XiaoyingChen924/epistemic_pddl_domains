(define (domain grid)

    (:requirements :strips :conditional-effects)

    (:predicates
        (not_--)
        (not_at_a_p0011)
        (not_at_a_p012)
        (not_at_a_p1)
        (not_at_a_p10)
        (not_at_a_p2)
        (not_at_a_p3)
        (not_at_a_p4)
        (not_at_a_p5)
        (not_at_a_p6)
        (not_at_a_p7)
        (not_at_a_p8)
        (not_at_a_p9)
        (not_at_b_p0011)
        (not_at_b_p012)
        (not_at_b_p1)
        (not_at_b_p10)
        (not_at_b_p2)
        (not_at_b_p3)
        (not_at_b_p4)
        (not_at_b_p5)
        (not_at_b_p6)
        (not_at_b_p7)
        (not_at_b_p8)
        (not_at_b_p9)
        (not_at_c_p0011)
        (not_at_c_p012)
        (not_at_c_p1)
        (not_at_c_p10)
        (not_at_c_p2)
        (not_at_c_p3)
        (not_at_c_p4)
        (not_at_c_p5)
        (not_at_c_p6)
        (not_at_c_p7)
        (not_at_c_p8)
        (not_at_c_p9)
        (not_at_d_p0011)
        (not_at_d_p012)
        (not_at_d_p1)
        (not_at_d_p10)
        (not_at_d_p2)
        (not_at_d_p3)
        (not_at_d_p4)
        (not_at_d_p5)
        (not_at_d_p6)
        (not_at_d_p7)
        (not_at_d_p8)
        (not_at_d_p9)
        (not_blocked_p0011)
        (not_blocked_p012)
        (not_blocked_p1)
        (not_blocked_p10)
        (not_blocked_p2)
        (not_blocked_p3)
        (not_blocked_p4)
        (not_blocked_p5)
        (not_blocked_p6)
        (not_blocked_p7)
        (not_blocked_p8)
        (not_blocked_p9)
        (not_checked_p0011)
        (not_checked_p012)
        (not_checked_p1)
        (not_checked_p10)
        (not_checked_p2)
        (not_checked_p3)
        (not_checked_p4)
        (not_checked_p5)
        (not_checked_p6)
        (not_checked_p7)
        (not_checked_p8)
        (not_checked_p9)
        (not_communicate)
        (not_communicating_a_a)
        (not_communicating_a_b)
        (not_communicating_a_c)
        (not_communicating_a_d)
        (not_communicating_b_a)
        (not_communicating_b_b)
        (not_communicating_b_c)
        (not_communicating_b_d)
        (not_communicating_c_a)
        (not_communicating_c_b)
        (not_communicating_c_c)
        (not_communicating_c_d)
        (not_communicating_d_a)
        (not_communicating_d_b)
        (not_communicating_d_c)
        (not_communicating_d_d)
        (not_force)
        (not_hiddenblockedcell_p0011)
        (not_hiddenblockedcell_p012)
        (not_hiddenblockedcell_p1)
        (not_hiddenblockedcell_p10)
        (not_hiddenblockedcell_p2)
        (not_hiddenblockedcell_p3)
        (not_hiddenblockedcell_p4)
        (not_hiddenblockedcell_p5)
        (not_hiddenblockedcell_p6)
        (not_hiddenblockedcell_p7)
        (not_hiddenblockedcell_p8)
        (not_hiddenblockedcell_p9)
        (not_hiddensurvivorat_s_p0011)
        (not_hiddensurvivorat_s_p012)
        (not_hiddensurvivorat_s_p1)
        (not_hiddensurvivorat_s_p10)
        (not_hiddensurvivorat_s_p2)
        (not_hiddensurvivorat_s_p3)
        (not_hiddensurvivorat_s_p4)
        (not_hiddensurvivorat_s_p5)
        (not_hiddensurvivorat_s_p6)
        (not_hiddensurvivorat_s_p7)
        (not_hiddensurvivorat_s_p8)
        (not_hiddensurvivorat_s_p9)
        (not_msg_p0011)
        (not_msg_p012)
        (not_msg_p1)
        (not_msg_p10)
        (not_msg_p2)
        (not_msg_p3)
        (not_msg_p4)
        (not_msg_p5)
        (not_msg_p6)
        (not_msg_p7)
        (not_msg_p8)
        (not_msg_p9)
        (not_obs_p0011)
        (not_obs_p012)
        (not_obs_p1)
        (not_obs_p10)
        (not_obs_p2)
        (not_obs_p3)
        (not_obs_p4)
        (not_obs_p5)
        (not_obs_p6)
        (not_obs_p7)
        (not_obs_p8)
        (not_obs_p9)
        (not_obss_p0011)
        (not_obss_p012)
        (not_obss_p1)
        (not_obss_p10)
        (not_obss_p2)
        (not_obss_p3)
        (not_obss_p4)
        (not_obss_p5)
        (not_obss_p6)
        (not_obss_p7)
        (not_obss_p8)
        (not_obss_p9)
        (not_planner)
        (not_succ_p0011_p0011)
        (not_succ_p0011_p012)
        (not_succ_p0011_p1)
        (not_succ_p0011_p10)
        (not_succ_p0011_p2)
        (not_succ_p0011_p3)
        (not_succ_p0011_p4)
        (not_succ_p0011_p5)
        (not_succ_p0011_p6)
        (not_succ_p0011_p7)
        (not_succ_p0011_p8)
        (not_succ_p0011_p9)
        (not_succ_p012_p0011)
        (not_succ_p012_p012)
        (not_succ_p012_p1)
        (not_succ_p012_p10)
        (not_succ_p012_p2)
        (not_succ_p012_p3)
        (not_succ_p012_p4)
        (not_succ_p012_p5)
        (not_succ_p012_p6)
        (not_succ_p012_p7)
        (not_succ_p012_p8)
        (not_succ_p012_p9)
        (not_succ_p10_p0011)
        (not_succ_p10_p012)
        (not_succ_p10_p1)
        (not_succ_p10_p10)
        (not_succ_p10_p2)
        (not_succ_p10_p3)
        (not_succ_p10_p4)
        (not_succ_p10_p5)
        (not_succ_p10_p6)
        (not_succ_p10_p7)
        (not_succ_p10_p8)
        (not_succ_p10_p9)
        (not_succ_p1_p0011)
        (not_succ_p1_p012)
        (not_succ_p1_p1)
        (not_succ_p1_p10)
        (not_succ_p1_p2)
        (not_succ_p1_p3)
        (not_succ_p1_p4)
        (not_succ_p1_p5)
        (not_succ_p1_p6)
        (not_succ_p1_p7)
        (not_succ_p1_p8)
        (not_succ_p1_p9)
        (not_succ_p2_p0011)
        (not_succ_p2_p012)
        (not_succ_p2_p1)
        (not_succ_p2_p10)
        (not_succ_p2_p2)
        (not_succ_p2_p3)
        (not_succ_p2_p4)
        (not_succ_p2_p5)
        (not_succ_p2_p6)
        (not_succ_p2_p7)
        (not_succ_p2_p8)
        (not_succ_p2_p9)
        (not_succ_p3_p0011)
        (not_succ_p3_p012)
        (not_succ_p3_p1)
        (not_succ_p3_p10)
        (not_succ_p3_p2)
        (not_succ_p3_p3)
        (not_succ_p3_p4)
        (not_succ_p3_p5)
        (not_succ_p3_p6)
        (not_succ_p3_p7)
        (not_succ_p3_p8)
        (not_succ_p3_p9)
        (not_succ_p4_p0011)
        (not_succ_p4_p012)
        (not_succ_p4_p1)
        (not_succ_p4_p10)
        (not_succ_p4_p2)
        (not_succ_p4_p3)
        (not_succ_p4_p4)
        (not_succ_p4_p5)
        (not_succ_p4_p6)
        (not_succ_p4_p7)
        (not_succ_p4_p8)
        (not_succ_p4_p9)
        (not_succ_p5_p0011)
        (not_succ_p5_p012)
        (not_succ_p5_p1)
        (not_succ_p5_p10)
        (not_succ_p5_p2)
        (not_succ_p5_p3)
        (not_succ_p5_p4)
        (not_succ_p5_p5)
        (not_succ_p5_p6)
        (not_succ_p5_p7)
        (not_succ_p5_p8)
        (not_succ_p5_p9)
        (not_succ_p6_p0011)
        (not_succ_p6_p012)
        (not_succ_p6_p1)
        (not_succ_p6_p10)
        (not_succ_p6_p2)
        (not_succ_p6_p3)
        (not_succ_p6_p4)
        (not_succ_p6_p5)
        (not_succ_p6_p6)
        (not_succ_p6_p7)
        (not_succ_p6_p8)
        (not_succ_p6_p9)
        (not_succ_p7_p0011)
        (not_succ_p7_p012)
        (not_succ_p7_p1)
        (not_succ_p7_p10)
        (not_succ_p7_p2)
        (not_succ_p7_p3)
        (not_succ_p7_p4)
        (not_succ_p7_p5)
        (not_succ_p7_p6)
        (not_succ_p7_p7)
        (not_succ_p7_p8)
        (not_succ_p7_p9)
        (not_succ_p8_p0011)
        (not_succ_p8_p012)
        (not_succ_p8_p1)
        (not_succ_p8_p10)
        (not_succ_p8_p2)
        (not_succ_p8_p3)
        (not_succ_p8_p4)
        (not_succ_p8_p5)
        (not_succ_p8_p6)
        (not_succ_p8_p7)
        (not_succ_p8_p8)
        (not_succ_p8_p9)
        (not_succ_p9_p0011)
        (not_succ_p9_p012)
        (not_succ_p9_p1)
        (not_succ_p9_p10)
        (not_succ_p9_p2)
        (not_succ_p9_p3)
        (not_succ_p9_p4)
        (not_succ_p9_p5)
        (not_succ_p9_p6)
        (not_succ_p9_p7)
        (not_succ_p9_p8)
        (not_succ_p9_p9)
        (not_survivorat_s_p0011)
        (not_survivorat_s_p012)
        (not_survivorat_s_p1)
        (not_survivorat_s_p10)
        (not_survivorat_s_p2)
        (not_survivorat_s_p3)
        (not_survivorat_s_p4)
        (not_survivorat_s_p5)
        (not_survivorat_s_p6)
        (not_survivorat_s_p7)
        (not_survivorat_s_p8)
        (not_survivorat_s_p9)
        (not_to)
        (--)
        (Ba_not_--)
        (Ba_not_blocked_p0011)
        (Ba_not_blocked_p012)
        (Ba_not_blocked_p1)
        (Ba_not_blocked_p10)
        (Ba_not_blocked_p2)
        (Ba_not_blocked_p3)
        (Ba_not_blocked_p4)
        (Ba_not_blocked_p5)
        (Ba_not_blocked_p6)
        (Ba_not_blocked_p7)
        (Ba_not_blocked_p8)
        (Ba_not_blocked_p9)
        (Ba_not_communicate)
        (Ba_not_communicating_a_a)
        (Ba_not_communicating_a_b)
        (Ba_not_communicating_a_c)
        (Ba_not_communicating_a_d)
        (Ba_not_communicating_b_a)
        (Ba_not_communicating_b_b)
        (Ba_not_communicating_b_c)
        (Ba_not_communicating_b_d)
        (Ba_not_communicating_c_a)
        (Ba_not_communicating_c_b)
        (Ba_not_communicating_c_c)
        (Ba_not_communicating_c_d)
        (Ba_not_communicating_d_a)
        (Ba_not_communicating_d_b)
        (Ba_not_communicating_d_c)
        (Ba_not_communicating_d_d)
        (Ba_not_force)
        (Ba_not_hiddenblockedcell_p0011)
        (Ba_not_hiddenblockedcell_p012)
        (Ba_not_hiddenblockedcell_p1)
        (Ba_not_hiddenblockedcell_p10)
        (Ba_not_hiddenblockedcell_p2)
        (Ba_not_hiddenblockedcell_p3)
        (Ba_not_hiddenblockedcell_p4)
        (Ba_not_hiddenblockedcell_p5)
        (Ba_not_hiddenblockedcell_p6)
        (Ba_not_hiddenblockedcell_p7)
        (Ba_not_hiddenblockedcell_p8)
        (Ba_not_hiddenblockedcell_p9)
        (Ba_not_hiddensurvivorat_s_p0011)
        (Ba_not_hiddensurvivorat_s_p012)
        (Ba_not_hiddensurvivorat_s_p1)
        (Ba_not_hiddensurvivorat_s_p10)
        (Ba_not_hiddensurvivorat_s_p2)
        (Ba_not_hiddensurvivorat_s_p3)
        (Ba_not_hiddensurvivorat_s_p4)
        (Ba_not_hiddensurvivorat_s_p5)
        (Ba_not_hiddensurvivorat_s_p6)
        (Ba_not_hiddensurvivorat_s_p7)
        (Ba_not_hiddensurvivorat_s_p8)
        (Ba_not_hiddensurvivorat_s_p9)
        (Ba_not_msg_p0011)
        (Ba_not_msg_p012)
        (Ba_not_msg_p1)
        (Ba_not_msg_p10)
        (Ba_not_msg_p2)
        (Ba_not_msg_p3)
        (Ba_not_msg_p4)
        (Ba_not_msg_p5)
        (Ba_not_msg_p6)
        (Ba_not_msg_p7)
        (Ba_not_msg_p8)
        (Ba_not_msg_p9)
        (Ba_not_obss_p0011)
        (Ba_not_obss_p012)
        (Ba_not_obss_p1)
        (Ba_not_obss_p10)
        (Ba_not_obss_p2)
        (Ba_not_obss_p3)
        (Ba_not_obss_p4)
        (Ba_not_obss_p5)
        (Ba_not_obss_p6)
        (Ba_not_obss_p7)
        (Ba_not_obss_p8)
        (Ba_not_obss_p9)
        (Ba_not_planner)
        (Ba_not_survivorat_s_p0011)
        (Ba_not_survivorat_s_p012)
        (Ba_not_survivorat_s_p1)
        (Ba_not_survivorat_s_p10)
        (Ba_not_survivorat_s_p2)
        (Ba_not_survivorat_s_p3)
        (Ba_not_survivorat_s_p4)
        (Ba_not_survivorat_s_p5)
        (Ba_not_survivorat_s_p6)
        (Ba_not_survivorat_s_p7)
        (Ba_not_survivorat_s_p8)
        (Ba_not_survivorat_s_p9)
        (Ba_not_to)
        (Ba_--)
        (Ba_blocked_p0011)
        (Ba_blocked_p012)
        (Ba_blocked_p1)
        (Ba_blocked_p10)
        (Ba_blocked_p2)
        (Ba_blocked_p3)
        (Ba_blocked_p4)
        (Ba_blocked_p5)
        (Ba_blocked_p6)
        (Ba_blocked_p7)
        (Ba_blocked_p8)
        (Ba_blocked_p9)
        (Ba_communicate)
        (Ba_communicating_a_a)
        (Ba_communicating_a_b)
        (Ba_communicating_a_c)
        (Ba_communicating_a_d)
        (Ba_communicating_b_a)
        (Ba_communicating_b_b)
        (Ba_communicating_b_c)
        (Ba_communicating_b_d)
        (Ba_communicating_c_a)
        (Ba_communicating_c_b)
        (Ba_communicating_c_c)
        (Ba_communicating_c_d)
        (Ba_communicating_d_a)
        (Ba_communicating_d_b)
        (Ba_communicating_d_c)
        (Ba_communicating_d_d)
        (Ba_force)
        (Ba_hiddenblockedcell_p0011)
        (Ba_hiddenblockedcell_p012)
        (Ba_hiddenblockedcell_p1)
        (Ba_hiddenblockedcell_p10)
        (Ba_hiddenblockedcell_p2)
        (Ba_hiddenblockedcell_p3)
        (Ba_hiddenblockedcell_p4)
        (Ba_hiddenblockedcell_p5)
        (Ba_hiddenblockedcell_p6)
        (Ba_hiddenblockedcell_p7)
        (Ba_hiddenblockedcell_p8)
        (Ba_hiddenblockedcell_p9)
        (Ba_hiddensurvivorat_s_p0011)
        (Ba_hiddensurvivorat_s_p012)
        (Ba_hiddensurvivorat_s_p1)
        (Ba_hiddensurvivorat_s_p10)
        (Ba_hiddensurvivorat_s_p2)
        (Ba_hiddensurvivorat_s_p3)
        (Ba_hiddensurvivorat_s_p4)
        (Ba_hiddensurvivorat_s_p5)
        (Ba_hiddensurvivorat_s_p6)
        (Ba_hiddensurvivorat_s_p7)
        (Ba_hiddensurvivorat_s_p8)
        (Ba_hiddensurvivorat_s_p9)
        (Ba_msg_p0011)
        (Ba_msg_p012)
        (Ba_msg_p1)
        (Ba_msg_p10)
        (Ba_msg_p2)
        (Ba_msg_p3)
        (Ba_msg_p4)
        (Ba_msg_p5)
        (Ba_msg_p6)
        (Ba_msg_p7)
        (Ba_msg_p8)
        (Ba_msg_p9)
        (Ba_obss_p0011)
        (Ba_obss_p012)
        (Ba_obss_p1)
        (Ba_obss_p10)
        (Ba_obss_p2)
        (Ba_obss_p3)
        (Ba_obss_p4)
        (Ba_obss_p5)
        (Ba_obss_p6)
        (Ba_obss_p7)
        (Ba_obss_p8)
        (Ba_obss_p9)
        (Ba_planner)
        (Ba_survivorat_s_p0011)
        (Ba_survivorat_s_p012)
        (Ba_survivorat_s_p1)
        (Ba_survivorat_s_p10)
        (Ba_survivorat_s_p2)
        (Ba_survivorat_s_p3)
        (Ba_survivorat_s_p4)
        (Ba_survivorat_s_p5)
        (Ba_survivorat_s_p6)
        (Ba_survivorat_s_p7)
        (Ba_survivorat_s_p8)
        (Ba_survivorat_s_p9)
        (Ba_to)
        (Bb_not_--)
        (Bb_not_blocked_p0011)
        (Bb_not_blocked_p012)
        (Bb_not_blocked_p1)
        (Bb_not_blocked_p10)
        (Bb_not_blocked_p2)
        (Bb_not_blocked_p3)
        (Bb_not_blocked_p4)
        (Bb_not_blocked_p5)
        (Bb_not_blocked_p6)
        (Bb_not_blocked_p7)
        (Bb_not_blocked_p8)
        (Bb_not_blocked_p9)
        (Bb_not_communicate)
        (Bb_not_communicating_a_a)
        (Bb_not_communicating_a_b)
        (Bb_not_communicating_a_c)
        (Bb_not_communicating_a_d)
        (Bb_not_communicating_b_a)
        (Bb_not_communicating_b_b)
        (Bb_not_communicating_b_c)
        (Bb_not_communicating_b_d)
        (Bb_not_communicating_c_a)
        (Bb_not_communicating_c_b)
        (Bb_not_communicating_c_c)
        (Bb_not_communicating_c_d)
        (Bb_not_communicating_d_a)
        (Bb_not_communicating_d_b)
        (Bb_not_communicating_d_c)
        (Bb_not_communicating_d_d)
        (Bb_not_force)
        (Bb_not_hiddenblockedcell_p0011)
        (Bb_not_hiddenblockedcell_p012)
        (Bb_not_hiddenblockedcell_p1)
        (Bb_not_hiddenblockedcell_p10)
        (Bb_not_hiddenblockedcell_p2)
        (Bb_not_hiddenblockedcell_p3)
        (Bb_not_hiddenblockedcell_p4)
        (Bb_not_hiddenblockedcell_p5)
        (Bb_not_hiddenblockedcell_p6)
        (Bb_not_hiddenblockedcell_p7)
        (Bb_not_hiddenblockedcell_p8)
        (Bb_not_hiddenblockedcell_p9)
        (Bb_not_hiddensurvivorat_s_p0011)
        (Bb_not_hiddensurvivorat_s_p012)
        (Bb_not_hiddensurvivorat_s_p1)
        (Bb_not_hiddensurvivorat_s_p10)
        (Bb_not_hiddensurvivorat_s_p2)
        (Bb_not_hiddensurvivorat_s_p3)
        (Bb_not_hiddensurvivorat_s_p4)
        (Bb_not_hiddensurvivorat_s_p5)
        (Bb_not_hiddensurvivorat_s_p6)
        (Bb_not_hiddensurvivorat_s_p7)
        (Bb_not_hiddensurvivorat_s_p8)
        (Bb_not_hiddensurvivorat_s_p9)
        (Bb_not_msg_p0011)
        (Bb_not_msg_p012)
        (Bb_not_msg_p1)
        (Bb_not_msg_p10)
        (Bb_not_msg_p2)
        (Bb_not_msg_p3)
        (Bb_not_msg_p4)
        (Bb_not_msg_p5)
        (Bb_not_msg_p6)
        (Bb_not_msg_p7)
        (Bb_not_msg_p8)
        (Bb_not_msg_p9)
        (Bb_not_obss_p0011)
        (Bb_not_obss_p012)
        (Bb_not_obss_p1)
        (Bb_not_obss_p10)
        (Bb_not_obss_p2)
        (Bb_not_obss_p3)
        (Bb_not_obss_p4)
        (Bb_not_obss_p5)
        (Bb_not_obss_p6)
        (Bb_not_obss_p7)
        (Bb_not_obss_p8)
        (Bb_not_obss_p9)
        (Bb_not_planner)
        (Bb_not_survivorat_s_p0011)
        (Bb_not_survivorat_s_p012)
        (Bb_not_survivorat_s_p1)
        (Bb_not_survivorat_s_p10)
        (Bb_not_survivorat_s_p2)
        (Bb_not_survivorat_s_p3)
        (Bb_not_survivorat_s_p4)
        (Bb_not_survivorat_s_p5)
        (Bb_not_survivorat_s_p6)
        (Bb_not_survivorat_s_p7)
        (Bb_not_survivorat_s_p8)
        (Bb_not_survivorat_s_p9)
        (Bb_not_to)
        (Bb_--)
        (Bb_blocked_p0011)
        (Bb_blocked_p012)
        (Bb_blocked_p1)
        (Bb_blocked_p10)
        (Bb_blocked_p2)
        (Bb_blocked_p3)
        (Bb_blocked_p4)
        (Bb_blocked_p5)
        (Bb_blocked_p6)
        (Bb_blocked_p7)
        (Bb_blocked_p8)
        (Bb_blocked_p9)
        (Bb_communicate)
        (Bb_communicating_a_a)
        (Bb_communicating_a_b)
        (Bb_communicating_a_c)
        (Bb_communicating_a_d)
        (Bb_communicating_b_a)
        (Bb_communicating_b_b)
        (Bb_communicating_b_c)
        (Bb_communicating_b_d)
        (Bb_communicating_c_a)
        (Bb_communicating_c_b)
        (Bb_communicating_c_c)
        (Bb_communicating_c_d)
        (Bb_communicating_d_a)
        (Bb_communicating_d_b)
        (Bb_communicating_d_c)
        (Bb_communicating_d_d)
        (Bb_force)
        (Bb_hiddenblockedcell_p0011)
        (Bb_hiddenblockedcell_p012)
        (Bb_hiddenblockedcell_p1)
        (Bb_hiddenblockedcell_p10)
        (Bb_hiddenblockedcell_p2)
        (Bb_hiddenblockedcell_p3)
        (Bb_hiddenblockedcell_p4)
        (Bb_hiddenblockedcell_p5)
        (Bb_hiddenblockedcell_p6)
        (Bb_hiddenblockedcell_p7)
        (Bb_hiddenblockedcell_p8)
        (Bb_hiddenblockedcell_p9)
        (Bb_hiddensurvivorat_s_p0011)
        (Bb_hiddensurvivorat_s_p012)
        (Bb_hiddensurvivorat_s_p1)
        (Bb_hiddensurvivorat_s_p10)
        (Bb_hiddensurvivorat_s_p2)
        (Bb_hiddensurvivorat_s_p3)
        (Bb_hiddensurvivorat_s_p4)
        (Bb_hiddensurvivorat_s_p5)
        (Bb_hiddensurvivorat_s_p6)
        (Bb_hiddensurvivorat_s_p7)
        (Bb_hiddensurvivorat_s_p8)
        (Bb_hiddensurvivorat_s_p9)
        (Bb_msg_p0011)
        (Bb_msg_p012)
        (Bb_msg_p1)
        (Bb_msg_p10)
        (Bb_msg_p2)
        (Bb_msg_p3)
        (Bb_msg_p4)
        (Bb_msg_p5)
        (Bb_msg_p6)
        (Bb_msg_p7)
        (Bb_msg_p8)
        (Bb_msg_p9)
        (Bb_obss_p0011)
        (Bb_obss_p012)
        (Bb_obss_p1)
        (Bb_obss_p10)
        (Bb_obss_p2)
        (Bb_obss_p3)
        (Bb_obss_p4)
        (Bb_obss_p5)
        (Bb_obss_p6)
        (Bb_obss_p7)
        (Bb_obss_p8)
        (Bb_obss_p9)
        (Bb_planner)
        (Bb_survivorat_s_p0011)
        (Bb_survivorat_s_p012)
        (Bb_survivorat_s_p1)
        (Bb_survivorat_s_p10)
        (Bb_survivorat_s_p2)
        (Bb_survivorat_s_p3)
        (Bb_survivorat_s_p4)
        (Bb_survivorat_s_p5)
        (Bb_survivorat_s_p6)
        (Bb_survivorat_s_p7)
        (Bb_survivorat_s_p8)
        (Bb_survivorat_s_p9)
        (Bb_to)
        (Bc_not_--)
        (Bc_not_blocked_p0011)
        (Bc_not_blocked_p012)
        (Bc_not_blocked_p1)
        (Bc_not_blocked_p10)
        (Bc_not_blocked_p2)
        (Bc_not_blocked_p3)
        (Bc_not_blocked_p4)
        (Bc_not_blocked_p5)
        (Bc_not_blocked_p6)
        (Bc_not_blocked_p7)
        (Bc_not_blocked_p8)
        (Bc_not_blocked_p9)
        (Bc_not_communicate)
        (Bc_not_communicating_a_a)
        (Bc_not_communicating_a_b)
        (Bc_not_communicating_a_c)
        (Bc_not_communicating_a_d)
        (Bc_not_communicating_b_a)
        (Bc_not_communicating_b_b)
        (Bc_not_communicating_b_c)
        (Bc_not_communicating_b_d)
        (Bc_not_communicating_c_a)
        (Bc_not_communicating_c_b)
        (Bc_not_communicating_c_c)
        (Bc_not_communicating_c_d)
        (Bc_not_communicating_d_a)
        (Bc_not_communicating_d_b)
        (Bc_not_communicating_d_c)
        (Bc_not_communicating_d_d)
        (Bc_not_force)
        (Bc_not_hiddenblockedcell_p0011)
        (Bc_not_hiddenblockedcell_p012)
        (Bc_not_hiddenblockedcell_p1)
        (Bc_not_hiddenblockedcell_p10)
        (Bc_not_hiddenblockedcell_p2)
        (Bc_not_hiddenblockedcell_p3)
        (Bc_not_hiddenblockedcell_p4)
        (Bc_not_hiddenblockedcell_p5)
        (Bc_not_hiddenblockedcell_p6)
        (Bc_not_hiddenblockedcell_p7)
        (Bc_not_hiddenblockedcell_p8)
        (Bc_not_hiddenblockedcell_p9)
        (Bc_not_hiddensurvivorat_s_p0011)
        (Bc_not_hiddensurvivorat_s_p012)
        (Bc_not_hiddensurvivorat_s_p1)
        (Bc_not_hiddensurvivorat_s_p10)
        (Bc_not_hiddensurvivorat_s_p2)
        (Bc_not_hiddensurvivorat_s_p3)
        (Bc_not_hiddensurvivorat_s_p4)
        (Bc_not_hiddensurvivorat_s_p5)
        (Bc_not_hiddensurvivorat_s_p6)
        (Bc_not_hiddensurvivorat_s_p7)
        (Bc_not_hiddensurvivorat_s_p8)
        (Bc_not_hiddensurvivorat_s_p9)
        (Bc_not_msg_p0011)
        (Bc_not_msg_p012)
        (Bc_not_msg_p1)
        (Bc_not_msg_p10)
        (Bc_not_msg_p2)
        (Bc_not_msg_p3)
        (Bc_not_msg_p4)
        (Bc_not_msg_p5)
        (Bc_not_msg_p6)
        (Bc_not_msg_p7)
        (Bc_not_msg_p8)
        (Bc_not_msg_p9)
        (Bc_not_obss_p0011)
        (Bc_not_obss_p012)
        (Bc_not_obss_p1)
        (Bc_not_obss_p10)
        (Bc_not_obss_p2)
        (Bc_not_obss_p3)
        (Bc_not_obss_p4)
        (Bc_not_obss_p5)
        (Bc_not_obss_p6)
        (Bc_not_obss_p7)
        (Bc_not_obss_p8)
        (Bc_not_obss_p9)
        (Bc_not_planner)
        (Bc_not_survivorat_s_p0011)
        (Bc_not_survivorat_s_p012)
        (Bc_not_survivorat_s_p1)
        (Bc_not_survivorat_s_p10)
        (Bc_not_survivorat_s_p2)
        (Bc_not_survivorat_s_p3)
        (Bc_not_survivorat_s_p4)
        (Bc_not_survivorat_s_p5)
        (Bc_not_survivorat_s_p6)
        (Bc_not_survivorat_s_p7)
        (Bc_not_survivorat_s_p8)
        (Bc_not_survivorat_s_p9)
        (Bc_not_to)
        (Bc_--)
        (Bc_blocked_p0011)
        (Bc_blocked_p012)
        (Bc_blocked_p1)
        (Bc_blocked_p10)
        (Bc_blocked_p2)
        (Bc_blocked_p3)
        (Bc_blocked_p4)
        (Bc_blocked_p5)
        (Bc_blocked_p6)
        (Bc_blocked_p7)
        (Bc_blocked_p8)
        (Bc_blocked_p9)
        (Bc_communicate)
        (Bc_communicating_a_a)
        (Bc_communicating_a_b)
        (Bc_communicating_a_c)
        (Bc_communicating_a_d)
        (Bc_communicating_b_a)
        (Bc_communicating_b_b)
        (Bc_communicating_b_c)
        (Bc_communicating_b_d)
        (Bc_communicating_c_a)
        (Bc_communicating_c_b)
        (Bc_communicating_c_c)
        (Bc_communicating_c_d)
        (Bc_communicating_d_a)
        (Bc_communicating_d_b)
        (Bc_communicating_d_c)
        (Bc_communicating_d_d)
        (Bc_force)
        (Bc_hiddenblockedcell_p0011)
        (Bc_hiddenblockedcell_p012)
        (Bc_hiddenblockedcell_p1)
        (Bc_hiddenblockedcell_p10)
        (Bc_hiddenblockedcell_p2)
        (Bc_hiddenblockedcell_p3)
        (Bc_hiddenblockedcell_p4)
        (Bc_hiddenblockedcell_p5)
        (Bc_hiddenblockedcell_p6)
        (Bc_hiddenblockedcell_p7)
        (Bc_hiddenblockedcell_p8)
        (Bc_hiddenblockedcell_p9)
        (Bc_hiddensurvivorat_s_p0011)
        (Bc_hiddensurvivorat_s_p012)
        (Bc_hiddensurvivorat_s_p1)
        (Bc_hiddensurvivorat_s_p10)
        (Bc_hiddensurvivorat_s_p2)
        (Bc_hiddensurvivorat_s_p3)
        (Bc_hiddensurvivorat_s_p4)
        (Bc_hiddensurvivorat_s_p5)
        (Bc_hiddensurvivorat_s_p6)
        (Bc_hiddensurvivorat_s_p7)
        (Bc_hiddensurvivorat_s_p8)
        (Bc_hiddensurvivorat_s_p9)
        (Bc_msg_p0011)
        (Bc_msg_p012)
        (Bc_msg_p1)
        (Bc_msg_p10)
        (Bc_msg_p2)
        (Bc_msg_p3)
        (Bc_msg_p4)
        (Bc_msg_p5)
        (Bc_msg_p6)
        (Bc_msg_p7)
        (Bc_msg_p8)
        (Bc_msg_p9)
        (Bc_obss_p0011)
        (Bc_obss_p012)
        (Bc_obss_p1)
        (Bc_obss_p10)
        (Bc_obss_p2)
        (Bc_obss_p3)
        (Bc_obss_p4)
        (Bc_obss_p5)
        (Bc_obss_p6)
        (Bc_obss_p7)
        (Bc_obss_p8)
        (Bc_obss_p9)
        (Bc_planner)
        (Bc_survivorat_s_p0011)
        (Bc_survivorat_s_p012)
        (Bc_survivorat_s_p1)
        (Bc_survivorat_s_p10)
        (Bc_survivorat_s_p2)
        (Bc_survivorat_s_p3)
        (Bc_survivorat_s_p4)
        (Bc_survivorat_s_p5)
        (Bc_survivorat_s_p6)
        (Bc_survivorat_s_p7)
        (Bc_survivorat_s_p8)
        (Bc_survivorat_s_p9)
        (Bc_to)
        (Bd_not_--)
        (Bd_not_blocked_p0011)
        (Bd_not_blocked_p012)
        (Bd_not_blocked_p1)
        (Bd_not_blocked_p10)
        (Bd_not_blocked_p2)
        (Bd_not_blocked_p3)
        (Bd_not_blocked_p4)
        (Bd_not_blocked_p5)
        (Bd_not_blocked_p6)
        (Bd_not_blocked_p7)
        (Bd_not_blocked_p8)
        (Bd_not_blocked_p9)
        (Bd_not_communicate)
        (Bd_not_communicating_a_a)
        (Bd_not_communicating_a_b)
        (Bd_not_communicating_a_c)
        (Bd_not_communicating_a_d)
        (Bd_not_communicating_b_a)
        (Bd_not_communicating_b_b)
        (Bd_not_communicating_b_c)
        (Bd_not_communicating_b_d)
        (Bd_not_communicating_c_a)
        (Bd_not_communicating_c_b)
        (Bd_not_communicating_c_c)
        (Bd_not_communicating_c_d)
        (Bd_not_communicating_d_a)
        (Bd_not_communicating_d_b)
        (Bd_not_communicating_d_c)
        (Bd_not_communicating_d_d)
        (Bd_not_force)
        (Bd_not_hiddenblockedcell_p0011)
        (Bd_not_hiddenblockedcell_p012)
        (Bd_not_hiddenblockedcell_p1)
        (Bd_not_hiddenblockedcell_p10)
        (Bd_not_hiddenblockedcell_p2)
        (Bd_not_hiddenblockedcell_p3)
        (Bd_not_hiddenblockedcell_p4)
        (Bd_not_hiddenblockedcell_p5)
        (Bd_not_hiddenblockedcell_p6)
        (Bd_not_hiddenblockedcell_p7)
        (Bd_not_hiddenblockedcell_p8)
        (Bd_not_hiddenblockedcell_p9)
        (Bd_not_hiddensurvivorat_s_p0011)
        (Bd_not_hiddensurvivorat_s_p012)
        (Bd_not_hiddensurvivorat_s_p1)
        (Bd_not_hiddensurvivorat_s_p10)
        (Bd_not_hiddensurvivorat_s_p2)
        (Bd_not_hiddensurvivorat_s_p3)
        (Bd_not_hiddensurvivorat_s_p4)
        (Bd_not_hiddensurvivorat_s_p5)
        (Bd_not_hiddensurvivorat_s_p6)
        (Bd_not_hiddensurvivorat_s_p7)
        (Bd_not_hiddensurvivorat_s_p8)
        (Bd_not_hiddensurvivorat_s_p9)
        (Bd_not_msg_p0011)
        (Bd_not_msg_p012)
        (Bd_not_msg_p1)
        (Bd_not_msg_p10)
        (Bd_not_msg_p2)
        (Bd_not_msg_p3)
        (Bd_not_msg_p4)
        (Bd_not_msg_p5)
        (Bd_not_msg_p6)
        (Bd_not_msg_p7)
        (Bd_not_msg_p8)
        (Bd_not_msg_p9)
        (Bd_not_obss_p0011)
        (Bd_not_obss_p012)
        (Bd_not_obss_p1)
        (Bd_not_obss_p10)
        (Bd_not_obss_p2)
        (Bd_not_obss_p3)
        (Bd_not_obss_p4)
        (Bd_not_obss_p5)
        (Bd_not_obss_p6)
        (Bd_not_obss_p7)
        (Bd_not_obss_p8)
        (Bd_not_obss_p9)
        (Bd_not_planner)
        (Bd_not_survivorat_s_p0011)
        (Bd_not_survivorat_s_p012)
        (Bd_not_survivorat_s_p1)
        (Bd_not_survivorat_s_p10)
        (Bd_not_survivorat_s_p2)
        (Bd_not_survivorat_s_p3)
        (Bd_not_survivorat_s_p4)
        (Bd_not_survivorat_s_p5)
        (Bd_not_survivorat_s_p6)
        (Bd_not_survivorat_s_p7)
        (Bd_not_survivorat_s_p8)
        (Bd_not_survivorat_s_p9)
        (Bd_not_to)
        (Bd_--)
        (Bd_blocked_p0011)
        (Bd_blocked_p012)
        (Bd_blocked_p1)
        (Bd_blocked_p10)
        (Bd_blocked_p2)
        (Bd_blocked_p3)
        (Bd_blocked_p4)
        (Bd_blocked_p5)
        (Bd_blocked_p6)
        (Bd_blocked_p7)
        (Bd_blocked_p8)
        (Bd_blocked_p9)
        (Bd_communicate)
        (Bd_communicating_a_a)
        (Bd_communicating_a_b)
        (Bd_communicating_a_c)
        (Bd_communicating_a_d)
        (Bd_communicating_b_a)
        (Bd_communicating_b_b)
        (Bd_communicating_b_c)
        (Bd_communicating_b_d)
        (Bd_communicating_c_a)
        (Bd_communicating_c_b)
        (Bd_communicating_c_c)
        (Bd_communicating_c_d)
        (Bd_communicating_d_a)
        (Bd_communicating_d_b)
        (Bd_communicating_d_c)
        (Bd_communicating_d_d)
        (Bd_force)
        (Bd_hiddenblockedcell_p0011)
        (Bd_hiddenblockedcell_p012)
        (Bd_hiddenblockedcell_p1)
        (Bd_hiddenblockedcell_p10)
        (Bd_hiddenblockedcell_p2)
        (Bd_hiddenblockedcell_p3)
        (Bd_hiddenblockedcell_p4)
        (Bd_hiddenblockedcell_p5)
        (Bd_hiddenblockedcell_p6)
        (Bd_hiddenblockedcell_p7)
        (Bd_hiddenblockedcell_p8)
        (Bd_hiddenblockedcell_p9)
        (Bd_hiddensurvivorat_s_p0011)
        (Bd_hiddensurvivorat_s_p012)
        (Bd_hiddensurvivorat_s_p1)
        (Bd_hiddensurvivorat_s_p10)
        (Bd_hiddensurvivorat_s_p2)
        (Bd_hiddensurvivorat_s_p3)
        (Bd_hiddensurvivorat_s_p4)
        (Bd_hiddensurvivorat_s_p5)
        (Bd_hiddensurvivorat_s_p6)
        (Bd_hiddensurvivorat_s_p7)
        (Bd_hiddensurvivorat_s_p8)
        (Bd_hiddensurvivorat_s_p9)
        (Bd_msg_p0011)
        (Bd_msg_p012)
        (Bd_msg_p1)
        (Bd_msg_p10)
        (Bd_msg_p2)
        (Bd_msg_p3)
        (Bd_msg_p4)
        (Bd_msg_p5)
        (Bd_msg_p6)
        (Bd_msg_p7)
        (Bd_msg_p8)
        (Bd_msg_p9)
        (Bd_obss_p0011)
        (Bd_obss_p012)
        (Bd_obss_p1)
        (Bd_obss_p10)
        (Bd_obss_p2)
        (Bd_obss_p3)
        (Bd_obss_p4)
        (Bd_obss_p5)
        (Bd_obss_p6)
        (Bd_obss_p7)
        (Bd_obss_p8)
        (Bd_obss_p9)
        (Bd_planner)
        (Bd_survivorat_s_p0011)
        (Bd_survivorat_s_p012)
        (Bd_survivorat_s_p1)
        (Bd_survivorat_s_p10)
        (Bd_survivorat_s_p2)
        (Bd_survivorat_s_p3)
        (Bd_survivorat_s_p4)
        (Bd_survivorat_s_p5)
        (Bd_survivorat_s_p6)
        (Bd_survivorat_s_p7)
        (Bd_survivorat_s_p8)
        (Bd_survivorat_s_p9)
        (Bd_to)
        (Pa_not_--)
        (Pa_not_blocked_p0011)
        (Pa_not_blocked_p012)
        (Pa_not_blocked_p1)
        (Pa_not_blocked_p10)
        (Pa_not_blocked_p2)
        (Pa_not_blocked_p3)
        (Pa_not_blocked_p4)
        (Pa_not_blocked_p5)
        (Pa_not_blocked_p6)
        (Pa_not_blocked_p7)
        (Pa_not_blocked_p8)
        (Pa_not_blocked_p9)
        (Pa_not_communicate)
        (Pa_not_communicating_a_a)
        (Pa_not_communicating_a_b)
        (Pa_not_communicating_a_c)
        (Pa_not_communicating_a_d)
        (Pa_not_communicating_b_a)
        (Pa_not_communicating_b_b)
        (Pa_not_communicating_b_c)
        (Pa_not_communicating_b_d)
        (Pa_not_communicating_c_a)
        (Pa_not_communicating_c_b)
        (Pa_not_communicating_c_c)
        (Pa_not_communicating_c_d)
        (Pa_not_communicating_d_a)
        (Pa_not_communicating_d_b)
        (Pa_not_communicating_d_c)
        (Pa_not_communicating_d_d)
        (Pa_not_force)
        (Pa_not_hiddenblockedcell_p0011)
        (Pa_not_hiddenblockedcell_p012)
        (Pa_not_hiddenblockedcell_p1)
        (Pa_not_hiddenblockedcell_p10)
        (Pa_not_hiddenblockedcell_p2)
        (Pa_not_hiddenblockedcell_p3)
        (Pa_not_hiddenblockedcell_p4)
        (Pa_not_hiddenblockedcell_p5)
        (Pa_not_hiddenblockedcell_p6)
        (Pa_not_hiddenblockedcell_p7)
        (Pa_not_hiddenblockedcell_p8)
        (Pa_not_hiddenblockedcell_p9)
        (Pa_not_hiddensurvivorat_s_p0011)
        (Pa_not_hiddensurvivorat_s_p012)
        (Pa_not_hiddensurvivorat_s_p1)
        (Pa_not_hiddensurvivorat_s_p10)
        (Pa_not_hiddensurvivorat_s_p2)
        (Pa_not_hiddensurvivorat_s_p3)
        (Pa_not_hiddensurvivorat_s_p4)
        (Pa_not_hiddensurvivorat_s_p5)
        (Pa_not_hiddensurvivorat_s_p6)
        (Pa_not_hiddensurvivorat_s_p7)
        (Pa_not_hiddensurvivorat_s_p8)
        (Pa_not_hiddensurvivorat_s_p9)
        (Pa_not_msg_p0011)
        (Pa_not_msg_p012)
        (Pa_not_msg_p1)
        (Pa_not_msg_p10)
        (Pa_not_msg_p2)
        (Pa_not_msg_p3)
        (Pa_not_msg_p4)
        (Pa_not_msg_p5)
        (Pa_not_msg_p6)
        (Pa_not_msg_p7)
        (Pa_not_msg_p8)
        (Pa_not_msg_p9)
        (Pa_not_obss_p0011)
        (Pa_not_obss_p012)
        (Pa_not_obss_p1)
        (Pa_not_obss_p10)
        (Pa_not_obss_p2)
        (Pa_not_obss_p3)
        (Pa_not_obss_p4)
        (Pa_not_obss_p5)
        (Pa_not_obss_p6)
        (Pa_not_obss_p7)
        (Pa_not_obss_p8)
        (Pa_not_obss_p9)
        (Pa_not_planner)
        (Pa_not_survivorat_s_p0011)
        (Pa_not_survivorat_s_p012)
        (Pa_not_survivorat_s_p1)
        (Pa_not_survivorat_s_p10)
        (Pa_not_survivorat_s_p2)
        (Pa_not_survivorat_s_p3)
        (Pa_not_survivorat_s_p4)
        (Pa_not_survivorat_s_p5)
        (Pa_not_survivorat_s_p6)
        (Pa_not_survivorat_s_p7)
        (Pa_not_survivorat_s_p8)
        (Pa_not_survivorat_s_p9)
        (Pa_not_to)
        (Pa_--)
        (Pa_blocked_p0011)
        (Pa_blocked_p012)
        (Pa_blocked_p1)
        (Pa_blocked_p10)
        (Pa_blocked_p2)
        (Pa_blocked_p3)
        (Pa_blocked_p4)
        (Pa_blocked_p5)
        (Pa_blocked_p6)
        (Pa_blocked_p7)
        (Pa_blocked_p8)
        (Pa_blocked_p9)
        (Pa_communicate)
        (Pa_communicating_a_a)
        (Pa_communicating_a_b)
        (Pa_communicating_a_c)
        (Pa_communicating_a_d)
        (Pa_communicating_b_a)
        (Pa_communicating_b_b)
        (Pa_communicating_b_c)
        (Pa_communicating_b_d)
        (Pa_communicating_c_a)
        (Pa_communicating_c_b)
        (Pa_communicating_c_c)
        (Pa_communicating_c_d)
        (Pa_communicating_d_a)
        (Pa_communicating_d_b)
        (Pa_communicating_d_c)
        (Pa_communicating_d_d)
        (Pa_force)
        (Pa_hiddenblockedcell_p0011)
        (Pa_hiddenblockedcell_p012)
        (Pa_hiddenblockedcell_p1)
        (Pa_hiddenblockedcell_p10)
        (Pa_hiddenblockedcell_p2)
        (Pa_hiddenblockedcell_p3)
        (Pa_hiddenblockedcell_p4)
        (Pa_hiddenblockedcell_p5)
        (Pa_hiddenblockedcell_p6)
        (Pa_hiddenblockedcell_p7)
        (Pa_hiddenblockedcell_p8)
        (Pa_hiddenblockedcell_p9)
        (Pa_hiddensurvivorat_s_p0011)
        (Pa_hiddensurvivorat_s_p012)
        (Pa_hiddensurvivorat_s_p1)
        (Pa_hiddensurvivorat_s_p10)
        (Pa_hiddensurvivorat_s_p2)
        (Pa_hiddensurvivorat_s_p3)
        (Pa_hiddensurvivorat_s_p4)
        (Pa_hiddensurvivorat_s_p5)
        (Pa_hiddensurvivorat_s_p6)
        (Pa_hiddensurvivorat_s_p7)
        (Pa_hiddensurvivorat_s_p8)
        (Pa_hiddensurvivorat_s_p9)
        (Pa_msg_p0011)
        (Pa_msg_p012)
        (Pa_msg_p1)
        (Pa_msg_p10)
        (Pa_msg_p2)
        (Pa_msg_p3)
        (Pa_msg_p4)
        (Pa_msg_p5)
        (Pa_msg_p6)
        (Pa_msg_p7)
        (Pa_msg_p8)
        (Pa_msg_p9)
        (Pa_obss_p0011)
        (Pa_obss_p012)
        (Pa_obss_p1)
        (Pa_obss_p10)
        (Pa_obss_p2)
        (Pa_obss_p3)
        (Pa_obss_p4)
        (Pa_obss_p5)
        (Pa_obss_p6)
        (Pa_obss_p7)
        (Pa_obss_p8)
        (Pa_obss_p9)
        (Pa_planner)
        (Pa_survivorat_s_p0011)
        (Pa_survivorat_s_p012)
        (Pa_survivorat_s_p1)
        (Pa_survivorat_s_p10)
        (Pa_survivorat_s_p2)
        (Pa_survivorat_s_p3)
        (Pa_survivorat_s_p4)
        (Pa_survivorat_s_p5)
        (Pa_survivorat_s_p6)
        (Pa_survivorat_s_p7)
        (Pa_survivorat_s_p8)
        (Pa_survivorat_s_p9)
        (Pa_to)
        (Pb_not_--)
        (Pb_not_blocked_p0011)
        (Pb_not_blocked_p012)
        (Pb_not_blocked_p1)
        (Pb_not_blocked_p10)
        (Pb_not_blocked_p2)
        (Pb_not_blocked_p3)
        (Pb_not_blocked_p4)
        (Pb_not_blocked_p5)
        (Pb_not_blocked_p6)
        (Pb_not_blocked_p7)
        (Pb_not_blocked_p8)
        (Pb_not_blocked_p9)
        (Pb_not_communicate)
        (Pb_not_communicating_a_a)
        (Pb_not_communicating_a_b)
        (Pb_not_communicating_a_c)
        (Pb_not_communicating_a_d)
        (Pb_not_communicating_b_a)
        (Pb_not_communicating_b_b)
        (Pb_not_communicating_b_c)
        (Pb_not_communicating_b_d)
        (Pb_not_communicating_c_a)
        (Pb_not_communicating_c_b)
        (Pb_not_communicating_c_c)
        (Pb_not_communicating_c_d)
        (Pb_not_communicating_d_a)
        (Pb_not_communicating_d_b)
        (Pb_not_communicating_d_c)
        (Pb_not_communicating_d_d)
        (Pb_not_force)
        (Pb_not_hiddenblockedcell_p0011)
        (Pb_not_hiddenblockedcell_p012)
        (Pb_not_hiddenblockedcell_p1)
        (Pb_not_hiddenblockedcell_p10)
        (Pb_not_hiddenblockedcell_p2)
        (Pb_not_hiddenblockedcell_p3)
        (Pb_not_hiddenblockedcell_p4)
        (Pb_not_hiddenblockedcell_p5)
        (Pb_not_hiddenblockedcell_p6)
        (Pb_not_hiddenblockedcell_p7)
        (Pb_not_hiddenblockedcell_p8)
        (Pb_not_hiddenblockedcell_p9)
        (Pb_not_hiddensurvivorat_s_p0011)
        (Pb_not_hiddensurvivorat_s_p012)
        (Pb_not_hiddensurvivorat_s_p1)
        (Pb_not_hiddensurvivorat_s_p10)
        (Pb_not_hiddensurvivorat_s_p2)
        (Pb_not_hiddensurvivorat_s_p3)
        (Pb_not_hiddensurvivorat_s_p4)
        (Pb_not_hiddensurvivorat_s_p5)
        (Pb_not_hiddensurvivorat_s_p6)
        (Pb_not_hiddensurvivorat_s_p7)
        (Pb_not_hiddensurvivorat_s_p8)
        (Pb_not_hiddensurvivorat_s_p9)
        (Pb_not_msg_p0011)
        (Pb_not_msg_p012)
        (Pb_not_msg_p1)
        (Pb_not_msg_p10)
        (Pb_not_msg_p2)
        (Pb_not_msg_p3)
        (Pb_not_msg_p4)
        (Pb_not_msg_p5)
        (Pb_not_msg_p6)
        (Pb_not_msg_p7)
        (Pb_not_msg_p8)
        (Pb_not_msg_p9)
        (Pb_not_obss_p0011)
        (Pb_not_obss_p012)
        (Pb_not_obss_p1)
        (Pb_not_obss_p10)
        (Pb_not_obss_p2)
        (Pb_not_obss_p3)
        (Pb_not_obss_p4)
        (Pb_not_obss_p5)
        (Pb_not_obss_p6)
        (Pb_not_obss_p7)
        (Pb_not_obss_p8)
        (Pb_not_obss_p9)
        (Pb_not_planner)
        (Pb_not_survivorat_s_p0011)
        (Pb_not_survivorat_s_p012)
        (Pb_not_survivorat_s_p1)
        (Pb_not_survivorat_s_p10)
        (Pb_not_survivorat_s_p2)
        (Pb_not_survivorat_s_p3)
        (Pb_not_survivorat_s_p4)
        (Pb_not_survivorat_s_p5)
        (Pb_not_survivorat_s_p6)
        (Pb_not_survivorat_s_p7)
        (Pb_not_survivorat_s_p8)
        (Pb_not_survivorat_s_p9)
        (Pb_not_to)
        (Pb_--)
        (Pb_blocked_p0011)
        (Pb_blocked_p012)
        (Pb_blocked_p1)
        (Pb_blocked_p10)
        (Pb_blocked_p2)
        (Pb_blocked_p3)
        (Pb_blocked_p4)
        (Pb_blocked_p5)
        (Pb_blocked_p6)
        (Pb_blocked_p7)
        (Pb_blocked_p8)
        (Pb_blocked_p9)
        (Pb_communicate)
        (Pb_communicating_a_a)
        (Pb_communicating_a_b)
        (Pb_communicating_a_c)
        (Pb_communicating_a_d)
        (Pb_communicating_b_a)
        (Pb_communicating_b_b)
        (Pb_communicating_b_c)
        (Pb_communicating_b_d)
        (Pb_communicating_c_a)
        (Pb_communicating_c_b)
        (Pb_communicating_c_c)
        (Pb_communicating_c_d)
        (Pb_communicating_d_a)
        (Pb_communicating_d_b)
        (Pb_communicating_d_c)
        (Pb_communicating_d_d)
        (Pb_force)
        (Pb_hiddenblockedcell_p0011)
        (Pb_hiddenblockedcell_p012)
        (Pb_hiddenblockedcell_p1)
        (Pb_hiddenblockedcell_p10)
        (Pb_hiddenblockedcell_p2)
        (Pb_hiddenblockedcell_p3)
        (Pb_hiddenblockedcell_p4)
        (Pb_hiddenblockedcell_p5)
        (Pb_hiddenblockedcell_p6)
        (Pb_hiddenblockedcell_p7)
        (Pb_hiddenblockedcell_p8)
        (Pb_hiddenblockedcell_p9)
        (Pb_hiddensurvivorat_s_p0011)
        (Pb_hiddensurvivorat_s_p012)
        (Pb_hiddensurvivorat_s_p1)
        (Pb_hiddensurvivorat_s_p10)
        (Pb_hiddensurvivorat_s_p2)
        (Pb_hiddensurvivorat_s_p3)
        (Pb_hiddensurvivorat_s_p4)
        (Pb_hiddensurvivorat_s_p5)
        (Pb_hiddensurvivorat_s_p6)
        (Pb_hiddensurvivorat_s_p7)
        (Pb_hiddensurvivorat_s_p8)
        (Pb_hiddensurvivorat_s_p9)
        (Pb_msg_p0011)
        (Pb_msg_p012)
        (Pb_msg_p1)
        (Pb_msg_p10)
        (Pb_msg_p2)
        (Pb_msg_p3)
        (Pb_msg_p4)
        (Pb_msg_p5)
        (Pb_msg_p6)
        (Pb_msg_p7)
        (Pb_msg_p8)
        (Pb_msg_p9)
        (Pb_obss_p0011)
        (Pb_obss_p012)
        (Pb_obss_p1)
        (Pb_obss_p10)
        (Pb_obss_p2)
        (Pb_obss_p3)
        (Pb_obss_p4)
        (Pb_obss_p5)
        (Pb_obss_p6)
        (Pb_obss_p7)
        (Pb_obss_p8)
        (Pb_obss_p9)
        (Pb_planner)
        (Pb_survivorat_s_p0011)
        (Pb_survivorat_s_p012)
        (Pb_survivorat_s_p1)
        (Pb_survivorat_s_p10)
        (Pb_survivorat_s_p2)
        (Pb_survivorat_s_p3)
        (Pb_survivorat_s_p4)
        (Pb_survivorat_s_p5)
        (Pb_survivorat_s_p6)
        (Pb_survivorat_s_p7)
        (Pb_survivorat_s_p8)
        (Pb_survivorat_s_p9)
        (Pb_to)
        (Pc_not_--)
        (Pc_not_blocked_p0011)
        (Pc_not_blocked_p012)
        (Pc_not_blocked_p1)
        (Pc_not_blocked_p10)
        (Pc_not_blocked_p2)
        (Pc_not_blocked_p3)
        (Pc_not_blocked_p4)
        (Pc_not_blocked_p5)
        (Pc_not_blocked_p6)
        (Pc_not_blocked_p7)
        (Pc_not_blocked_p8)
        (Pc_not_blocked_p9)
        (Pc_not_communicate)
        (Pc_not_communicating_a_a)
        (Pc_not_communicating_a_b)
        (Pc_not_communicating_a_c)
        (Pc_not_communicating_a_d)
        (Pc_not_communicating_b_a)
        (Pc_not_communicating_b_b)
        (Pc_not_communicating_b_c)
        (Pc_not_communicating_b_d)
        (Pc_not_communicating_c_a)
        (Pc_not_communicating_c_b)
        (Pc_not_communicating_c_c)
        (Pc_not_communicating_c_d)
        (Pc_not_communicating_d_a)
        (Pc_not_communicating_d_b)
        (Pc_not_communicating_d_c)
        (Pc_not_communicating_d_d)
        (Pc_not_force)
        (Pc_not_hiddenblockedcell_p0011)
        (Pc_not_hiddenblockedcell_p012)
        (Pc_not_hiddenblockedcell_p1)
        (Pc_not_hiddenblockedcell_p10)
        (Pc_not_hiddenblockedcell_p2)
        (Pc_not_hiddenblockedcell_p3)
        (Pc_not_hiddenblockedcell_p4)
        (Pc_not_hiddenblockedcell_p5)
        (Pc_not_hiddenblockedcell_p6)
        (Pc_not_hiddenblockedcell_p7)
        (Pc_not_hiddenblockedcell_p8)
        (Pc_not_hiddenblockedcell_p9)
        (Pc_not_hiddensurvivorat_s_p0011)
        (Pc_not_hiddensurvivorat_s_p012)
        (Pc_not_hiddensurvivorat_s_p1)
        (Pc_not_hiddensurvivorat_s_p10)
        (Pc_not_hiddensurvivorat_s_p2)
        (Pc_not_hiddensurvivorat_s_p3)
        (Pc_not_hiddensurvivorat_s_p4)
        (Pc_not_hiddensurvivorat_s_p5)
        (Pc_not_hiddensurvivorat_s_p6)
        (Pc_not_hiddensurvivorat_s_p7)
        (Pc_not_hiddensurvivorat_s_p8)
        (Pc_not_hiddensurvivorat_s_p9)
        (Pc_not_msg_p0011)
        (Pc_not_msg_p012)
        (Pc_not_msg_p1)
        (Pc_not_msg_p10)
        (Pc_not_msg_p2)
        (Pc_not_msg_p3)
        (Pc_not_msg_p4)
        (Pc_not_msg_p5)
        (Pc_not_msg_p6)
        (Pc_not_msg_p7)
        (Pc_not_msg_p8)
        (Pc_not_msg_p9)
        (Pc_not_obss_p0011)
        (Pc_not_obss_p012)
        (Pc_not_obss_p1)
        (Pc_not_obss_p10)
        (Pc_not_obss_p2)
        (Pc_not_obss_p3)
        (Pc_not_obss_p4)
        (Pc_not_obss_p5)
        (Pc_not_obss_p6)
        (Pc_not_obss_p7)
        (Pc_not_obss_p8)
        (Pc_not_obss_p9)
        (Pc_not_planner)
        (Pc_not_survivorat_s_p0011)
        (Pc_not_survivorat_s_p012)
        (Pc_not_survivorat_s_p1)
        (Pc_not_survivorat_s_p10)
        (Pc_not_survivorat_s_p2)
        (Pc_not_survivorat_s_p3)
        (Pc_not_survivorat_s_p4)
        (Pc_not_survivorat_s_p5)
        (Pc_not_survivorat_s_p6)
        (Pc_not_survivorat_s_p7)
        (Pc_not_survivorat_s_p8)
        (Pc_not_survivorat_s_p9)
        (Pc_not_to)
        (Pc_--)
        (Pc_blocked_p0011)
        (Pc_blocked_p012)
        (Pc_blocked_p1)
        (Pc_blocked_p10)
        (Pc_blocked_p2)
        (Pc_blocked_p3)
        (Pc_blocked_p4)
        (Pc_blocked_p5)
        (Pc_blocked_p6)
        (Pc_blocked_p7)
        (Pc_blocked_p8)
        (Pc_blocked_p9)
        (Pc_communicate)
        (Pc_communicating_a_a)
        (Pc_communicating_a_b)
        (Pc_communicating_a_c)
        (Pc_communicating_a_d)
        (Pc_communicating_b_a)
        (Pc_communicating_b_b)
        (Pc_communicating_b_c)
        (Pc_communicating_b_d)
        (Pc_communicating_c_a)
        (Pc_communicating_c_b)
        (Pc_communicating_c_c)
        (Pc_communicating_c_d)
        (Pc_communicating_d_a)
        (Pc_communicating_d_b)
        (Pc_communicating_d_c)
        (Pc_communicating_d_d)
        (Pc_force)
        (Pc_hiddenblockedcell_p0011)
        (Pc_hiddenblockedcell_p012)
        (Pc_hiddenblockedcell_p1)
        (Pc_hiddenblockedcell_p10)
        (Pc_hiddenblockedcell_p2)
        (Pc_hiddenblockedcell_p3)
        (Pc_hiddenblockedcell_p4)
        (Pc_hiddenblockedcell_p5)
        (Pc_hiddenblockedcell_p6)
        (Pc_hiddenblockedcell_p7)
        (Pc_hiddenblockedcell_p8)
        (Pc_hiddenblockedcell_p9)
        (Pc_hiddensurvivorat_s_p0011)
        (Pc_hiddensurvivorat_s_p012)
        (Pc_hiddensurvivorat_s_p1)
        (Pc_hiddensurvivorat_s_p10)
        (Pc_hiddensurvivorat_s_p2)
        (Pc_hiddensurvivorat_s_p3)
        (Pc_hiddensurvivorat_s_p4)
        (Pc_hiddensurvivorat_s_p5)
        (Pc_hiddensurvivorat_s_p6)
        (Pc_hiddensurvivorat_s_p7)
        (Pc_hiddensurvivorat_s_p8)
        (Pc_hiddensurvivorat_s_p9)
        (Pc_msg_p0011)
        (Pc_msg_p012)
        (Pc_msg_p1)
        (Pc_msg_p10)
        (Pc_msg_p2)
        (Pc_msg_p3)
        (Pc_msg_p4)
        (Pc_msg_p5)
        (Pc_msg_p6)
        (Pc_msg_p7)
        (Pc_msg_p8)
        (Pc_msg_p9)
        (Pc_obss_p0011)
        (Pc_obss_p012)
        (Pc_obss_p1)
        (Pc_obss_p10)
        (Pc_obss_p2)
        (Pc_obss_p3)
        (Pc_obss_p4)
        (Pc_obss_p5)
        (Pc_obss_p6)
        (Pc_obss_p7)
        (Pc_obss_p8)
        (Pc_obss_p9)
        (Pc_planner)
        (Pc_survivorat_s_p0011)
        (Pc_survivorat_s_p012)
        (Pc_survivorat_s_p1)
        (Pc_survivorat_s_p10)
        (Pc_survivorat_s_p2)
        (Pc_survivorat_s_p3)
        (Pc_survivorat_s_p4)
        (Pc_survivorat_s_p5)
        (Pc_survivorat_s_p6)
        (Pc_survivorat_s_p7)
        (Pc_survivorat_s_p8)
        (Pc_survivorat_s_p9)
        (Pc_to)
        (Pd_not_--)
        (Pd_not_blocked_p0011)
        (Pd_not_blocked_p012)
        (Pd_not_blocked_p1)
        (Pd_not_blocked_p10)
        (Pd_not_blocked_p2)
        (Pd_not_blocked_p3)
        (Pd_not_blocked_p4)
        (Pd_not_blocked_p5)
        (Pd_not_blocked_p6)
        (Pd_not_blocked_p7)
        (Pd_not_blocked_p8)
        (Pd_not_blocked_p9)
        (Pd_not_communicate)
        (Pd_not_communicating_a_a)
        (Pd_not_communicating_a_b)
        (Pd_not_communicating_a_c)
        (Pd_not_communicating_a_d)
        (Pd_not_communicating_b_a)
        (Pd_not_communicating_b_b)
        (Pd_not_communicating_b_c)
        (Pd_not_communicating_b_d)
        (Pd_not_communicating_c_a)
        (Pd_not_communicating_c_b)
        (Pd_not_communicating_c_c)
        (Pd_not_communicating_c_d)
        (Pd_not_communicating_d_a)
        (Pd_not_communicating_d_b)
        (Pd_not_communicating_d_c)
        (Pd_not_communicating_d_d)
        (Pd_not_force)
        (Pd_not_hiddenblockedcell_p0011)
        (Pd_not_hiddenblockedcell_p012)
        (Pd_not_hiddenblockedcell_p1)
        (Pd_not_hiddenblockedcell_p10)
        (Pd_not_hiddenblockedcell_p2)
        (Pd_not_hiddenblockedcell_p3)
        (Pd_not_hiddenblockedcell_p4)
        (Pd_not_hiddenblockedcell_p5)
        (Pd_not_hiddenblockedcell_p6)
        (Pd_not_hiddenblockedcell_p7)
        (Pd_not_hiddenblockedcell_p8)
        (Pd_not_hiddenblockedcell_p9)
        (Pd_not_hiddensurvivorat_s_p0011)
        (Pd_not_hiddensurvivorat_s_p012)
        (Pd_not_hiddensurvivorat_s_p1)
        (Pd_not_hiddensurvivorat_s_p10)
        (Pd_not_hiddensurvivorat_s_p2)
        (Pd_not_hiddensurvivorat_s_p3)
        (Pd_not_hiddensurvivorat_s_p4)
        (Pd_not_hiddensurvivorat_s_p5)
        (Pd_not_hiddensurvivorat_s_p6)
        (Pd_not_hiddensurvivorat_s_p7)
        (Pd_not_hiddensurvivorat_s_p8)
        (Pd_not_hiddensurvivorat_s_p9)
        (Pd_not_msg_p0011)
        (Pd_not_msg_p012)
        (Pd_not_msg_p1)
        (Pd_not_msg_p10)
        (Pd_not_msg_p2)
        (Pd_not_msg_p3)
        (Pd_not_msg_p4)
        (Pd_not_msg_p5)
        (Pd_not_msg_p6)
        (Pd_not_msg_p7)
        (Pd_not_msg_p8)
        (Pd_not_msg_p9)
        (Pd_not_obss_p0011)
        (Pd_not_obss_p012)
        (Pd_not_obss_p1)
        (Pd_not_obss_p10)
        (Pd_not_obss_p2)
        (Pd_not_obss_p3)
        (Pd_not_obss_p4)
        (Pd_not_obss_p5)
        (Pd_not_obss_p6)
        (Pd_not_obss_p7)
        (Pd_not_obss_p8)
        (Pd_not_obss_p9)
        (Pd_not_planner)
        (Pd_not_survivorat_s_p0011)
        (Pd_not_survivorat_s_p012)
        (Pd_not_survivorat_s_p1)
        (Pd_not_survivorat_s_p10)
        (Pd_not_survivorat_s_p2)
        (Pd_not_survivorat_s_p3)
        (Pd_not_survivorat_s_p4)
        (Pd_not_survivorat_s_p5)
        (Pd_not_survivorat_s_p6)
        (Pd_not_survivorat_s_p7)
        (Pd_not_survivorat_s_p8)
        (Pd_not_survivorat_s_p9)
        (Pd_not_to)
        (Pd_--)
        (Pd_blocked_p0011)
        (Pd_blocked_p012)
        (Pd_blocked_p1)
        (Pd_blocked_p10)
        (Pd_blocked_p2)
        (Pd_blocked_p3)
        (Pd_blocked_p4)
        (Pd_blocked_p5)
        (Pd_blocked_p6)
        (Pd_blocked_p7)
        (Pd_blocked_p8)
        (Pd_blocked_p9)
        (Pd_communicate)
        (Pd_communicating_a_a)
        (Pd_communicating_a_b)
        (Pd_communicating_a_c)
        (Pd_communicating_a_d)
        (Pd_communicating_b_a)
        (Pd_communicating_b_b)
        (Pd_communicating_b_c)
        (Pd_communicating_b_d)
        (Pd_communicating_c_a)
        (Pd_communicating_c_b)
        (Pd_communicating_c_c)
        (Pd_communicating_c_d)
        (Pd_communicating_d_a)
        (Pd_communicating_d_b)
        (Pd_communicating_d_c)
        (Pd_communicating_d_d)
        (Pd_force)
        (Pd_hiddenblockedcell_p0011)
        (Pd_hiddenblockedcell_p012)
        (Pd_hiddenblockedcell_p1)
        (Pd_hiddenblockedcell_p10)
        (Pd_hiddenblockedcell_p2)
        (Pd_hiddenblockedcell_p3)
        (Pd_hiddenblockedcell_p4)
        (Pd_hiddenblockedcell_p5)
        (Pd_hiddenblockedcell_p6)
        (Pd_hiddenblockedcell_p7)
        (Pd_hiddenblockedcell_p8)
        (Pd_hiddenblockedcell_p9)
        (Pd_hiddensurvivorat_s_p0011)
        (Pd_hiddensurvivorat_s_p012)
        (Pd_hiddensurvivorat_s_p1)
        (Pd_hiddensurvivorat_s_p10)
        (Pd_hiddensurvivorat_s_p2)
        (Pd_hiddensurvivorat_s_p3)
        (Pd_hiddensurvivorat_s_p4)
        (Pd_hiddensurvivorat_s_p5)
        (Pd_hiddensurvivorat_s_p6)
        (Pd_hiddensurvivorat_s_p7)
        (Pd_hiddensurvivorat_s_p8)
        (Pd_hiddensurvivorat_s_p9)
        (Pd_msg_p0011)
        (Pd_msg_p012)
        (Pd_msg_p1)
        (Pd_msg_p10)
        (Pd_msg_p2)
        (Pd_msg_p3)
        (Pd_msg_p4)
        (Pd_msg_p5)
        (Pd_msg_p6)
        (Pd_msg_p7)
        (Pd_msg_p8)
        (Pd_msg_p9)
        (Pd_obss_p0011)
        (Pd_obss_p012)
        (Pd_obss_p1)
        (Pd_obss_p10)
        (Pd_obss_p2)
        (Pd_obss_p3)
        (Pd_obss_p4)
        (Pd_obss_p5)
        (Pd_obss_p6)
        (Pd_obss_p7)
        (Pd_obss_p8)
        (Pd_obss_p9)
        (Pd_planner)
        (Pd_survivorat_s_p0011)
        (Pd_survivorat_s_p012)
        (Pd_survivorat_s_p1)
        (Pd_survivorat_s_p10)
        (Pd_survivorat_s_p2)
        (Pd_survivorat_s_p3)
        (Pd_survivorat_s_p4)
        (Pd_survivorat_s_p5)
        (Pd_survivorat_s_p6)
        (Pd_survivorat_s_p7)
        (Pd_survivorat_s_p8)
        (Pd_survivorat_s_p9)
        (Pd_to)
        (at_a_p0011)
        (at_a_p012)
        (at_a_p1)
        (at_a_p10)
        (at_a_p2)
        (at_a_p3)
        (at_a_p4)
        (at_a_p5)
        (at_a_p6)
        (at_a_p7)
        (at_a_p8)
        (at_a_p9)
        (at_b_p0011)
        (at_b_p012)
        (at_b_p1)
        (at_b_p10)
        (at_b_p2)
        (at_b_p3)
        (at_b_p4)
        (at_b_p5)
        (at_b_p6)
        (at_b_p7)
        (at_b_p8)
        (at_b_p9)
        (at_c_p0011)
        (at_c_p012)
        (at_c_p1)
        (at_c_p10)
        (at_c_p2)
        (at_c_p3)
        (at_c_p4)
        (at_c_p5)
        (at_c_p6)
        (at_c_p7)
        (at_c_p8)
        (at_c_p9)
        (at_d_p0011)
        (at_d_p012)
        (at_d_p1)
        (at_d_p10)
        (at_d_p2)
        (at_d_p3)
        (at_d_p4)
        (at_d_p5)
        (at_d_p6)
        (at_d_p7)
        (at_d_p8)
        (at_d_p9)
        (blocked_p0011)
        (blocked_p012)
        (blocked_p1)
        (blocked_p10)
        (blocked_p2)
        (blocked_p3)
        (blocked_p4)
        (blocked_p5)
        (blocked_p6)
        (blocked_p7)
        (blocked_p8)
        (blocked_p9)
        (checked_p0011)
        (checked_p012)
        (checked_p1)
        (checked_p10)
        (checked_p2)
        (checked_p3)
        (checked_p4)
        (checked_p5)
        (checked_p6)
        (checked_p7)
        (checked_p8)
        (checked_p9)
        (communicate)
        (communicating_a_a)
        (communicating_a_b)
        (communicating_a_c)
        (communicating_a_d)
        (communicating_b_a)
        (communicating_b_b)
        (communicating_b_c)
        (communicating_b_d)
        (communicating_c_a)
        (communicating_c_b)
        (communicating_c_c)
        (communicating_c_d)
        (communicating_d_a)
        (communicating_d_b)
        (communicating_d_c)
        (communicating_d_d)
        (force)
        (hiddenblockedcell_p0011)
        (hiddenblockedcell_p012)
        (hiddenblockedcell_p1)
        (hiddenblockedcell_p10)
        (hiddenblockedcell_p2)
        (hiddenblockedcell_p3)
        (hiddenblockedcell_p4)
        (hiddenblockedcell_p5)
        (hiddenblockedcell_p6)
        (hiddenblockedcell_p7)
        (hiddenblockedcell_p8)
        (hiddenblockedcell_p9)
        (hiddensurvivorat_s_p0011)
        (hiddensurvivorat_s_p012)
        (hiddensurvivorat_s_p1)
        (hiddensurvivorat_s_p10)
        (hiddensurvivorat_s_p2)
        (hiddensurvivorat_s_p3)
        (hiddensurvivorat_s_p4)
        (hiddensurvivorat_s_p5)
        (hiddensurvivorat_s_p6)
        (hiddensurvivorat_s_p7)
        (hiddensurvivorat_s_p8)
        (hiddensurvivorat_s_p9)
        (msg_p0011)
        (msg_p012)
        (msg_p1)
        (msg_p10)
        (msg_p2)
        (msg_p3)
        (msg_p4)
        (msg_p5)
        (msg_p6)
        (msg_p7)
        (msg_p8)
        (msg_p9)
        (obs_p0011)
        (obs_p012)
        (obs_p1)
        (obs_p10)
        (obs_p2)
        (obs_p3)
        (obs_p4)
        (obs_p5)
        (obs_p6)
        (obs_p7)
        (obs_p8)
        (obs_p9)
        (obss_p0011)
        (obss_p012)
        (obss_p1)
        (obss_p10)
        (obss_p2)
        (obss_p3)
        (obss_p4)
        (obss_p5)
        (obss_p6)
        (obss_p7)
        (obss_p8)
        (obss_p9)
        (planner)
        (succ_p0011_p0011)
        (succ_p0011_p012)
        (succ_p0011_p1)
        (succ_p0011_p10)
        (succ_p0011_p2)
        (succ_p0011_p3)
        (succ_p0011_p4)
        (succ_p0011_p5)
        (succ_p0011_p6)
        (succ_p0011_p7)
        (succ_p0011_p8)
        (succ_p0011_p9)
        (succ_p012_p0011)
        (succ_p012_p012)
        (succ_p012_p1)
        (succ_p012_p10)
        (succ_p012_p2)
        (succ_p012_p3)
        (succ_p012_p4)
        (succ_p012_p5)
        (succ_p012_p6)
        (succ_p012_p7)
        (succ_p012_p8)
        (succ_p012_p9)
        (succ_p10_p0011)
        (succ_p10_p012)
        (succ_p10_p1)
        (succ_p10_p10)
        (succ_p10_p2)
        (succ_p10_p3)
        (succ_p10_p4)
        (succ_p10_p5)
        (succ_p10_p6)
        (succ_p10_p7)
        (succ_p10_p8)
        (succ_p10_p9)
        (succ_p1_p0011)
        (succ_p1_p012)
        (succ_p1_p1)
        (succ_p1_p10)
        (succ_p1_p2)
        (succ_p1_p3)
        (succ_p1_p4)
        (succ_p1_p5)
        (succ_p1_p6)
        (succ_p1_p7)
        (succ_p1_p8)
        (succ_p1_p9)
        (succ_p2_p0011)
        (succ_p2_p012)
        (succ_p2_p1)
        (succ_p2_p10)
        (succ_p2_p2)
        (succ_p2_p3)
        (succ_p2_p4)
        (succ_p2_p5)
        (succ_p2_p6)
        (succ_p2_p7)
        (succ_p2_p8)
        (succ_p2_p9)
        (succ_p3_p0011)
        (succ_p3_p012)
        (succ_p3_p1)
        (succ_p3_p10)
        (succ_p3_p2)
        (succ_p3_p3)
        (succ_p3_p4)
        (succ_p3_p5)
        (succ_p3_p6)
        (succ_p3_p7)
        (succ_p3_p8)
        (succ_p3_p9)
        (succ_p4_p0011)
        (succ_p4_p012)
        (succ_p4_p1)
        (succ_p4_p10)
        (succ_p4_p2)
        (succ_p4_p3)
        (succ_p4_p4)
        (succ_p4_p5)
        (succ_p4_p6)
        (succ_p4_p7)
        (succ_p4_p8)
        (succ_p4_p9)
        (succ_p5_p0011)
        (succ_p5_p012)
        (succ_p5_p1)
        (succ_p5_p10)
        (succ_p5_p2)
        (succ_p5_p3)
        (succ_p5_p4)
        (succ_p5_p5)
        (succ_p5_p6)
        (succ_p5_p7)
        (succ_p5_p8)
        (succ_p5_p9)
        (succ_p6_p0011)
        (succ_p6_p012)
        (succ_p6_p1)
        (succ_p6_p10)
        (succ_p6_p2)
        (succ_p6_p3)
        (succ_p6_p4)
        (succ_p6_p5)
        (succ_p6_p6)
        (succ_p6_p7)
        (succ_p6_p8)
        (succ_p6_p9)
        (succ_p7_p0011)
        (succ_p7_p012)
        (succ_p7_p1)
        (succ_p7_p10)
        (succ_p7_p2)
        (succ_p7_p3)
        (succ_p7_p4)
        (succ_p7_p5)
        (succ_p7_p6)
        (succ_p7_p7)
        (succ_p7_p8)
        (succ_p7_p9)
        (succ_p8_p0011)
        (succ_p8_p012)
        (succ_p8_p1)
        (succ_p8_p10)
        (succ_p8_p2)
        (succ_p8_p3)
        (succ_p8_p4)
        (succ_p8_p5)
        (succ_p8_p6)
        (succ_p8_p7)
        (succ_p8_p8)
        (succ_p8_p9)
        (succ_p9_p0011)
        (succ_p9_p012)
        (succ_p9_p1)
        (succ_p9_p10)
        (succ_p9_p2)
        (succ_p9_p3)
        (succ_p9_p4)
        (succ_p9_p5)
        (succ_p9_p6)
        (succ_p9_p7)
        (succ_p9_p8)
        (succ_p9_p9)
        (survivorat_s_p0011)
        (survivorat_s_p012)
        (survivorat_s_p1)
        (survivorat_s_p10)
        (survivorat_s_p2)
        (survivorat_s_p3)
        (survivorat_s_p4)
        (survivorat_s_p5)
        (survivorat_s_p6)
        (survivorat_s_p7)
        (survivorat_s_p8)
        (survivorat_s_p9)
        (to)
    )

    (:action commsurvivor_p0011_a_s
        :precondition (and (Pa_survivorat_s_p0011)
                           (Ba_survivorat_s_p0011)
                           (at_a_p0011))
        :effect (and
                    ; #18753: <==closure== 39319 (pos)
                    (Pd_survivorat_s_p0011)

                    ; #20470: <==closure== 24192 (pos)
                    (Pb_msg_p0011)

                    ; #24192: <==commonly_known== 31429 (pos)
                    (Bb_msg_p0011)

                    ; #31429: origin
                    (msg_p0011)

                    ; #33630: <==commonly_known== 31429 (pos)
                    (Bd_msg_p0011)

                    ; #34986: <==closure== 53888 (pos)
                    (Pb_survivorat_s_p0011)

                    ; #39319: origin
                    (Bd_survivorat_s_p0011)

                    ; #40973: <==closure== 70957 (pos)
                    (Pc_msg_p0011)

                    ; #52275: <==closure== 33630 (pos)
                    (Pd_msg_p0011)

                    ; #53888: origin
                    (Bb_survivorat_s_p0011)

                    ; #54203: origin
                    (Ba_survivorat_s_p0011)

                    ; #70372: <==closure== 54203 (pos)
                    (Pa_survivorat_s_p0011)

                    ; #70957: <==commonly_known== 31429 (pos)
                    (Bc_msg_p0011)

                    ; #76404: <==closure== 91503 (pos)
                    (Pc_survivorat_s_p0011)

                    ; #79047: <==closure== 88649 (pos)
                    (Pa_msg_p0011)

                    ; #88649: <==commonly_known== 31429 (pos)
                    (Ba_msg_p0011)

                    ; #91503: origin
                    (Bc_survivorat_s_p0011)

                    ; #13173: <==negation-removal== 91503 (pos)
                    (not (Pc_not_survivorat_s_p0011))

                    ; #24935: <==negation-removal== 88649 (pos)
                    (not (Pa_not_msg_p0011))

                    ; #27109: <==negation-removal== 70957 (pos)
                    (not (Pc_not_msg_p0011))

                    ; #29159: <==negation-removal== 79047 (pos)
                    (not (Ba_not_msg_p0011))

                    ; #30499: <==negation-removal== 53888 (pos)
                    (not (Pb_not_survivorat_s_p0011))

                    ; #35159: <==negation-removal== 34986 (pos)
                    (not (Bb_not_survivorat_s_p0011))

                    ; #42710: <==negation-removal== 52275 (pos)
                    (not (Bd_not_msg_p0011))

                    ; #44485: <==negation-removal== 33630 (pos)
                    (not (Pd_not_msg_p0011))

                    ; #47859: <==negation-removal== 18753 (pos)
                    (not (Bd_not_survivorat_s_p0011))

                    ; #55604: <==negation-removal== 39319 (pos)
                    (not (Pd_not_survivorat_s_p0011))

                    ; #64322: <==negation-removal== 24192 (pos)
                    (not (Pb_not_msg_p0011))

                    ; #66814: <==negation-removal== 70372 (pos)
                    (not (Ba_not_survivorat_s_p0011))

                    ; #68387: <==negation-removal== 54203 (pos)
                    (not (Pa_not_survivorat_s_p0011))

                    ; #73887: <==negation-removal== 76404 (pos)
                    (not (Bc_not_survivorat_s_p0011))

                    ; #75068: <==negation-removal== 20470 (pos)
                    (not (Bb_not_msg_p0011))

                    ; #77586: <==negation-removal== 31429 (pos)
                    (not (not_msg_p0011))

                    ; #87130: <==negation-removal== 40973 (pos)
                    (not (Bc_not_msg_p0011))))

    (:action commsurvivor_p0011_b_s
        :precondition (and (at_b_p0011)
                           (Bb_survivorat_s_p0011)
                           (Pb_survivorat_s_p0011))
        :effect (and
                    ; #18753: <==closure== 39319 (pos)
                    (Pd_survivorat_s_p0011)

                    ; #20470: <==closure== 24192 (pos)
                    (Pb_msg_p0011)

                    ; #24192: <==commonly_known== 31429 (pos)
                    (Bb_msg_p0011)

                    ; #31429: origin
                    (msg_p0011)

                    ; #33630: <==commonly_known== 31429 (pos)
                    (Bd_msg_p0011)

                    ; #34986: <==closure== 53888 (pos)
                    (Pb_survivorat_s_p0011)

                    ; #39319: origin
                    (Bd_survivorat_s_p0011)

                    ; #40973: <==closure== 70957 (pos)
                    (Pc_msg_p0011)

                    ; #52275: <==closure== 33630 (pos)
                    (Pd_msg_p0011)

                    ; #53888: origin
                    (Bb_survivorat_s_p0011)

                    ; #54203: origin
                    (Ba_survivorat_s_p0011)

                    ; #70372: <==closure== 54203 (pos)
                    (Pa_survivorat_s_p0011)

                    ; #70957: <==commonly_known== 31429 (pos)
                    (Bc_msg_p0011)

                    ; #76404: <==closure== 91503 (pos)
                    (Pc_survivorat_s_p0011)

                    ; #79047: <==closure== 88649 (pos)
                    (Pa_msg_p0011)

                    ; #88649: <==commonly_known== 31429 (pos)
                    (Ba_msg_p0011)

                    ; #91503: origin
                    (Bc_survivorat_s_p0011)

                    ; #13173: <==negation-removal== 91503 (pos)
                    (not (Pc_not_survivorat_s_p0011))

                    ; #24935: <==negation-removal== 88649 (pos)
                    (not (Pa_not_msg_p0011))

                    ; #27109: <==negation-removal== 70957 (pos)
                    (not (Pc_not_msg_p0011))

                    ; #29159: <==negation-removal== 79047 (pos)
                    (not (Ba_not_msg_p0011))

                    ; #30499: <==negation-removal== 53888 (pos)
                    (not (Pb_not_survivorat_s_p0011))

                    ; #35159: <==negation-removal== 34986 (pos)
                    (not (Bb_not_survivorat_s_p0011))

                    ; #42710: <==negation-removal== 52275 (pos)
                    (not (Bd_not_msg_p0011))

                    ; #44485: <==negation-removal== 33630 (pos)
                    (not (Pd_not_msg_p0011))

                    ; #47859: <==negation-removal== 18753 (pos)
                    (not (Bd_not_survivorat_s_p0011))

                    ; #55604: <==negation-removal== 39319 (pos)
                    (not (Pd_not_survivorat_s_p0011))

                    ; #64322: <==negation-removal== 24192 (pos)
                    (not (Pb_not_msg_p0011))

                    ; #66814: <==negation-removal== 70372 (pos)
                    (not (Ba_not_survivorat_s_p0011))

                    ; #68387: <==negation-removal== 54203 (pos)
                    (not (Pa_not_survivorat_s_p0011))

                    ; #73887: <==negation-removal== 76404 (pos)
                    (not (Bc_not_survivorat_s_p0011))

                    ; #75068: <==negation-removal== 20470 (pos)
                    (not (Bb_not_msg_p0011))

                    ; #77586: <==negation-removal== 31429 (pos)
                    (not (not_msg_p0011))

                    ; #87130: <==negation-removal== 40973 (pos)
                    (not (Bc_not_msg_p0011))))

    (:action commsurvivor_p0011_c_s
        :precondition (and (at_c_p0011)
                           (Bc_survivorat_s_p0011)
                           (Pc_survivorat_s_p0011))
        :effect (and
                    ; #18753: <==closure== 39319 (pos)
                    (Pd_survivorat_s_p0011)

                    ; #20470: <==closure== 24192 (pos)
                    (Pb_msg_p0011)

                    ; #24192: <==commonly_known== 31429 (pos)
                    (Bb_msg_p0011)

                    ; #31429: origin
                    (msg_p0011)

                    ; #33630: <==commonly_known== 31429 (pos)
                    (Bd_msg_p0011)

                    ; #34986: <==closure== 53888 (pos)
                    (Pb_survivorat_s_p0011)

                    ; #39319: origin
                    (Bd_survivorat_s_p0011)

                    ; #40973: <==closure== 70957 (pos)
                    (Pc_msg_p0011)

                    ; #52275: <==closure== 33630 (pos)
                    (Pd_msg_p0011)

                    ; #53888: origin
                    (Bb_survivorat_s_p0011)

                    ; #54203: origin
                    (Ba_survivorat_s_p0011)

                    ; #70372: <==closure== 54203 (pos)
                    (Pa_survivorat_s_p0011)

                    ; #70957: <==commonly_known== 31429 (pos)
                    (Bc_msg_p0011)

                    ; #76404: <==closure== 91503 (pos)
                    (Pc_survivorat_s_p0011)

                    ; #79047: <==closure== 88649 (pos)
                    (Pa_msg_p0011)

                    ; #88649: <==commonly_known== 31429 (pos)
                    (Ba_msg_p0011)

                    ; #91503: origin
                    (Bc_survivorat_s_p0011)

                    ; #13173: <==negation-removal== 91503 (pos)
                    (not (Pc_not_survivorat_s_p0011))

                    ; #24935: <==negation-removal== 88649 (pos)
                    (not (Pa_not_msg_p0011))

                    ; #27109: <==negation-removal== 70957 (pos)
                    (not (Pc_not_msg_p0011))

                    ; #29159: <==negation-removal== 79047 (pos)
                    (not (Ba_not_msg_p0011))

                    ; #30499: <==negation-removal== 53888 (pos)
                    (not (Pb_not_survivorat_s_p0011))

                    ; #35159: <==negation-removal== 34986 (pos)
                    (not (Bb_not_survivorat_s_p0011))

                    ; #42710: <==negation-removal== 52275 (pos)
                    (not (Bd_not_msg_p0011))

                    ; #44485: <==negation-removal== 33630 (pos)
                    (not (Pd_not_msg_p0011))

                    ; #47859: <==negation-removal== 18753 (pos)
                    (not (Bd_not_survivorat_s_p0011))

                    ; #55604: <==negation-removal== 39319 (pos)
                    (not (Pd_not_survivorat_s_p0011))

                    ; #64322: <==negation-removal== 24192 (pos)
                    (not (Pb_not_msg_p0011))

                    ; #66814: <==negation-removal== 70372 (pos)
                    (not (Ba_not_survivorat_s_p0011))

                    ; #68387: <==negation-removal== 54203 (pos)
                    (not (Pa_not_survivorat_s_p0011))

                    ; #73887: <==negation-removal== 76404 (pos)
                    (not (Bc_not_survivorat_s_p0011))

                    ; #75068: <==negation-removal== 20470 (pos)
                    (not (Bb_not_msg_p0011))

                    ; #77586: <==negation-removal== 31429 (pos)
                    (not (not_msg_p0011))

                    ; #87130: <==negation-removal== 40973 (pos)
                    (not (Bc_not_msg_p0011))))

    (:action commsurvivor_p0011_d_s
        :precondition (and (Bd_survivorat_s_p0011)
                           (at_d_p0011)
                           (Pd_survivorat_s_p0011))
        :effect (and
                    ; #18753: <==closure== 39319 (pos)
                    (Pd_survivorat_s_p0011)

                    ; #20470: <==closure== 24192 (pos)
                    (Pb_msg_p0011)

                    ; #24192: <==commonly_known== 31429 (pos)
                    (Bb_msg_p0011)

                    ; #31429: origin
                    (msg_p0011)

                    ; #33630: <==commonly_known== 31429 (pos)
                    (Bd_msg_p0011)

                    ; #34986: <==closure== 53888 (pos)
                    (Pb_survivorat_s_p0011)

                    ; #39319: origin
                    (Bd_survivorat_s_p0011)

                    ; #40973: <==closure== 70957 (pos)
                    (Pc_msg_p0011)

                    ; #52275: <==closure== 33630 (pos)
                    (Pd_msg_p0011)

                    ; #53888: origin
                    (Bb_survivorat_s_p0011)

                    ; #54203: origin
                    (Ba_survivorat_s_p0011)

                    ; #70372: <==closure== 54203 (pos)
                    (Pa_survivorat_s_p0011)

                    ; #70957: <==commonly_known== 31429 (pos)
                    (Bc_msg_p0011)

                    ; #76404: <==closure== 91503 (pos)
                    (Pc_survivorat_s_p0011)

                    ; #79047: <==closure== 88649 (pos)
                    (Pa_msg_p0011)

                    ; #88649: <==commonly_known== 31429 (pos)
                    (Ba_msg_p0011)

                    ; #91503: origin
                    (Bc_survivorat_s_p0011)

                    ; #13173: <==negation-removal== 91503 (pos)
                    (not (Pc_not_survivorat_s_p0011))

                    ; #24935: <==negation-removal== 88649 (pos)
                    (not (Pa_not_msg_p0011))

                    ; #27109: <==negation-removal== 70957 (pos)
                    (not (Pc_not_msg_p0011))

                    ; #29159: <==negation-removal== 79047 (pos)
                    (not (Ba_not_msg_p0011))

                    ; #30499: <==negation-removal== 53888 (pos)
                    (not (Pb_not_survivorat_s_p0011))

                    ; #35159: <==negation-removal== 34986 (pos)
                    (not (Bb_not_survivorat_s_p0011))

                    ; #42710: <==negation-removal== 52275 (pos)
                    (not (Bd_not_msg_p0011))

                    ; #44485: <==negation-removal== 33630 (pos)
                    (not (Pd_not_msg_p0011))

                    ; #47859: <==negation-removal== 18753 (pos)
                    (not (Bd_not_survivorat_s_p0011))

                    ; #55604: <==negation-removal== 39319 (pos)
                    (not (Pd_not_survivorat_s_p0011))

                    ; #64322: <==negation-removal== 24192 (pos)
                    (not (Pb_not_msg_p0011))

                    ; #66814: <==negation-removal== 70372 (pos)
                    (not (Ba_not_survivorat_s_p0011))

                    ; #68387: <==negation-removal== 54203 (pos)
                    (not (Pa_not_survivorat_s_p0011))

                    ; #73887: <==negation-removal== 76404 (pos)
                    (not (Bc_not_survivorat_s_p0011))

                    ; #75068: <==negation-removal== 20470 (pos)
                    (not (Bb_not_msg_p0011))

                    ; #77586: <==negation-removal== 31429 (pos)
                    (not (not_msg_p0011))

                    ; #87130: <==negation-removal== 40973 (pos)
                    (not (Bc_not_msg_p0011))))

    (:action commsurvivor_p012_a_s
        :precondition (and (at_a_p012)
                           (Pa_survivorat_s_p012)
                           (Ba_survivorat_s_p012))
        :effect (and
                    ; #10785: <==closure== 42357 (pos)
                    (Pb_survivorat_s_p012)

                    ; #19390: origin
                    (Bd_survivorat_s_p012)

                    ; #34876: <==closure== 36558 (pos)
                    (Pd_msg_p012)

                    ; #36558: <==commonly_known== 55364 (pos)
                    (Bd_msg_p012)

                    ; #42357: origin
                    (Bb_survivorat_s_p012)

                    ; #47349: <==closure== 83557 (pos)
                    (Pa_survivorat_s_p012)

                    ; #48128: <==closure== 70884 (pos)
                    (Pb_msg_p012)

                    ; #53942: <==closure== 54528 (pos)
                    (Pc_survivorat_s_p012)

                    ; #54528: origin
                    (Bc_survivorat_s_p012)

                    ; #55364: origin
                    (msg_p012)

                    ; #60900: <==commonly_known== 55364 (pos)
                    (Ba_msg_p012)

                    ; #61995: <==commonly_known== 55364 (pos)
                    (Bc_msg_p012)

                    ; #62960: <==closure== 60900 (pos)
                    (Pa_msg_p012)

                    ; #70884: <==commonly_known== 55364 (pos)
                    (Bb_msg_p012)

                    ; #81495: <==closure== 61995 (pos)
                    (Pc_msg_p012)

                    ; #83557: origin
                    (Ba_survivorat_s_p012)

                    ; #91582: <==closure== 19390 (pos)
                    (Pd_survivorat_s_p012)

                    ; #17021: <==negation-removal== 47349 (pos)
                    (not (Ba_not_survivorat_s_p012))

                    ; #18343: <==negation-removal== 54528 (pos)
                    (not (Pc_not_survivorat_s_p012))

                    ; #18893: <==negation-removal== 34876 (pos)
                    (not (Bd_not_msg_p012))

                    ; #20571: <==negation-removal== 62960 (pos)
                    (not (Ba_not_msg_p012))

                    ; #22764: <==negation-removal== 60900 (pos)
                    (not (Pa_not_msg_p012))

                    ; #27158: <==negation-removal== 91582 (pos)
                    (not (Bd_not_survivorat_s_p012))

                    ; #39452: <==negation-removal== 81495 (pos)
                    (not (Bc_not_msg_p012))

                    ; #48898: <==negation-removal== 10785 (pos)
                    (not (Bb_not_survivorat_s_p012))

                    ; #49544: <==negation-removal== 55364 (pos)
                    (not (not_msg_p012))

                    ; #53997: <==negation-removal== 70884 (pos)
                    (not (Pb_not_msg_p012))

                    ; #57482: <==negation-removal== 53942 (pos)
                    (not (Bc_not_survivorat_s_p012))

                    ; #58496: <==negation-removal== 48128 (pos)
                    (not (Bb_not_msg_p012))

                    ; #69134: <==negation-removal== 19390 (pos)
                    (not (Pd_not_survivorat_s_p012))

                    ; #69799: <==negation-removal== 61995 (pos)
                    (not (Pc_not_msg_p012))

                    ; #78688: <==negation-removal== 83557 (pos)
                    (not (Pa_not_survivorat_s_p012))

                    ; #86509: <==negation-removal== 42357 (pos)
                    (not (Pb_not_survivorat_s_p012))

                    ; #89754: <==negation-removal== 36558 (pos)
                    (not (Pd_not_msg_p012))))

    (:action commsurvivor_p012_b_s
        :precondition (and (Pb_survivorat_s_p012)
                           (Bb_survivorat_s_p012)
                           (at_b_p012))
        :effect (and
                    ; #10785: <==closure== 42357 (pos)
                    (Pb_survivorat_s_p012)

                    ; #19390: origin
                    (Bd_survivorat_s_p012)

                    ; #34876: <==closure== 36558 (pos)
                    (Pd_msg_p012)

                    ; #36558: <==commonly_known== 55364 (pos)
                    (Bd_msg_p012)

                    ; #42357: origin
                    (Bb_survivorat_s_p012)

                    ; #47349: <==closure== 83557 (pos)
                    (Pa_survivorat_s_p012)

                    ; #48128: <==closure== 70884 (pos)
                    (Pb_msg_p012)

                    ; #53942: <==closure== 54528 (pos)
                    (Pc_survivorat_s_p012)

                    ; #54528: origin
                    (Bc_survivorat_s_p012)

                    ; #55364: origin
                    (msg_p012)

                    ; #60900: <==commonly_known== 55364 (pos)
                    (Ba_msg_p012)

                    ; #61995: <==commonly_known== 55364 (pos)
                    (Bc_msg_p012)

                    ; #62960: <==closure== 60900 (pos)
                    (Pa_msg_p012)

                    ; #70884: <==commonly_known== 55364 (pos)
                    (Bb_msg_p012)

                    ; #81495: <==closure== 61995 (pos)
                    (Pc_msg_p012)

                    ; #83557: origin
                    (Ba_survivorat_s_p012)

                    ; #91582: <==closure== 19390 (pos)
                    (Pd_survivorat_s_p012)

                    ; #17021: <==negation-removal== 47349 (pos)
                    (not (Ba_not_survivorat_s_p012))

                    ; #18343: <==negation-removal== 54528 (pos)
                    (not (Pc_not_survivorat_s_p012))

                    ; #18893: <==negation-removal== 34876 (pos)
                    (not (Bd_not_msg_p012))

                    ; #20571: <==negation-removal== 62960 (pos)
                    (not (Ba_not_msg_p012))

                    ; #22764: <==negation-removal== 60900 (pos)
                    (not (Pa_not_msg_p012))

                    ; #27158: <==negation-removal== 91582 (pos)
                    (not (Bd_not_survivorat_s_p012))

                    ; #39452: <==negation-removal== 81495 (pos)
                    (not (Bc_not_msg_p012))

                    ; #48898: <==negation-removal== 10785 (pos)
                    (not (Bb_not_survivorat_s_p012))

                    ; #49544: <==negation-removal== 55364 (pos)
                    (not (not_msg_p012))

                    ; #53997: <==negation-removal== 70884 (pos)
                    (not (Pb_not_msg_p012))

                    ; #57482: <==negation-removal== 53942 (pos)
                    (not (Bc_not_survivorat_s_p012))

                    ; #58496: <==negation-removal== 48128 (pos)
                    (not (Bb_not_msg_p012))

                    ; #69134: <==negation-removal== 19390 (pos)
                    (not (Pd_not_survivorat_s_p012))

                    ; #69799: <==negation-removal== 61995 (pos)
                    (not (Pc_not_msg_p012))

                    ; #78688: <==negation-removal== 83557 (pos)
                    (not (Pa_not_survivorat_s_p012))

                    ; #86509: <==negation-removal== 42357 (pos)
                    (not (Pb_not_survivorat_s_p012))

                    ; #89754: <==negation-removal== 36558 (pos)
                    (not (Pd_not_msg_p012))))

    (:action commsurvivor_p012_c_s
        :precondition (and (at_c_p012)
                           (Bc_survivorat_s_p012)
                           (Pc_survivorat_s_p012))
        :effect (and
                    ; #10785: <==closure== 42357 (pos)
                    (Pb_survivorat_s_p012)

                    ; #19390: origin
                    (Bd_survivorat_s_p012)

                    ; #34876: <==closure== 36558 (pos)
                    (Pd_msg_p012)

                    ; #36558: <==commonly_known== 55364 (pos)
                    (Bd_msg_p012)

                    ; #42357: origin
                    (Bb_survivorat_s_p012)

                    ; #47349: <==closure== 83557 (pos)
                    (Pa_survivorat_s_p012)

                    ; #48128: <==closure== 70884 (pos)
                    (Pb_msg_p012)

                    ; #53942: <==closure== 54528 (pos)
                    (Pc_survivorat_s_p012)

                    ; #54528: origin
                    (Bc_survivorat_s_p012)

                    ; #55364: origin
                    (msg_p012)

                    ; #60900: <==commonly_known== 55364 (pos)
                    (Ba_msg_p012)

                    ; #61995: <==commonly_known== 55364 (pos)
                    (Bc_msg_p012)

                    ; #62960: <==closure== 60900 (pos)
                    (Pa_msg_p012)

                    ; #70884: <==commonly_known== 55364 (pos)
                    (Bb_msg_p012)

                    ; #81495: <==closure== 61995 (pos)
                    (Pc_msg_p012)

                    ; #83557: origin
                    (Ba_survivorat_s_p012)

                    ; #91582: <==closure== 19390 (pos)
                    (Pd_survivorat_s_p012)

                    ; #17021: <==negation-removal== 47349 (pos)
                    (not (Ba_not_survivorat_s_p012))

                    ; #18343: <==negation-removal== 54528 (pos)
                    (not (Pc_not_survivorat_s_p012))

                    ; #18893: <==negation-removal== 34876 (pos)
                    (not (Bd_not_msg_p012))

                    ; #20571: <==negation-removal== 62960 (pos)
                    (not (Ba_not_msg_p012))

                    ; #22764: <==negation-removal== 60900 (pos)
                    (not (Pa_not_msg_p012))

                    ; #27158: <==negation-removal== 91582 (pos)
                    (not (Bd_not_survivorat_s_p012))

                    ; #39452: <==negation-removal== 81495 (pos)
                    (not (Bc_not_msg_p012))

                    ; #48898: <==negation-removal== 10785 (pos)
                    (not (Bb_not_survivorat_s_p012))

                    ; #49544: <==negation-removal== 55364 (pos)
                    (not (not_msg_p012))

                    ; #53997: <==negation-removal== 70884 (pos)
                    (not (Pb_not_msg_p012))

                    ; #57482: <==negation-removal== 53942 (pos)
                    (not (Bc_not_survivorat_s_p012))

                    ; #58496: <==negation-removal== 48128 (pos)
                    (not (Bb_not_msg_p012))

                    ; #69134: <==negation-removal== 19390 (pos)
                    (not (Pd_not_survivorat_s_p012))

                    ; #69799: <==negation-removal== 61995 (pos)
                    (not (Pc_not_msg_p012))

                    ; #78688: <==negation-removal== 83557 (pos)
                    (not (Pa_not_survivorat_s_p012))

                    ; #86509: <==negation-removal== 42357 (pos)
                    (not (Pb_not_survivorat_s_p012))

                    ; #89754: <==negation-removal== 36558 (pos)
                    (not (Pd_not_msg_p012))))

    (:action commsurvivor_p012_d_s
        :precondition (and (Bd_survivorat_s_p012)
                           (Pd_survivorat_s_p012)
                           (at_d_p012))
        :effect (and
                    ; #10785: <==closure== 42357 (pos)
                    (Pb_survivorat_s_p012)

                    ; #19390: origin
                    (Bd_survivorat_s_p012)

                    ; #34876: <==closure== 36558 (pos)
                    (Pd_msg_p012)

                    ; #36558: <==commonly_known== 55364 (pos)
                    (Bd_msg_p012)

                    ; #42357: origin
                    (Bb_survivorat_s_p012)

                    ; #47349: <==closure== 83557 (pos)
                    (Pa_survivorat_s_p012)

                    ; #48128: <==closure== 70884 (pos)
                    (Pb_msg_p012)

                    ; #53942: <==closure== 54528 (pos)
                    (Pc_survivorat_s_p012)

                    ; #54528: origin
                    (Bc_survivorat_s_p012)

                    ; #55364: origin
                    (msg_p012)

                    ; #60900: <==commonly_known== 55364 (pos)
                    (Ba_msg_p012)

                    ; #61995: <==commonly_known== 55364 (pos)
                    (Bc_msg_p012)

                    ; #62960: <==closure== 60900 (pos)
                    (Pa_msg_p012)

                    ; #70884: <==commonly_known== 55364 (pos)
                    (Bb_msg_p012)

                    ; #81495: <==closure== 61995 (pos)
                    (Pc_msg_p012)

                    ; #83557: origin
                    (Ba_survivorat_s_p012)

                    ; #91582: <==closure== 19390 (pos)
                    (Pd_survivorat_s_p012)

                    ; #17021: <==negation-removal== 47349 (pos)
                    (not (Ba_not_survivorat_s_p012))

                    ; #18343: <==negation-removal== 54528 (pos)
                    (not (Pc_not_survivorat_s_p012))

                    ; #18893: <==negation-removal== 34876 (pos)
                    (not (Bd_not_msg_p012))

                    ; #20571: <==negation-removal== 62960 (pos)
                    (not (Ba_not_msg_p012))

                    ; #22764: <==negation-removal== 60900 (pos)
                    (not (Pa_not_msg_p012))

                    ; #27158: <==negation-removal== 91582 (pos)
                    (not (Bd_not_survivorat_s_p012))

                    ; #39452: <==negation-removal== 81495 (pos)
                    (not (Bc_not_msg_p012))

                    ; #48898: <==negation-removal== 10785 (pos)
                    (not (Bb_not_survivorat_s_p012))

                    ; #49544: <==negation-removal== 55364 (pos)
                    (not (not_msg_p012))

                    ; #53997: <==negation-removal== 70884 (pos)
                    (not (Pb_not_msg_p012))

                    ; #57482: <==negation-removal== 53942 (pos)
                    (not (Bc_not_survivorat_s_p012))

                    ; #58496: <==negation-removal== 48128 (pos)
                    (not (Bb_not_msg_p012))

                    ; #69134: <==negation-removal== 19390 (pos)
                    (not (Pd_not_survivorat_s_p012))

                    ; #69799: <==negation-removal== 61995 (pos)
                    (not (Pc_not_msg_p012))

                    ; #78688: <==negation-removal== 83557 (pos)
                    (not (Pa_not_survivorat_s_p012))

                    ; #86509: <==negation-removal== 42357 (pos)
                    (not (Pb_not_survivorat_s_p012))

                    ; #89754: <==negation-removal== 36558 (pos)
                    (not (Pd_not_msg_p012))))

    (:action commsurvivor_p10_a_s
        :precondition (and (Ba_survivorat_s_p10)
                           (at_a_p10)
                           (Pa_survivorat_s_p10))
        :effect (and
                    ; #11512: <==closure== 27967 (pos)
                    (Pc_msg_p10)

                    ; #15050: <==closure== 23208 (pos)
                    (Pd_survivorat_s_p10)

                    ; #17563: <==closure== 88729 (pos)
                    (Pd_msg_p10)

                    ; #23208: origin
                    (Bd_survivorat_s_p10)

                    ; #27967: <==commonly_known== 69916 (pos)
                    (Bc_msg_p10)

                    ; #28805: <==closure== 30310 (pos)
                    (Pa_survivorat_s_p10)

                    ; #30310: origin
                    (Ba_survivorat_s_p10)

                    ; #51795: <==closure== 56279 (pos)
                    (Pb_survivorat_s_p10)

                    ; #56279: origin
                    (Bb_survivorat_s_p10)

                    ; #63240: origin
                    (Bc_survivorat_s_p10)

                    ; #69916: origin
                    (msg_p10)

                    ; #69941: <==commonly_known== 69916 (pos)
                    (Bb_msg_p10)

                    ; #71998: <==closure== 82378 (pos)
                    (Pa_msg_p10)

                    ; #77188: <==closure== 63240 (pos)
                    (Pc_survivorat_s_p10)

                    ; #81960: <==closure== 69941 (pos)
                    (Pb_msg_p10)

                    ; #82378: <==commonly_known== 69916 (pos)
                    (Ba_msg_p10)

                    ; #88729: <==commonly_known== 69916 (pos)
                    (Bd_msg_p10)

                    ; #17745: <==negation-removal== 30310 (pos)
                    (not (Pa_not_survivorat_s_p10))

                    ; #22116: <==negation-removal== 11512 (pos)
                    (not (Bc_not_msg_p10))

                    ; #29272: <==negation-removal== 88729 (pos)
                    (not (Pd_not_msg_p10))

                    ; #37143: <==negation-removal== 81960 (pos)
                    (not (Bb_not_msg_p10))

                    ; #54594: <==negation-removal== 71998 (pos)
                    (not (Ba_not_msg_p10))

                    ; #59247: <==negation-removal== 15050 (pos)
                    (not (Bd_not_survivorat_s_p10))

                    ; #59930: <==negation-removal== 27967 (pos)
                    (not (Pc_not_msg_p10))

                    ; #60155: <==negation-removal== 82378 (pos)
                    (not (Pa_not_msg_p10))

                    ; #61742: <==negation-removal== 51795 (pos)
                    (not (Bb_not_survivorat_s_p10))

                    ; #62600: <==negation-removal== 28805 (pos)
                    (not (Ba_not_survivorat_s_p10))

                    ; #64610: <==negation-removal== 23208 (pos)
                    (not (Pd_not_survivorat_s_p10))

                    ; #65858: <==negation-removal== 69916 (pos)
                    (not (not_msg_p10))

                    ; #67862: <==negation-removal== 63240 (pos)
                    (not (Pc_not_survivorat_s_p10))

                    ; #69311: <==negation-removal== 77188 (pos)
                    (not (Bc_not_survivorat_s_p10))

                    ; #86204: <==negation-removal== 56279 (pos)
                    (not (Pb_not_survivorat_s_p10))

                    ; #87961: <==negation-removal== 17563 (pos)
                    (not (Bd_not_msg_p10))

                    ; #93861: <==negation-removal== 69941 (pos)
                    (not (Pb_not_msg_p10))))

    (:action commsurvivor_p10_b_s
        :precondition (and (Bb_survivorat_s_p10)
                           (at_b_p10)
                           (Pb_survivorat_s_p10))
        :effect (and
                    ; #11512: <==closure== 27967 (pos)
                    (Pc_msg_p10)

                    ; #15050: <==closure== 23208 (pos)
                    (Pd_survivorat_s_p10)

                    ; #17563: <==closure== 88729 (pos)
                    (Pd_msg_p10)

                    ; #23208: origin
                    (Bd_survivorat_s_p10)

                    ; #27967: <==commonly_known== 69916 (pos)
                    (Bc_msg_p10)

                    ; #28805: <==closure== 30310 (pos)
                    (Pa_survivorat_s_p10)

                    ; #30310: origin
                    (Ba_survivorat_s_p10)

                    ; #51795: <==closure== 56279 (pos)
                    (Pb_survivorat_s_p10)

                    ; #56279: origin
                    (Bb_survivorat_s_p10)

                    ; #63240: origin
                    (Bc_survivorat_s_p10)

                    ; #69916: origin
                    (msg_p10)

                    ; #69941: <==commonly_known== 69916 (pos)
                    (Bb_msg_p10)

                    ; #71998: <==closure== 82378 (pos)
                    (Pa_msg_p10)

                    ; #77188: <==closure== 63240 (pos)
                    (Pc_survivorat_s_p10)

                    ; #81960: <==closure== 69941 (pos)
                    (Pb_msg_p10)

                    ; #82378: <==commonly_known== 69916 (pos)
                    (Ba_msg_p10)

                    ; #88729: <==commonly_known== 69916 (pos)
                    (Bd_msg_p10)

                    ; #17745: <==negation-removal== 30310 (pos)
                    (not (Pa_not_survivorat_s_p10))

                    ; #22116: <==negation-removal== 11512 (pos)
                    (not (Bc_not_msg_p10))

                    ; #29272: <==negation-removal== 88729 (pos)
                    (not (Pd_not_msg_p10))

                    ; #37143: <==negation-removal== 81960 (pos)
                    (not (Bb_not_msg_p10))

                    ; #54594: <==negation-removal== 71998 (pos)
                    (not (Ba_not_msg_p10))

                    ; #59247: <==negation-removal== 15050 (pos)
                    (not (Bd_not_survivorat_s_p10))

                    ; #59930: <==negation-removal== 27967 (pos)
                    (not (Pc_not_msg_p10))

                    ; #60155: <==negation-removal== 82378 (pos)
                    (not (Pa_not_msg_p10))

                    ; #61742: <==negation-removal== 51795 (pos)
                    (not (Bb_not_survivorat_s_p10))

                    ; #62600: <==negation-removal== 28805 (pos)
                    (not (Ba_not_survivorat_s_p10))

                    ; #64610: <==negation-removal== 23208 (pos)
                    (not (Pd_not_survivorat_s_p10))

                    ; #65858: <==negation-removal== 69916 (pos)
                    (not (not_msg_p10))

                    ; #67862: <==negation-removal== 63240 (pos)
                    (not (Pc_not_survivorat_s_p10))

                    ; #69311: <==negation-removal== 77188 (pos)
                    (not (Bc_not_survivorat_s_p10))

                    ; #86204: <==negation-removal== 56279 (pos)
                    (not (Pb_not_survivorat_s_p10))

                    ; #87961: <==negation-removal== 17563 (pos)
                    (not (Bd_not_msg_p10))

                    ; #93861: <==negation-removal== 69941 (pos)
                    (not (Pb_not_msg_p10))))

    (:action commsurvivor_p10_c_s
        :precondition (and (at_c_p10)
                           (Bc_survivorat_s_p10)
                           (Pc_survivorat_s_p10))
        :effect (and
                    ; #11512: <==closure== 27967 (pos)
                    (Pc_msg_p10)

                    ; #15050: <==closure== 23208 (pos)
                    (Pd_survivorat_s_p10)

                    ; #17563: <==closure== 88729 (pos)
                    (Pd_msg_p10)

                    ; #23208: origin
                    (Bd_survivorat_s_p10)

                    ; #27967: <==commonly_known== 69916 (pos)
                    (Bc_msg_p10)

                    ; #28805: <==closure== 30310 (pos)
                    (Pa_survivorat_s_p10)

                    ; #30310: origin
                    (Ba_survivorat_s_p10)

                    ; #51795: <==closure== 56279 (pos)
                    (Pb_survivorat_s_p10)

                    ; #56279: origin
                    (Bb_survivorat_s_p10)

                    ; #63240: origin
                    (Bc_survivorat_s_p10)

                    ; #69916: origin
                    (msg_p10)

                    ; #69941: <==commonly_known== 69916 (pos)
                    (Bb_msg_p10)

                    ; #71998: <==closure== 82378 (pos)
                    (Pa_msg_p10)

                    ; #77188: <==closure== 63240 (pos)
                    (Pc_survivorat_s_p10)

                    ; #81960: <==closure== 69941 (pos)
                    (Pb_msg_p10)

                    ; #82378: <==commonly_known== 69916 (pos)
                    (Ba_msg_p10)

                    ; #88729: <==commonly_known== 69916 (pos)
                    (Bd_msg_p10)

                    ; #17745: <==negation-removal== 30310 (pos)
                    (not (Pa_not_survivorat_s_p10))

                    ; #22116: <==negation-removal== 11512 (pos)
                    (not (Bc_not_msg_p10))

                    ; #29272: <==negation-removal== 88729 (pos)
                    (not (Pd_not_msg_p10))

                    ; #37143: <==negation-removal== 81960 (pos)
                    (not (Bb_not_msg_p10))

                    ; #54594: <==negation-removal== 71998 (pos)
                    (not (Ba_not_msg_p10))

                    ; #59247: <==negation-removal== 15050 (pos)
                    (not (Bd_not_survivorat_s_p10))

                    ; #59930: <==negation-removal== 27967 (pos)
                    (not (Pc_not_msg_p10))

                    ; #60155: <==negation-removal== 82378 (pos)
                    (not (Pa_not_msg_p10))

                    ; #61742: <==negation-removal== 51795 (pos)
                    (not (Bb_not_survivorat_s_p10))

                    ; #62600: <==negation-removal== 28805 (pos)
                    (not (Ba_not_survivorat_s_p10))

                    ; #64610: <==negation-removal== 23208 (pos)
                    (not (Pd_not_survivorat_s_p10))

                    ; #65858: <==negation-removal== 69916 (pos)
                    (not (not_msg_p10))

                    ; #67862: <==negation-removal== 63240 (pos)
                    (not (Pc_not_survivorat_s_p10))

                    ; #69311: <==negation-removal== 77188 (pos)
                    (not (Bc_not_survivorat_s_p10))

                    ; #86204: <==negation-removal== 56279 (pos)
                    (not (Pb_not_survivorat_s_p10))

                    ; #87961: <==negation-removal== 17563 (pos)
                    (not (Bd_not_msg_p10))

                    ; #93861: <==negation-removal== 69941 (pos)
                    (not (Pb_not_msg_p10))))

    (:action commsurvivor_p10_d_s
        :precondition (and (Pd_survivorat_s_p10)
                           (Bd_survivorat_s_p10)
                           (at_d_p10))
        :effect (and
                    ; #11512: <==closure== 27967 (pos)
                    (Pc_msg_p10)

                    ; #15050: <==closure== 23208 (pos)
                    (Pd_survivorat_s_p10)

                    ; #17563: <==closure== 88729 (pos)
                    (Pd_msg_p10)

                    ; #23208: origin
                    (Bd_survivorat_s_p10)

                    ; #27967: <==commonly_known== 69916 (pos)
                    (Bc_msg_p10)

                    ; #28805: <==closure== 30310 (pos)
                    (Pa_survivorat_s_p10)

                    ; #30310: origin
                    (Ba_survivorat_s_p10)

                    ; #51795: <==closure== 56279 (pos)
                    (Pb_survivorat_s_p10)

                    ; #56279: origin
                    (Bb_survivorat_s_p10)

                    ; #63240: origin
                    (Bc_survivorat_s_p10)

                    ; #69916: origin
                    (msg_p10)

                    ; #69941: <==commonly_known== 69916 (pos)
                    (Bb_msg_p10)

                    ; #71998: <==closure== 82378 (pos)
                    (Pa_msg_p10)

                    ; #77188: <==closure== 63240 (pos)
                    (Pc_survivorat_s_p10)

                    ; #81960: <==closure== 69941 (pos)
                    (Pb_msg_p10)

                    ; #82378: <==commonly_known== 69916 (pos)
                    (Ba_msg_p10)

                    ; #88729: <==commonly_known== 69916 (pos)
                    (Bd_msg_p10)

                    ; #17745: <==negation-removal== 30310 (pos)
                    (not (Pa_not_survivorat_s_p10))

                    ; #22116: <==negation-removal== 11512 (pos)
                    (not (Bc_not_msg_p10))

                    ; #29272: <==negation-removal== 88729 (pos)
                    (not (Pd_not_msg_p10))

                    ; #37143: <==negation-removal== 81960 (pos)
                    (not (Bb_not_msg_p10))

                    ; #54594: <==negation-removal== 71998 (pos)
                    (not (Ba_not_msg_p10))

                    ; #59247: <==negation-removal== 15050 (pos)
                    (not (Bd_not_survivorat_s_p10))

                    ; #59930: <==negation-removal== 27967 (pos)
                    (not (Pc_not_msg_p10))

                    ; #60155: <==negation-removal== 82378 (pos)
                    (not (Pa_not_msg_p10))

                    ; #61742: <==negation-removal== 51795 (pos)
                    (not (Bb_not_survivorat_s_p10))

                    ; #62600: <==negation-removal== 28805 (pos)
                    (not (Ba_not_survivorat_s_p10))

                    ; #64610: <==negation-removal== 23208 (pos)
                    (not (Pd_not_survivorat_s_p10))

                    ; #65858: <==negation-removal== 69916 (pos)
                    (not (not_msg_p10))

                    ; #67862: <==negation-removal== 63240 (pos)
                    (not (Pc_not_survivorat_s_p10))

                    ; #69311: <==negation-removal== 77188 (pos)
                    (not (Bc_not_survivorat_s_p10))

                    ; #86204: <==negation-removal== 56279 (pos)
                    (not (Pb_not_survivorat_s_p10))

                    ; #87961: <==negation-removal== 17563 (pos)
                    (not (Bd_not_msg_p10))

                    ; #93861: <==negation-removal== 69941 (pos)
                    (not (Pb_not_msg_p10))))

    (:action commsurvivor_p1_a_s
        :precondition (and (Ba_survivorat_s_p1)
                           (at_a_p1)
                           (Pa_survivorat_s_p1))
        :effect (and
                    ; #14142: origin
                    (msg_p1)

                    ; #15011: <==closure== 20365 (pos)
                    (Pa_msg_p1)

                    ; #20365: <==commonly_known== 14142 (pos)
                    (Ba_msg_p1)

                    ; #35070: origin
                    (Ba_survivorat_s_p1)

                    ; #40360: origin
                    (Bb_survivorat_s_p1)

                    ; #40747: <==closure== 62060 (pos)
                    (Pd_msg_p1)

                    ; #41260: <==closure== 77203 (pos)
                    (Pc_survivorat_s_p1)

                    ; #54077: <==closure== 60472 (pos)
                    (Pc_msg_p1)

                    ; #55167: <==closure== 40360 (pos)
                    (Pb_survivorat_s_p1)

                    ; #60472: <==commonly_known== 14142 (pos)
                    (Bc_msg_p1)

                    ; #62060: <==commonly_known== 14142 (pos)
                    (Bd_msg_p1)

                    ; #69229: <==closure== 35070 (pos)
                    (Pa_survivorat_s_p1)

                    ; #69830: <==closure== 92076 (pos)
                    (Pd_survivorat_s_p1)

                    ; #77203: origin
                    (Bc_survivorat_s_p1)

                    ; #89055: <==closure== 92911 (pos)
                    (Pb_msg_p1)

                    ; #92076: origin
                    (Bd_survivorat_s_p1)

                    ; #92911: <==commonly_known== 14142 (pos)
                    (Bb_msg_p1)

                    ; #23218: <==negation-removal== 77203 (pos)
                    (not (Pc_not_survivorat_s_p1))

                    ; #31997: <==negation-removal== 40360 (pos)
                    (not (Pb_not_survivorat_s_p1))

                    ; #38356: <==negation-removal== 54077 (pos)
                    (not (Bc_not_msg_p1))

                    ; #41683: <==negation-removal== 55167 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #42118: <==negation-removal== 92076 (pos)
                    (not (Pd_not_survivorat_s_p1))

                    ; #45037: <==negation-removal== 62060 (pos)
                    (not (Pd_not_msg_p1))

                    ; #45130: <==negation-removal== 92911 (pos)
                    (not (Pb_not_msg_p1))

                    ; #47214: <==negation-removal== 35070 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #49085: <==negation-removal== 69830 (pos)
                    (not (Bd_not_survivorat_s_p1))

                    ; #59799: <==negation-removal== 15011 (pos)
                    (not (Ba_not_msg_p1))

                    ; #60401: <==negation-removal== 60472 (pos)
                    (not (Pc_not_msg_p1))

                    ; #64607: <==negation-removal== 14142 (pos)
                    (not (not_msg_p1))

                    ; #66592: <==negation-removal== 40747 (pos)
                    (not (Bd_not_msg_p1))

                    ; #79400: <==negation-removal== 89055 (pos)
                    (not (Bb_not_msg_p1))

                    ; #81025: <==negation-removal== 69229 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #86819: <==negation-removal== 20365 (pos)
                    (not (Pa_not_msg_p1))

                    ; #88661: <==negation-removal== 41260 (pos)
                    (not (Bc_not_survivorat_s_p1))))

    (:action commsurvivor_p1_b_s
        :precondition (and (Bb_survivorat_s_p1)
                           (Pb_survivorat_s_p1)
                           (at_b_p1))
        :effect (and
                    ; #14142: origin
                    (msg_p1)

                    ; #15011: <==closure== 20365 (pos)
                    (Pa_msg_p1)

                    ; #20365: <==commonly_known== 14142 (pos)
                    (Ba_msg_p1)

                    ; #35070: origin
                    (Ba_survivorat_s_p1)

                    ; #40360: origin
                    (Bb_survivorat_s_p1)

                    ; #40747: <==closure== 62060 (pos)
                    (Pd_msg_p1)

                    ; #41260: <==closure== 77203 (pos)
                    (Pc_survivorat_s_p1)

                    ; #54077: <==closure== 60472 (pos)
                    (Pc_msg_p1)

                    ; #55167: <==closure== 40360 (pos)
                    (Pb_survivorat_s_p1)

                    ; #60472: <==commonly_known== 14142 (pos)
                    (Bc_msg_p1)

                    ; #62060: <==commonly_known== 14142 (pos)
                    (Bd_msg_p1)

                    ; #69229: <==closure== 35070 (pos)
                    (Pa_survivorat_s_p1)

                    ; #69830: <==closure== 92076 (pos)
                    (Pd_survivorat_s_p1)

                    ; #77203: origin
                    (Bc_survivorat_s_p1)

                    ; #89055: <==closure== 92911 (pos)
                    (Pb_msg_p1)

                    ; #92076: origin
                    (Bd_survivorat_s_p1)

                    ; #92911: <==commonly_known== 14142 (pos)
                    (Bb_msg_p1)

                    ; #23218: <==negation-removal== 77203 (pos)
                    (not (Pc_not_survivorat_s_p1))

                    ; #31997: <==negation-removal== 40360 (pos)
                    (not (Pb_not_survivorat_s_p1))

                    ; #38356: <==negation-removal== 54077 (pos)
                    (not (Bc_not_msg_p1))

                    ; #41683: <==negation-removal== 55167 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #42118: <==negation-removal== 92076 (pos)
                    (not (Pd_not_survivorat_s_p1))

                    ; #45037: <==negation-removal== 62060 (pos)
                    (not (Pd_not_msg_p1))

                    ; #45130: <==negation-removal== 92911 (pos)
                    (not (Pb_not_msg_p1))

                    ; #47214: <==negation-removal== 35070 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #49085: <==negation-removal== 69830 (pos)
                    (not (Bd_not_survivorat_s_p1))

                    ; #59799: <==negation-removal== 15011 (pos)
                    (not (Ba_not_msg_p1))

                    ; #60401: <==negation-removal== 60472 (pos)
                    (not (Pc_not_msg_p1))

                    ; #64607: <==negation-removal== 14142 (pos)
                    (not (not_msg_p1))

                    ; #66592: <==negation-removal== 40747 (pos)
                    (not (Bd_not_msg_p1))

                    ; #79400: <==negation-removal== 89055 (pos)
                    (not (Bb_not_msg_p1))

                    ; #81025: <==negation-removal== 69229 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #86819: <==negation-removal== 20365 (pos)
                    (not (Pa_not_msg_p1))

                    ; #88661: <==negation-removal== 41260 (pos)
                    (not (Bc_not_survivorat_s_p1))))

    (:action commsurvivor_p1_c_s
        :precondition (and (at_c_p1)
                           (Bc_survivorat_s_p1)
                           (Pc_survivorat_s_p1))
        :effect (and
                    ; #14142: origin
                    (msg_p1)

                    ; #15011: <==closure== 20365 (pos)
                    (Pa_msg_p1)

                    ; #20365: <==commonly_known== 14142 (pos)
                    (Ba_msg_p1)

                    ; #35070: origin
                    (Ba_survivorat_s_p1)

                    ; #40360: origin
                    (Bb_survivorat_s_p1)

                    ; #40747: <==closure== 62060 (pos)
                    (Pd_msg_p1)

                    ; #41260: <==closure== 77203 (pos)
                    (Pc_survivorat_s_p1)

                    ; #54077: <==closure== 60472 (pos)
                    (Pc_msg_p1)

                    ; #55167: <==closure== 40360 (pos)
                    (Pb_survivorat_s_p1)

                    ; #60472: <==commonly_known== 14142 (pos)
                    (Bc_msg_p1)

                    ; #62060: <==commonly_known== 14142 (pos)
                    (Bd_msg_p1)

                    ; #69229: <==closure== 35070 (pos)
                    (Pa_survivorat_s_p1)

                    ; #69830: <==closure== 92076 (pos)
                    (Pd_survivorat_s_p1)

                    ; #77203: origin
                    (Bc_survivorat_s_p1)

                    ; #89055: <==closure== 92911 (pos)
                    (Pb_msg_p1)

                    ; #92076: origin
                    (Bd_survivorat_s_p1)

                    ; #92911: <==commonly_known== 14142 (pos)
                    (Bb_msg_p1)

                    ; #23218: <==negation-removal== 77203 (pos)
                    (not (Pc_not_survivorat_s_p1))

                    ; #31997: <==negation-removal== 40360 (pos)
                    (not (Pb_not_survivorat_s_p1))

                    ; #38356: <==negation-removal== 54077 (pos)
                    (not (Bc_not_msg_p1))

                    ; #41683: <==negation-removal== 55167 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #42118: <==negation-removal== 92076 (pos)
                    (not (Pd_not_survivorat_s_p1))

                    ; #45037: <==negation-removal== 62060 (pos)
                    (not (Pd_not_msg_p1))

                    ; #45130: <==negation-removal== 92911 (pos)
                    (not (Pb_not_msg_p1))

                    ; #47214: <==negation-removal== 35070 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #49085: <==negation-removal== 69830 (pos)
                    (not (Bd_not_survivorat_s_p1))

                    ; #59799: <==negation-removal== 15011 (pos)
                    (not (Ba_not_msg_p1))

                    ; #60401: <==negation-removal== 60472 (pos)
                    (not (Pc_not_msg_p1))

                    ; #64607: <==negation-removal== 14142 (pos)
                    (not (not_msg_p1))

                    ; #66592: <==negation-removal== 40747 (pos)
                    (not (Bd_not_msg_p1))

                    ; #79400: <==negation-removal== 89055 (pos)
                    (not (Bb_not_msg_p1))

                    ; #81025: <==negation-removal== 69229 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #86819: <==negation-removal== 20365 (pos)
                    (not (Pa_not_msg_p1))

                    ; #88661: <==negation-removal== 41260 (pos)
                    (not (Bc_not_survivorat_s_p1))))

    (:action commsurvivor_p1_d_s
        :precondition (and (Pd_survivorat_s_p1)
                           (at_d_p1)
                           (Bd_survivorat_s_p1))
        :effect (and
                    ; #14142: origin
                    (msg_p1)

                    ; #15011: <==closure== 20365 (pos)
                    (Pa_msg_p1)

                    ; #20365: <==commonly_known== 14142 (pos)
                    (Ba_msg_p1)

                    ; #35070: origin
                    (Ba_survivorat_s_p1)

                    ; #40360: origin
                    (Bb_survivorat_s_p1)

                    ; #40747: <==closure== 62060 (pos)
                    (Pd_msg_p1)

                    ; #41260: <==closure== 77203 (pos)
                    (Pc_survivorat_s_p1)

                    ; #54077: <==closure== 60472 (pos)
                    (Pc_msg_p1)

                    ; #55167: <==closure== 40360 (pos)
                    (Pb_survivorat_s_p1)

                    ; #60472: <==commonly_known== 14142 (pos)
                    (Bc_msg_p1)

                    ; #62060: <==commonly_known== 14142 (pos)
                    (Bd_msg_p1)

                    ; #69229: <==closure== 35070 (pos)
                    (Pa_survivorat_s_p1)

                    ; #69830: <==closure== 92076 (pos)
                    (Pd_survivorat_s_p1)

                    ; #77203: origin
                    (Bc_survivorat_s_p1)

                    ; #89055: <==closure== 92911 (pos)
                    (Pb_msg_p1)

                    ; #92076: origin
                    (Bd_survivorat_s_p1)

                    ; #92911: <==commonly_known== 14142 (pos)
                    (Bb_msg_p1)

                    ; #23218: <==negation-removal== 77203 (pos)
                    (not (Pc_not_survivorat_s_p1))

                    ; #31997: <==negation-removal== 40360 (pos)
                    (not (Pb_not_survivorat_s_p1))

                    ; #38356: <==negation-removal== 54077 (pos)
                    (not (Bc_not_msg_p1))

                    ; #41683: <==negation-removal== 55167 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #42118: <==negation-removal== 92076 (pos)
                    (not (Pd_not_survivorat_s_p1))

                    ; #45037: <==negation-removal== 62060 (pos)
                    (not (Pd_not_msg_p1))

                    ; #45130: <==negation-removal== 92911 (pos)
                    (not (Pb_not_msg_p1))

                    ; #47214: <==negation-removal== 35070 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #49085: <==negation-removal== 69830 (pos)
                    (not (Bd_not_survivorat_s_p1))

                    ; #59799: <==negation-removal== 15011 (pos)
                    (not (Ba_not_msg_p1))

                    ; #60401: <==negation-removal== 60472 (pos)
                    (not (Pc_not_msg_p1))

                    ; #64607: <==negation-removal== 14142 (pos)
                    (not (not_msg_p1))

                    ; #66592: <==negation-removal== 40747 (pos)
                    (not (Bd_not_msg_p1))

                    ; #79400: <==negation-removal== 89055 (pos)
                    (not (Bb_not_msg_p1))

                    ; #81025: <==negation-removal== 69229 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #86819: <==negation-removal== 20365 (pos)
                    (not (Pa_not_msg_p1))

                    ; #88661: <==negation-removal== 41260 (pos)
                    (not (Bc_not_survivorat_s_p1))))

    (:action commsurvivor_p2_a_s
        :precondition (and (Ba_survivorat_s_p2)
                           (Pa_survivorat_s_p2)
                           (at_a_p2))
        :effect (and
                    ; #12546: <==commonly_known== 46730 (pos)
                    (Bb_msg_p2)

                    ; #13218: origin
                    (Ba_survivorat_s_p2)

                    ; #22471: <==closure== 39241 (pos)
                    (Pa_msg_p2)

                    ; #29249: <==closure== 12546 (pos)
                    (Pb_msg_p2)

                    ; #31265: <==closure== 63222 (pos)
                    (Pd_survivorat_s_p2)

                    ; #36199: <==closure== 48088 (pos)
                    (Pc_survivorat_s_p2)

                    ; #39241: <==commonly_known== 46730 (pos)
                    (Ba_msg_p2)

                    ; #46730: origin
                    (msg_p2)

                    ; #48088: origin
                    (Bc_survivorat_s_p2)

                    ; #49541: <==closure== 13218 (pos)
                    (Pa_survivorat_s_p2)

                    ; #63222: origin
                    (Bd_survivorat_s_p2)

                    ; #70373: <==closure== 92214 (pos)
                    (Pc_msg_p2)

                    ; #74072: <==commonly_known== 46730 (pos)
                    (Bd_msg_p2)

                    ; #77127: <==closure== 74072 (pos)
                    (Pd_msg_p2)

                    ; #87329: <==closure== 88522 (pos)
                    (Pb_survivorat_s_p2)

                    ; #88522: origin
                    (Bb_survivorat_s_p2)

                    ; #92214: <==commonly_known== 46730 (pos)
                    (Bc_msg_p2)

                    ; #12952: <==negation-removal== 87329 (pos)
                    (not (Bb_not_survivorat_s_p2))

                    ; #20567: <==negation-removal== 77127 (pos)
                    (not (Bd_not_msg_p2))

                    ; #28909: <==negation-removal== 70373 (pos)
                    (not (Bc_not_msg_p2))

                    ; #30608: <==negation-removal== 31265 (pos)
                    (not (Bd_not_survivorat_s_p2))

                    ; #32785: <==negation-removal== 36199 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #34667: <==negation-removal== 39241 (pos)
                    (not (Pa_not_msg_p2))

                    ; #36227: <==negation-removal== 88522 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #37141: <==negation-removal== 46730 (pos)
                    (not (not_msg_p2))

                    ; #44025: <==negation-removal== 13218 (pos)
                    (not (Pa_not_survivorat_s_p2))

                    ; #44560: <==negation-removal== 74072 (pos)
                    (not (Pd_not_msg_p2))

                    ; #50851: <==negation-removal== 48088 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #74825: <==negation-removal== 92214 (pos)
                    (not (Pc_not_msg_p2))

                    ; #76204: <==negation-removal== 22471 (pos)
                    (not (Ba_not_msg_p2))

                    ; #80500: <==negation-removal== 63222 (pos)
                    (not (Pd_not_survivorat_s_p2))

                    ; #87553: <==negation-removal== 49541 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #88325: <==negation-removal== 29249 (pos)
                    (not (Bb_not_msg_p2))

                    ; #91790: <==negation-removal== 12546 (pos)
                    (not (Pb_not_msg_p2))))

    (:action commsurvivor_p2_b_s
        :precondition (and (Pb_survivorat_s_p2)
                           (at_b_p2)
                           (Bb_survivorat_s_p2))
        :effect (and
                    ; #12546: <==commonly_known== 46730 (pos)
                    (Bb_msg_p2)

                    ; #13218: origin
                    (Ba_survivorat_s_p2)

                    ; #22471: <==closure== 39241 (pos)
                    (Pa_msg_p2)

                    ; #29249: <==closure== 12546 (pos)
                    (Pb_msg_p2)

                    ; #31265: <==closure== 63222 (pos)
                    (Pd_survivorat_s_p2)

                    ; #36199: <==closure== 48088 (pos)
                    (Pc_survivorat_s_p2)

                    ; #39241: <==commonly_known== 46730 (pos)
                    (Ba_msg_p2)

                    ; #46730: origin
                    (msg_p2)

                    ; #48088: origin
                    (Bc_survivorat_s_p2)

                    ; #49541: <==closure== 13218 (pos)
                    (Pa_survivorat_s_p2)

                    ; #63222: origin
                    (Bd_survivorat_s_p2)

                    ; #70373: <==closure== 92214 (pos)
                    (Pc_msg_p2)

                    ; #74072: <==commonly_known== 46730 (pos)
                    (Bd_msg_p2)

                    ; #77127: <==closure== 74072 (pos)
                    (Pd_msg_p2)

                    ; #87329: <==closure== 88522 (pos)
                    (Pb_survivorat_s_p2)

                    ; #88522: origin
                    (Bb_survivorat_s_p2)

                    ; #92214: <==commonly_known== 46730 (pos)
                    (Bc_msg_p2)

                    ; #12952: <==negation-removal== 87329 (pos)
                    (not (Bb_not_survivorat_s_p2))

                    ; #20567: <==negation-removal== 77127 (pos)
                    (not (Bd_not_msg_p2))

                    ; #28909: <==negation-removal== 70373 (pos)
                    (not (Bc_not_msg_p2))

                    ; #30608: <==negation-removal== 31265 (pos)
                    (not (Bd_not_survivorat_s_p2))

                    ; #32785: <==negation-removal== 36199 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #34667: <==negation-removal== 39241 (pos)
                    (not (Pa_not_msg_p2))

                    ; #36227: <==negation-removal== 88522 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #37141: <==negation-removal== 46730 (pos)
                    (not (not_msg_p2))

                    ; #44025: <==negation-removal== 13218 (pos)
                    (not (Pa_not_survivorat_s_p2))

                    ; #44560: <==negation-removal== 74072 (pos)
                    (not (Pd_not_msg_p2))

                    ; #50851: <==negation-removal== 48088 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #74825: <==negation-removal== 92214 (pos)
                    (not (Pc_not_msg_p2))

                    ; #76204: <==negation-removal== 22471 (pos)
                    (not (Ba_not_msg_p2))

                    ; #80500: <==negation-removal== 63222 (pos)
                    (not (Pd_not_survivorat_s_p2))

                    ; #87553: <==negation-removal== 49541 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #88325: <==negation-removal== 29249 (pos)
                    (not (Bb_not_msg_p2))

                    ; #91790: <==negation-removal== 12546 (pos)
                    (not (Pb_not_msg_p2))))

    (:action commsurvivor_p2_c_s
        :precondition (and (Pc_survivorat_s_p2)
                           (Bc_survivorat_s_p2)
                           (at_c_p2))
        :effect (and
                    ; #12546: <==commonly_known== 46730 (pos)
                    (Bb_msg_p2)

                    ; #13218: origin
                    (Ba_survivorat_s_p2)

                    ; #22471: <==closure== 39241 (pos)
                    (Pa_msg_p2)

                    ; #29249: <==closure== 12546 (pos)
                    (Pb_msg_p2)

                    ; #31265: <==closure== 63222 (pos)
                    (Pd_survivorat_s_p2)

                    ; #36199: <==closure== 48088 (pos)
                    (Pc_survivorat_s_p2)

                    ; #39241: <==commonly_known== 46730 (pos)
                    (Ba_msg_p2)

                    ; #46730: origin
                    (msg_p2)

                    ; #48088: origin
                    (Bc_survivorat_s_p2)

                    ; #49541: <==closure== 13218 (pos)
                    (Pa_survivorat_s_p2)

                    ; #63222: origin
                    (Bd_survivorat_s_p2)

                    ; #70373: <==closure== 92214 (pos)
                    (Pc_msg_p2)

                    ; #74072: <==commonly_known== 46730 (pos)
                    (Bd_msg_p2)

                    ; #77127: <==closure== 74072 (pos)
                    (Pd_msg_p2)

                    ; #87329: <==closure== 88522 (pos)
                    (Pb_survivorat_s_p2)

                    ; #88522: origin
                    (Bb_survivorat_s_p2)

                    ; #92214: <==commonly_known== 46730 (pos)
                    (Bc_msg_p2)

                    ; #12952: <==negation-removal== 87329 (pos)
                    (not (Bb_not_survivorat_s_p2))

                    ; #20567: <==negation-removal== 77127 (pos)
                    (not (Bd_not_msg_p2))

                    ; #28909: <==negation-removal== 70373 (pos)
                    (not (Bc_not_msg_p2))

                    ; #30608: <==negation-removal== 31265 (pos)
                    (not (Bd_not_survivorat_s_p2))

                    ; #32785: <==negation-removal== 36199 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #34667: <==negation-removal== 39241 (pos)
                    (not (Pa_not_msg_p2))

                    ; #36227: <==negation-removal== 88522 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #37141: <==negation-removal== 46730 (pos)
                    (not (not_msg_p2))

                    ; #44025: <==negation-removal== 13218 (pos)
                    (not (Pa_not_survivorat_s_p2))

                    ; #44560: <==negation-removal== 74072 (pos)
                    (not (Pd_not_msg_p2))

                    ; #50851: <==negation-removal== 48088 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #74825: <==negation-removal== 92214 (pos)
                    (not (Pc_not_msg_p2))

                    ; #76204: <==negation-removal== 22471 (pos)
                    (not (Ba_not_msg_p2))

                    ; #80500: <==negation-removal== 63222 (pos)
                    (not (Pd_not_survivorat_s_p2))

                    ; #87553: <==negation-removal== 49541 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #88325: <==negation-removal== 29249 (pos)
                    (not (Bb_not_msg_p2))

                    ; #91790: <==negation-removal== 12546 (pos)
                    (not (Pb_not_msg_p2))))

    (:action commsurvivor_p2_d_s
        :precondition (and (Bd_survivorat_s_p2)
                           (Pd_survivorat_s_p2)
                           (at_d_p2))
        :effect (and
                    ; #12546: <==commonly_known== 46730 (pos)
                    (Bb_msg_p2)

                    ; #13218: origin
                    (Ba_survivorat_s_p2)

                    ; #22471: <==closure== 39241 (pos)
                    (Pa_msg_p2)

                    ; #29249: <==closure== 12546 (pos)
                    (Pb_msg_p2)

                    ; #31265: <==closure== 63222 (pos)
                    (Pd_survivorat_s_p2)

                    ; #36199: <==closure== 48088 (pos)
                    (Pc_survivorat_s_p2)

                    ; #39241: <==commonly_known== 46730 (pos)
                    (Ba_msg_p2)

                    ; #46730: origin
                    (msg_p2)

                    ; #48088: origin
                    (Bc_survivorat_s_p2)

                    ; #49541: <==closure== 13218 (pos)
                    (Pa_survivorat_s_p2)

                    ; #63222: origin
                    (Bd_survivorat_s_p2)

                    ; #70373: <==closure== 92214 (pos)
                    (Pc_msg_p2)

                    ; #74072: <==commonly_known== 46730 (pos)
                    (Bd_msg_p2)

                    ; #77127: <==closure== 74072 (pos)
                    (Pd_msg_p2)

                    ; #87329: <==closure== 88522 (pos)
                    (Pb_survivorat_s_p2)

                    ; #88522: origin
                    (Bb_survivorat_s_p2)

                    ; #92214: <==commonly_known== 46730 (pos)
                    (Bc_msg_p2)

                    ; #12952: <==negation-removal== 87329 (pos)
                    (not (Bb_not_survivorat_s_p2))

                    ; #20567: <==negation-removal== 77127 (pos)
                    (not (Bd_not_msg_p2))

                    ; #28909: <==negation-removal== 70373 (pos)
                    (not (Bc_not_msg_p2))

                    ; #30608: <==negation-removal== 31265 (pos)
                    (not (Bd_not_survivorat_s_p2))

                    ; #32785: <==negation-removal== 36199 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #34667: <==negation-removal== 39241 (pos)
                    (not (Pa_not_msg_p2))

                    ; #36227: <==negation-removal== 88522 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #37141: <==negation-removal== 46730 (pos)
                    (not (not_msg_p2))

                    ; #44025: <==negation-removal== 13218 (pos)
                    (not (Pa_not_survivorat_s_p2))

                    ; #44560: <==negation-removal== 74072 (pos)
                    (not (Pd_not_msg_p2))

                    ; #50851: <==negation-removal== 48088 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #74825: <==negation-removal== 92214 (pos)
                    (not (Pc_not_msg_p2))

                    ; #76204: <==negation-removal== 22471 (pos)
                    (not (Ba_not_msg_p2))

                    ; #80500: <==negation-removal== 63222 (pos)
                    (not (Pd_not_survivorat_s_p2))

                    ; #87553: <==negation-removal== 49541 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #88325: <==negation-removal== 29249 (pos)
                    (not (Bb_not_msg_p2))

                    ; #91790: <==negation-removal== 12546 (pos)
                    (not (Pb_not_msg_p2))))

    (:action commsurvivor_p3_a_s
        :precondition (and (at_a_p3)
                           (Pa_survivorat_s_p3)
                           (Ba_survivorat_s_p3))
        :effect (and
                    ; #16926: origin
                    (Bd_survivorat_s_p3)

                    ; #21787: <==commonly_known== 29902 (pos)
                    (Ba_msg_p3)

                    ; #29902: origin
                    (msg_p3)

                    ; #36539: <==commonly_known== 29902 (pos)
                    (Bd_msg_p3)

                    ; #41001: <==closure== 21787 (pos)
                    (Pa_msg_p3)

                    ; #43017: <==commonly_known== 29902 (pos)
                    (Bc_msg_p3)

                    ; #44089: <==closure== 36539 (pos)
                    (Pd_msg_p3)

                    ; #45726: <==commonly_known== 29902 (pos)
                    (Bb_msg_p3)

                    ; #46284: origin
                    (Bb_survivorat_s_p3)

                    ; #59387: origin
                    (Ba_survivorat_s_p3)

                    ; #65159: <==closure== 16926 (pos)
                    (Pd_survivorat_s_p3)

                    ; #84371: <==closure== 43017 (pos)
                    (Pc_msg_p3)

                    ; #85604: <==closure== 59387 (pos)
                    (Pa_survivorat_s_p3)

                    ; #87269: <==closure== 88700 (pos)
                    (Pc_survivorat_s_p3)

                    ; #88700: origin
                    (Bc_survivorat_s_p3)

                    ; #91623: <==closure== 45726 (pos)
                    (Pb_msg_p3)

                    ; #91700: <==closure== 46284 (pos)
                    (Pb_survivorat_s_p3)

                    ; #10765: <==negation-removal== 85604 (pos)
                    (not (Ba_not_survivorat_s_p3))

                    ; #14338: <==negation-removal== 16926 (pos)
                    (not (Pd_not_survivorat_s_p3))

                    ; #16346: <==negation-removal== 65159 (pos)
                    (not (Bd_not_survivorat_s_p3))

                    ; #19286: <==negation-removal== 87269 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #33956: <==negation-removal== 91700 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #35659: <==negation-removal== 44089 (pos)
                    (not (Bd_not_msg_p3))

                    ; #38595: <==negation-removal== 45726 (pos)
                    (not (Pb_not_msg_p3))

                    ; #39586: <==negation-removal== 59387 (pos)
                    (not (Pa_not_survivorat_s_p3))

                    ; #40807: <==negation-removal== 88700 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #44495: <==negation-removal== 21787 (pos)
                    (not (Pa_not_msg_p3))

                    ; #55846: <==negation-removal== 36539 (pos)
                    (not (Pd_not_msg_p3))

                    ; #57349: <==negation-removal== 84371 (pos)
                    (not (Bc_not_msg_p3))

                    ; #58573: <==negation-removal== 43017 (pos)
                    (not (Pc_not_msg_p3))

                    ; #73339: <==negation-removal== 41001 (pos)
                    (not (Ba_not_msg_p3))

                    ; #76915: <==negation-removal== 46284 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #85956: <==negation-removal== 91623 (pos)
                    (not (Bb_not_msg_p3))

                    ; #91143: <==negation-removal== 29902 (pos)
                    (not (not_msg_p3))))

    (:action commsurvivor_p3_b_s
        :precondition (and (Pb_survivorat_s_p3)
                           (at_b_p3)
                           (Bb_survivorat_s_p3))
        :effect (and
                    ; #16926: origin
                    (Bd_survivorat_s_p3)

                    ; #21787: <==commonly_known== 29902 (pos)
                    (Ba_msg_p3)

                    ; #29902: origin
                    (msg_p3)

                    ; #36539: <==commonly_known== 29902 (pos)
                    (Bd_msg_p3)

                    ; #41001: <==closure== 21787 (pos)
                    (Pa_msg_p3)

                    ; #43017: <==commonly_known== 29902 (pos)
                    (Bc_msg_p3)

                    ; #44089: <==closure== 36539 (pos)
                    (Pd_msg_p3)

                    ; #45726: <==commonly_known== 29902 (pos)
                    (Bb_msg_p3)

                    ; #46284: origin
                    (Bb_survivorat_s_p3)

                    ; #59387: origin
                    (Ba_survivorat_s_p3)

                    ; #65159: <==closure== 16926 (pos)
                    (Pd_survivorat_s_p3)

                    ; #84371: <==closure== 43017 (pos)
                    (Pc_msg_p3)

                    ; #85604: <==closure== 59387 (pos)
                    (Pa_survivorat_s_p3)

                    ; #87269: <==closure== 88700 (pos)
                    (Pc_survivorat_s_p3)

                    ; #88700: origin
                    (Bc_survivorat_s_p3)

                    ; #91623: <==closure== 45726 (pos)
                    (Pb_msg_p3)

                    ; #91700: <==closure== 46284 (pos)
                    (Pb_survivorat_s_p3)

                    ; #10765: <==negation-removal== 85604 (pos)
                    (not (Ba_not_survivorat_s_p3))

                    ; #14338: <==negation-removal== 16926 (pos)
                    (not (Pd_not_survivorat_s_p3))

                    ; #16346: <==negation-removal== 65159 (pos)
                    (not (Bd_not_survivorat_s_p3))

                    ; #19286: <==negation-removal== 87269 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #33956: <==negation-removal== 91700 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #35659: <==negation-removal== 44089 (pos)
                    (not (Bd_not_msg_p3))

                    ; #38595: <==negation-removal== 45726 (pos)
                    (not (Pb_not_msg_p3))

                    ; #39586: <==negation-removal== 59387 (pos)
                    (not (Pa_not_survivorat_s_p3))

                    ; #40807: <==negation-removal== 88700 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #44495: <==negation-removal== 21787 (pos)
                    (not (Pa_not_msg_p3))

                    ; #55846: <==negation-removal== 36539 (pos)
                    (not (Pd_not_msg_p3))

                    ; #57349: <==negation-removal== 84371 (pos)
                    (not (Bc_not_msg_p3))

                    ; #58573: <==negation-removal== 43017 (pos)
                    (not (Pc_not_msg_p3))

                    ; #73339: <==negation-removal== 41001 (pos)
                    (not (Ba_not_msg_p3))

                    ; #76915: <==negation-removal== 46284 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #85956: <==negation-removal== 91623 (pos)
                    (not (Bb_not_msg_p3))

                    ; #91143: <==negation-removal== 29902 (pos)
                    (not (not_msg_p3))))

    (:action commsurvivor_p3_c_s
        :precondition (and (Bc_survivorat_s_p3)
                           (Pc_survivorat_s_p3)
                           (at_c_p3))
        :effect (and
                    ; #16926: origin
                    (Bd_survivorat_s_p3)

                    ; #21787: <==commonly_known== 29902 (pos)
                    (Ba_msg_p3)

                    ; #29902: origin
                    (msg_p3)

                    ; #36539: <==commonly_known== 29902 (pos)
                    (Bd_msg_p3)

                    ; #41001: <==closure== 21787 (pos)
                    (Pa_msg_p3)

                    ; #43017: <==commonly_known== 29902 (pos)
                    (Bc_msg_p3)

                    ; #44089: <==closure== 36539 (pos)
                    (Pd_msg_p3)

                    ; #45726: <==commonly_known== 29902 (pos)
                    (Bb_msg_p3)

                    ; #46284: origin
                    (Bb_survivorat_s_p3)

                    ; #59387: origin
                    (Ba_survivorat_s_p3)

                    ; #65159: <==closure== 16926 (pos)
                    (Pd_survivorat_s_p3)

                    ; #84371: <==closure== 43017 (pos)
                    (Pc_msg_p3)

                    ; #85604: <==closure== 59387 (pos)
                    (Pa_survivorat_s_p3)

                    ; #87269: <==closure== 88700 (pos)
                    (Pc_survivorat_s_p3)

                    ; #88700: origin
                    (Bc_survivorat_s_p3)

                    ; #91623: <==closure== 45726 (pos)
                    (Pb_msg_p3)

                    ; #91700: <==closure== 46284 (pos)
                    (Pb_survivorat_s_p3)

                    ; #10765: <==negation-removal== 85604 (pos)
                    (not (Ba_not_survivorat_s_p3))

                    ; #14338: <==negation-removal== 16926 (pos)
                    (not (Pd_not_survivorat_s_p3))

                    ; #16346: <==negation-removal== 65159 (pos)
                    (not (Bd_not_survivorat_s_p3))

                    ; #19286: <==negation-removal== 87269 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #33956: <==negation-removal== 91700 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #35659: <==negation-removal== 44089 (pos)
                    (not (Bd_not_msg_p3))

                    ; #38595: <==negation-removal== 45726 (pos)
                    (not (Pb_not_msg_p3))

                    ; #39586: <==negation-removal== 59387 (pos)
                    (not (Pa_not_survivorat_s_p3))

                    ; #40807: <==negation-removal== 88700 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #44495: <==negation-removal== 21787 (pos)
                    (not (Pa_not_msg_p3))

                    ; #55846: <==negation-removal== 36539 (pos)
                    (not (Pd_not_msg_p3))

                    ; #57349: <==negation-removal== 84371 (pos)
                    (not (Bc_not_msg_p3))

                    ; #58573: <==negation-removal== 43017 (pos)
                    (not (Pc_not_msg_p3))

                    ; #73339: <==negation-removal== 41001 (pos)
                    (not (Ba_not_msg_p3))

                    ; #76915: <==negation-removal== 46284 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #85956: <==negation-removal== 91623 (pos)
                    (not (Bb_not_msg_p3))

                    ; #91143: <==negation-removal== 29902 (pos)
                    (not (not_msg_p3))))

    (:action commsurvivor_p3_d_s
        :precondition (and (Bd_survivorat_s_p3)
                           (Pd_survivorat_s_p3)
                           (at_d_p3))
        :effect (and
                    ; #16926: origin
                    (Bd_survivorat_s_p3)

                    ; #21787: <==commonly_known== 29902 (pos)
                    (Ba_msg_p3)

                    ; #29902: origin
                    (msg_p3)

                    ; #36539: <==commonly_known== 29902 (pos)
                    (Bd_msg_p3)

                    ; #41001: <==closure== 21787 (pos)
                    (Pa_msg_p3)

                    ; #43017: <==commonly_known== 29902 (pos)
                    (Bc_msg_p3)

                    ; #44089: <==closure== 36539 (pos)
                    (Pd_msg_p3)

                    ; #45726: <==commonly_known== 29902 (pos)
                    (Bb_msg_p3)

                    ; #46284: origin
                    (Bb_survivorat_s_p3)

                    ; #59387: origin
                    (Ba_survivorat_s_p3)

                    ; #65159: <==closure== 16926 (pos)
                    (Pd_survivorat_s_p3)

                    ; #84371: <==closure== 43017 (pos)
                    (Pc_msg_p3)

                    ; #85604: <==closure== 59387 (pos)
                    (Pa_survivorat_s_p3)

                    ; #87269: <==closure== 88700 (pos)
                    (Pc_survivorat_s_p3)

                    ; #88700: origin
                    (Bc_survivorat_s_p3)

                    ; #91623: <==closure== 45726 (pos)
                    (Pb_msg_p3)

                    ; #91700: <==closure== 46284 (pos)
                    (Pb_survivorat_s_p3)

                    ; #10765: <==negation-removal== 85604 (pos)
                    (not (Ba_not_survivorat_s_p3))

                    ; #14338: <==negation-removal== 16926 (pos)
                    (not (Pd_not_survivorat_s_p3))

                    ; #16346: <==negation-removal== 65159 (pos)
                    (not (Bd_not_survivorat_s_p3))

                    ; #19286: <==negation-removal== 87269 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #33956: <==negation-removal== 91700 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #35659: <==negation-removal== 44089 (pos)
                    (not (Bd_not_msg_p3))

                    ; #38595: <==negation-removal== 45726 (pos)
                    (not (Pb_not_msg_p3))

                    ; #39586: <==negation-removal== 59387 (pos)
                    (not (Pa_not_survivorat_s_p3))

                    ; #40807: <==negation-removal== 88700 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #44495: <==negation-removal== 21787 (pos)
                    (not (Pa_not_msg_p3))

                    ; #55846: <==negation-removal== 36539 (pos)
                    (not (Pd_not_msg_p3))

                    ; #57349: <==negation-removal== 84371 (pos)
                    (not (Bc_not_msg_p3))

                    ; #58573: <==negation-removal== 43017 (pos)
                    (not (Pc_not_msg_p3))

                    ; #73339: <==negation-removal== 41001 (pos)
                    (not (Ba_not_msg_p3))

                    ; #76915: <==negation-removal== 46284 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #85956: <==negation-removal== 91623 (pos)
                    (not (Bb_not_msg_p3))

                    ; #91143: <==negation-removal== 29902 (pos)
                    (not (not_msg_p3))))

    (:action commsurvivor_p4_a_s
        :precondition (and (at_a_p4)
                           (Ba_survivorat_s_p4)
                           (Pa_survivorat_s_p4))
        :effect (and
                    ; #12347: origin
                    (Bc_survivorat_s_p4)

                    ; #26051: <==closure== 61072 (pos)
                    (Pc_msg_p4)

                    ; #28279: <==closure== 28352 (pos)
                    (Pd_msg_p4)

                    ; #28352: <==commonly_known== 31443 (pos)
                    (Bd_msg_p4)

                    ; #31443: origin
                    (msg_p4)

                    ; #38496: <==closure== 12347 (pos)
                    (Pc_survivorat_s_p4)

                    ; #42216: <==closure== 58365 (pos)
                    (Pb_msg_p4)

                    ; #42574: origin
                    (Ba_survivorat_s_p4)

                    ; #46167: <==closure== 42574 (pos)
                    (Pa_survivorat_s_p4)

                    ; #58365: <==commonly_known== 31443 (pos)
                    (Bb_msg_p4)

                    ; #61072: <==commonly_known== 31443 (pos)
                    (Bc_msg_p4)

                    ; #69066: <==closure== 84743 (pos)
                    (Pb_survivorat_s_p4)

                    ; #71347: <==closure== 79890 (pos)
                    (Pd_survivorat_s_p4)

                    ; #74077: <==commonly_known== 31443 (pos)
                    (Ba_msg_p4)

                    ; #79890: origin
                    (Bd_survivorat_s_p4)

                    ; #84743: origin
                    (Bb_survivorat_s_p4)

                    ; #85704: <==closure== 74077 (pos)
                    (Pa_msg_p4)

                    ; #10322: <==negation-removal== 58365 (pos)
                    (not (Pb_not_msg_p4))

                    ; #12567: <==negation-removal== 28279 (pos)
                    (not (Bd_not_msg_p4))

                    ; #13467: <==negation-removal== 42574 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #17770: <==negation-removal== 26051 (pos)
                    (not (Bc_not_msg_p4))

                    ; #26614: <==negation-removal== 71347 (pos)
                    (not (Bd_not_survivorat_s_p4))

                    ; #32948: <==negation-removal== 28352 (pos)
                    (not (Pd_not_msg_p4))

                    ; #35547: <==negation-removal== 46167 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #35606: <==negation-removal== 38496 (pos)
                    (not (Bc_not_survivorat_s_p4))

                    ; #38464: <==negation-removal== 61072 (pos)
                    (not (Pc_not_msg_p4))

                    ; #40363: <==negation-removal== 69066 (pos)
                    (not (Bb_not_survivorat_s_p4))

                    ; #48031: <==negation-removal== 74077 (pos)
                    (not (Pa_not_msg_p4))

                    ; #64363: <==negation-removal== 42216 (pos)
                    (not (Bb_not_msg_p4))

                    ; #64905: <==negation-removal== 85704 (pos)
                    (not (Ba_not_msg_p4))

                    ; #65634: <==negation-removal== 12347 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #70229: <==negation-removal== 84743 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #89051: <==negation-removal== 31443 (pos)
                    (not (not_msg_p4))

                    ; #94441: <==negation-removal== 79890 (pos)
                    (not (Pd_not_survivorat_s_p4))))

    (:action commsurvivor_p4_b_s
        :precondition (and (Pb_survivorat_s_p4)
                           (Bb_survivorat_s_p4)
                           (at_b_p4))
        :effect (and
                    ; #12347: origin
                    (Bc_survivorat_s_p4)

                    ; #26051: <==closure== 61072 (pos)
                    (Pc_msg_p4)

                    ; #28279: <==closure== 28352 (pos)
                    (Pd_msg_p4)

                    ; #28352: <==commonly_known== 31443 (pos)
                    (Bd_msg_p4)

                    ; #31443: origin
                    (msg_p4)

                    ; #38496: <==closure== 12347 (pos)
                    (Pc_survivorat_s_p4)

                    ; #42216: <==closure== 58365 (pos)
                    (Pb_msg_p4)

                    ; #42574: origin
                    (Ba_survivorat_s_p4)

                    ; #46167: <==closure== 42574 (pos)
                    (Pa_survivorat_s_p4)

                    ; #58365: <==commonly_known== 31443 (pos)
                    (Bb_msg_p4)

                    ; #61072: <==commonly_known== 31443 (pos)
                    (Bc_msg_p4)

                    ; #69066: <==closure== 84743 (pos)
                    (Pb_survivorat_s_p4)

                    ; #71347: <==closure== 79890 (pos)
                    (Pd_survivorat_s_p4)

                    ; #74077: <==commonly_known== 31443 (pos)
                    (Ba_msg_p4)

                    ; #79890: origin
                    (Bd_survivorat_s_p4)

                    ; #84743: origin
                    (Bb_survivorat_s_p4)

                    ; #85704: <==closure== 74077 (pos)
                    (Pa_msg_p4)

                    ; #10322: <==negation-removal== 58365 (pos)
                    (not (Pb_not_msg_p4))

                    ; #12567: <==negation-removal== 28279 (pos)
                    (not (Bd_not_msg_p4))

                    ; #13467: <==negation-removal== 42574 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #17770: <==negation-removal== 26051 (pos)
                    (not (Bc_not_msg_p4))

                    ; #26614: <==negation-removal== 71347 (pos)
                    (not (Bd_not_survivorat_s_p4))

                    ; #32948: <==negation-removal== 28352 (pos)
                    (not (Pd_not_msg_p4))

                    ; #35547: <==negation-removal== 46167 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #35606: <==negation-removal== 38496 (pos)
                    (not (Bc_not_survivorat_s_p4))

                    ; #38464: <==negation-removal== 61072 (pos)
                    (not (Pc_not_msg_p4))

                    ; #40363: <==negation-removal== 69066 (pos)
                    (not (Bb_not_survivorat_s_p4))

                    ; #48031: <==negation-removal== 74077 (pos)
                    (not (Pa_not_msg_p4))

                    ; #64363: <==negation-removal== 42216 (pos)
                    (not (Bb_not_msg_p4))

                    ; #64905: <==negation-removal== 85704 (pos)
                    (not (Ba_not_msg_p4))

                    ; #65634: <==negation-removal== 12347 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #70229: <==negation-removal== 84743 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #89051: <==negation-removal== 31443 (pos)
                    (not (not_msg_p4))

                    ; #94441: <==negation-removal== 79890 (pos)
                    (not (Pd_not_survivorat_s_p4))))

    (:action commsurvivor_p4_c_s
        :precondition (and (Bc_survivorat_s_p4)
                           (at_c_p4)
                           (Pc_survivorat_s_p4))
        :effect (and
                    ; #12347: origin
                    (Bc_survivorat_s_p4)

                    ; #26051: <==closure== 61072 (pos)
                    (Pc_msg_p4)

                    ; #28279: <==closure== 28352 (pos)
                    (Pd_msg_p4)

                    ; #28352: <==commonly_known== 31443 (pos)
                    (Bd_msg_p4)

                    ; #31443: origin
                    (msg_p4)

                    ; #38496: <==closure== 12347 (pos)
                    (Pc_survivorat_s_p4)

                    ; #42216: <==closure== 58365 (pos)
                    (Pb_msg_p4)

                    ; #42574: origin
                    (Ba_survivorat_s_p4)

                    ; #46167: <==closure== 42574 (pos)
                    (Pa_survivorat_s_p4)

                    ; #58365: <==commonly_known== 31443 (pos)
                    (Bb_msg_p4)

                    ; #61072: <==commonly_known== 31443 (pos)
                    (Bc_msg_p4)

                    ; #69066: <==closure== 84743 (pos)
                    (Pb_survivorat_s_p4)

                    ; #71347: <==closure== 79890 (pos)
                    (Pd_survivorat_s_p4)

                    ; #74077: <==commonly_known== 31443 (pos)
                    (Ba_msg_p4)

                    ; #79890: origin
                    (Bd_survivorat_s_p4)

                    ; #84743: origin
                    (Bb_survivorat_s_p4)

                    ; #85704: <==closure== 74077 (pos)
                    (Pa_msg_p4)

                    ; #10322: <==negation-removal== 58365 (pos)
                    (not (Pb_not_msg_p4))

                    ; #12567: <==negation-removal== 28279 (pos)
                    (not (Bd_not_msg_p4))

                    ; #13467: <==negation-removal== 42574 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #17770: <==negation-removal== 26051 (pos)
                    (not (Bc_not_msg_p4))

                    ; #26614: <==negation-removal== 71347 (pos)
                    (not (Bd_not_survivorat_s_p4))

                    ; #32948: <==negation-removal== 28352 (pos)
                    (not (Pd_not_msg_p4))

                    ; #35547: <==negation-removal== 46167 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #35606: <==negation-removal== 38496 (pos)
                    (not (Bc_not_survivorat_s_p4))

                    ; #38464: <==negation-removal== 61072 (pos)
                    (not (Pc_not_msg_p4))

                    ; #40363: <==negation-removal== 69066 (pos)
                    (not (Bb_not_survivorat_s_p4))

                    ; #48031: <==negation-removal== 74077 (pos)
                    (not (Pa_not_msg_p4))

                    ; #64363: <==negation-removal== 42216 (pos)
                    (not (Bb_not_msg_p4))

                    ; #64905: <==negation-removal== 85704 (pos)
                    (not (Ba_not_msg_p4))

                    ; #65634: <==negation-removal== 12347 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #70229: <==negation-removal== 84743 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #89051: <==negation-removal== 31443 (pos)
                    (not (not_msg_p4))

                    ; #94441: <==negation-removal== 79890 (pos)
                    (not (Pd_not_survivorat_s_p4))))

    (:action commsurvivor_p4_d_s
        :precondition (and (Bd_survivorat_s_p4)
                           (at_d_p4)
                           (Pd_survivorat_s_p4))
        :effect (and
                    ; #12347: origin
                    (Bc_survivorat_s_p4)

                    ; #26051: <==closure== 61072 (pos)
                    (Pc_msg_p4)

                    ; #28279: <==closure== 28352 (pos)
                    (Pd_msg_p4)

                    ; #28352: <==commonly_known== 31443 (pos)
                    (Bd_msg_p4)

                    ; #31443: origin
                    (msg_p4)

                    ; #38496: <==closure== 12347 (pos)
                    (Pc_survivorat_s_p4)

                    ; #42216: <==closure== 58365 (pos)
                    (Pb_msg_p4)

                    ; #42574: origin
                    (Ba_survivorat_s_p4)

                    ; #46167: <==closure== 42574 (pos)
                    (Pa_survivorat_s_p4)

                    ; #58365: <==commonly_known== 31443 (pos)
                    (Bb_msg_p4)

                    ; #61072: <==commonly_known== 31443 (pos)
                    (Bc_msg_p4)

                    ; #69066: <==closure== 84743 (pos)
                    (Pb_survivorat_s_p4)

                    ; #71347: <==closure== 79890 (pos)
                    (Pd_survivorat_s_p4)

                    ; #74077: <==commonly_known== 31443 (pos)
                    (Ba_msg_p4)

                    ; #79890: origin
                    (Bd_survivorat_s_p4)

                    ; #84743: origin
                    (Bb_survivorat_s_p4)

                    ; #85704: <==closure== 74077 (pos)
                    (Pa_msg_p4)

                    ; #10322: <==negation-removal== 58365 (pos)
                    (not (Pb_not_msg_p4))

                    ; #12567: <==negation-removal== 28279 (pos)
                    (not (Bd_not_msg_p4))

                    ; #13467: <==negation-removal== 42574 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #17770: <==negation-removal== 26051 (pos)
                    (not (Bc_not_msg_p4))

                    ; #26614: <==negation-removal== 71347 (pos)
                    (not (Bd_not_survivorat_s_p4))

                    ; #32948: <==negation-removal== 28352 (pos)
                    (not (Pd_not_msg_p4))

                    ; #35547: <==negation-removal== 46167 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #35606: <==negation-removal== 38496 (pos)
                    (not (Bc_not_survivorat_s_p4))

                    ; #38464: <==negation-removal== 61072 (pos)
                    (not (Pc_not_msg_p4))

                    ; #40363: <==negation-removal== 69066 (pos)
                    (not (Bb_not_survivorat_s_p4))

                    ; #48031: <==negation-removal== 74077 (pos)
                    (not (Pa_not_msg_p4))

                    ; #64363: <==negation-removal== 42216 (pos)
                    (not (Bb_not_msg_p4))

                    ; #64905: <==negation-removal== 85704 (pos)
                    (not (Ba_not_msg_p4))

                    ; #65634: <==negation-removal== 12347 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #70229: <==negation-removal== 84743 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #89051: <==negation-removal== 31443 (pos)
                    (not (not_msg_p4))

                    ; #94441: <==negation-removal== 79890 (pos)
                    (not (Pd_not_survivorat_s_p4))))

    (:action commsurvivor_p5_a_s
        :precondition (and (at_a_p5)
                           (Ba_survivorat_s_p5)
                           (Pa_survivorat_s_p5))
        :effect (and
                    ; #12701: <==commonly_known== 35910 (pos)
                    (Ba_msg_p5)

                    ; #14431: origin
                    (Bb_survivorat_s_p5)

                    ; #25337: <==commonly_known== 35910 (pos)
                    (Bb_msg_p5)

                    ; #35910: origin
                    (msg_p5)

                    ; #41123: <==closure== 90233 (pos)
                    (Pc_msg_p5)

                    ; #43947: <==closure== 49196 (pos)
                    (Pc_survivorat_s_p5)

                    ; #46433: <==closure== 65385 (pos)
                    (Pd_survivorat_s_p5)

                    ; #47377: <==closure== 79698 (pos)
                    (Pd_msg_p5)

                    ; #49196: origin
                    (Bc_survivorat_s_p5)

                    ; #53197: origin
                    (Ba_survivorat_s_p5)

                    ; #55000: <==closure== 12701 (pos)
                    (Pa_msg_p5)

                    ; #57247: <==closure== 14431 (pos)
                    (Pb_survivorat_s_p5)

                    ; #65385: origin
                    (Bd_survivorat_s_p5)

                    ; #75744: <==closure== 25337 (pos)
                    (Pb_msg_p5)

                    ; #79698: <==commonly_known== 35910 (pos)
                    (Bd_msg_p5)

                    ; #86622: <==closure== 53197 (pos)
                    (Pa_survivorat_s_p5)

                    ; #90233: <==commonly_known== 35910 (pos)
                    (Bc_msg_p5)

                    ; #11292: <==negation-removal== 55000 (pos)
                    (not (Ba_not_msg_p5))

                    ; #19234: <==negation-removal== 53197 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #19952: <==negation-removal== 14431 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #23943: <==negation-removal== 79698 (pos)
                    (not (Pd_not_msg_p5))

                    ; #30760: <==negation-removal== 35910 (pos)
                    (not (not_msg_p5))

                    ; #35675: <==negation-removal== 12701 (pos)
                    (not (Pa_not_msg_p5))

                    ; #39855: <==negation-removal== 47377 (pos)
                    (not (Bd_not_msg_p5))

                    ; #45205: <==negation-removal== 57247 (pos)
                    (not (Bb_not_survivorat_s_p5))

                    ; #51439: <==negation-removal== 25337 (pos)
                    (not (Pb_not_msg_p5))

                    ; #52636: <==negation-removal== 49196 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #70900: <==negation-removal== 90233 (pos)
                    (not (Pc_not_msg_p5))

                    ; #75014: <==negation-removal== 41123 (pos)
                    (not (Bc_not_msg_p5))

                    ; #79312: <==negation-removal== 46433 (pos)
                    (not (Bd_not_survivorat_s_p5))

                    ; #80120: <==negation-removal== 86622 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #80239: <==negation-removal== 43947 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #81340: <==negation-removal== 75744 (pos)
                    (not (Bb_not_msg_p5))

                    ; #96090: <==negation-removal== 65385 (pos)
                    (not (Pd_not_survivorat_s_p5))))

    (:action commsurvivor_p5_b_s
        :precondition (and (Pb_survivorat_s_p5)
                           (Bb_survivorat_s_p5)
                           (at_b_p5))
        :effect (and
                    ; #12701: <==commonly_known== 35910 (pos)
                    (Ba_msg_p5)

                    ; #14431: origin
                    (Bb_survivorat_s_p5)

                    ; #25337: <==commonly_known== 35910 (pos)
                    (Bb_msg_p5)

                    ; #35910: origin
                    (msg_p5)

                    ; #41123: <==closure== 90233 (pos)
                    (Pc_msg_p5)

                    ; #43947: <==closure== 49196 (pos)
                    (Pc_survivorat_s_p5)

                    ; #46433: <==closure== 65385 (pos)
                    (Pd_survivorat_s_p5)

                    ; #47377: <==closure== 79698 (pos)
                    (Pd_msg_p5)

                    ; #49196: origin
                    (Bc_survivorat_s_p5)

                    ; #53197: origin
                    (Ba_survivorat_s_p5)

                    ; #55000: <==closure== 12701 (pos)
                    (Pa_msg_p5)

                    ; #57247: <==closure== 14431 (pos)
                    (Pb_survivorat_s_p5)

                    ; #65385: origin
                    (Bd_survivorat_s_p5)

                    ; #75744: <==closure== 25337 (pos)
                    (Pb_msg_p5)

                    ; #79698: <==commonly_known== 35910 (pos)
                    (Bd_msg_p5)

                    ; #86622: <==closure== 53197 (pos)
                    (Pa_survivorat_s_p5)

                    ; #90233: <==commonly_known== 35910 (pos)
                    (Bc_msg_p5)

                    ; #11292: <==negation-removal== 55000 (pos)
                    (not (Ba_not_msg_p5))

                    ; #19234: <==negation-removal== 53197 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #19952: <==negation-removal== 14431 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #23943: <==negation-removal== 79698 (pos)
                    (not (Pd_not_msg_p5))

                    ; #30760: <==negation-removal== 35910 (pos)
                    (not (not_msg_p5))

                    ; #35675: <==negation-removal== 12701 (pos)
                    (not (Pa_not_msg_p5))

                    ; #39855: <==negation-removal== 47377 (pos)
                    (not (Bd_not_msg_p5))

                    ; #45205: <==negation-removal== 57247 (pos)
                    (not (Bb_not_survivorat_s_p5))

                    ; #51439: <==negation-removal== 25337 (pos)
                    (not (Pb_not_msg_p5))

                    ; #52636: <==negation-removal== 49196 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #70900: <==negation-removal== 90233 (pos)
                    (not (Pc_not_msg_p5))

                    ; #75014: <==negation-removal== 41123 (pos)
                    (not (Bc_not_msg_p5))

                    ; #79312: <==negation-removal== 46433 (pos)
                    (not (Bd_not_survivorat_s_p5))

                    ; #80120: <==negation-removal== 86622 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #80239: <==negation-removal== 43947 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #81340: <==negation-removal== 75744 (pos)
                    (not (Bb_not_msg_p5))

                    ; #96090: <==negation-removal== 65385 (pos)
                    (not (Pd_not_survivorat_s_p5))))

    (:action commsurvivor_p5_c_s
        :precondition (and (Pc_survivorat_s_p5)
                           (Bc_survivorat_s_p5)
                           (at_c_p5))
        :effect (and
                    ; #12701: <==commonly_known== 35910 (pos)
                    (Ba_msg_p5)

                    ; #14431: origin
                    (Bb_survivorat_s_p5)

                    ; #25337: <==commonly_known== 35910 (pos)
                    (Bb_msg_p5)

                    ; #35910: origin
                    (msg_p5)

                    ; #41123: <==closure== 90233 (pos)
                    (Pc_msg_p5)

                    ; #43947: <==closure== 49196 (pos)
                    (Pc_survivorat_s_p5)

                    ; #46433: <==closure== 65385 (pos)
                    (Pd_survivorat_s_p5)

                    ; #47377: <==closure== 79698 (pos)
                    (Pd_msg_p5)

                    ; #49196: origin
                    (Bc_survivorat_s_p5)

                    ; #53197: origin
                    (Ba_survivorat_s_p5)

                    ; #55000: <==closure== 12701 (pos)
                    (Pa_msg_p5)

                    ; #57247: <==closure== 14431 (pos)
                    (Pb_survivorat_s_p5)

                    ; #65385: origin
                    (Bd_survivorat_s_p5)

                    ; #75744: <==closure== 25337 (pos)
                    (Pb_msg_p5)

                    ; #79698: <==commonly_known== 35910 (pos)
                    (Bd_msg_p5)

                    ; #86622: <==closure== 53197 (pos)
                    (Pa_survivorat_s_p5)

                    ; #90233: <==commonly_known== 35910 (pos)
                    (Bc_msg_p5)

                    ; #11292: <==negation-removal== 55000 (pos)
                    (not (Ba_not_msg_p5))

                    ; #19234: <==negation-removal== 53197 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #19952: <==negation-removal== 14431 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #23943: <==negation-removal== 79698 (pos)
                    (not (Pd_not_msg_p5))

                    ; #30760: <==negation-removal== 35910 (pos)
                    (not (not_msg_p5))

                    ; #35675: <==negation-removal== 12701 (pos)
                    (not (Pa_not_msg_p5))

                    ; #39855: <==negation-removal== 47377 (pos)
                    (not (Bd_not_msg_p5))

                    ; #45205: <==negation-removal== 57247 (pos)
                    (not (Bb_not_survivorat_s_p5))

                    ; #51439: <==negation-removal== 25337 (pos)
                    (not (Pb_not_msg_p5))

                    ; #52636: <==negation-removal== 49196 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #70900: <==negation-removal== 90233 (pos)
                    (not (Pc_not_msg_p5))

                    ; #75014: <==negation-removal== 41123 (pos)
                    (not (Bc_not_msg_p5))

                    ; #79312: <==negation-removal== 46433 (pos)
                    (not (Bd_not_survivorat_s_p5))

                    ; #80120: <==negation-removal== 86622 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #80239: <==negation-removal== 43947 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #81340: <==negation-removal== 75744 (pos)
                    (not (Bb_not_msg_p5))

                    ; #96090: <==negation-removal== 65385 (pos)
                    (not (Pd_not_survivorat_s_p5))))

    (:action commsurvivor_p5_d_s
        :precondition (and (Pd_survivorat_s_p5)
                           (at_d_p5)
                           (Bd_survivorat_s_p5))
        :effect (and
                    ; #12701: <==commonly_known== 35910 (pos)
                    (Ba_msg_p5)

                    ; #14431: origin
                    (Bb_survivorat_s_p5)

                    ; #25337: <==commonly_known== 35910 (pos)
                    (Bb_msg_p5)

                    ; #35910: origin
                    (msg_p5)

                    ; #41123: <==closure== 90233 (pos)
                    (Pc_msg_p5)

                    ; #43947: <==closure== 49196 (pos)
                    (Pc_survivorat_s_p5)

                    ; #46433: <==closure== 65385 (pos)
                    (Pd_survivorat_s_p5)

                    ; #47377: <==closure== 79698 (pos)
                    (Pd_msg_p5)

                    ; #49196: origin
                    (Bc_survivorat_s_p5)

                    ; #53197: origin
                    (Ba_survivorat_s_p5)

                    ; #55000: <==closure== 12701 (pos)
                    (Pa_msg_p5)

                    ; #57247: <==closure== 14431 (pos)
                    (Pb_survivorat_s_p5)

                    ; #65385: origin
                    (Bd_survivorat_s_p5)

                    ; #75744: <==closure== 25337 (pos)
                    (Pb_msg_p5)

                    ; #79698: <==commonly_known== 35910 (pos)
                    (Bd_msg_p5)

                    ; #86622: <==closure== 53197 (pos)
                    (Pa_survivorat_s_p5)

                    ; #90233: <==commonly_known== 35910 (pos)
                    (Bc_msg_p5)

                    ; #11292: <==negation-removal== 55000 (pos)
                    (not (Ba_not_msg_p5))

                    ; #19234: <==negation-removal== 53197 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #19952: <==negation-removal== 14431 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #23943: <==negation-removal== 79698 (pos)
                    (not (Pd_not_msg_p5))

                    ; #30760: <==negation-removal== 35910 (pos)
                    (not (not_msg_p5))

                    ; #35675: <==negation-removal== 12701 (pos)
                    (not (Pa_not_msg_p5))

                    ; #39855: <==negation-removal== 47377 (pos)
                    (not (Bd_not_msg_p5))

                    ; #45205: <==negation-removal== 57247 (pos)
                    (not (Bb_not_survivorat_s_p5))

                    ; #51439: <==negation-removal== 25337 (pos)
                    (not (Pb_not_msg_p5))

                    ; #52636: <==negation-removal== 49196 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #70900: <==negation-removal== 90233 (pos)
                    (not (Pc_not_msg_p5))

                    ; #75014: <==negation-removal== 41123 (pos)
                    (not (Bc_not_msg_p5))

                    ; #79312: <==negation-removal== 46433 (pos)
                    (not (Bd_not_survivorat_s_p5))

                    ; #80120: <==negation-removal== 86622 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #80239: <==negation-removal== 43947 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #81340: <==negation-removal== 75744 (pos)
                    (not (Bb_not_msg_p5))

                    ; #96090: <==negation-removal== 65385 (pos)
                    (not (Pd_not_survivorat_s_p5))))

    (:action commsurvivor_p6_a_s
        :precondition (and (Ba_survivorat_s_p6)
                           (Pa_survivorat_s_p6)
                           (at_a_p6))
        :effect (and
                    ; #38022: origin
                    (Bc_survivorat_s_p6)

                    ; #38807: origin
                    (Bd_survivorat_s_p6)

                    ; #40461: <==closure== 38022 (pos)
                    (Pc_survivorat_s_p6)

                    ; #43452: <==closure== 63887 (pos)
                    (Pa_msg_p6)

                    ; #49890: origin
                    (msg_p6)

                    ; #53682: <==closure== 73299 (pos)
                    (Pa_survivorat_s_p6)

                    ; #63887: <==commonly_known== 49890 (pos)
                    (Ba_msg_p6)

                    ; #66771: <==commonly_known== 49890 (pos)
                    (Bc_msg_p6)

                    ; #69828: <==closure== 66771 (pos)
                    (Pc_msg_p6)

                    ; #71419: <==closure== 85019 (pos)
                    (Pd_msg_p6)

                    ; #73299: origin
                    (Ba_survivorat_s_p6)

                    ; #75728: <==commonly_known== 49890 (pos)
                    (Bb_msg_p6)

                    ; #80536: origin
                    (Bb_survivorat_s_p6)

                    ; #81518: <==closure== 38807 (pos)
                    (Pd_survivorat_s_p6)

                    ; #82343: <==closure== 75728 (pos)
                    (Pb_msg_p6)

                    ; #85019: <==commonly_known== 49890 (pos)
                    (Bd_msg_p6)

                    ; #86084: <==closure== 80536 (pos)
                    (Pb_survivorat_s_p6)

                    ; #15819: <==negation-removal== 71419 (pos)
                    (not (Bd_not_msg_p6))

                    ; #20282: <==negation-removal== 63887 (pos)
                    (not (Pa_not_msg_p6))

                    ; #20306: <==negation-removal== 82343 (pos)
                    (not (Bb_not_msg_p6))

                    ; #23474: <==negation-removal== 38022 (pos)
                    (not (Pc_not_survivorat_s_p6))

                    ; #26134: <==negation-removal== 66771 (pos)
                    (not (Pc_not_msg_p6))

                    ; #26866: <==negation-removal== 86084 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #38039: <==negation-removal== 85019 (pos)
                    (not (Pd_not_msg_p6))

                    ; #38080: <==negation-removal== 69828 (pos)
                    (not (Bc_not_msg_p6))

                    ; #49147: <==negation-removal== 80536 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #54998: <==negation-removal== 75728 (pos)
                    (not (Pb_not_msg_p6))

                    ; #56325: <==negation-removal== 38807 (pos)
                    (not (Pd_not_survivorat_s_p6))

                    ; #64305: <==negation-removal== 43452 (pos)
                    (not (Ba_not_msg_p6))

                    ; #66086: <==negation-removal== 53682 (pos)
                    (not (Ba_not_survivorat_s_p6))

                    ; #73927: <==negation-removal== 40461 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #87088: <==negation-removal== 73299 (pos)
                    (not (Pa_not_survivorat_s_p6))

                    ; #89227: <==negation-removal== 49890 (pos)
                    (not (not_msg_p6))

                    ; #89238: <==negation-removal== 81518 (pos)
                    (not (Bd_not_survivorat_s_p6))))

    (:action commsurvivor_p6_b_s
        :precondition (and (at_b_p6)
                           (Bb_survivorat_s_p6)
                           (Pb_survivorat_s_p6))
        :effect (and
                    ; #38022: origin
                    (Bc_survivorat_s_p6)

                    ; #38807: origin
                    (Bd_survivorat_s_p6)

                    ; #40461: <==closure== 38022 (pos)
                    (Pc_survivorat_s_p6)

                    ; #43452: <==closure== 63887 (pos)
                    (Pa_msg_p6)

                    ; #49890: origin
                    (msg_p6)

                    ; #53682: <==closure== 73299 (pos)
                    (Pa_survivorat_s_p6)

                    ; #63887: <==commonly_known== 49890 (pos)
                    (Ba_msg_p6)

                    ; #66771: <==commonly_known== 49890 (pos)
                    (Bc_msg_p6)

                    ; #69828: <==closure== 66771 (pos)
                    (Pc_msg_p6)

                    ; #71419: <==closure== 85019 (pos)
                    (Pd_msg_p6)

                    ; #73299: origin
                    (Ba_survivorat_s_p6)

                    ; #75728: <==commonly_known== 49890 (pos)
                    (Bb_msg_p6)

                    ; #80536: origin
                    (Bb_survivorat_s_p6)

                    ; #81518: <==closure== 38807 (pos)
                    (Pd_survivorat_s_p6)

                    ; #82343: <==closure== 75728 (pos)
                    (Pb_msg_p6)

                    ; #85019: <==commonly_known== 49890 (pos)
                    (Bd_msg_p6)

                    ; #86084: <==closure== 80536 (pos)
                    (Pb_survivorat_s_p6)

                    ; #15819: <==negation-removal== 71419 (pos)
                    (not (Bd_not_msg_p6))

                    ; #20282: <==negation-removal== 63887 (pos)
                    (not (Pa_not_msg_p6))

                    ; #20306: <==negation-removal== 82343 (pos)
                    (not (Bb_not_msg_p6))

                    ; #23474: <==negation-removal== 38022 (pos)
                    (not (Pc_not_survivorat_s_p6))

                    ; #26134: <==negation-removal== 66771 (pos)
                    (not (Pc_not_msg_p6))

                    ; #26866: <==negation-removal== 86084 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #38039: <==negation-removal== 85019 (pos)
                    (not (Pd_not_msg_p6))

                    ; #38080: <==negation-removal== 69828 (pos)
                    (not (Bc_not_msg_p6))

                    ; #49147: <==negation-removal== 80536 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #54998: <==negation-removal== 75728 (pos)
                    (not (Pb_not_msg_p6))

                    ; #56325: <==negation-removal== 38807 (pos)
                    (not (Pd_not_survivorat_s_p6))

                    ; #64305: <==negation-removal== 43452 (pos)
                    (not (Ba_not_msg_p6))

                    ; #66086: <==negation-removal== 53682 (pos)
                    (not (Ba_not_survivorat_s_p6))

                    ; #73927: <==negation-removal== 40461 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #87088: <==negation-removal== 73299 (pos)
                    (not (Pa_not_survivorat_s_p6))

                    ; #89227: <==negation-removal== 49890 (pos)
                    (not (not_msg_p6))

                    ; #89238: <==negation-removal== 81518 (pos)
                    (not (Bd_not_survivorat_s_p6))))

    (:action commsurvivor_p6_c_s
        :precondition (and (at_c_p6)
                           (Pc_survivorat_s_p6)
                           (Bc_survivorat_s_p6))
        :effect (and
                    ; #38022: origin
                    (Bc_survivorat_s_p6)

                    ; #38807: origin
                    (Bd_survivorat_s_p6)

                    ; #40461: <==closure== 38022 (pos)
                    (Pc_survivorat_s_p6)

                    ; #43452: <==closure== 63887 (pos)
                    (Pa_msg_p6)

                    ; #49890: origin
                    (msg_p6)

                    ; #53682: <==closure== 73299 (pos)
                    (Pa_survivorat_s_p6)

                    ; #63887: <==commonly_known== 49890 (pos)
                    (Ba_msg_p6)

                    ; #66771: <==commonly_known== 49890 (pos)
                    (Bc_msg_p6)

                    ; #69828: <==closure== 66771 (pos)
                    (Pc_msg_p6)

                    ; #71419: <==closure== 85019 (pos)
                    (Pd_msg_p6)

                    ; #73299: origin
                    (Ba_survivorat_s_p6)

                    ; #75728: <==commonly_known== 49890 (pos)
                    (Bb_msg_p6)

                    ; #80536: origin
                    (Bb_survivorat_s_p6)

                    ; #81518: <==closure== 38807 (pos)
                    (Pd_survivorat_s_p6)

                    ; #82343: <==closure== 75728 (pos)
                    (Pb_msg_p6)

                    ; #85019: <==commonly_known== 49890 (pos)
                    (Bd_msg_p6)

                    ; #86084: <==closure== 80536 (pos)
                    (Pb_survivorat_s_p6)

                    ; #15819: <==negation-removal== 71419 (pos)
                    (not (Bd_not_msg_p6))

                    ; #20282: <==negation-removal== 63887 (pos)
                    (not (Pa_not_msg_p6))

                    ; #20306: <==negation-removal== 82343 (pos)
                    (not (Bb_not_msg_p6))

                    ; #23474: <==negation-removal== 38022 (pos)
                    (not (Pc_not_survivorat_s_p6))

                    ; #26134: <==negation-removal== 66771 (pos)
                    (not (Pc_not_msg_p6))

                    ; #26866: <==negation-removal== 86084 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #38039: <==negation-removal== 85019 (pos)
                    (not (Pd_not_msg_p6))

                    ; #38080: <==negation-removal== 69828 (pos)
                    (not (Bc_not_msg_p6))

                    ; #49147: <==negation-removal== 80536 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #54998: <==negation-removal== 75728 (pos)
                    (not (Pb_not_msg_p6))

                    ; #56325: <==negation-removal== 38807 (pos)
                    (not (Pd_not_survivorat_s_p6))

                    ; #64305: <==negation-removal== 43452 (pos)
                    (not (Ba_not_msg_p6))

                    ; #66086: <==negation-removal== 53682 (pos)
                    (not (Ba_not_survivorat_s_p6))

                    ; #73927: <==negation-removal== 40461 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #87088: <==negation-removal== 73299 (pos)
                    (not (Pa_not_survivorat_s_p6))

                    ; #89227: <==negation-removal== 49890 (pos)
                    (not (not_msg_p6))

                    ; #89238: <==negation-removal== 81518 (pos)
                    (not (Bd_not_survivorat_s_p6))))

    (:action commsurvivor_p6_d_s
        :precondition (and (at_d_p6)
                           (Pd_survivorat_s_p6)
                           (Bd_survivorat_s_p6))
        :effect (and
                    ; #38022: origin
                    (Bc_survivorat_s_p6)

                    ; #38807: origin
                    (Bd_survivorat_s_p6)

                    ; #40461: <==closure== 38022 (pos)
                    (Pc_survivorat_s_p6)

                    ; #43452: <==closure== 63887 (pos)
                    (Pa_msg_p6)

                    ; #49890: origin
                    (msg_p6)

                    ; #53682: <==closure== 73299 (pos)
                    (Pa_survivorat_s_p6)

                    ; #63887: <==commonly_known== 49890 (pos)
                    (Ba_msg_p6)

                    ; #66771: <==commonly_known== 49890 (pos)
                    (Bc_msg_p6)

                    ; #69828: <==closure== 66771 (pos)
                    (Pc_msg_p6)

                    ; #71419: <==closure== 85019 (pos)
                    (Pd_msg_p6)

                    ; #73299: origin
                    (Ba_survivorat_s_p6)

                    ; #75728: <==commonly_known== 49890 (pos)
                    (Bb_msg_p6)

                    ; #80536: origin
                    (Bb_survivorat_s_p6)

                    ; #81518: <==closure== 38807 (pos)
                    (Pd_survivorat_s_p6)

                    ; #82343: <==closure== 75728 (pos)
                    (Pb_msg_p6)

                    ; #85019: <==commonly_known== 49890 (pos)
                    (Bd_msg_p6)

                    ; #86084: <==closure== 80536 (pos)
                    (Pb_survivorat_s_p6)

                    ; #15819: <==negation-removal== 71419 (pos)
                    (not (Bd_not_msg_p6))

                    ; #20282: <==negation-removal== 63887 (pos)
                    (not (Pa_not_msg_p6))

                    ; #20306: <==negation-removal== 82343 (pos)
                    (not (Bb_not_msg_p6))

                    ; #23474: <==negation-removal== 38022 (pos)
                    (not (Pc_not_survivorat_s_p6))

                    ; #26134: <==negation-removal== 66771 (pos)
                    (not (Pc_not_msg_p6))

                    ; #26866: <==negation-removal== 86084 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #38039: <==negation-removal== 85019 (pos)
                    (not (Pd_not_msg_p6))

                    ; #38080: <==negation-removal== 69828 (pos)
                    (not (Bc_not_msg_p6))

                    ; #49147: <==negation-removal== 80536 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #54998: <==negation-removal== 75728 (pos)
                    (not (Pb_not_msg_p6))

                    ; #56325: <==negation-removal== 38807 (pos)
                    (not (Pd_not_survivorat_s_p6))

                    ; #64305: <==negation-removal== 43452 (pos)
                    (not (Ba_not_msg_p6))

                    ; #66086: <==negation-removal== 53682 (pos)
                    (not (Ba_not_survivorat_s_p6))

                    ; #73927: <==negation-removal== 40461 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #87088: <==negation-removal== 73299 (pos)
                    (not (Pa_not_survivorat_s_p6))

                    ; #89227: <==negation-removal== 49890 (pos)
                    (not (not_msg_p6))

                    ; #89238: <==negation-removal== 81518 (pos)
                    (not (Bd_not_survivorat_s_p6))))

    (:action commsurvivor_p7_a_s
        :precondition (and (Pa_survivorat_s_p7)
                           (Ba_survivorat_s_p7)
                           (at_a_p7))
        :effect (and
                    ; #10194: <==closure== 25545 (pos)
                    (Pc_survivorat_s_p7)

                    ; #23990: <==commonly_known== 48220 (pos)
                    (Bb_msg_p7)

                    ; #25545: origin
                    (Bc_survivorat_s_p7)

                    ; #25695: <==closure== 98066 (pos)
                    (Pd_survivorat_s_p7)

                    ; #40348: origin
                    (Ba_survivorat_s_p7)

                    ; #46215: <==closure== 82593 (pos)
                    (Pb_survivorat_s_p7)

                    ; #48220: origin
                    (msg_p7)

                    ; #52401: <==commonly_known== 48220 (pos)
                    (Ba_msg_p7)

                    ; #56266: <==commonly_known== 48220 (pos)
                    (Bc_msg_p7)

                    ; #60768: <==closure== 40348 (pos)
                    (Pa_survivorat_s_p7)

                    ; #65459: <==closure== 23990 (pos)
                    (Pb_msg_p7)

                    ; #78299: <==closure== 78776 (pos)
                    (Pd_msg_p7)

                    ; #78776: <==commonly_known== 48220 (pos)
                    (Bd_msg_p7)

                    ; #82102: <==closure== 56266 (pos)
                    (Pc_msg_p7)

                    ; #82593: origin
                    (Bb_survivorat_s_p7)

                    ; #83885: <==closure== 52401 (pos)
                    (Pa_msg_p7)

                    ; #98066: origin
                    (Bd_survivorat_s_p7)

                    ; #13763: <==negation-removal== 25695 (pos)
                    (not (Bd_not_survivorat_s_p7))

                    ; #28056: <==negation-removal== 60768 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #28647: <==negation-removal== 40348 (pos)
                    (not (Pa_not_survivorat_s_p7))

                    ; #36099: <==negation-removal== 82102 (pos)
                    (not (Bc_not_msg_p7))

                    ; #43331: <==negation-removal== 78776 (pos)
                    (not (Pd_not_msg_p7))

                    ; #44767: <==negation-removal== 46215 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #67030: <==negation-removal== 83885 (pos)
                    (not (Ba_not_msg_p7))

                    ; #70748: <==negation-removal== 23990 (pos)
                    (not (Pb_not_msg_p7))

                    ; #72807: <==negation-removal== 82593 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #75903: <==negation-removal== 56266 (pos)
                    (not (Pc_not_msg_p7))

                    ; #77620: <==negation-removal== 52401 (pos)
                    (not (Pa_not_msg_p7))

                    ; #80185: <==negation-removal== 98066 (pos)
                    (not (Pd_not_survivorat_s_p7))

                    ; #80671: <==negation-removal== 48220 (pos)
                    (not (not_msg_p7))

                    ; #82987: <==negation-removal== 78299 (pos)
                    (not (Bd_not_msg_p7))

                    ; #87745: <==negation-removal== 10194 (pos)
                    (not (Bc_not_survivorat_s_p7))

                    ; #88172: <==negation-removal== 65459 (pos)
                    (not (Bb_not_msg_p7))

                    ; #91974: <==negation-removal== 25545 (pos)
                    (not (Pc_not_survivorat_s_p7))))

    (:action commsurvivor_p7_b_s
        :precondition (and (at_b_p7)
                           (Pb_survivorat_s_p7)
                           (Bb_survivorat_s_p7))
        :effect (and
                    ; #10194: <==closure== 25545 (pos)
                    (Pc_survivorat_s_p7)

                    ; #23990: <==commonly_known== 48220 (pos)
                    (Bb_msg_p7)

                    ; #25545: origin
                    (Bc_survivorat_s_p7)

                    ; #25695: <==closure== 98066 (pos)
                    (Pd_survivorat_s_p7)

                    ; #40348: origin
                    (Ba_survivorat_s_p7)

                    ; #46215: <==closure== 82593 (pos)
                    (Pb_survivorat_s_p7)

                    ; #48220: origin
                    (msg_p7)

                    ; #52401: <==commonly_known== 48220 (pos)
                    (Ba_msg_p7)

                    ; #56266: <==commonly_known== 48220 (pos)
                    (Bc_msg_p7)

                    ; #60768: <==closure== 40348 (pos)
                    (Pa_survivorat_s_p7)

                    ; #65459: <==closure== 23990 (pos)
                    (Pb_msg_p7)

                    ; #78299: <==closure== 78776 (pos)
                    (Pd_msg_p7)

                    ; #78776: <==commonly_known== 48220 (pos)
                    (Bd_msg_p7)

                    ; #82102: <==closure== 56266 (pos)
                    (Pc_msg_p7)

                    ; #82593: origin
                    (Bb_survivorat_s_p7)

                    ; #83885: <==closure== 52401 (pos)
                    (Pa_msg_p7)

                    ; #98066: origin
                    (Bd_survivorat_s_p7)

                    ; #13763: <==negation-removal== 25695 (pos)
                    (not (Bd_not_survivorat_s_p7))

                    ; #28056: <==negation-removal== 60768 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #28647: <==negation-removal== 40348 (pos)
                    (not (Pa_not_survivorat_s_p7))

                    ; #36099: <==negation-removal== 82102 (pos)
                    (not (Bc_not_msg_p7))

                    ; #43331: <==negation-removal== 78776 (pos)
                    (not (Pd_not_msg_p7))

                    ; #44767: <==negation-removal== 46215 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #67030: <==negation-removal== 83885 (pos)
                    (not (Ba_not_msg_p7))

                    ; #70748: <==negation-removal== 23990 (pos)
                    (not (Pb_not_msg_p7))

                    ; #72807: <==negation-removal== 82593 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #75903: <==negation-removal== 56266 (pos)
                    (not (Pc_not_msg_p7))

                    ; #77620: <==negation-removal== 52401 (pos)
                    (not (Pa_not_msg_p7))

                    ; #80185: <==negation-removal== 98066 (pos)
                    (not (Pd_not_survivorat_s_p7))

                    ; #80671: <==negation-removal== 48220 (pos)
                    (not (not_msg_p7))

                    ; #82987: <==negation-removal== 78299 (pos)
                    (not (Bd_not_msg_p7))

                    ; #87745: <==negation-removal== 10194 (pos)
                    (not (Bc_not_survivorat_s_p7))

                    ; #88172: <==negation-removal== 65459 (pos)
                    (not (Bb_not_msg_p7))

                    ; #91974: <==negation-removal== 25545 (pos)
                    (not (Pc_not_survivorat_s_p7))))

    (:action commsurvivor_p7_c_s
        :precondition (and (at_c_p7)
                           (Pc_survivorat_s_p7)
                           (Bc_survivorat_s_p7))
        :effect (and
                    ; #10194: <==closure== 25545 (pos)
                    (Pc_survivorat_s_p7)

                    ; #23990: <==commonly_known== 48220 (pos)
                    (Bb_msg_p7)

                    ; #25545: origin
                    (Bc_survivorat_s_p7)

                    ; #25695: <==closure== 98066 (pos)
                    (Pd_survivorat_s_p7)

                    ; #40348: origin
                    (Ba_survivorat_s_p7)

                    ; #46215: <==closure== 82593 (pos)
                    (Pb_survivorat_s_p7)

                    ; #48220: origin
                    (msg_p7)

                    ; #52401: <==commonly_known== 48220 (pos)
                    (Ba_msg_p7)

                    ; #56266: <==commonly_known== 48220 (pos)
                    (Bc_msg_p7)

                    ; #60768: <==closure== 40348 (pos)
                    (Pa_survivorat_s_p7)

                    ; #65459: <==closure== 23990 (pos)
                    (Pb_msg_p7)

                    ; #78299: <==closure== 78776 (pos)
                    (Pd_msg_p7)

                    ; #78776: <==commonly_known== 48220 (pos)
                    (Bd_msg_p7)

                    ; #82102: <==closure== 56266 (pos)
                    (Pc_msg_p7)

                    ; #82593: origin
                    (Bb_survivorat_s_p7)

                    ; #83885: <==closure== 52401 (pos)
                    (Pa_msg_p7)

                    ; #98066: origin
                    (Bd_survivorat_s_p7)

                    ; #13763: <==negation-removal== 25695 (pos)
                    (not (Bd_not_survivorat_s_p7))

                    ; #28056: <==negation-removal== 60768 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #28647: <==negation-removal== 40348 (pos)
                    (not (Pa_not_survivorat_s_p7))

                    ; #36099: <==negation-removal== 82102 (pos)
                    (not (Bc_not_msg_p7))

                    ; #43331: <==negation-removal== 78776 (pos)
                    (not (Pd_not_msg_p7))

                    ; #44767: <==negation-removal== 46215 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #67030: <==negation-removal== 83885 (pos)
                    (not (Ba_not_msg_p7))

                    ; #70748: <==negation-removal== 23990 (pos)
                    (not (Pb_not_msg_p7))

                    ; #72807: <==negation-removal== 82593 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #75903: <==negation-removal== 56266 (pos)
                    (not (Pc_not_msg_p7))

                    ; #77620: <==negation-removal== 52401 (pos)
                    (not (Pa_not_msg_p7))

                    ; #80185: <==negation-removal== 98066 (pos)
                    (not (Pd_not_survivorat_s_p7))

                    ; #80671: <==negation-removal== 48220 (pos)
                    (not (not_msg_p7))

                    ; #82987: <==negation-removal== 78299 (pos)
                    (not (Bd_not_msg_p7))

                    ; #87745: <==negation-removal== 10194 (pos)
                    (not (Bc_not_survivorat_s_p7))

                    ; #88172: <==negation-removal== 65459 (pos)
                    (not (Bb_not_msg_p7))

                    ; #91974: <==negation-removal== 25545 (pos)
                    (not (Pc_not_survivorat_s_p7))))

    (:action commsurvivor_p7_d_s
        :precondition (and (Bd_survivorat_s_p7)
                           (at_d_p7)
                           (Pd_survivorat_s_p7))
        :effect (and
                    ; #10194: <==closure== 25545 (pos)
                    (Pc_survivorat_s_p7)

                    ; #23990: <==commonly_known== 48220 (pos)
                    (Bb_msg_p7)

                    ; #25545: origin
                    (Bc_survivorat_s_p7)

                    ; #25695: <==closure== 98066 (pos)
                    (Pd_survivorat_s_p7)

                    ; #40348: origin
                    (Ba_survivorat_s_p7)

                    ; #46215: <==closure== 82593 (pos)
                    (Pb_survivorat_s_p7)

                    ; #48220: origin
                    (msg_p7)

                    ; #52401: <==commonly_known== 48220 (pos)
                    (Ba_msg_p7)

                    ; #56266: <==commonly_known== 48220 (pos)
                    (Bc_msg_p7)

                    ; #60768: <==closure== 40348 (pos)
                    (Pa_survivorat_s_p7)

                    ; #65459: <==closure== 23990 (pos)
                    (Pb_msg_p7)

                    ; #78299: <==closure== 78776 (pos)
                    (Pd_msg_p7)

                    ; #78776: <==commonly_known== 48220 (pos)
                    (Bd_msg_p7)

                    ; #82102: <==closure== 56266 (pos)
                    (Pc_msg_p7)

                    ; #82593: origin
                    (Bb_survivorat_s_p7)

                    ; #83885: <==closure== 52401 (pos)
                    (Pa_msg_p7)

                    ; #98066: origin
                    (Bd_survivorat_s_p7)

                    ; #13763: <==negation-removal== 25695 (pos)
                    (not (Bd_not_survivorat_s_p7))

                    ; #28056: <==negation-removal== 60768 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #28647: <==negation-removal== 40348 (pos)
                    (not (Pa_not_survivorat_s_p7))

                    ; #36099: <==negation-removal== 82102 (pos)
                    (not (Bc_not_msg_p7))

                    ; #43331: <==negation-removal== 78776 (pos)
                    (not (Pd_not_msg_p7))

                    ; #44767: <==negation-removal== 46215 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #67030: <==negation-removal== 83885 (pos)
                    (not (Ba_not_msg_p7))

                    ; #70748: <==negation-removal== 23990 (pos)
                    (not (Pb_not_msg_p7))

                    ; #72807: <==negation-removal== 82593 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #75903: <==negation-removal== 56266 (pos)
                    (not (Pc_not_msg_p7))

                    ; #77620: <==negation-removal== 52401 (pos)
                    (not (Pa_not_msg_p7))

                    ; #80185: <==negation-removal== 98066 (pos)
                    (not (Pd_not_survivorat_s_p7))

                    ; #80671: <==negation-removal== 48220 (pos)
                    (not (not_msg_p7))

                    ; #82987: <==negation-removal== 78299 (pos)
                    (not (Bd_not_msg_p7))

                    ; #87745: <==negation-removal== 10194 (pos)
                    (not (Bc_not_survivorat_s_p7))

                    ; #88172: <==negation-removal== 65459 (pos)
                    (not (Bb_not_msg_p7))

                    ; #91974: <==negation-removal== 25545 (pos)
                    (not (Pc_not_survivorat_s_p7))))

    (:action commsurvivor_p8_a_s
        :precondition (and (Pa_survivorat_s_p8)
                           (at_a_p8)
                           (Ba_survivorat_s_p8))
        :effect (and
                    ; #11240: <==closure== 65082 (pos)
                    (Pd_msg_p8)

                    ; #11660: <==closure== 75950 (pos)
                    (Pa_msg_p8)

                    ; #14662: <==closure== 75171 (pos)
                    (Pc_survivorat_s_p8)

                    ; #17753: <==commonly_known== 76323 (pos)
                    (Bc_msg_p8)

                    ; #31791: <==closure== 61393 (pos)
                    (Pb_msg_p8)

                    ; #32846: origin
                    (Ba_survivorat_s_p8)

                    ; #57391: <==closure== 63430 (pos)
                    (Pb_survivorat_s_p8)

                    ; #61010: <==closure== 67883 (pos)
                    (Pd_survivorat_s_p8)

                    ; #61393: <==commonly_known== 76323 (pos)
                    (Bb_msg_p8)

                    ; #63430: origin
                    (Bb_survivorat_s_p8)

                    ; #65082: <==commonly_known== 76323 (pos)
                    (Bd_msg_p8)

                    ; #67883: origin
                    (Bd_survivorat_s_p8)

                    ; #68328: <==closure== 32846 (pos)
                    (Pa_survivorat_s_p8)

                    ; #70466: <==closure== 17753 (pos)
                    (Pc_msg_p8)

                    ; #75171: origin
                    (Bc_survivorat_s_p8)

                    ; #75950: <==commonly_known== 76323 (pos)
                    (Ba_msg_p8)

                    ; #76323: origin
                    (msg_p8)

                    ; #10621: <==negation-removal== 11240 (pos)
                    (not (Bd_not_msg_p8))

                    ; #12649: <==negation-removal== 31791 (pos)
                    (not (Bb_not_msg_p8))

                    ; #21491: <==negation-removal== 61010 (pos)
                    (not (Bd_not_survivorat_s_p8))

                    ; #22958: <==negation-removal== 57391 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #27684: <==negation-removal== 75171 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #29159: <==negation-removal== 14662 (pos)
                    (not (Bc_not_survivorat_s_p8))

                    ; #29592: <==negation-removal== 68328 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #30182: <==negation-removal== 65082 (pos)
                    (not (Pd_not_msg_p8))

                    ; #37219: <==negation-removal== 76323 (pos)
                    (not (not_msg_p8))

                    ; #38861: <==negation-removal== 61393 (pos)
                    (not (Pb_not_msg_p8))

                    ; #39460: <==negation-removal== 70466 (pos)
                    (not (Bc_not_msg_p8))

                    ; #42549: <==negation-removal== 75950 (pos)
                    (not (Pa_not_msg_p8))

                    ; #49708: <==negation-removal== 63430 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #54038: <==negation-removal== 17753 (pos)
                    (not (Pc_not_msg_p8))

                    ; #76329: <==negation-removal== 67883 (pos)
                    (not (Pd_not_survivorat_s_p8))

                    ; #83093: <==negation-removal== 11660 (pos)
                    (not (Ba_not_msg_p8))

                    ; #84474: <==negation-removal== 32846 (pos)
                    (not (Pa_not_survivorat_s_p8))))

    (:action commsurvivor_p8_b_s
        :precondition (and (Bb_survivorat_s_p8)
                           (Pb_survivorat_s_p8)
                           (at_b_p8))
        :effect (and
                    ; #11240: <==closure== 65082 (pos)
                    (Pd_msg_p8)

                    ; #11660: <==closure== 75950 (pos)
                    (Pa_msg_p8)

                    ; #14662: <==closure== 75171 (pos)
                    (Pc_survivorat_s_p8)

                    ; #17753: <==commonly_known== 76323 (pos)
                    (Bc_msg_p8)

                    ; #31791: <==closure== 61393 (pos)
                    (Pb_msg_p8)

                    ; #32846: origin
                    (Ba_survivorat_s_p8)

                    ; #57391: <==closure== 63430 (pos)
                    (Pb_survivorat_s_p8)

                    ; #61010: <==closure== 67883 (pos)
                    (Pd_survivorat_s_p8)

                    ; #61393: <==commonly_known== 76323 (pos)
                    (Bb_msg_p8)

                    ; #63430: origin
                    (Bb_survivorat_s_p8)

                    ; #65082: <==commonly_known== 76323 (pos)
                    (Bd_msg_p8)

                    ; #67883: origin
                    (Bd_survivorat_s_p8)

                    ; #68328: <==closure== 32846 (pos)
                    (Pa_survivorat_s_p8)

                    ; #70466: <==closure== 17753 (pos)
                    (Pc_msg_p8)

                    ; #75171: origin
                    (Bc_survivorat_s_p8)

                    ; #75950: <==commonly_known== 76323 (pos)
                    (Ba_msg_p8)

                    ; #76323: origin
                    (msg_p8)

                    ; #10621: <==negation-removal== 11240 (pos)
                    (not (Bd_not_msg_p8))

                    ; #12649: <==negation-removal== 31791 (pos)
                    (not (Bb_not_msg_p8))

                    ; #21491: <==negation-removal== 61010 (pos)
                    (not (Bd_not_survivorat_s_p8))

                    ; #22958: <==negation-removal== 57391 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #27684: <==negation-removal== 75171 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #29159: <==negation-removal== 14662 (pos)
                    (not (Bc_not_survivorat_s_p8))

                    ; #29592: <==negation-removal== 68328 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #30182: <==negation-removal== 65082 (pos)
                    (not (Pd_not_msg_p8))

                    ; #37219: <==negation-removal== 76323 (pos)
                    (not (not_msg_p8))

                    ; #38861: <==negation-removal== 61393 (pos)
                    (not (Pb_not_msg_p8))

                    ; #39460: <==negation-removal== 70466 (pos)
                    (not (Bc_not_msg_p8))

                    ; #42549: <==negation-removal== 75950 (pos)
                    (not (Pa_not_msg_p8))

                    ; #49708: <==negation-removal== 63430 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #54038: <==negation-removal== 17753 (pos)
                    (not (Pc_not_msg_p8))

                    ; #76329: <==negation-removal== 67883 (pos)
                    (not (Pd_not_survivorat_s_p8))

                    ; #83093: <==negation-removal== 11660 (pos)
                    (not (Ba_not_msg_p8))

                    ; #84474: <==negation-removal== 32846 (pos)
                    (not (Pa_not_survivorat_s_p8))))

    (:action commsurvivor_p8_c_s
        :precondition (and (Pc_survivorat_s_p8)
                           (at_c_p8)
                           (Bc_survivorat_s_p8))
        :effect (and
                    ; #11240: <==closure== 65082 (pos)
                    (Pd_msg_p8)

                    ; #11660: <==closure== 75950 (pos)
                    (Pa_msg_p8)

                    ; #14662: <==closure== 75171 (pos)
                    (Pc_survivorat_s_p8)

                    ; #17753: <==commonly_known== 76323 (pos)
                    (Bc_msg_p8)

                    ; #31791: <==closure== 61393 (pos)
                    (Pb_msg_p8)

                    ; #32846: origin
                    (Ba_survivorat_s_p8)

                    ; #57391: <==closure== 63430 (pos)
                    (Pb_survivorat_s_p8)

                    ; #61010: <==closure== 67883 (pos)
                    (Pd_survivorat_s_p8)

                    ; #61393: <==commonly_known== 76323 (pos)
                    (Bb_msg_p8)

                    ; #63430: origin
                    (Bb_survivorat_s_p8)

                    ; #65082: <==commonly_known== 76323 (pos)
                    (Bd_msg_p8)

                    ; #67883: origin
                    (Bd_survivorat_s_p8)

                    ; #68328: <==closure== 32846 (pos)
                    (Pa_survivorat_s_p8)

                    ; #70466: <==closure== 17753 (pos)
                    (Pc_msg_p8)

                    ; #75171: origin
                    (Bc_survivorat_s_p8)

                    ; #75950: <==commonly_known== 76323 (pos)
                    (Ba_msg_p8)

                    ; #76323: origin
                    (msg_p8)

                    ; #10621: <==negation-removal== 11240 (pos)
                    (not (Bd_not_msg_p8))

                    ; #12649: <==negation-removal== 31791 (pos)
                    (not (Bb_not_msg_p8))

                    ; #21491: <==negation-removal== 61010 (pos)
                    (not (Bd_not_survivorat_s_p8))

                    ; #22958: <==negation-removal== 57391 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #27684: <==negation-removal== 75171 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #29159: <==negation-removal== 14662 (pos)
                    (not (Bc_not_survivorat_s_p8))

                    ; #29592: <==negation-removal== 68328 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #30182: <==negation-removal== 65082 (pos)
                    (not (Pd_not_msg_p8))

                    ; #37219: <==negation-removal== 76323 (pos)
                    (not (not_msg_p8))

                    ; #38861: <==negation-removal== 61393 (pos)
                    (not (Pb_not_msg_p8))

                    ; #39460: <==negation-removal== 70466 (pos)
                    (not (Bc_not_msg_p8))

                    ; #42549: <==negation-removal== 75950 (pos)
                    (not (Pa_not_msg_p8))

                    ; #49708: <==negation-removal== 63430 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #54038: <==negation-removal== 17753 (pos)
                    (not (Pc_not_msg_p8))

                    ; #76329: <==negation-removal== 67883 (pos)
                    (not (Pd_not_survivorat_s_p8))

                    ; #83093: <==negation-removal== 11660 (pos)
                    (not (Ba_not_msg_p8))

                    ; #84474: <==negation-removal== 32846 (pos)
                    (not (Pa_not_survivorat_s_p8))))

    (:action commsurvivor_p8_d_s
        :precondition (and (Bd_survivorat_s_p8)
                           (at_d_p8)
                           (Pd_survivorat_s_p8))
        :effect (and
                    ; #11240: <==closure== 65082 (pos)
                    (Pd_msg_p8)

                    ; #11660: <==closure== 75950 (pos)
                    (Pa_msg_p8)

                    ; #14662: <==closure== 75171 (pos)
                    (Pc_survivorat_s_p8)

                    ; #17753: <==commonly_known== 76323 (pos)
                    (Bc_msg_p8)

                    ; #31791: <==closure== 61393 (pos)
                    (Pb_msg_p8)

                    ; #32846: origin
                    (Ba_survivorat_s_p8)

                    ; #57391: <==closure== 63430 (pos)
                    (Pb_survivorat_s_p8)

                    ; #61010: <==closure== 67883 (pos)
                    (Pd_survivorat_s_p8)

                    ; #61393: <==commonly_known== 76323 (pos)
                    (Bb_msg_p8)

                    ; #63430: origin
                    (Bb_survivorat_s_p8)

                    ; #65082: <==commonly_known== 76323 (pos)
                    (Bd_msg_p8)

                    ; #67883: origin
                    (Bd_survivorat_s_p8)

                    ; #68328: <==closure== 32846 (pos)
                    (Pa_survivorat_s_p8)

                    ; #70466: <==closure== 17753 (pos)
                    (Pc_msg_p8)

                    ; #75171: origin
                    (Bc_survivorat_s_p8)

                    ; #75950: <==commonly_known== 76323 (pos)
                    (Ba_msg_p8)

                    ; #76323: origin
                    (msg_p8)

                    ; #10621: <==negation-removal== 11240 (pos)
                    (not (Bd_not_msg_p8))

                    ; #12649: <==negation-removal== 31791 (pos)
                    (not (Bb_not_msg_p8))

                    ; #21491: <==negation-removal== 61010 (pos)
                    (not (Bd_not_survivorat_s_p8))

                    ; #22958: <==negation-removal== 57391 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #27684: <==negation-removal== 75171 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #29159: <==negation-removal== 14662 (pos)
                    (not (Bc_not_survivorat_s_p8))

                    ; #29592: <==negation-removal== 68328 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #30182: <==negation-removal== 65082 (pos)
                    (not (Pd_not_msg_p8))

                    ; #37219: <==negation-removal== 76323 (pos)
                    (not (not_msg_p8))

                    ; #38861: <==negation-removal== 61393 (pos)
                    (not (Pb_not_msg_p8))

                    ; #39460: <==negation-removal== 70466 (pos)
                    (not (Bc_not_msg_p8))

                    ; #42549: <==negation-removal== 75950 (pos)
                    (not (Pa_not_msg_p8))

                    ; #49708: <==negation-removal== 63430 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #54038: <==negation-removal== 17753 (pos)
                    (not (Pc_not_msg_p8))

                    ; #76329: <==negation-removal== 67883 (pos)
                    (not (Pd_not_survivorat_s_p8))

                    ; #83093: <==negation-removal== 11660 (pos)
                    (not (Ba_not_msg_p8))

                    ; #84474: <==negation-removal== 32846 (pos)
                    (not (Pa_not_survivorat_s_p8))))

    (:action commsurvivor_p9_a_s
        :precondition (and (Pa_survivorat_s_p9)
                           (Ba_survivorat_s_p9)
                           (at_a_p9))
        :effect (and
                    ; #11129: origin
                    (msg_p9)

                    ; #18064: <==commonly_known== 11129 (pos)
                    (Bb_msg_p9)

                    ; #19919: <==closure== 70782 (pos)
                    (Pa_survivorat_s_p9)

                    ; #26227: <==closure== 42272 (pos)
                    (Pc_msg_p9)

                    ; #29346: <==commonly_known== 11129 (pos)
                    (Bd_msg_p9)

                    ; #31306: <==closure== 58223 (pos)
                    (Pd_survivorat_s_p9)

                    ; #32411: origin
                    (Bb_survivorat_s_p9)

                    ; #33871: <==closure== 29346 (pos)
                    (Pd_msg_p9)

                    ; #38213: <==closure== 66123 (pos)
                    (Pa_msg_p9)

                    ; #42272: <==commonly_known== 11129 (pos)
                    (Bc_msg_p9)

                    ; #58223: origin
                    (Bd_survivorat_s_p9)

                    ; #66123: <==commonly_known== 11129 (pos)
                    (Ba_msg_p9)

                    ; #66431: <==closure== 90131 (pos)
                    (Pc_survivorat_s_p9)

                    ; #70782: origin
                    (Ba_survivorat_s_p9)

                    ; #71129: <==closure== 32411 (pos)
                    (Pb_survivorat_s_p9)

                    ; #87407: <==closure== 18064 (pos)
                    (Pb_msg_p9)

                    ; #90131: origin
                    (Bc_survivorat_s_p9)

                    ; #11530: <==negation-removal== 66431 (pos)
                    (not (Bc_not_survivorat_s_p9))

                    ; #21069: <==negation-removal== 29346 (pos)
                    (not (Pd_not_msg_p9))

                    ; #23201: <==negation-removal== 38213 (pos)
                    (not (Ba_not_msg_p9))

                    ; #25133: <==negation-removal== 33871 (pos)
                    (not (Bd_not_msg_p9))

                    ; #35694: <==negation-removal== 70782 (pos)
                    (not (Pa_not_survivorat_s_p9))

                    ; #39415: <==negation-removal== 42272 (pos)
                    (not (Pc_not_msg_p9))

                    ; #41897: <==negation-removal== 66123 (pos)
                    (not (Pa_not_msg_p9))

                    ; #43000: <==negation-removal== 58223 (pos)
                    (not (Pd_not_survivorat_s_p9))

                    ; #50668: <==negation-removal== 11129 (pos)
                    (not (not_msg_p9))

                    ; #51518: <==negation-removal== 87407 (pos)
                    (not (Bb_not_msg_p9))

                    ; #66956: <==negation-removal== 32411 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #68308: <==negation-removal== 26227 (pos)
                    (not (Bc_not_msg_p9))

                    ; #68725: <==negation-removal== 71129 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #74643: <==negation-removal== 18064 (pos)
                    (not (Pb_not_msg_p9))

                    ; #77839: <==negation-removal== 90131 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #82464: <==negation-removal== 31306 (pos)
                    (not (Bd_not_survivorat_s_p9))

                    ; #85947: <==negation-removal== 19919 (pos)
                    (not (Ba_not_survivorat_s_p9))))

    (:action commsurvivor_p9_b_s
        :precondition (and (Pb_survivorat_s_p9)
                           (Bb_survivorat_s_p9)
                           (at_b_p9))
        :effect (and
                    ; #11129: origin
                    (msg_p9)

                    ; #18064: <==commonly_known== 11129 (pos)
                    (Bb_msg_p9)

                    ; #19919: <==closure== 70782 (pos)
                    (Pa_survivorat_s_p9)

                    ; #26227: <==closure== 42272 (pos)
                    (Pc_msg_p9)

                    ; #29346: <==commonly_known== 11129 (pos)
                    (Bd_msg_p9)

                    ; #31306: <==closure== 58223 (pos)
                    (Pd_survivorat_s_p9)

                    ; #32411: origin
                    (Bb_survivorat_s_p9)

                    ; #33871: <==closure== 29346 (pos)
                    (Pd_msg_p9)

                    ; #38213: <==closure== 66123 (pos)
                    (Pa_msg_p9)

                    ; #42272: <==commonly_known== 11129 (pos)
                    (Bc_msg_p9)

                    ; #58223: origin
                    (Bd_survivorat_s_p9)

                    ; #66123: <==commonly_known== 11129 (pos)
                    (Ba_msg_p9)

                    ; #66431: <==closure== 90131 (pos)
                    (Pc_survivorat_s_p9)

                    ; #70782: origin
                    (Ba_survivorat_s_p9)

                    ; #71129: <==closure== 32411 (pos)
                    (Pb_survivorat_s_p9)

                    ; #87407: <==closure== 18064 (pos)
                    (Pb_msg_p9)

                    ; #90131: origin
                    (Bc_survivorat_s_p9)

                    ; #11530: <==negation-removal== 66431 (pos)
                    (not (Bc_not_survivorat_s_p9))

                    ; #21069: <==negation-removal== 29346 (pos)
                    (not (Pd_not_msg_p9))

                    ; #23201: <==negation-removal== 38213 (pos)
                    (not (Ba_not_msg_p9))

                    ; #25133: <==negation-removal== 33871 (pos)
                    (not (Bd_not_msg_p9))

                    ; #35694: <==negation-removal== 70782 (pos)
                    (not (Pa_not_survivorat_s_p9))

                    ; #39415: <==negation-removal== 42272 (pos)
                    (not (Pc_not_msg_p9))

                    ; #41897: <==negation-removal== 66123 (pos)
                    (not (Pa_not_msg_p9))

                    ; #43000: <==negation-removal== 58223 (pos)
                    (not (Pd_not_survivorat_s_p9))

                    ; #50668: <==negation-removal== 11129 (pos)
                    (not (not_msg_p9))

                    ; #51518: <==negation-removal== 87407 (pos)
                    (not (Bb_not_msg_p9))

                    ; #66956: <==negation-removal== 32411 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #68308: <==negation-removal== 26227 (pos)
                    (not (Bc_not_msg_p9))

                    ; #68725: <==negation-removal== 71129 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #74643: <==negation-removal== 18064 (pos)
                    (not (Pb_not_msg_p9))

                    ; #77839: <==negation-removal== 90131 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #82464: <==negation-removal== 31306 (pos)
                    (not (Bd_not_survivorat_s_p9))

                    ; #85947: <==negation-removal== 19919 (pos)
                    (not (Ba_not_survivorat_s_p9))))

    (:action commsurvivor_p9_c_s
        :precondition (and (Bc_survivorat_s_p9)
                           (Pc_survivorat_s_p9)
                           (at_c_p9))
        :effect (and
                    ; #11129: origin
                    (msg_p9)

                    ; #18064: <==commonly_known== 11129 (pos)
                    (Bb_msg_p9)

                    ; #19919: <==closure== 70782 (pos)
                    (Pa_survivorat_s_p9)

                    ; #26227: <==closure== 42272 (pos)
                    (Pc_msg_p9)

                    ; #29346: <==commonly_known== 11129 (pos)
                    (Bd_msg_p9)

                    ; #31306: <==closure== 58223 (pos)
                    (Pd_survivorat_s_p9)

                    ; #32411: origin
                    (Bb_survivorat_s_p9)

                    ; #33871: <==closure== 29346 (pos)
                    (Pd_msg_p9)

                    ; #38213: <==closure== 66123 (pos)
                    (Pa_msg_p9)

                    ; #42272: <==commonly_known== 11129 (pos)
                    (Bc_msg_p9)

                    ; #58223: origin
                    (Bd_survivorat_s_p9)

                    ; #66123: <==commonly_known== 11129 (pos)
                    (Ba_msg_p9)

                    ; #66431: <==closure== 90131 (pos)
                    (Pc_survivorat_s_p9)

                    ; #70782: origin
                    (Ba_survivorat_s_p9)

                    ; #71129: <==closure== 32411 (pos)
                    (Pb_survivorat_s_p9)

                    ; #87407: <==closure== 18064 (pos)
                    (Pb_msg_p9)

                    ; #90131: origin
                    (Bc_survivorat_s_p9)

                    ; #11530: <==negation-removal== 66431 (pos)
                    (not (Bc_not_survivorat_s_p9))

                    ; #21069: <==negation-removal== 29346 (pos)
                    (not (Pd_not_msg_p9))

                    ; #23201: <==negation-removal== 38213 (pos)
                    (not (Ba_not_msg_p9))

                    ; #25133: <==negation-removal== 33871 (pos)
                    (not (Bd_not_msg_p9))

                    ; #35694: <==negation-removal== 70782 (pos)
                    (not (Pa_not_survivorat_s_p9))

                    ; #39415: <==negation-removal== 42272 (pos)
                    (not (Pc_not_msg_p9))

                    ; #41897: <==negation-removal== 66123 (pos)
                    (not (Pa_not_msg_p9))

                    ; #43000: <==negation-removal== 58223 (pos)
                    (not (Pd_not_survivorat_s_p9))

                    ; #50668: <==negation-removal== 11129 (pos)
                    (not (not_msg_p9))

                    ; #51518: <==negation-removal== 87407 (pos)
                    (not (Bb_not_msg_p9))

                    ; #66956: <==negation-removal== 32411 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #68308: <==negation-removal== 26227 (pos)
                    (not (Bc_not_msg_p9))

                    ; #68725: <==negation-removal== 71129 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #74643: <==negation-removal== 18064 (pos)
                    (not (Pb_not_msg_p9))

                    ; #77839: <==negation-removal== 90131 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #82464: <==negation-removal== 31306 (pos)
                    (not (Bd_not_survivorat_s_p9))

                    ; #85947: <==negation-removal== 19919 (pos)
                    (not (Ba_not_survivorat_s_p9))))

    (:action commsurvivor_p9_d_s
        :precondition (and (at_d_p9)
                           (Bd_survivorat_s_p9)
                           (Pd_survivorat_s_p9))
        :effect (and
                    ; #11129: origin
                    (msg_p9)

                    ; #18064: <==commonly_known== 11129 (pos)
                    (Bb_msg_p9)

                    ; #19919: <==closure== 70782 (pos)
                    (Pa_survivorat_s_p9)

                    ; #26227: <==closure== 42272 (pos)
                    (Pc_msg_p9)

                    ; #29346: <==commonly_known== 11129 (pos)
                    (Bd_msg_p9)

                    ; #31306: <==closure== 58223 (pos)
                    (Pd_survivorat_s_p9)

                    ; #32411: origin
                    (Bb_survivorat_s_p9)

                    ; #33871: <==closure== 29346 (pos)
                    (Pd_msg_p9)

                    ; #38213: <==closure== 66123 (pos)
                    (Pa_msg_p9)

                    ; #42272: <==commonly_known== 11129 (pos)
                    (Bc_msg_p9)

                    ; #58223: origin
                    (Bd_survivorat_s_p9)

                    ; #66123: <==commonly_known== 11129 (pos)
                    (Ba_msg_p9)

                    ; #66431: <==closure== 90131 (pos)
                    (Pc_survivorat_s_p9)

                    ; #70782: origin
                    (Ba_survivorat_s_p9)

                    ; #71129: <==closure== 32411 (pos)
                    (Pb_survivorat_s_p9)

                    ; #87407: <==closure== 18064 (pos)
                    (Pb_msg_p9)

                    ; #90131: origin
                    (Bc_survivorat_s_p9)

                    ; #11530: <==negation-removal== 66431 (pos)
                    (not (Bc_not_survivorat_s_p9))

                    ; #21069: <==negation-removal== 29346 (pos)
                    (not (Pd_not_msg_p9))

                    ; #23201: <==negation-removal== 38213 (pos)
                    (not (Ba_not_msg_p9))

                    ; #25133: <==negation-removal== 33871 (pos)
                    (not (Bd_not_msg_p9))

                    ; #35694: <==negation-removal== 70782 (pos)
                    (not (Pa_not_survivorat_s_p9))

                    ; #39415: <==negation-removal== 42272 (pos)
                    (not (Pc_not_msg_p9))

                    ; #41897: <==negation-removal== 66123 (pos)
                    (not (Pa_not_msg_p9))

                    ; #43000: <==negation-removal== 58223 (pos)
                    (not (Pd_not_survivorat_s_p9))

                    ; #50668: <==negation-removal== 11129 (pos)
                    (not (not_msg_p9))

                    ; #51518: <==negation-removal== 87407 (pos)
                    (not (Bb_not_msg_p9))

                    ; #66956: <==negation-removal== 32411 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #68308: <==negation-removal== 26227 (pos)
                    (not (Bc_not_msg_p9))

                    ; #68725: <==negation-removal== 71129 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #74643: <==negation-removal== 18064 (pos)
                    (not (Pb_not_msg_p9))

                    ; #77839: <==negation-removal== 90131 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #82464: <==negation-removal== 31306 (pos)
                    (not (Bd_not_survivorat_s_p9))

                    ; #85947: <==negation-removal== 19919 (pos)
                    (not (Ba_not_survivorat_s_p9))))

    (:action communcells_p0011_p0011_a
        :precondition (and (checked_p0011)
                           (at_a_p0011)
                           (succ_p0011_p0011)
                           (Ba_not_blocked_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p0011_p0011_b
        :precondition (and (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (at_b_p0011)
                           (checked_p0011)
                           (succ_p0011_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p0011_p0011_c
        :precondition (and (Bc_not_blocked_p0011)
                           (checked_p0011)
                           (at_c_p0011)
                           (succ_p0011_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p0011_p0011_d
        :precondition (and (Bd_not_blocked_p0011)
                           (checked_p0011)
                           (Pd_not_blocked_p0011)
                           (at_d_p0011)
                           (succ_p0011_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p0011_p012_a
        :precondition (and (checked_p012)
                           (succ_p0011_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (at_a_p0011))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p0011_p012_b
        :precondition (and (Bb_not_blocked_p012)
                           (succ_p0011_p012)
                           (checked_p012)
                           (at_b_p0011)
                           (Pb_not_blocked_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p0011_p012_c
        :precondition (and (checked_p012)
                           (succ_p0011_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (at_c_p0011))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p0011_p012_d
        :precondition (and (checked_p012)
                           (succ_p0011_p012)
                           (Bd_not_blocked_p012)
                           (Pd_not_blocked_p012)
                           (at_d_p0011))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p0011_p10_a
        :precondition (and (checked_p10)
                           (Ba_not_blocked_p10)
                           (at_a_p0011)
                           (Pa_not_blocked_p10)
                           (succ_p0011_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p0011_p10_b
        :precondition (and (checked_p10)
                           (Pb_not_blocked_p10)
                           (at_b_p0011)
                           (Bb_not_blocked_p10)
                           (succ_p0011_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p0011_p10_c
        :precondition (and (checked_p10)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10)
                           (at_c_p0011)
                           (succ_p0011_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p0011_p10_d
        :precondition (and (checked_p10)
                           (Bd_not_blocked_p10)
                           (Pd_not_blocked_p10)
                           (succ_p0011_p10)
                           (at_d_p0011))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p0011_p1_a
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (succ_p0011_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p0011))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p0011_p1_b
        :precondition (and (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (succ_p0011_p1)
                           (at_b_p0011))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p0011_p1_c
        :precondition (and (Pc_not_blocked_p1)
                           (checked_p1)
                           (succ_p0011_p1)
                           (Bc_not_blocked_p1)
                           (at_c_p0011))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p0011_p1_d
        :precondition (and (checked_p1)
                           (Pd_not_blocked_p1)
                           (succ_p0011_p1)
                           (Bd_not_blocked_p1)
                           (at_d_p0011))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p0011_p2_a
        :precondition (and (checked_p2)
                           (succ_p0011_p2)
                           (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p0011))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p0011_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (succ_p0011_p2)
                           (at_b_p0011)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p0011_p2_c
        :precondition (and (Pc_not_blocked_p2)
                           (checked_p2)
                           (succ_p0011_p2)
                           (at_c_p0011)
                           (Bc_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p0011_p2_d
        :precondition (and (checked_p2)
                           (succ_p0011_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p0011)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p0011_p3_a
        :precondition (and (Ba_not_blocked_p3)
                           (succ_p0011_p3)
                           (checked_p3)
                           (at_a_p0011)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p0011_p3_b
        :precondition (and (checked_p3)
                           (succ_p0011_p3)
                           (Pb_not_blocked_p3)
                           (at_b_p0011)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p0011_p3_c
        :precondition (and (succ_p0011_p3)
                           (checked_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p0011)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p0011_p3_d
        :precondition (and (Pd_not_blocked_p3)
                           (succ_p0011_p3)
                           (checked_p3)
                           (at_d_p0011)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p0011_p4_a
        :precondition (and (succ_p0011_p4)
                           (checked_p4)
                           (at_a_p0011)
                           (Ba_not_blocked_p4)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p0011_p4_b
        :precondition (and (Bb_not_blocked_p4)
                           (at_b_p0011)
                           (succ_p0011_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p0011_p4_c
        :precondition (and (Pc_not_blocked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p0011)
                           (succ_p0011_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p0011_p4_d
        :precondition (and (Pd_not_blocked_p4)
                           (succ_p0011_p4)
                           (Bd_not_blocked_p4)
                           (at_d_p0011)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p0011_p5_a
        :precondition (and (Ba_not_blocked_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (succ_p0011_p5)
                           (at_a_p0011))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p0011_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p0011)
                           (succ_p0011_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p0011_p5_c
        :precondition (and (Pc_not_blocked_p5)
                           (checked_p5)
                           (at_c_p0011)
                           (succ_p0011_p5)
                           (Bc_not_blocked_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p0011_p5_d
        :precondition (and (checked_p5)
                           (Bd_not_blocked_p5)
                           (succ_p0011_p5)
                           (at_d_p0011)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p0011_p6_a
        :precondition (and (Pa_not_blocked_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (succ_p0011_p6)
                           (at_a_p0011))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p0011_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (succ_p0011_p6)
                           (at_b_p0011))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p0011_p6_c
        :precondition (and (checked_p6)
                           (succ_p0011_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p0011)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p0011_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (checked_p6)
                           (succ_p0011_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p0011))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p0011_p7_a
        :precondition (and (checked_p7)
                           (succ_p0011_p7)
                           (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p0011))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p0011_p7_b
        :precondition (and (checked_p7)
                           (succ_p0011_p7)
                           (at_b_p0011)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p0011_p7_c
        :precondition (and (checked_p7)
                           (succ_p0011_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p0011)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p0011_p7_d
        :precondition (and (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (succ_p0011_p7)
                           (at_d_p0011))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p0011_p8_a
        :precondition (and (succ_p0011_p8)
                           (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (at_a_p0011))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p0011_p8_b
        :precondition (and (Pb_not_blocked_p8)
                           (succ_p0011_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8)
                           (at_b_p0011))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p0011_p8_c
        :precondition (and (succ_p0011_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p0011)
                           (Bc_not_blocked_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p0011_p8_d
        :precondition (and (succ_p0011_p8)
                           (Pd_not_blocked_p8)
                           (checked_p8)
                           (Bd_not_blocked_p8)
                           (at_d_p0011))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p0011_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p0011_p9)
                           (at_a_p0011))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p0011_p9_b
        :precondition (and (checked_p9)
                           (succ_p0011_p9)
                           (Bb_not_blocked_p9)
                           (at_b_p0011)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p0011_p9_c
        :precondition (and (checked_p9)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p0011)
                           (succ_p0011_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p0011_p9_d
        :precondition (and (checked_p9)
                           (at_d_p0011)
                           (succ_p0011_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p012_p0011_a
        :precondition (and (succ_p012_p0011)
                           (checked_p0011)
                           (at_a_p012)
                           (Pa_not_blocked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p012_p0011_b
        :precondition (and (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (succ_p012_p0011)
                           (at_b_p012)
                           (checked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p012_p0011_c
        :precondition (and (Bc_not_blocked_p0011)
                           (succ_p012_p0011)
                           (checked_p0011)
                           (at_c_p012)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p012_p0011_d
        :precondition (and (succ_p012_p0011)
                           (Bd_not_blocked_p0011)
                           (checked_p0011)
                           (Pd_not_blocked_p0011)
                           (at_d_p012))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p012_p012_a
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (succ_p012_p012)
                           (at_a_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p012_p012_b
        :precondition (and (Bb_not_blocked_p012)
                           (checked_p012)
                           (Pb_not_blocked_p012)
                           (at_b_p012)
                           (succ_p012_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p012_p012_c
        :precondition (and (checked_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (succ_p012_p012)
                           (at_c_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p012_p012_d
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (succ_p012_p012)
                           (Pd_not_blocked_p012)
                           (at_d_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p012_p10_a
        :precondition (and (checked_p10)
                           (succ_p012_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (at_a_p012))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p012_p10_b
        :precondition (and (checked_p10)
                           (Pb_not_blocked_p10)
                           (at_b_p012)
                           (succ_p012_p10)
                           (Bb_not_blocked_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p012_p10_c
        :precondition (and (checked_p10)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10)
                           (succ_p012_p10)
                           (at_c_p012))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p012_p10_d
        :precondition (and (checked_p10)
                           (succ_p012_p10)
                           (Bd_not_blocked_p10)
                           (Pd_not_blocked_p10)
                           (at_d_p012))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p012_p1_a
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (succ_p012_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p012))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p012_p1_b
        :precondition (and (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (succ_p012_p1)
                           (at_b_p012))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p012_p1_c
        :precondition (and (checked_p1)
                           (succ_p012_p1)
                           (Pc_not_blocked_p1)
                           (at_c_p012)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p012_p1_d
        :precondition (and (checked_p1)
                           (Pd_not_blocked_p1)
                           (succ_p012_p1)
                           (Bd_not_blocked_p1)
                           (at_d_p012))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p012_p2_a
        :precondition (and (Ba_not_blocked_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2)
                           (succ_p012_p2)
                           (at_a_p012))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p012_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p012)
                           (succ_p012_p2)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p012_p2_c
        :precondition (and (Pc_not_blocked_p2)
                           (checked_p2)
                           (succ_p012_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p012))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p012_p2_d
        :precondition (and (checked_p2)
                           (succ_p012_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p012))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p012_p3_a
        :precondition (and (Ba_not_blocked_p3)
                           (checked_p3)
                           (at_a_p012)
                           (Pa_not_blocked_p3)
                           (succ_p012_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p012_p3_b
        :precondition (and (checked_p3)
                           (Pb_not_blocked_p3)
                           (at_b_p012)
                           (succ_p012_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p012_p3_c
        :precondition (and (checked_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p012)
                           (Bc_not_blocked_p3)
                           (succ_p012_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p012_p3_d
        :precondition (and (Pd_not_blocked_p3)
                           (checked_p3)
                           (at_d_p012)
                           (Bd_not_blocked_p3)
                           (succ_p012_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p012_p4_a
        :precondition (and (succ_p012_p4)
                           (at_a_p012)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p012_p4_b
        :precondition (and (Bb_not_blocked_p4)
                           (succ_p012_p4)
                           (at_b_p012)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p012_p4_c
        :precondition (and (succ_p012_p4)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p012)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p012_p4_d
        :precondition (and (succ_p012_p4)
                           (Pd_not_blocked_p4)
                           (Bd_not_blocked_p4)
                           (checked_p4)
                           (at_d_p012))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p012_p5_a
        :precondition (and (succ_p012_p5)
                           (Ba_not_blocked_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p012))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p012_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (succ_p012_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p012))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p012_p5_c
        :precondition (and (succ_p012_p5)
                           (Pc_not_blocked_p5)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (at_c_p012))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p012_p5_d
        :precondition (and (succ_p012_p5)
                           (checked_p5)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (at_d_p012))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p012_p6_a
        :precondition (and (Pa_not_blocked_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p012)
                           (succ_p012_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p012_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p012)
                           (succ_p012_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p012_p6_c
        :precondition (and (checked_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p012)
                           (succ_p012_p6)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p012_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (succ_p012_p6)
                           (at_d_p012))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p012_p7_a
        :precondition (and (checked_p7)
                           (succ_p012_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p012))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p012_p7_b
        :precondition (and (checked_p7)
                           (succ_p012_p7)
                           (at_b_p012)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p012_p7_c
        :precondition (and (checked_p7)
                           (succ_p012_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p012)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p012_p7_d
        :precondition (and (Bd_not_blocked_p7)
                           (checked_p7)
                           (succ_p012_p7)
                           (Pd_not_blocked_p7)
                           (at_d_p012))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p012_p8_a
        :precondition (and (succ_p012_p8)
                           (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (at_a_p012))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p012_p8_b
        :precondition (and (succ_p012_p8)
                           (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p012)
                           (checked_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p012_p8_c
        :precondition (and (succ_p012_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p012)
                           (Bc_not_blocked_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p012_p8_d
        :precondition (and (succ_p012_p8)
                           (Pd_not_blocked_p8)
                           (checked_p8)
                           (Bd_not_blocked_p8)
                           (at_d_p012))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p012_p9_a
        :precondition (and (succ_p012_p9)
                           (Ba_not_blocked_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p012))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p012_p9_b
        :precondition (and (succ_p012_p9)
                           (checked_p9)
                           (Bb_not_blocked_p9)
                           (at_b_p012)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p012_p9_c
        :precondition (and (succ_p012_p9)
                           (Bc_not_blocked_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p012))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p012_p9_d
        :precondition (and (succ_p012_p9)
                           (checked_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9)
                           (at_d_p012))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p10_p0011_a
        :precondition (and (at_a_p10)
                           (succ_p10_p0011)
                           (checked_p0011)
                           (Pa_not_blocked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p10_p0011_b
        :precondition (and (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (succ_p10_p0011)
                           (at_b_p10)
                           (checked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p10_p0011_c
        :precondition (and (at_c_p10)
                           (Bc_not_blocked_p0011)
                           (succ_p10_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p10_p0011_d
        :precondition (and (succ_p10_p0011)
                           (at_d_p10)
                           (Bd_not_blocked_p0011)
                           (checked_p0011)
                           (Pd_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p10_p012_a
        :precondition (and (checked_p012)
                           (Pa_not_blocked_p012)
                           (Ba_not_blocked_p012)
                           (at_a_p10)
                           (succ_p10_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p10_p012_b
        :precondition (and (Bb_not_blocked_p012)
                           (checked_p012)
                           (succ_p10_p012)
                           (at_b_p10)
                           (Pb_not_blocked_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p10_p012_c
        :precondition (and (at_c_p10)
                           (checked_p012)
                           (succ_p10_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p10_p012_d
        :precondition (and (checked_p012)
                           (succ_p10_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p10)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p10_p10_a
        :precondition (and (checked_p10)
                           (at_a_p10)
                           (succ_p10_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p10_p10_b
        :precondition (and (checked_p10)
                           (Pb_not_blocked_p10)
                           (succ_p10_p10)
                           (at_b_p10)
                           (Bb_not_blocked_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p10_p10_c
        :precondition (and (checked_p10)
                           (at_c_p10)
                           (succ_p10_p10)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p10_p10_d
        :precondition (and (checked_p10)
                           (succ_p10_p10)
                           (at_d_p10)
                           (Bd_not_blocked_p10)
                           (Pd_not_blocked_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p10_p1_a
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (at_a_p10)
                           (Pa_not_blocked_p1)
                           (succ_p10_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p10_p1_b
        :precondition (and (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (at_b_p10)
                           (succ_p10_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p10_p1_c
        :precondition (and (at_c_p10)
                           (checked_p1)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (succ_p10_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p10_p1_d
        :precondition (and (checked_p1)
                           (Pd_not_blocked_p1)
                           (at_d_p10)
                           (succ_p10_p1)
                           (Bd_not_blocked_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p10_p2_a
        :precondition (and (at_a_p10)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (succ_p10_p2)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p10_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p10)
                           (succ_p10_p2)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p10_p2_c
        :precondition (and (at_c_p10)
                           (Pc_not_blocked_p2)
                           (checked_p2)
                           (succ_p10_p2)
                           (Bc_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p10_p2_d
        :precondition (and (checked_p2)
                           (at_d_p10)
                           (succ_p10_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p10_p3_a
        :precondition (and (Ba_not_blocked_p3)
                           (at_a_p10)
                           (checked_p3)
                           (succ_p10_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p10_p3_b
        :precondition (and (checked_p3)
                           (at_b_p10)
                           (Pb_not_blocked_p3)
                           (succ_p10_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p10_p3_c
        :precondition (and (at_c_p10)
                           (checked_p3)
                           (Pc_not_blocked_p3)
                           (succ_p10_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p10_p3_d
        :precondition (and (Pd_not_blocked_p3)
                           (at_d_p10)
                           (checked_p3)
                           (succ_p10_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p10_p4_a
        :precondition (and (at_a_p10)
                           (succ_p10_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p10_p4_b
        :precondition (and (Bb_not_blocked_p4)
                           (at_b_p10)
                           (succ_p10_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p10_p4_c
        :precondition (and (at_c_p10)
                           (succ_p10_p4)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p10_p4_d
        :precondition (and (Pd_not_blocked_p4)
                           (succ_p10_p4)
                           (at_d_p10)
                           (Bd_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p10_p5_a
        :precondition (and (at_a_p10)
                           (Ba_not_blocked_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (succ_p10_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p10_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (at_b_p10)
                           (Pb_not_blocked_p5)
                           (succ_p10_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p10_p5_c
        :precondition (and (at_c_p10)
                           (Pc_not_blocked_p5)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (succ_p10_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p10_p5_d
        :precondition (and (checked_p5)
                           (at_d_p10)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (succ_p10_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p10_p6_a
        :precondition (and (Pa_not_blocked_p6)
                           (at_a_p10)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (succ_p10_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p10_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p10)
                           (succ_p10_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p10_p6_c
        :precondition (and (at_c_p10)
                           (checked_p6)
                           (Pc_not_blocked_p6)
                           (Bc_not_blocked_p6)
                           (succ_p10_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p10_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p10)
                           (succ_p10_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p10_p7_a
        :precondition (and (checked_p7)
                           (at_a_p10)
                           (succ_p10_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p10_p7_b
        :precondition (and (checked_p7)
                           (succ_p10_p7)
                           (at_b_p10)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p10_p7_c
        :precondition (and (at_c_p10)
                           (checked_p7)
                           (succ_p10_p7)
                           (Pc_not_blocked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p10_p7_d
        :precondition (and (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (succ_p10_p7)
                           (at_d_p10))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p10_p8_a
        :precondition (and (succ_p10_p8)
                           (at_a_p10)
                           (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p10_p8_b
        :precondition (and (Pb_not_blocked_p8)
                           (succ_p10_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p10)
                           (checked_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p10_p8_c
        :precondition (and (at_c_p10)
                           (succ_p10_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p10_p8_d
        :precondition (and (succ_p10_p8)
                           (Pd_not_blocked_p8)
                           (at_d_p10)
                           (checked_p8)
                           (Bd_not_blocked_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p10_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (checked_p9)
                           (at_a_p10)
                           (Pa_not_blocked_p9)
                           (succ_p10_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p10_p9_b
        :precondition (and (checked_p9)
                           (at_b_p10)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (succ_p10_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p10_p9_c
        :precondition (and (checked_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p10)
                           (Pc_not_blocked_p9)
                           (succ_p10_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p10_p9_d
        :precondition (and (checked_p9)
                           (succ_p10_p9)
                           (at_d_p10)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p1_p0011_a
        :precondition (and (succ_p1_p0011)
                           (checked_p0011)
                           (at_a_p1)
                           (Ba_not_blocked_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p1_p0011_b
        :precondition (and (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (succ_p1_p0011)
                           (checked_p0011)
                           (at_b_p1))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p1_p0011_c
        :precondition (and (Bc_not_blocked_p0011)
                           (succ_p1_p0011)
                           (checked_p0011)
                           (at_c_p1)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p1_p0011_d
        :precondition (and (succ_p1_p0011)
                           (Bd_not_blocked_p0011)
                           (checked_p0011)
                           (Pd_not_blocked_p0011)
                           (at_d_p1))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p1_p012_a
        :precondition (and (succ_p1_p012)
                           (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (at_a_p1))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p1_p012_b
        :precondition (and (succ_p1_p012)
                           (Bb_not_blocked_p012)
                           (checked_p012)
                           (Pb_not_blocked_p012)
                           (at_b_p1))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p1_p012_c
        :precondition (and (succ_p1_p012)
                           (checked_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (at_c_p1))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p1_p012_d
        :precondition (and (succ_p1_p012)
                           (checked_p012)
                           (Bd_not_blocked_p012)
                           (Pd_not_blocked_p012)
                           (at_d_p1))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p1_p10_a
        :precondition (and (checked_p10)
                           (succ_p1_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (at_a_p1))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p1_p10_b
        :precondition (and (checked_p10)
                           (succ_p1_p10)
                           (Pb_not_blocked_p10)
                           (Bb_not_blocked_p10)
                           (at_b_p1))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p1_p10_c
        :precondition (and (checked_p10)
                           (succ_p1_p10)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10)
                           (at_c_p1))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p1_p10_d
        :precondition (and (checked_p10)
                           (succ_p1_p10)
                           (Bd_not_blocked_p10)
                           (at_d_p1)
                           (Pd_not_blocked_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p1_p1_a
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1)
                           (succ_p1_p1)
                           (at_a_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p1_p1_b
        :precondition (and (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (succ_p1_p1)
                           (at_b_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p1_p1_c
        :precondition (and (checked_p1)
                           (Pc_not_blocked_p1)
                           (at_c_p1)
                           (Bc_not_blocked_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p1_p1_d
        :precondition (and (checked_p1)
                           (Pd_not_blocked_p1)
                           (Bd_not_blocked_p1)
                           (succ_p1_p1)
                           (at_d_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p1_p2_a
        :precondition (and (checked_p2)
                           (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p1)
                           (succ_p1_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p1_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (Bb_not_blocked_p2)
                           (at_b_p1)
                           (succ_p1_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p1_p2_c
        :precondition (and (Pc_not_blocked_p2)
                           (checked_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p1)
                           (succ_p1_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p1_p2_d
        :precondition (and (checked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p1)
                           (succ_p1_p2)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p1_p3_a
        :precondition (and (succ_p1_p3)
                           (Ba_not_blocked_p3)
                           (checked_p3)
                           (at_a_p1)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p1_p3_b
        :precondition (and (succ_p1_p3)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (at_b_p1)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p1_p3_c
        :precondition (and (succ_p1_p3)
                           (checked_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p1)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p1_p3_d
        :precondition (and (succ_p1_p3)
                           (Pd_not_blocked_p3)
                           (checked_p3)
                           (at_d_p1)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p1_p4_a
        :precondition (and (succ_p1_p4)
                           (checked_p4)
                           (at_a_p1)
                           (Ba_not_blocked_p4)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p1_p4_b
        :precondition (and (Bb_not_blocked_p4)
                           (succ_p1_p4)
                           (at_b_p1)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p1_p4_c
        :precondition (and (succ_p1_p4)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p1)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p1_p4_d
        :precondition (and (succ_p1_p4)
                           (Pd_not_blocked_p4)
                           (Bd_not_blocked_p4)
                           (at_d_p1)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p1_p5_a
        :precondition (and (succ_p1_p5)
                           (Ba_not_blocked_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p1))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p1_p5_b
        :precondition (and (succ_p1_p5)
                           (Bb_not_blocked_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p1))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p1_p5_c
        :precondition (and (succ_p1_p5)
                           (Pc_not_blocked_p5)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (at_c_p1))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p1_p5_d
        :precondition (and (succ_p1_p5)
                           (checked_p5)
                           (Bd_not_blocked_p5)
                           (at_d_p1)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p1_p6_a
        :precondition (and (succ_p1_p6)
                           (Pa_not_blocked_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p1))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p1_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (succ_p1_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p1))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p1_p6_c
        :precondition (and (succ_p1_p6)
                           (checked_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p1)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p1_p6_d
        :precondition (and (succ_p1_p6)
                           (Bd_not_blocked_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p1))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p1_p7_a
        :precondition (and (succ_p1_p7)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p1))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p1_p7_b
        :precondition (and (succ_p1_p7)
                           (checked_p7)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (at_b_p1))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p1_p7_c
        :precondition (and (succ_p1_p7)
                           (checked_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p1)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p1_p7_d
        :precondition (and (Bd_not_blocked_p7)
                           (succ_p1_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (at_d_p1))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p1_p8_a
        :precondition (and (succ_p1_p8)
                           (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (at_a_p1))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p1_p8_b
        :precondition (and (Pb_not_blocked_p8)
                           (succ_p1_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8)
                           (at_b_p1))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p1_p8_c
        :precondition (and (succ_p1_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p1)
                           (Bc_not_blocked_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p1_p8_d
        :precondition (and (Pd_not_blocked_p8)
                           (succ_p1_p8)
                           (checked_p8)
                           (Bd_not_blocked_p8)
                           (at_d_p1))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p1_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p1)
                           (succ_p1_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p1_p9_b
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (at_b_p1)
                           (succ_p1_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p1_p9_c
        :precondition (and (checked_p9)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p1)
                           (succ_p1_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p1_p9_d
        :precondition (and (checked_p9)
                           (at_d_p1)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9)
                           (succ_p1_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p2_p0011_a
        :precondition (and (succ_p2_p0011)
                           (checked_p0011)
                           (Pa_not_blocked_p0011)
                           (Ba_not_blocked_p0011)
                           (at_a_p2))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p2_p0011_b
        :precondition (and (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (at_b_p2)
                           (checked_p0011)
                           (succ_p2_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p2_p0011_c
        :precondition (and (Bc_not_blocked_p0011)
                           (at_c_p2)
                           (checked_p0011)
                           (succ_p2_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p2_p0011_d
        :precondition (and (Bd_not_blocked_p0011)
                           (at_d_p2)
                           (checked_p0011)
                           (Pd_not_blocked_p0011)
                           (succ_p2_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p2_p012_a
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (succ_p2_p012)
                           (at_a_p2))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p2_p012_b
        :precondition (and (Bb_not_blocked_p012)
                           (checked_p012)
                           (Pb_not_blocked_p012)
                           (succ_p2_p012)
                           (at_b_p2))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p2_p012_c
        :precondition (and (checked_p012)
                           (at_c_p2)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (succ_p2_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p2_p012_d
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (Pd_not_blocked_p012)
                           (at_d_p2)
                           (succ_p2_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p2_p10_a
        :precondition (and (checked_p10)
                           (succ_p2_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (at_a_p2))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p2_p10_b
        :precondition (and (checked_p10)
                           (Pb_not_blocked_p10)
                           (succ_p2_p10)
                           (Bb_not_blocked_p10)
                           (at_b_p2))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p2_p10_c
        :precondition (and (checked_p10)
                           (at_c_p2)
                           (succ_p2_p10)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p2_p10_d
        :precondition (and (checked_p10)
                           (succ_p2_p10)
                           (at_d_p2)
                           (Bd_not_blocked_p10)
                           (Pd_not_blocked_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p2_p1_a
        :precondition (and (Ba_not_blocked_p1)
                           (succ_p2_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p2))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p2_p1_b
        :precondition (and (Bb_not_blocked_p1)
                           (succ_p2_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (at_b_p2))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p2_p1_c
        :precondition (and (Pc_not_blocked_p1)
                           (succ_p2_p1)
                           (checked_p1)
                           (at_c_p2)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p2_p1_d
        :precondition (and (succ_p2_p1)
                           (checked_p1)
                           (Pd_not_blocked_p1)
                           (Bd_not_blocked_p1)
                           (at_d_p2))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p2_p2_a
        :precondition (and (checked_p2)
                           (Pa_not_blocked_p2)
                           (succ_p2_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p2_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (succ_p2_p2)
                           (Bb_not_blocked_p2)
                           (at_b_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p2_p2_c
        :precondition (and (Pc_not_blocked_p2)
                           (checked_p2)
                           (at_c_p2)
                           (succ_p2_p2)
                           (Bc_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p2_p2_d
        :precondition (and (checked_p2)
                           (succ_p2_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p2)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p2_p3_a
        :precondition (and (Ba_not_blocked_p3)
                           (succ_p2_p3)
                           (checked_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p2))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p2_p3_b
        :precondition (and (checked_p3)
                           (succ_p2_p3)
                           (Pb_not_blocked_p3)
                           (at_b_p2)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p2_p3_c
        :precondition (and (at_c_p2)
                           (succ_p2_p3)
                           (checked_p3)
                           (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p2_p3_d
        :precondition (and (Pd_not_blocked_p3)
                           (succ_p2_p3)
                           (checked_p3)
                           (at_d_p2)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p2_p4_a
        :precondition (and (succ_p2_p4)
                           (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p2))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p2_p4_b
        :precondition (and (Bb_not_blocked_p4)
                           (succ_p2_p4)
                           (at_b_p2)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p2_p4_c
        :precondition (and (succ_p2_p4)
                           (at_c_p2)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p2_p4_d
        :precondition (and (Pd_not_blocked_p4)
                           (succ_p2_p4)
                           (Bd_not_blocked_p4)
                           (at_d_p2)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p2_p5_a
        :precondition (and (Ba_not_blocked_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (succ_p2_p5)
                           (at_a_p2))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p2_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p2)
                           (succ_p2_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p2_p5_c
        :precondition (and (Pc_not_blocked_p5)
                           (at_c_p2)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (succ_p2_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p2_p5_d
        :precondition (and (checked_p5)
                           (Bd_not_blocked_p5)
                           (at_d_p2)
                           (Pd_not_blocked_p5)
                           (succ_p2_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p2_p6_a
        :precondition (and (Pa_not_blocked_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (succ_p2_p6)
                           (at_a_p2))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p2_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p2)
                           (succ_p2_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p2_p6_c
        :precondition (and (checked_p6)
                           (at_c_p2)
                           (Pc_not_blocked_p6)
                           (succ_p2_p6)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p2_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p2)
                           (succ_p2_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p2_p7_a
        :precondition (and (checked_p7)
                           (at_a_p2)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (succ_p2_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p2_p7_b
        :precondition (and (checked_p7)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (at_b_p2)
                           (succ_p2_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p2_p7_c
        :precondition (and (checked_p7)
                           (at_c_p2)
                           (Pc_not_blocked_p7)
                           (succ_p2_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p2_p7_d
        :precondition (and (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (at_d_p2)
                           (succ_p2_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p2_p8_a
        :precondition (and (succ_p2_p8)
                           (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (at_a_p2))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p2_p8_b
        :precondition (and (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (succ_p2_p8)
                           (checked_p8)
                           (at_b_p2))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p2_p8_c
        :precondition (and (at_c_p2)
                           (succ_p2_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p2_p8_d
        :precondition (and (Pd_not_blocked_p8)
                           (succ_p2_p8)
                           (checked_p8)
                           (Bd_not_blocked_p8)
                           (at_d_p2))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p2_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p2_p9)
                           (at_a_p2))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p2_p9_b
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (succ_p2_p9)
                           (Pb_not_blocked_p9)
                           (at_b_p2))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p2_p9_c
        :precondition (and (checked_p9)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p2)
                           (succ_p2_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p2_p9_d
        :precondition (and (checked_p9)
                           (at_d_p2)
                           (succ_p2_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p3_p0011_a
        :precondition (and (at_a_p3)
                           (succ_p3_p0011)
                           (checked_p0011)
                           (Pa_not_blocked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p3_p0011_b
        :precondition (and (succ_p3_p0011)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (checked_p0011)
                           (at_b_p3))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p3_p0011_c
        :precondition (and (succ_p3_p0011)
                           (Bc_not_blocked_p0011)
                           (at_c_p3)
                           (checked_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p3_p0011_d
        :precondition (and (succ_p3_p0011)
                           (Bd_not_blocked_p0011)
                           (checked_p0011)
                           (Pd_not_blocked_p0011)
                           (at_d_p3))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p3_p012_a
        :precondition (and (at_a_p3)
                           (checked_p012)
                           (Pa_not_blocked_p012)
                           (Ba_not_blocked_p012)
                           (succ_p3_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p3_p012_b
        :precondition (and (Bb_not_blocked_p012)
                           (checked_p012)
                           (Pb_not_blocked_p012)
                           (at_b_p3)
                           (succ_p3_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p3_p012_c
        :precondition (and (checked_p012)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012)
                           (at_c_p3)
                           (succ_p3_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p3_p012_d
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (succ_p3_p012)
                           (Pd_not_blocked_p012)
                           (at_d_p3))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p3_p10_a
        :precondition (and (checked_p10)
                           (at_a_p3)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (succ_p3_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p3_p10_b
        :precondition (and (checked_p10)
                           (Pb_not_blocked_p10)
                           (Bb_not_blocked_p10)
                           (at_b_p3)
                           (succ_p3_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p3_p10_c
        :precondition (and (checked_p10)
                           (at_c_p3)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10)
                           (succ_p3_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p3_p10_d
        :precondition (and (checked_p10)
                           (Bd_not_blocked_p10)
                           (succ_p3_p10)
                           (Pd_not_blocked_p10)
                           (at_d_p3))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p3_p1_a
        :precondition (and (at_a_p3)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1)
                           (succ_p3_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p3_p1_b
        :precondition (and (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (succ_p3_p1)
                           (at_b_p3))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p3_p1_c
        :precondition (and (checked_p1)
                           (at_c_p3)
                           (Pc_not_blocked_p1)
                           (succ_p3_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p3_p1_d
        :precondition (and (checked_p1)
                           (Pd_not_blocked_p1)
                           (succ_p3_p1)
                           (Bd_not_blocked_p1)
                           (at_d_p3))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p3_p2_a
        :precondition (and (at_a_p3)
                           (succ_p3_p2)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p3_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (succ_p3_p2)
                           (checked_p2)
                           (at_b_p3)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p3_p2_c
        :precondition (and (Pc_not_blocked_p2)
                           (succ_p3_p2)
                           (checked_p2)
                           (at_c_p3)
                           (Bc_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p3_p2_d
        :precondition (and (succ_p3_p2)
                           (checked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p3)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p3_p3_a
        :precondition (and (at_a_p3)
                           (succ_p3_p3)
                           (Ba_not_blocked_p3)
                           (checked_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p3_p3_b
        :precondition (and (succ_p3_p3)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (at_b_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p3_p3_c
        :precondition (and (succ_p3_p3)
                           (at_c_p3)
                           (checked_p3)
                           (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p3_p3_d
        :precondition (and (succ_p3_p3)
                           (Pd_not_blocked_p3)
                           (Bd_not_blocked_p3)
                           (checked_p3)
                           (at_d_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p3_p4_a
        :precondition (and (at_a_p3)
                           (succ_p3_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p3_p4_b
        :precondition (and (Bb_not_blocked_p4)
                           (at_b_p3)
                           (Pb_not_blocked_p4)
                           (succ_p3_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p3_p4_c
        :precondition (and (at_c_p3)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (succ_p3_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p3_p4_d
        :precondition (and (Pd_not_blocked_p4)
                           (Bd_not_blocked_p4)
                           (at_d_p3)
                           (succ_p3_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p3_p5_a
        :precondition (and (at_a_p3)
                           (Ba_not_blocked_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (succ_p3_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p3_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (succ_p3_p5)
                           (at_b_p3))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p3_p5_c
        :precondition (and (Pc_not_blocked_p5)
                           (checked_p5)
                           (at_c_p3)
                           (succ_p3_p5)
                           (Bc_not_blocked_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p3_p5_d
        :precondition (and (at_d_p3)
                           (checked_p5)
                           (succ_p3_p5)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p3_p6_a
        :precondition (and (at_a_p3)
                           (Pa_not_blocked_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (succ_p3_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p3_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p3)
                           (succ_p3_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p3_p6_c
        :precondition (and (checked_p6)
                           (at_c_p3)
                           (Pc_not_blocked_p6)
                           (succ_p3_p6)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p3_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (succ_p3_p6)
                           (at_d_p3))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p3_p7_a
        :precondition (and (at_a_p3)
                           (succ_p3_p7)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p3_p7_b
        :precondition (and (succ_p3_p7)
                           (checked_p7)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (at_b_p3))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p3_p7_c
        :precondition (and (succ_p3_p7)
                           (checked_p7)
                           (at_c_p3)
                           (Pc_not_blocked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p3_p7_d
        :precondition (and (Bd_not_blocked_p7)
                           (succ_p3_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (at_d_p3))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p3_p8_a
        :precondition (and (at_a_p3)
                           (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (succ_p3_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p3_p8_b
        :precondition (and (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8)
                           (at_b_p3)
                           (succ_p3_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p3_p8_c
        :precondition (and (at_c_p3)
                           (checked_p8)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (succ_p3_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p3_p8_d
        :precondition (and (Pd_not_blocked_p8)
                           (checked_p8)
                           (Bd_not_blocked_p8)
                           (at_d_p3)
                           (succ_p3_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p3_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (at_a_p3)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p3_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p3_p9_b
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (at_b_p3)
                           (Pb_not_blocked_p9)
                           (succ_p3_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p3_p9_c
        :precondition (and (checked_p9)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p3)
                           (succ_p3_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p3_p9_d
        :precondition (and (checked_p9)
                           (succ_p3_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p3)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p4_p0011_a
        :precondition (and (succ_p4_p0011)
                           (at_a_p4)
                           (checked_p0011)
                           (Pa_not_blocked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p4_p0011_b
        :precondition (and (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (succ_p4_p0011)
                           (checked_p0011)
                           (at_b_p4))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p4_p0011_c
        :precondition (and (Bc_not_blocked_p0011)
                           (succ_p4_p0011)
                           (checked_p0011)
                           (at_c_p4)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p4_p0011_d
        :precondition (and (succ_p4_p0011)
                           (Bd_not_blocked_p0011)
                           (checked_p0011)
                           (at_d_p4)
                           (Pd_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p4_p012_a
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (succ_p4_p012)
                           (at_a_p4))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p4_p012_b
        :precondition (and (Bb_not_blocked_p012)
                           (checked_p012)
                           (succ_p4_p012)
                           (at_b_p4)
                           (Pb_not_blocked_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p4_p012_c
        :precondition (and (checked_p012)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012)
                           (succ_p4_p012)
                           (at_c_p4))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p4_p012_d
        :precondition (and (checked_p012)
                           (at_d_p4)
                           (Bd_not_blocked_p012)
                           (succ_p4_p012)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p4_p10_a
        :precondition (and (checked_p10)
                           (succ_p4_p10)
                           (Ba_not_blocked_p10)
                           (at_a_p4)
                           (Pa_not_blocked_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p4_p10_b
        :precondition (and (checked_p10)
                           (Pb_not_blocked_p10)
                           (succ_p4_p10)
                           (at_b_p4)
                           (Bb_not_blocked_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p4_p10_c
        :precondition (and (checked_p10)
                           (succ_p4_p10)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10)
                           (at_c_p4))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p4_p10_d
        :precondition (and (checked_p10)
                           (succ_p4_p10)
                           (Bd_not_blocked_p10)
                           (at_d_p4)
                           (Pd_not_blocked_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p4_p1_a
        :precondition (and (succ_p4_p1)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p4))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p4_p1_b
        :precondition (and (succ_p4_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (at_b_p4))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p4_p1_c
        :precondition (and (succ_p4_p1)
                           (Pc_not_blocked_p1)
                           (checked_p1)
                           (Bc_not_blocked_p1)
                           (at_c_p4))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p4_p1_d
        :precondition (and (succ_p4_p1)
                           (checked_p1)
                           (Pd_not_blocked_p1)
                           (Bd_not_blocked_p1)
                           (at_d_p4))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p4_p2_a
        :precondition (and (checked_p2)
                           (Pa_not_blocked_p2)
                           (succ_p4_p2)
                           (at_a_p4)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p4_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (succ_p4_p2)
                           (at_b_p4)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p4_p2_c
        :precondition (and (Pc_not_blocked_p2)
                           (checked_p2)
                           (succ_p4_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p4))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p4_p2_d
        :precondition (and (checked_p2)
                           (succ_p4_p2)
                           (at_d_p4)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p4_p3_a
        :precondition (and (Ba_not_blocked_p3)
                           (checked_p3)
                           (succ_p4_p3)
                           (at_a_p4)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p4_p3_b
        :precondition (and (checked_p3)
                           (Pb_not_blocked_p3)
                           (succ_p4_p3)
                           (at_b_p4)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p4_p3_c
        :precondition (and (Pc_not_blocked_p3)
                           (checked_p3)
                           (succ_p4_p3)
                           (at_c_p4)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p4_p3_d
        :precondition (and (Pd_not_blocked_p3)
                           (checked_p3)
                           (succ_p4_p3)
                           (at_d_p4)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p4_p4_a
        :precondition (and (at_a_p4)
                           (succ_p4_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p4_p4_b
        :precondition (and (Bb_not_blocked_p4)
                           (at_b_p4)
                           (succ_p4_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p4_p4_c
        :precondition (and (Bc_not_blocked_p4)
                           (succ_p4_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p4_p4_d
        :precondition (and (Pd_not_blocked_p4)
                           (succ_p4_p4)
                           (at_d_p4)
                           (Bd_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p4_p5_a
        :precondition (and (Ba_not_blocked_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p4)
                           (succ_p4_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p4_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (succ_p4_p5)
                           (at_b_p4))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p4_p5_c
        :precondition (and (Pc_not_blocked_p5)
                           (checked_p5)
                           (succ_p4_p5)
                           (Bc_not_blocked_p5)
                           (at_c_p4))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p4_p5_d
        :precondition (and (checked_p5)
                           (at_d_p4)
                           (succ_p4_p5)
                           (Pd_not_blocked_p5)
                           (Bd_not_blocked_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p4_p6_a
        :precondition (and (succ_p4_p6)
                           (Pa_not_blocked_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p4))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p4_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (succ_p4_p6)
                           (checked_p6)
                           (at_b_p4))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p4_p6_c
        :precondition (and (succ_p4_p6)
                           (checked_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p4)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p4_p6_d
        :precondition (and (succ_p4_p6)
                           (Bd_not_blocked_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p4))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p4_p7_a
        :precondition (and (checked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p4)
                           (Pa_not_blocked_p7)
                           (succ_p4_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p4_p7_b
        :precondition (and (checked_p7)
                           (at_b_p4)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (succ_p4_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p4_p7_c
        :precondition (and (checked_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p4)
                           (succ_p4_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p4_p7_d
        :precondition (and (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (at_d_p4)
                           (succ_p4_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p4_p8_a
        :precondition (and (succ_p4_p8)
                           (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (at_a_p4)
                           (checked_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p4_p8_b
        :precondition (and (succ_p4_p8)
                           (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p4)
                           (checked_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p4_p8_c
        :precondition (and (succ_p4_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p4))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p4_p8_d
        :precondition (and (succ_p4_p8)
                           (Pd_not_blocked_p8)
                           (checked_p8)
                           (at_d_p4)
                           (Bd_not_blocked_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p4_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p4)
                           (succ_p4_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p4_p9_b
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (succ_p4_p9)
                           (at_b_p4))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p4_p9_c
        :precondition (and (checked_p9)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p4_p9)
                           (at_c_p4))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p4_p9_d
        :precondition (and (checked_p9)
                           (succ_p4_p9)
                           (at_d_p4)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p5_p0011_a
        :precondition (and (checked_p0011)
                           (succ_p5_p0011)
                           (at_a_p5)
                           (Pa_not_blocked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p5_p0011_b
        :precondition (and (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (at_b_p5)
                           (succ_p5_p0011)
                           (checked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p5_p0011_c
        :precondition (and (Bc_not_blocked_p0011)
                           (at_c_p5)
                           (succ_p5_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p5_p0011_d
        :precondition (and (Bd_not_blocked_p0011)
                           (succ_p5_p0011)
                           (checked_p0011)
                           (Pd_not_blocked_p0011)
                           (at_d_p5))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p5_p012_a
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (succ_p5_p012)
                           (at_a_p5))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p5_p012_b
        :precondition (and (Bb_not_blocked_p012)
                           (checked_p012)
                           (at_b_p5)
                           (succ_p5_p012)
                           (Pb_not_blocked_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p5_p012_c
        :precondition (and (checked_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (at_c_p5)
                           (succ_p5_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p5_p012_d
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (succ_p5_p012)
                           (Pd_not_blocked_p012)
                           (at_d_p5))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p5_p10_a
        :precondition (and (checked_p10)
                           (at_a_p5)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (succ_p5_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p5_p10_b
        :precondition (and (checked_p10)
                           (Pb_not_blocked_p10)
                           (at_b_p5)
                           (Bb_not_blocked_p10)
                           (succ_p5_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p5_p10_c
        :precondition (and (checked_p10)
                           (at_c_p5)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10)
                           (succ_p5_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p5_p10_d
        :precondition (and (checked_p10)
                           (Bd_not_blocked_p10)
                           (Pd_not_blocked_p10)
                           (at_d_p5)
                           (succ_p5_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p5_p1_a
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1)
                           (succ_p5_p1)
                           (at_a_p5))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p5_p1_b
        :precondition (and (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (at_b_p5)
                           (succ_p5_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p5_p1_c
        :precondition (and (checked_p1)
                           (at_c_p5)
                           (Pc_not_blocked_p1)
                           (succ_p5_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p5_p1_d
        :precondition (and (checked_p1)
                           (Pd_not_blocked_p1)
                           (succ_p5_p1)
                           (Bd_not_blocked_p1)
                           (at_d_p5))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p5_p2_a
        :precondition (and (checked_p2)
                           (Pa_not_blocked_p2)
                           (succ_p5_p2)
                           (at_a_p5)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p5_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (succ_p5_p2)
                           (at_b_p5)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p5_p2_c
        :precondition (and (Pc_not_blocked_p2)
                           (checked_p2)
                           (succ_p5_p2)
                           (at_c_p5)
                           (Bc_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p5_p2_d
        :precondition (and (checked_p2)
                           (succ_p5_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p5)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p5_p3_a
        :precondition (and (succ_p5_p3)
                           (Ba_not_blocked_p3)
                           (checked_p3)
                           (at_a_p5)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p5_p3_b
        :precondition (and (succ_p5_p3)
                           (checked_p3)
                           (at_b_p5)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p5_p3_c
        :precondition (and (succ_p5_p3)
                           (at_c_p5)
                           (checked_p3)
                           (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p5_p3_d
        :precondition (and (succ_p5_p3)
                           (Pd_not_blocked_p3)
                           (Bd_not_blocked_p3)
                           (checked_p3)
                           (at_d_p5))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p5_p4_a
        :precondition (and (succ_p5_p4)
                           (at_a_p5)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p5_p4_b
        :precondition (and (Bb_not_blocked_p4)
                           (succ_p5_p4)
                           (at_b_p5)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p5_p4_c
        :precondition (and (succ_p5_p4)
                           (at_c_p5)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p5_p4_d
        :precondition (and (Pd_not_blocked_p4)
                           (succ_p5_p4)
                           (Bd_not_blocked_p4)
                           (at_d_p5)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p5_p5_a
        :precondition (and (Ba_not_blocked_p5)
                           (succ_p5_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p5_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (at_b_p5)
                           (Pb_not_blocked_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p5_p5_c
        :precondition (and (Pc_not_blocked_p5)
                           (checked_p5)
                           (at_c_p5)
                           (succ_p5_p5)
                           (Bc_not_blocked_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p5_p5_d
        :precondition (and (checked_p5)
                           (succ_p5_p5)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (at_d_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p5_p6_a
        :precondition (and (Pa_not_blocked_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p5)
                           (succ_p5_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p5_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p5)
                           (succ_p5_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p5_p6_c
        :precondition (and (checked_p6)
                           (at_c_p5)
                           (Pc_not_blocked_p6)
                           (succ_p5_p6)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p5_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (succ_p5_p6)
                           (at_d_p5))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p5_p7_a
        :precondition (and (at_a_p5)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p5_p7)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p5_p7_b
        :precondition (and (checked_p7)
                           (succ_p5_p7)
                           (at_b_p5)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p5_p7_c
        :precondition (and (checked_p7)
                           (succ_p5_p7)
                           (at_c_p5)
                           (Pc_not_blocked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p5_p7_d
        :precondition (and (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (succ_p5_p7)
                           (at_d_p5))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p5_p8_a
        :precondition (and (succ_p5_p8)
                           (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (at_a_p5))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p5_p8_b
        :precondition (and (succ_p5_p8)
                           (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p5)
                           (checked_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p5_p8_c
        :precondition (and (succ_p5_p8)
                           (at_c_p5)
                           (checked_p8)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p5_p8_d
        :precondition (and (succ_p5_p8)
                           (Pd_not_blocked_p8)
                           (checked_p8)
                           (Bd_not_blocked_p8)
                           (at_d_p5))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p5_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p5)
                           (succ_p5_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p5_p9_b
        :precondition (and (checked_p9)
                           (at_b_p5)
                           (Bb_not_blocked_p9)
                           (succ_p5_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p5_p9_c
        :precondition (and (checked_p9)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p5)
                           (succ_p5_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p5_p9_d
        :precondition (and (checked_p9)
                           (succ_p5_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p5)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p6_p0011_a
        :precondition (and (checked_p0011)
                           (succ_p6_p0011)
                           (Pa_not_blocked_p0011)
                           (Ba_not_blocked_p0011)
                           (at_a_p6))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p6_p0011_b
        :precondition (and (at_b_p6)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (checked_p0011)
                           (succ_p6_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p6_p0011_c
        :precondition (and (at_c_p6)
                           (Bc_not_blocked_p0011)
                           (checked_p0011)
                           (succ_p6_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p6_p0011_d
        :precondition (and (Bd_not_blocked_p0011)
                           (at_d_p6)
                           (succ_p6_p0011)
                           (checked_p0011)
                           (Pd_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p6_p012_a
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (succ_p6_p012)
                           (at_a_p6))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p6_p012_b
        :precondition (and (at_b_p6)
                           (Bb_not_blocked_p012)
                           (checked_p012)
                           (Pb_not_blocked_p012)
                           (succ_p6_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p6_p012_c
        :precondition (and (at_c_p6)
                           (checked_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (succ_p6_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p6_p012_d
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p6)
                           (Pd_not_blocked_p012)
                           (succ_p6_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p6_p10_a
        :precondition (and (checked_p10)
                           (at_a_p6)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (succ_p6_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p6_p10_b
        :precondition (and (at_b_p6)
                           (Pb_not_blocked_p10)
                           (checked_p10)
                           (Bb_not_blocked_p10)
                           (succ_p6_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p6_p10_c
        :precondition (and (at_c_p6)
                           (checked_p10)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10)
                           (succ_p6_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p6_p10_d
        :precondition (and (checked_p10)
                           (at_d_p6)
                           (Bd_not_blocked_p10)
                           (Pd_not_blocked_p10)
                           (succ_p6_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p6_p1_a
        :precondition (and (succ_p6_p1)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p6))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p6_p1_b
        :precondition (and (at_b_p6)
                           (succ_p6_p1)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p6_p1_c
        :precondition (and (at_c_p6)
                           (succ_p6_p1)
                           (Pc_not_blocked_p1)
                           (checked_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p6_p1_d
        :precondition (and (succ_p6_p1)
                           (checked_p1)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1)
                           (at_d_p6))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p6_p2_a
        :precondition (and (succ_p6_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p6))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p6_p2_b
        :precondition (and (at_b_p6)
                           (succ_p6_p2)
                           (Pb_not_blocked_p2)
                           (checked_p2)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p6_p2_c
        :precondition (and (at_c_p6)
                           (succ_p6_p2)
                           (Pc_not_blocked_p2)
                           (checked_p2)
                           (Bc_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p6_p2_d
        :precondition (and (succ_p6_p2)
                           (checked_p2)
                           (at_d_p6)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p6_p3_a
        :precondition (and (Ba_not_blocked_p3)
                           (at_a_p6)
                           (checked_p3)
                           (Pa_not_blocked_p3)
                           (succ_p6_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p6_p3_b
        :precondition (and (at_b_p6)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (succ_p6_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p6_p3_c
        :precondition (and (at_c_p6)
                           (checked_p3)
                           (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3)
                           (succ_p6_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p6_p3_d
        :precondition (and (Pd_not_blocked_p3)
                           (checked_p3)
                           (at_d_p6)
                           (Bd_not_blocked_p3)
                           (succ_p6_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p6_p4_a
        :precondition (and (succ_p6_p4)
                           (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p6))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p6_p4_b
        :precondition (and (at_b_p6)
                           (Bb_not_blocked_p4)
                           (succ_p6_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p6_p4_c
        :precondition (and (at_c_p6)
                           (succ_p6_p4)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p6_p4_d
        :precondition (and (Pd_not_blocked_p4)
                           (succ_p6_p4)
                           (at_d_p6)
                           (Bd_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p6_p5_a
        :precondition (and (succ_p6_p5)
                           (Ba_not_blocked_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p6))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p6_p5_b
        :precondition (and (at_b_p6)
                           (Bb_not_blocked_p5)
                           (succ_p6_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p6_p5_c
        :precondition (and (at_c_p6)
                           (succ_p6_p5)
                           (Pc_not_blocked_p5)
                           (checked_p5)
                           (Bc_not_blocked_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p6_p5_d
        :precondition (and (succ_p6_p5)
                           (checked_p5)
                           (at_d_p6)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p6_p6_a
        :precondition (and (Pa_not_blocked_p6)
                           (succ_p6_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p6_p6_b
        :precondition (and (at_b_p6)
                           (Pb_not_blocked_p6)
                           (Bb_not_blocked_p6)
                           (succ_p6_p6)
                           (checked_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p6_p6_c
        :precondition (and (at_c_p6)
                           (succ_p6_p6)
                           (checked_p6)
                           (Pc_not_blocked_p6)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p6_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (succ_p6_p6)
                           (Pd_not_blocked_p6)
                           (checked_p6)
                           (at_d_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p6_p7_a
        :precondition (and (checked_p7)
                           (at_a_p6)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (succ_p6_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p6_p7_b
        :precondition (and (at_b_p6)
                           (checked_p7)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (succ_p6_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p6_p7_c
        :precondition (and (at_c_p6)
                           (checked_p7)
                           (Pc_not_blocked_p7)
                           (succ_p6_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p6_p7_d
        :precondition (and (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (at_d_p6)
                           (succ_p6_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p6_p8_a
        :precondition (and (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (succ_p6_p8)
                           (at_a_p6))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p6_p8_b
        :precondition (and (at_b_p6)
                           (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8)
                           (succ_p6_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p6_p8_c
        :precondition (and (at_c_p6)
                           (checked_p8)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (succ_p6_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p6_p8_d
        :precondition (and (Pd_not_blocked_p8)
                           (checked_p8)
                           (at_d_p6)
                           (Bd_not_blocked_p8)
                           (succ_p6_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p6_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p6_p9)
                           (at_a_p6))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p6_p9_b
        :precondition (and (at_b_p6)
                           (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (succ_p6_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p6_p9_c
        :precondition (and (at_c_p6)
                           (Bc_not_blocked_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p6_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p6_p9_d
        :precondition (and (checked_p9)
                           (succ_p6_p9)
                           (at_d_p6)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p7_p0011_a
        :precondition (and (at_a_p7)
                           (checked_p0011)
                           (succ_p7_p0011)
                           (Ba_not_blocked_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p7_p0011_b
        :precondition (and (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (at_b_p7)
                           (checked_p0011)
                           (succ_p7_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p7_p0011_c
        :precondition (and (Bc_not_blocked_p0011)
                           (at_c_p7)
                           (succ_p7_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p7_p0011_d
        :precondition (and (Bd_not_blocked_p0011)
                           (checked_p0011)
                           (Pd_not_blocked_p0011)
                           (succ_p7_p0011)
                           (at_d_p7))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p7_p012_a
        :precondition (and (checked_p012)
                           (succ_p7_p012)
                           (Pa_not_blocked_p012)
                           (at_a_p7)
                           (Ba_not_blocked_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p7_p012_b
        :precondition (and (Bb_not_blocked_p012)
                           (succ_p7_p012)
                           (checked_p012)
                           (at_b_p7)
                           (Pb_not_blocked_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p7_p012_c
        :precondition (and (checked_p012)
                           (succ_p7_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (at_c_p7))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p7_p012_d
        :precondition (and (checked_p012)
                           (succ_p7_p012)
                           (Bd_not_blocked_p012)
                           (Pd_not_blocked_p012)
                           (at_d_p7))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p7_p10_a
        :precondition (and (checked_p10)
                           (succ_p7_p10)
                           (at_a_p7)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p7_p10_b
        :precondition (and (checked_p10)
                           (Pb_not_blocked_p10)
                           (succ_p7_p10)
                           (at_b_p7)
                           (Bb_not_blocked_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p7_p10_c
        :precondition (and (checked_p10)
                           (succ_p7_p10)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10)
                           (at_c_p7))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p7_p10_d
        :precondition (and (checked_p10)
                           (succ_p7_p10)
                           (Bd_not_blocked_p10)
                           (Pd_not_blocked_p10)
                           (at_d_p7))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p7_p1_a
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (at_a_p7)
                           (Pa_not_blocked_p1)
                           (succ_p7_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p7_p1_b
        :precondition (and (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (at_b_p7)
                           (succ_p7_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p7_p1_c
        :precondition (and (Pc_not_blocked_p1)
                           (checked_p1)
                           (Bc_not_blocked_p1)
                           (succ_p7_p1)
                           (at_c_p7))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p7_p1_d
        :precondition (and (checked_p1)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1)
                           (succ_p7_p1)
                           (at_d_p7))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p7_p2_a
        :precondition (and (at_a_p7)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (succ_p7_p2)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p7_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p7)
                           (succ_p7_p2)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p7_p2_c
        :precondition (and (Bc_not_blocked_p2)
                           (checked_p2)
                           (at_c_p7)
                           (succ_p7_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p7_p2_d
        :precondition (and (checked_p2)
                           (succ_p7_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p7)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p7_p3_a
        :precondition (and (Ba_not_blocked_p3)
                           (at_a_p7)
                           (checked_p3)
                           (succ_p7_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p7_p3_b
        :precondition (and (at_b_p7)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (succ_p7_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p7_p3_c
        :precondition (and (succ_p7_p3)
                           (checked_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p7)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p7_p3_d
        :precondition (and (Pd_not_blocked_p3)
                           (checked_p3)
                           (succ_p7_p3)
                           (Bd_not_blocked_p3)
                           (at_d_p7))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p7_p4_a
        :precondition (and (at_a_p7)
                           (succ_p7_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p7_p4_b
        :precondition (and (Bb_not_blocked_p4)
                           (at_b_p7)
                           (succ_p7_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p7_p4_c
        :precondition (and (Pc_not_blocked_p4)
                           (Bc_not_blocked_p4)
                           (succ_p7_p4)
                           (at_c_p7)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p7_p4_d
        :precondition (and (Pd_not_blocked_p4)
                           (succ_p7_p4)
                           (Bd_not_blocked_p4)
                           (at_d_p7)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p7_p5_a
        :precondition (and (at_a_p7)
                           (Ba_not_blocked_p5)
                           (succ_p7_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p7_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (at_b_p7)
                           (succ_p7_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p7_p5_c
        :precondition (and (Pc_not_blocked_p5)
                           (succ_p7_p5)
                           (checked_p5)
                           (at_c_p7)
                           (Bc_not_blocked_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p7_p5_d
        :precondition (and (checked_p5)
                           (succ_p7_p5)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (at_d_p7))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p7_p6_a
        :precondition (and (succ_p7_p6)
                           (at_a_p7)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p7_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (succ_p7_p6)
                           (checked_p6)
                           (at_b_p7))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p7_p6_c
        :precondition (and (succ_p7_p6)
                           (checked_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p7)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p7_p6_d
        :precondition (and (succ_p7_p6)
                           (Bd_not_blocked_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p7))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p7_p7_a
        :precondition (and (checked_p7)
                           (at_a_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p7_p7_b
        :precondition (and (checked_p7)
                           (at_b_p7)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p7_p7_c
        :precondition (and (checked_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p7)
                           (succ_p7_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p7_p7_d
        :precondition (and (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (succ_p7_p7)
                           (at_d_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p7_p8_a
        :precondition (and (at_a_p7)
                           (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (succ_p7_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p7_p8_b
        :precondition (and (Pb_not_blocked_p8)
                           (at_b_p7)
                           (Bb_not_blocked_p8)
                           (checked_p8)
                           (succ_p7_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p7_p8_c
        :precondition (and (checked_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p7)
                           (succ_p7_p8)
                           (Bc_not_blocked_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p7_p8_d
        :precondition (and (Pd_not_blocked_p8)
                           (checked_p8)
                           (succ_p7_p8)
                           (at_d_p7)
                           (Bd_not_blocked_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p7_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (succ_p7_p9)
                           (checked_p9)
                           (at_a_p7)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p7_p9_b
        :precondition (and (checked_p9)
                           (succ_p7_p9)
                           (at_b_p7)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p7_p9_c
        :precondition (and (checked_p9)
                           (Bc_not_blocked_p9)
                           (succ_p7_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p7))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p7_p9_d
        :precondition (and (checked_p9)
                           (succ_p7_p9)
                           (at_d_p7)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p8_p0011_a
        :precondition (and (succ_p8_p0011)
                           (checked_p0011)
                           (at_a_p8)
                           (Ba_not_blocked_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p8_p0011_b
        :precondition (and (succ_p8_p0011)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (at_b_p8)
                           (checked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p8_p0011_c
        :precondition (and (succ_p8_p0011)
                           (Bc_not_blocked_p0011)
                           (at_c_p8)
                           (checked_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p8_p0011_d
        :precondition (and (succ_p8_p0011)
                           (at_d_p8)
                           (Bd_not_blocked_p0011)
                           (checked_p0011)
                           (Pd_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p8_p012_a
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (succ_p8_p012)
                           (at_a_p8))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p8_p012_b
        :precondition (and (Bb_not_blocked_p012)
                           (checked_p012)
                           (at_b_p8)
                           (succ_p8_p012)
                           (Pb_not_blocked_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p8_p012_c
        :precondition (and (checked_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (succ_p8_p012)
                           (at_c_p8))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p8_p012_d
        :precondition (and (checked_p012)
                           (at_d_p8)
                           (Bd_not_blocked_p012)
                           (succ_p8_p012)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p8_p10_a
        :precondition (and (checked_p10)
                           (succ_p8_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (at_a_p8))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p8_p10_b
        :precondition (and (checked_p10)
                           (Pb_not_blocked_p10)
                           (succ_p8_p10)
                           (at_b_p8)
                           (Bb_not_blocked_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p8_p10_c
        :precondition (and (checked_p10)
                           (succ_p8_p10)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10)
                           (at_c_p8))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p8_p10_d
        :precondition (and (checked_p10)
                           (at_d_p8)
                           (succ_p8_p10)
                           (Bd_not_blocked_p10)
                           (Pd_not_blocked_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p8_p1_a
        :precondition (and (succ_p8_p1)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p8))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p8_p1_b
        :precondition (and (Bb_not_blocked_p1)
                           (succ_p8_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (at_b_p8))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p8_p1_c
        :precondition (and (succ_p8_p1)
                           (checked_p1)
                           (Pc_not_blocked_p1)
                           (at_c_p8)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p8_p1_d
        :precondition (and (succ_p8_p1)
                           (checked_p1)
                           (at_d_p8)
                           (Pd_not_blocked_p1)
                           (Bd_not_blocked_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p8_p2_a
        :precondition (and (checked_p2)
                           (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p8)
                           (succ_p8_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p8_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p8)
                           (Bb_not_blocked_p2)
                           (succ_p8_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p8_p2_c
        :precondition (and (Pc_not_blocked_p2)
                           (checked_p2)
                           (at_c_p8)
                           (Bc_not_blocked_p2)
                           (succ_p8_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p8_p2_d
        :precondition (and (at_d_p8)
                           (checked_p2)
                           (Bd_not_blocked_p2)
                           (succ_p8_p2)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p8_p3_a
        :precondition (and (Ba_not_blocked_p3)
                           (checked_p3)
                           (succ_p8_p3)
                           (at_a_p8)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p8_p3_b
        :precondition (and (checked_p3)
                           (at_b_p8)
                           (Pb_not_blocked_p3)
                           (succ_p8_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p8_p3_c
        :precondition (and (Pc_not_blocked_p3)
                           (checked_p3)
                           (succ_p8_p3)
                           (at_c_p8)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p8_p3_d
        :precondition (and (Pd_not_blocked_p3)
                           (at_d_p8)
                           (checked_p3)
                           (succ_p8_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p8_p4_a
        :precondition (and (succ_p8_p4)
                           (checked_p4)
                           (at_a_p8)
                           (Ba_not_blocked_p4)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p8_p4_b
        :precondition (and (Bb_not_blocked_p4)
                           (at_b_p8)
                           (succ_p8_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p8_p4_c
        :precondition (and (Pc_not_blocked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p8)
                           (succ_p8_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p8_p4_d
        :precondition (and (Pd_not_blocked_p4)
                           (succ_p8_p4)
                           (at_d_p8)
                           (Bd_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p8_p5_a
        :precondition (and (Ba_not_blocked_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (succ_p8_p5)
                           (at_a_p8))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p8_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (at_b_p8)
                           (Pb_not_blocked_p5)
                           (succ_p8_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p8_p5_c
        :precondition (and (Pc_not_blocked_p5)
                           (checked_p5)
                           (succ_p8_p5)
                           (at_c_p8)
                           (Bc_not_blocked_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p8_p5_d
        :precondition (and (at_d_p8)
                           (checked_p5)
                           (succ_p8_p5)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p8_p6_a
        :precondition (and (Pa_not_blocked_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p8)
                           (succ_p8_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p8_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p8)
                           (succ_p8_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p8_p6_c
        :precondition (and (checked_p6)
                           (succ_p8_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p8)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p8_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (at_d_p8)
                           (Pd_not_blocked_p6)
                           (checked_p6)
                           (succ_p8_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p8_p7_a
        :precondition (and (succ_p8_p7)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p8))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p8_p7_b
        :precondition (and (succ_p8_p7)
                           (checked_p7)
                           (at_b_p8)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p8_p7_c
        :precondition (and (succ_p8_p7)
                           (checked_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p8)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p8_p7_d
        :precondition (and (Bd_not_blocked_p7)
                           (succ_p8_p7)
                           (at_d_p8)
                           (Pd_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p8_p8_a
        :precondition (and (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (succ_p8_p8)
                           (at_a_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p8_p8_b
        :precondition (and (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p8)
                           (checked_p8)
                           (succ_p8_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p8_p8_c
        :precondition (and (checked_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p8)
                           (succ_p8_p8)
                           (Bc_not_blocked_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p8_p8_d
        :precondition (and (at_d_p8)
                           (Pd_not_blocked_p8)
                           (checked_p8)
                           (succ_p8_p8)
                           (Bd_not_blocked_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p8_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p8_p9)
                           (at_a_p8))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p8_p9_b
        :precondition (and (checked_p9)
                           (at_b_p8)
                           (Bb_not_blocked_p9)
                           (succ_p8_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p8_p9_c
        :precondition (and (checked_p9)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p8_p9)
                           (at_c_p8))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p8_p9_d
        :precondition (and (checked_p9)
                           (at_d_p8)
                           (succ_p8_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p9_p0011_a
        :precondition (and (succ_p9_p0011)
                           (checked_p0011)
                           (Pa_not_blocked_p0011)
                           (at_a_p9)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p9_p0011_b
        :precondition (and (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (at_b_p9)
                           (succ_p9_p0011)
                           (checked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p9_p0011_c
        :precondition (and (Bc_not_blocked_p0011)
                           (succ_p9_p0011)
                           (checked_p0011)
                           (at_c_p9)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p9_p0011_d
        :precondition (and (succ_p9_p0011)
                           (Bd_not_blocked_p0011)
                           (at_d_p9)
                           (checked_p0011)
                           (Pd_not_blocked_p0011))
        :effect (and
                    ; #13715: <==closure== 55690 (pos)
                    (Pd_obss_p0011)

                    ; #26918: <==closure== 83645 (pos)
                    (Pa_obss_p0011)

                    ; #27537: origin
                    (Bb_not_blocked_p0011)

                    ; #41295: <==commonly_known== 45848 (pos)
                    (Bb_obss_p0011)

                    ; #45848: origin
                    (obss_p0011)

                    ; #46434: <==commonly_known== 45848 (pos)
                    (Bc_obss_p0011)

                    ; #55690: <==commonly_known== 45848 (pos)
                    (Bd_obss_p0011)

                    ; #63570: <==closure== 27537 (pos)
                    (Pb_not_blocked_p0011)

                    ; #65419: origin
                    (Bc_not_blocked_p0011)

                    ; #69661: <==closure== 46434 (pos)
                    (Pc_obss_p0011)

                    ; #78227: <==closure== 79410 (pos)
                    (Pa_not_blocked_p0011)

                    ; #79410: origin
                    (Ba_not_blocked_p0011)

                    ; #79504: <==closure== 41295 (pos)
                    (Pb_obss_p0011)

                    ; #82512: origin
                    (Bd_not_blocked_p0011)

                    ; #83645: <==commonly_known== 45848 (pos)
                    (Ba_obss_p0011)

                    ; #85531: <==closure== 82512 (pos)
                    (Pd_not_blocked_p0011)

                    ; #88148: <==closure== 65419 (pos)
                    (Pc_not_blocked_p0011)

                    ; #13996: <==negation-removal== 83645 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16177: <==negation-removal== 26918 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #20509: <==negation-removal== 88148 (pos)
                    (not (Bc_blocked_p0011))

                    ; #20726: <==negation-removal== 85531 (pos)
                    (not (Bd_blocked_p0011))

                    ; #25685: <==negation-removal== 78227 (pos)
                    (not (Ba_blocked_p0011))

                    ; #30102: <==negation-removal== 79410 (pos)
                    (not (Pa_blocked_p0011))

                    ; #33380: <==negation-removal== 63570 (pos)
                    (not (Bb_blocked_p0011))

                    ; #36374: <==negation-removal== 27537 (pos)
                    (not (Pb_blocked_p0011))

                    ; #42282: <==negation-removal== 55690 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #42924: <==negation-removal== 41295 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #48190: <==negation-removal== 46434 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #54701: <==negation-removal== 45848 (pos)
                    (not (not_obss_p0011))

                    ; #64486: <==negation-removal== 79504 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #73387: <==negation-removal== 65419 (pos)
                    (not (Pc_blocked_p0011))

                    ; #74980: <==negation-removal== 82512 (pos)
                    (not (Pd_blocked_p0011))

                    ; #78090: <==negation-removal== 69661 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #86737: <==negation-removal== 13715 (pos)
                    (not (Bd_not_obss_p0011))))

    (:action communcells_p9_p012_a
        :precondition (and (checked_p012)
                           (Pa_not_blocked_p012)
                           (Ba_not_blocked_p012)
                           (succ_p9_p012)
                           (at_a_p9))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p9_p012_b
        :precondition (and (Bb_not_blocked_p012)
                           (checked_p012)
                           (succ_p9_p012)
                           (at_b_p9)
                           (Pb_not_blocked_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p9_p012_c
        :precondition (and (checked_p012)
                           (succ_p9_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (at_c_p9))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p9_p012_d
        :precondition (and (checked_p012)
                           (succ_p9_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p9)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #31125: <==commonly_known== 86290 (pos)
                    (Bb_obss_p012)

                    ; #35284: <==closure== 31125 (pos)
                    (Pb_obss_p012)

                    ; #35351: origin
                    (Bb_not_blocked_p012)

                    ; #40923: <==commonly_known== 86290 (pos)
                    (Bd_obss_p012)

                    ; #42148: <==closure== 66463 (pos)
                    (Pa_obss_p012)

                    ; #49685: <==closure== 89839 (pos)
                    (Pa_not_blocked_p012)

                    ; #52448: <==commonly_known== 86290 (pos)
                    (Bc_obss_p012)

                    ; #52747: <==closure== 70988 (pos)
                    (Pc_not_blocked_p012)

                    ; #66463: <==commonly_known== 86290 (pos)
                    (Ba_obss_p012)

                    ; #67342: <==closure== 35351 (pos)
                    (Pb_not_blocked_p012)

                    ; #67887: origin
                    (Bd_not_blocked_p012)

                    ; #70988: origin
                    (Bc_not_blocked_p012)

                    ; #83316: <==closure== 40923 (pos)
                    (Pd_obss_p012)

                    ; #86290: origin
                    (obss_p012)

                    ; #89839: origin
                    (Ba_not_blocked_p012)

                    ; #91017: <==closure== 52448 (pos)
                    (Pc_obss_p012)

                    ; #96317: <==closure== 67887 (pos)
                    (Pd_not_blocked_p012)

                    ; #11494: <==negation-removal== 66463 (pos)
                    (not (Pa_not_obss_p012))

                    ; #13701: <==negation-removal== 83316 (pos)
                    (not (Bd_not_obss_p012))

                    ; #13995: <==negation-removal== 67342 (pos)
                    (not (Bb_blocked_p012))

                    ; #24746: <==negation-removal== 52448 (pos)
                    (not (Pc_not_obss_p012))

                    ; #27925: <==negation-removal== 40923 (pos)
                    (not (Pd_not_obss_p012))

                    ; #38454: <==negation-removal== 70988 (pos)
                    (not (Pc_blocked_p012))

                    ; #57369: <==negation-removal== 91017 (pos)
                    (not (Bc_not_obss_p012))

                    ; #57665: <==negation-removal== 89839 (pos)
                    (not (Pa_blocked_p012))

                    ; #60360: <==negation-removal== 52747 (pos)
                    (not (Bc_blocked_p012))

                    ; #62108: <==negation-removal== 96317 (pos)
                    (not (Bd_blocked_p012))

                    ; #67051: <==negation-removal== 35284 (pos)
                    (not (Bb_not_obss_p012))

                    ; #67907: <==negation-removal== 31125 (pos)
                    (not (Pb_not_obss_p012))

                    ; #70732: <==negation-removal== 35351 (pos)
                    (not (Pb_blocked_p012))

                    ; #88253: <==negation-removal== 86290 (pos)
                    (not (not_obss_p012))

                    ; #88638: <==negation-removal== 67887 (pos)
                    (not (Pd_blocked_p012))

                    ; #91677: <==negation-removal== 42148 (pos)
                    (not (Ba_not_obss_p012))

                    ; #95604: <==negation-removal== 49685 (pos)
                    (not (Ba_blocked_p012))))

    (:action communcells_p9_p10_a
        :precondition (and (checked_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (succ_p9_p10)
                           (at_a_p9))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p9_p10_b
        :precondition (and (checked_p10)
                           (Pb_not_blocked_p10)
                           (at_b_p9)
                           (succ_p9_p10)
                           (Bb_not_blocked_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p9_p10_c
        :precondition (and (checked_p10)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10)
                           (succ_p9_p10)
                           (at_c_p9))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p9_p10_d
        :precondition (and (checked_p10)
                           (succ_p9_p10)
                           (at_d_p9)
                           (Bd_not_blocked_p10)
                           (Pd_not_blocked_p10))
        :effect (and
                    ; #10758: <==closure== 53745 (pos)
                    (Pc_obss_p10)

                    ; #15178: origin
                    (Ba_not_blocked_p10)

                    ; #16323: <==closure== 61781 (pos)
                    (Pb_not_blocked_p10)

                    ; #20682: <==closure== 34277 (pos)
                    (Pb_obss_p10)

                    ; #34277: <==commonly_known== 81752 (pos)
                    (Bb_obss_p10)

                    ; #35828: origin
                    (Bd_not_blocked_p10)

                    ; #53745: <==commonly_known== 81752 (pos)
                    (Bc_obss_p10)

                    ; #56139: <==closure== 62171 (pos)
                    (Pa_obss_p10)

                    ; #56514: <==closure== 60670 (pos)
                    (Pc_not_blocked_p10)

                    ; #60670: origin
                    (Bc_not_blocked_p10)

                    ; #61781: origin
                    (Bb_not_blocked_p10)

                    ; #62171: <==commonly_known== 81752 (pos)
                    (Ba_obss_p10)

                    ; #81752: origin
                    (obss_p10)

                    ; #81845: <==commonly_known== 81752 (pos)
                    (Bd_obss_p10)

                    ; #88861: <==closure== 15178 (pos)
                    (Pa_not_blocked_p10)

                    ; #89018: <==closure== 81845 (pos)
                    (Pd_obss_p10)

                    ; #89941: <==closure== 35828 (pos)
                    (Pd_not_blocked_p10)

                    ; #16475: <==negation-removal== 88861 (pos)
                    (not (Ba_blocked_p10))

                    ; #19008: <==negation-removal== 53745 (pos)
                    (not (Pc_not_obss_p10))

                    ; #33420: <==negation-removal== 89018 (pos)
                    (not (Bd_not_obss_p10))

                    ; #40511: <==negation-removal== 56139 (pos)
                    (not (Ba_not_obss_p10))

                    ; #46061: <==negation-removal== 89941 (pos)
                    (not (Bd_blocked_p10))

                    ; #46230: <==negation-removal== 15178 (pos)
                    (not (Pa_blocked_p10))

                    ; #47197: <==negation-removal== 61781 (pos)
                    (not (Pb_blocked_p10))

                    ; #53091: <==negation-removal== 81752 (pos)
                    (not (not_obss_p10))

                    ; #57223: <==negation-removal== 60670 (pos)
                    (not (Pc_blocked_p10))

                    ; #60820: <==negation-removal== 10758 (pos)
                    (not (Bc_not_obss_p10))

                    ; #65329: <==negation-removal== 16323 (pos)
                    (not (Bb_blocked_p10))

                    ; #66366: <==negation-removal== 20682 (pos)
                    (not (Bb_not_obss_p10))

                    ; #75504: <==negation-removal== 62171 (pos)
                    (not (Pa_not_obss_p10))

                    ; #76884: <==negation-removal== 81845 (pos)
                    (not (Pd_not_obss_p10))

                    ; #80159: <==negation-removal== 56514 (pos)
                    (not (Bc_blocked_p10))

                    ; #82540: <==negation-removal== 35828 (pos)
                    (not (Pd_blocked_p10))

                    ; #88394: <==negation-removal== 34277 (pos)
                    (not (Pb_not_obss_p10))))

    (:action communcells_p9_p1_a
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p9)
                           (succ_p9_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p9_p1_b
        :precondition (and (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (at_b_p9)
                           (succ_p9_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p9_p1_c
        :precondition (and (Pc_not_blocked_p1)
                           (checked_p1)
                           (at_c_p9)
                           (Bc_not_blocked_p1)
                           (succ_p9_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p9_p1_d
        :precondition (and (checked_p1)
                           (Pd_not_blocked_p1)
                           (at_d_p9)
                           (Bd_not_blocked_p1)
                           (succ_p9_p1))
        :effect (and
                    ; #11879: <==closure== 61775 (pos)
                    (Pc_obss_p1)

                    ; #19162: <==commonly_known== 27898 (pos)
                    (Ba_obss_p1)

                    ; #23380: <==commonly_known== 27898 (pos)
                    (Bd_obss_p1)

                    ; #27898: origin
                    (obss_p1)

                    ; #28765: origin
                    (Bc_not_blocked_p1)

                    ; #34307: origin
                    (Bb_not_blocked_p1)

                    ; #34510: <==closure== 87691 (pos)
                    (Pa_not_blocked_p1)

                    ; #47387: <==closure== 53192 (pos)
                    (Pb_obss_p1)

                    ; #50573: <==closure== 23380 (pos)
                    (Pd_obss_p1)

                    ; #52734: <==closure== 19162 (pos)
                    (Pa_obss_p1)

                    ; #53192: <==commonly_known== 27898 (pos)
                    (Bb_obss_p1)

                    ; #56323: <==closure== 28765 (pos)
                    (Pc_not_blocked_p1)

                    ; #60667: origin
                    (Bd_not_blocked_p1)

                    ; #61775: <==commonly_known== 27898 (pos)
                    (Bc_obss_p1)

                    ; #71550: <==closure== 34307 (pos)
                    (Pb_not_blocked_p1)

                    ; #87691: origin
                    (Ba_not_blocked_p1)

                    ; #91081: <==closure== 60667 (pos)
                    (Pd_not_blocked_p1)

                    ; #17570: <==negation-removal== 50573 (pos)
                    (not (Bd_not_obss_p1))

                    ; #18874: <==negation-removal== 47387 (pos)
                    (not (Bb_not_obss_p1))

                    ; #19344: <==negation-removal== 52734 (pos)
                    (not (Ba_not_obss_p1))

                    ; #25359: <==negation-removal== 87691 (pos)
                    (not (Pa_blocked_p1))

                    ; #27450: <==negation-removal== 27898 (pos)
                    (not (not_obss_p1))

                    ; #40880: <==negation-removal== 11879 (pos)
                    (not (Bc_not_obss_p1))

                    ; #41954: <==negation-removal== 60667 (pos)
                    (not (Pd_blocked_p1))

                    ; #43057: <==negation-removal== 56323 (pos)
                    (not (Bc_blocked_p1))

                    ; #51638: <==negation-removal== 61775 (pos)
                    (not (Pc_not_obss_p1))

                    ; #58007: <==negation-removal== 53192 (pos)
                    (not (Pb_not_obss_p1))

                    ; #68009: <==negation-removal== 34510 (pos)
                    (not (Ba_blocked_p1))

                    ; #69042: <==negation-removal== 71550 (pos)
                    (not (Bb_blocked_p1))

                    ; #69757: <==negation-removal== 91081 (pos)
                    (not (Bd_blocked_p1))

                    ; #73216: <==negation-removal== 28765 (pos)
                    (not (Pc_blocked_p1))

                    ; #90994: <==negation-removal== 23380 (pos)
                    (not (Pd_not_obss_p1))

                    ; #91005: <==negation-removal== 34307 (pos)
                    (not (Pb_blocked_p1))

                    ; #91888: <==negation-removal== 19162 (pos)
                    (not (Pa_not_obss_p1))))

    (:action communcells_p9_p2_a
        :precondition (and (checked_p2)
                           (Pa_not_blocked_p2)
                           (succ_p9_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p9))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p9_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p9)
                           (succ_p9_p2)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p9_p2_c
        :precondition (and (Pc_not_blocked_p2)
                           (checked_p2)
                           (succ_p9_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p9))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p9_p2_d
        :precondition (and (checked_p2)
                           (succ_p9_p2)
                           (at_d_p9)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #16495: <==closure== 86435 (pos)
                    (Pc_not_blocked_p2)

                    ; #16896: origin
                    (obss_p2)

                    ; #43533: <==commonly_known== 16896 (pos)
                    (Ba_obss_p2)

                    ; #44048: <==closure== 88998 (pos)
                    (Pb_not_blocked_p2)

                    ; #50290: origin
                    (Ba_not_blocked_p2)

                    ; #56504: <==closure== 63861 (pos)
                    (Pd_not_blocked_p2)

                    ; #57423: <==closure== 67126 (pos)
                    (Pd_obss_p2)

                    ; #59015: <==commonly_known== 16896 (pos)
                    (Bc_obss_p2)

                    ; #62220: <==commonly_known== 16896 (pos)
                    (Bb_obss_p2)

                    ; #63861: origin
                    (Bd_not_blocked_p2)

                    ; #66706: <==closure== 59015 (pos)
                    (Pc_obss_p2)

                    ; #67126: <==commonly_known== 16896 (pos)
                    (Bd_obss_p2)

                    ; #86435: origin
                    (Bc_not_blocked_p2)

                    ; #88998: origin
                    (Bb_not_blocked_p2)

                    ; #90100: <==closure== 50290 (pos)
                    (Pa_not_blocked_p2)

                    ; #90574: <==closure== 43533 (pos)
                    (Pa_obss_p2)

                    ; #92013: <==closure== 62220 (pos)
                    (Pb_obss_p2)

                    ; #10675: <==negation-removal== 90574 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10823: <==negation-removal== 44048 (pos)
                    (not (Bb_blocked_p2))

                    ; #14207: <==negation-removal== 43533 (pos)
                    (not (Pa_not_obss_p2))

                    ; #20013: <==negation-removal== 16896 (pos)
                    (not (not_obss_p2))

                    ; #24569: <==negation-removal== 88998 (pos)
                    (not (Pb_blocked_p2))

                    ; #25196: <==negation-removal== 62220 (pos)
                    (not (Pb_not_obss_p2))

                    ; #28978: <==negation-removal== 86435 (pos)
                    (not (Pc_blocked_p2))

                    ; #34474: <==negation-removal== 90100 (pos)
                    (not (Ba_blocked_p2))

                    ; #34529: <==negation-removal== 59015 (pos)
                    (not (Pc_not_obss_p2))

                    ; #46563: <==negation-removal== 50290 (pos)
                    (not (Pa_blocked_p2))

                    ; #48409: <==negation-removal== 63861 (pos)
                    (not (Pd_blocked_p2))

                    ; #56278: <==negation-removal== 16495 (pos)
                    (not (Bc_blocked_p2))

                    ; #60777: <==negation-removal== 57423 (pos)
                    (not (Bd_not_obss_p2))

                    ; #67089: <==negation-removal== 66706 (pos)
                    (not (Bc_not_obss_p2))

                    ; #73856: <==negation-removal== 92013 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76355: <==negation-removal== 67126 (pos)
                    (not (Pd_not_obss_p2))

                    ; #91581: <==negation-removal== 56504 (pos)
                    (not (Bd_blocked_p2))))

    (:action communcells_p9_p3_a
        :precondition (and (Ba_not_blocked_p3)
                           (checked_p3)
                           (succ_p9_p3)
                           (at_a_p9)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p9_p3_b
        :precondition (and (at_b_p9)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (succ_p9_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p9_p3_c
        :precondition (and (checked_p3)
                           (Pc_not_blocked_p3)
                           (succ_p9_p3)
                           (Bc_not_blocked_p3)
                           (at_c_p9))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p9_p3_d
        :precondition (and (Pd_not_blocked_p3)
                           (checked_p3)
                           (at_d_p9)
                           (succ_p9_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #14719: origin
                    (Bc_not_blocked_p3)

                    ; #18440: <==commonly_known== 72204 (pos)
                    (Bb_obss_p3)

                    ; #22683: <==closure== 63435 (pos)
                    (Pb_not_blocked_p3)

                    ; #25391: <==commonly_known== 72204 (pos)
                    (Bc_obss_p3)

                    ; #44995: <==closure== 63440 (pos)
                    (Pd_obss_p3)

                    ; #61223: <==closure== 70586 (pos)
                    (Pa_obss_p3)

                    ; #62056: <==closure== 87898 (pos)
                    (Pd_not_blocked_p3)

                    ; #63435: origin
                    (Bb_not_blocked_p3)

                    ; #63440: <==commonly_known== 72204 (pos)
                    (Bd_obss_p3)

                    ; #70586: <==commonly_known== 72204 (pos)
                    (Ba_obss_p3)

                    ; #72204: origin
                    (obss_p3)

                    ; #72715: <==closure== 14719 (pos)
                    (Pc_not_blocked_p3)

                    ; #73652: <==closure== 18440 (pos)
                    (Pb_obss_p3)

                    ; #80850: origin
                    (Ba_not_blocked_p3)

                    ; #80888: <==closure== 80850 (pos)
                    (Pa_not_blocked_p3)

                    ; #84675: <==closure== 25391 (pos)
                    (Pc_obss_p3)

                    ; #87898: origin
                    (Bd_not_blocked_p3)

                    ; #10002: <==negation-removal== 61223 (pos)
                    (not (Ba_not_obss_p3))

                    ; #16554: <==negation-removal== 84675 (pos)
                    (not (Bc_not_obss_p3))

                    ; #18930: <==negation-removal== 63435 (pos)
                    (not (Pb_blocked_p3))

                    ; #19567: <==negation-removal== 70586 (pos)
                    (not (Pa_not_obss_p3))

                    ; #21836: <==negation-removal== 63440 (pos)
                    (not (Pd_not_obss_p3))

                    ; #31251: <==negation-removal== 87898 (pos)
                    (not (Pd_blocked_p3))

                    ; #37423: <==negation-removal== 62056 (pos)
                    (not (Bd_blocked_p3))

                    ; #37430: <==negation-removal== 80888 (pos)
                    (not (Ba_blocked_p3))

                    ; #43021: <==negation-removal== 25391 (pos)
                    (not (Pc_not_obss_p3))

                    ; #52609: <==negation-removal== 14719 (pos)
                    (not (Pc_blocked_p3))

                    ; #58141: <==negation-removal== 22683 (pos)
                    (not (Bb_blocked_p3))

                    ; #60082: <==negation-removal== 73652 (pos)
                    (not (Bb_not_obss_p3))

                    ; #69213: <==negation-removal== 72204 (pos)
                    (not (not_obss_p3))

                    ; #73220: <==negation-removal== 44995 (pos)
                    (not (Bd_not_obss_p3))

                    ; #74780: <==negation-removal== 72715 (pos)
                    (not (Bc_blocked_p3))

                    ; #87906: <==negation-removal== 18440 (pos)
                    (not (Pb_not_obss_p3))

                    ; #90165: <==negation-removal== 80850 (pos)
                    (not (Pa_blocked_p3))))

    (:action communcells_p9_p4_a
        :precondition (and (succ_p9_p4)
                           (Pa_not_blocked_p4)
                           (at_a_p9)
                           (Ba_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p9_p4_b
        :precondition (and (Bb_not_blocked_p4)
                           (at_b_p9)
                           (succ_p9_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p9_p4_c
        :precondition (and (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (succ_p9_p4)
                           (at_c_p9)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p9_p4_d
        :precondition (and (Pd_not_blocked_p4)
                           (succ_p9_p4)
                           (at_d_p9)
                           (Bd_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12733: <==closure== 13436 (pos)
                    (Pb_not_blocked_p4)

                    ; #13436: origin
                    (Bb_not_blocked_p4)

                    ; #14284: <==closure== 75344 (pos)
                    (Pc_obss_p4)

                    ; #25102: origin
                    (Bc_not_blocked_p4)

                    ; #31580: <==closure== 80764 (pos)
                    (Pb_obss_p4)

                    ; #39997: origin
                    (Bd_not_blocked_p4)

                    ; #43431: <==closure== 47954 (pos)
                    (Pd_obss_p4)

                    ; #47954: <==commonly_known== 77805 (pos)
                    (Bd_obss_p4)

                    ; #58054: origin
                    (Ba_not_blocked_p4)

                    ; #65997: <==closure== 70413 (pos)
                    (Pa_obss_p4)

                    ; #70236: <==closure== 39997 (pos)
                    (Pd_not_blocked_p4)

                    ; #70413: <==commonly_known== 77805 (pos)
                    (Ba_obss_p4)

                    ; #71984: <==closure== 58054 (pos)
                    (Pa_not_blocked_p4)

                    ; #75344: <==commonly_known== 77805 (pos)
                    (Bc_obss_p4)

                    ; #77805: origin
                    (obss_p4)

                    ; #80764: <==commonly_known== 77805 (pos)
                    (Bb_obss_p4)

                    ; #87324: <==closure== 25102 (pos)
                    (Pc_not_blocked_p4)

                    ; #16590: <==negation-removal== 87324 (pos)
                    (not (Bc_blocked_p4))

                    ; #16982: <==negation-removal== 14284 (pos)
                    (not (Bc_not_obss_p4))

                    ; #17618: <==negation-removal== 75344 (pos)
                    (not (Pc_not_obss_p4))

                    ; #18326: <==negation-removal== 47954 (pos)
                    (not (Pd_not_obss_p4))

                    ; #21140: <==negation-removal== 70236 (pos)
                    (not (Bd_blocked_p4))

                    ; #26315: <==negation-removal== 31580 (pos)
                    (not (Bb_not_obss_p4))

                    ; #26760: <==negation-removal== 39997 (pos)
                    (not (Pd_blocked_p4))

                    ; #34154: <==negation-removal== 25102 (pos)
                    (not (Pc_blocked_p4))

                    ; #49820: <==negation-removal== 65997 (pos)
                    (not (Ba_not_obss_p4))

                    ; #52211: <==negation-removal== 77805 (pos)
                    (not (not_obss_p4))

                    ; #58693: <==negation-removal== 13436 (pos)
                    (not (Pb_blocked_p4))

                    ; #62212: <==negation-removal== 43431 (pos)
                    (not (Bd_not_obss_p4))

                    ; #62688: <==negation-removal== 70413 (pos)
                    (not (Pa_not_obss_p4))

                    ; #74059: <==negation-removal== 12733 (pos)
                    (not (Bb_blocked_p4))

                    ; #75415: <==negation-removal== 80764 (pos)
                    (not (Pb_not_obss_p4))

                    ; #76891: <==negation-removal== 71984 (pos)
                    (not (Ba_blocked_p4))

                    ; #83207: <==negation-removal== 58054 (pos)
                    (not (Pa_blocked_p4))))

    (:action communcells_p9_p5_a
        :precondition (and (Ba_not_blocked_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p9)
                           (succ_p9_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p9_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (at_b_p9)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (succ_p9_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p9_p5_c
        :precondition (and (Pc_not_blocked_p5)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (at_c_p9)
                           (succ_p9_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p9_p5_d
        :precondition (and (checked_p5)
                           (at_d_p9)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (succ_p9_p5))
        :effect (and
                    ; #12680: origin
                    (obss_p5)

                    ; #12716: <==closure== 53936 (pos)
                    (Pc_obss_p5)

                    ; #14430: <==closure== 87467 (pos)
                    (Pb_not_blocked_p5)

                    ; #17387: <==closure== 65387 (pos)
                    (Pa_not_blocked_p5)

                    ; #19341: origin
                    (Bd_not_blocked_p5)

                    ; #22756: <==closure== 70789 (pos)
                    (Pb_obss_p5)

                    ; #26018: <==commonly_known== 12680 (pos)
                    (Bd_obss_p5)

                    ; #31217: origin
                    (Bc_not_blocked_p5)

                    ; #34302: <==closure== 26018 (pos)
                    (Pd_obss_p5)

                    ; #35980: <==commonly_known== 12680 (pos)
                    (Ba_obss_p5)

                    ; #50245: <==closure== 19341 (pos)
                    (Pd_not_blocked_p5)

                    ; #50526: <==closure== 35980 (pos)
                    (Pa_obss_p5)

                    ; #53936: <==commonly_known== 12680 (pos)
                    (Bc_obss_p5)

                    ; #60327: <==closure== 31217 (pos)
                    (Pc_not_blocked_p5)

                    ; #65387: origin
                    (Ba_not_blocked_p5)

                    ; #70789: <==commonly_known== 12680 (pos)
                    (Bb_obss_p5)

                    ; #87467: origin
                    (Bb_not_blocked_p5)

                    ; #10879: <==negation-removal== 19341 (pos)
                    (not (Pd_blocked_p5))

                    ; #18033: <==negation-removal== 87467 (pos)
                    (not (Pb_blocked_p5))

                    ; #31559: <==negation-removal== 60327 (pos)
                    (not (Bc_blocked_p5))

                    ; #33169: <==negation-removal== 12680 (pos)
                    (not (not_obss_p5))

                    ; #40847: <==negation-removal== 17387 (pos)
                    (not (Ba_blocked_p5))

                    ; #42921: <==negation-removal== 34302 (pos)
                    (not (Bd_not_obss_p5))

                    ; #50648: <==negation-removal== 65387 (pos)
                    (not (Pa_blocked_p5))

                    ; #50702: <==negation-removal== 12716 (pos)
                    (not (Bc_not_obss_p5))

                    ; #54981: <==negation-removal== 22756 (pos)
                    (not (Bb_not_obss_p5))

                    ; #57127: <==negation-removal== 50526 (pos)
                    (not (Ba_not_obss_p5))

                    ; #65297: <==negation-removal== 31217 (pos)
                    (not (Pc_blocked_p5))

                    ; #66063: <==negation-removal== 14430 (pos)
                    (not (Bb_blocked_p5))

                    ; #68797: <==negation-removal== 50245 (pos)
                    (not (Bd_blocked_p5))

                    ; #81855: <==negation-removal== 26018 (pos)
                    (not (Pd_not_obss_p5))

                    ; #86180: <==negation-removal== 35980 (pos)
                    (not (Pa_not_obss_p5))

                    ; #91286: <==negation-removal== 70789 (pos)
                    (not (Pb_not_obss_p5))

                    ; #93183: <==negation-removal== 53936 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p9_p6_a
        :precondition (and (Pa_not_blocked_p6)
                           (succ_p9_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p9))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p9_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (succ_p9_p6)
                           (checked_p6)
                           (at_b_p9))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p9_p6_c
        :precondition (and (succ_p9_p6)
                           (at_c_p9)
                           (checked_p6)
                           (Pc_not_blocked_p6)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p9_p6_d
        :precondition (and (succ_p9_p6)
                           (Bd_not_blocked_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p9))
        :effect (and
                    ; #13609: <==commonly_known== 29001 (pos)
                    (Bc_obss_p6)

                    ; #19407: <==commonly_known== 29001 (pos)
                    (Ba_obss_p6)

                    ; #23501: <==closure== 19407 (pos)
                    (Pa_obss_p6)

                    ; #25676: <==closure== 13609 (pos)
                    (Pc_obss_p6)

                    ; #26202: origin
                    (Bd_not_blocked_p6)

                    ; #26273: <==closure== 30689 (pos)
                    (Pd_obss_p6)

                    ; #29001: origin
                    (obss_p6)

                    ; #30689: <==commonly_known== 29001 (pos)
                    (Bd_obss_p6)

                    ; #32515: <==commonly_known== 29001 (pos)
                    (Bb_obss_p6)

                    ; #50759: <==closure== 26202 (pos)
                    (Pd_not_blocked_p6)

                    ; #51079: origin
                    (Bc_not_blocked_p6)

                    ; #55211: <==closure== 32515 (pos)
                    (Pb_obss_p6)

                    ; #70106: <==closure== 86473 (pos)
                    (Pa_not_blocked_p6)

                    ; #79891: origin
                    (Bb_not_blocked_p6)

                    ; #86242: <==closure== 79891 (pos)
                    (Pb_not_blocked_p6)

                    ; #86473: origin
                    (Ba_not_blocked_p6)

                    ; #89115: <==closure== 51079 (pos)
                    (Pc_not_blocked_p6)

                    ; #14003: <==negation-removal== 26202 (pos)
                    (not (Pd_blocked_p6))

                    ; #17660: <==negation-removal== 79891 (pos)
                    (not (Pb_blocked_p6))

                    ; #32631: <==negation-removal== 29001 (pos)
                    (not (not_obss_p6))

                    ; #33688: <==negation-removal== 86473 (pos)
                    (not (Pa_blocked_p6))

                    ; #35535: <==negation-removal== 23501 (pos)
                    (not (Ba_not_obss_p6))

                    ; #36616: <==negation-removal== 50759 (pos)
                    (not (Bd_blocked_p6))

                    ; #42624: <==negation-removal== 70106 (pos)
                    (not (Ba_blocked_p6))

                    ; #44398: <==negation-removal== 19407 (pos)
                    (not (Pa_not_obss_p6))

                    ; #44451: <==negation-removal== 89115 (pos)
                    (not (Bc_blocked_p6))

                    ; #55341: <==negation-removal== 51079 (pos)
                    (not (Pc_blocked_p6))

                    ; #55550: <==negation-removal== 26273 (pos)
                    (not (Bd_not_obss_p6))

                    ; #71055: <==negation-removal== 30689 (pos)
                    (not (Pd_not_obss_p6))

                    ; #72600: <==negation-removal== 25676 (pos)
                    (not (Bc_not_obss_p6))

                    ; #84477: <==negation-removal== 55211 (pos)
                    (not (Bb_not_obss_p6))

                    ; #84848: <==negation-removal== 86242 (pos)
                    (not (Bb_blocked_p6))

                    ; #91939: <==negation-removal== 32515 (pos)
                    (not (Pb_not_obss_p6))

                    ; #94608: <==negation-removal== 13609 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p9_p7_a
        :precondition (and (checked_p7)
                           (succ_p9_p7)
                           (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p9))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p9_p7_b
        :precondition (and (checked_p7)
                           (at_b_p9)
                           (succ_p9_p7)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p9_p7_c
        :precondition (and (checked_p7)
                           (succ_p9_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p9)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p9_p7_d
        :precondition (and (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (succ_p9_p7)
                           (at_d_p9))
        :effect (and
                    ; #11202: origin
                    (Bb_not_blocked_p7)

                    ; #19406: origin
                    (Bc_not_blocked_p7)

                    ; #20764: origin
                    (obss_p7)

                    ; #22147: origin
                    (Ba_not_blocked_p7)

                    ; #22427: <==closure== 90698 (pos)
                    (Pb_obss_p7)

                    ; #30322: <==commonly_known== 20764 (pos)
                    (Bd_obss_p7)

                    ; #33309: <==closure== 22147 (pos)
                    (Pa_not_blocked_p7)

                    ; #43865: <==commonly_known== 20764 (pos)
                    (Ba_obss_p7)

                    ; #46747: <==closure== 30322 (pos)
                    (Pd_obss_p7)

                    ; #48238: <==closure== 57606 (pos)
                    (Pd_not_blocked_p7)

                    ; #55791: <==commonly_known== 20764 (pos)
                    (Bc_obss_p7)

                    ; #57606: origin
                    (Bd_not_blocked_p7)

                    ; #61202: <==closure== 11202 (pos)
                    (Pb_not_blocked_p7)

                    ; #80088: <==closure== 43865 (pos)
                    (Pa_obss_p7)

                    ; #84460: <==closure== 19406 (pos)
                    (Pc_not_blocked_p7)

                    ; #86775: <==closure== 55791 (pos)
                    (Pc_obss_p7)

                    ; #90698: <==commonly_known== 20764 (pos)
                    (Bb_obss_p7)

                    ; #17743: <==negation-removal== 43865 (pos)
                    (not (Pa_not_obss_p7))

                    ; #19445: <==negation-removal== 22427 (pos)
                    (not (Bb_not_obss_p7))

                    ; #20483: <==negation-removal== 48238 (pos)
                    (not (Bd_blocked_p7))

                    ; #25163: <==negation-removal== 61202 (pos)
                    (not (Bb_blocked_p7))

                    ; #26115: <==negation-removal== 84460 (pos)
                    (not (Bc_blocked_p7))

                    ; #29527: <==negation-removal== 22147 (pos)
                    (not (Pa_blocked_p7))

                    ; #30594: <==negation-removal== 80088 (pos)
                    (not (Ba_not_obss_p7))

                    ; #33714: <==negation-removal== 46747 (pos)
                    (not (Bd_not_obss_p7))

                    ; #41971: <==negation-removal== 19406 (pos)
                    (not (Pc_blocked_p7))

                    ; #42633: <==negation-removal== 20764 (pos)
                    (not (not_obss_p7))

                    ; #54075: <==negation-removal== 11202 (pos)
                    (not (Pb_blocked_p7))

                    ; #62646: <==negation-removal== 86775 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64976: <==negation-removal== 57606 (pos)
                    (not (Pd_blocked_p7))

                    ; #77581: <==negation-removal== 30322 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78230: <==negation-removal== 90698 (pos)
                    (not (Pb_not_obss_p7))

                    ; #90923: <==negation-removal== 55791 (pos)
                    (not (Pc_not_obss_p7))

                    ; #91678: <==negation-removal== 33309 (pos)
                    (not (Ba_blocked_p7))))

    (:action communcells_p9_p8_a
        :precondition (and (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (succ_p9_p8)
                           (at_a_p9))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p9_p8_b
        :precondition (and (Pb_not_blocked_p8)
                           (at_b_p9)
                           (Bb_not_blocked_p8)
                           (checked_p8)
                           (succ_p9_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p9_p8_c
        :precondition (and (checked_p8)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (succ_p9_p8)
                           (at_c_p9))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p9_p8_d
        :precondition (and (Pd_not_blocked_p8)
                           (checked_p8)
                           (at_d_p9)
                           (Bd_not_blocked_p8)
                           (succ_p9_p8))
        :effect (and
                    ; #16411: <==closure== 71777 (pos)
                    (Pa_obss_p8)

                    ; #32425: <==commonly_known== 60143 (pos)
                    (Bb_obss_p8)

                    ; #37400: <==commonly_known== 60143 (pos)
                    (Bc_obss_p8)

                    ; #40453: <==closure== 77050 (pos)
                    (Pb_not_blocked_p8)

                    ; #47040: <==closure== 50545 (pos)
                    (Pd_not_blocked_p8)

                    ; #49900: <==commonly_known== 60143 (pos)
                    (Bd_obss_p8)

                    ; #50545: origin
                    (Bd_not_blocked_p8)

                    ; #58864: <==closure== 49900 (pos)
                    (Pd_obss_p8)

                    ; #60143: origin
                    (obss_p8)

                    ; #71777: <==commonly_known== 60143 (pos)
                    (Ba_obss_p8)

                    ; #73560: <==closure== 32425 (pos)
                    (Pb_obss_p8)

                    ; #74738: <==closure== 81646 (pos)
                    (Pc_not_blocked_p8)

                    ; #77050: origin
                    (Bb_not_blocked_p8)

                    ; #79222: origin
                    (Ba_not_blocked_p8)

                    ; #81646: origin
                    (Bc_not_blocked_p8)

                    ; #82729: <==closure== 79222 (pos)
                    (Pa_not_blocked_p8)

                    ; #84226: <==closure== 37400 (pos)
                    (Pc_obss_p8)

                    ; #14046: <==negation-removal== 84226 (pos)
                    (not (Bc_not_obss_p8))

                    ; #19398: <==negation-removal== 40453 (pos)
                    (not (Bb_blocked_p8))

                    ; #29394: <==negation-removal== 58864 (pos)
                    (not (Bd_not_obss_p8))

                    ; #33513: <==negation-removal== 81646 (pos)
                    (not (Pc_blocked_p8))

                    ; #34195: <==negation-removal== 73560 (pos)
                    (not (Bb_not_obss_p8))

                    ; #45492: <==negation-removal== 71777 (pos)
                    (not (Pa_not_obss_p8))

                    ; #48460: <==negation-removal== 60143 (pos)
                    (not (not_obss_p8))

                    ; #56128: <==negation-removal== 74738 (pos)
                    (not (Bc_blocked_p8))

                    ; #56882: <==negation-removal== 82729 (pos)
                    (not (Ba_blocked_p8))

                    ; #63814: <==negation-removal== 79222 (pos)
                    (not (Pa_blocked_p8))

                    ; #64302: <==negation-removal== 50545 (pos)
                    (not (Pd_blocked_p8))

                    ; #67723: <==negation-removal== 37400 (pos)
                    (not (Pc_not_obss_p8))

                    ; #68783: <==negation-removal== 77050 (pos)
                    (not (Pb_blocked_p8))

                    ; #70111: <==negation-removal== 32425 (pos)
                    (not (Pb_not_obss_p8))

                    ; #83968: <==negation-removal== 16411 (pos)
                    (not (Ba_not_obss_p8))

                    ; #87080: <==negation-removal== 47040 (pos)
                    (not (Bd_blocked_p8))

                    ; #88858: <==negation-removal== 49900 (pos)
                    (not (Pd_not_obss_p8))))

    (:action communcells_p9_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p9_p9)
                           (at_a_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p9_p9_b
        :precondition (and (checked_p9)
                           (at_b_p9)
                           (succ_p9_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p9_p9_c
        :precondition (and (checked_p9)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p9_p9)
                           (at_c_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action communcells_p9_p9_d
        :precondition (and (checked_p9)
                           (succ_p9_p9)
                           (at_d_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #12755: <==closure== 57600 (pos)
                    (Pa_not_blocked_p9)

                    ; #13211: <==commonly_known== 21115 (pos)
                    (Bc_obss_p9)

                    ; #21115: origin
                    (obss_p9)

                    ; #25635: <==commonly_known== 21115 (pos)
                    (Bb_obss_p9)

                    ; #35824: origin
                    (Bd_not_blocked_p9)

                    ; #41595: <==closure== 84720 (pos)
                    (Pb_not_blocked_p9)

                    ; #41912: origin
                    (Bc_not_blocked_p9)

                    ; #46201: <==closure== 13211 (pos)
                    (Pc_obss_p9)

                    ; #50377: <==commonly_known== 21115 (pos)
                    (Ba_obss_p9)

                    ; #57600: origin
                    (Ba_not_blocked_p9)

                    ; #59110: <==commonly_known== 21115 (pos)
                    (Bd_obss_p9)

                    ; #67506: <==closure== 41912 (pos)
                    (Pc_not_blocked_p9)

                    ; #77443: <==closure== 59110 (pos)
                    (Pd_obss_p9)

                    ; #82006: <==closure== 25635 (pos)
                    (Pb_obss_p9)

                    ; #84720: origin
                    (Bb_not_blocked_p9)

                    ; #85818: <==closure== 50377 (pos)
                    (Pa_obss_p9)

                    ; #92802: <==closure== 35824 (pos)
                    (Pd_not_blocked_p9)

                    ; #10760: <==negation-removal== 46201 (pos)
                    (not (Bc_not_obss_p9))

                    ; #10771: <==negation-removal== 67506 (pos)
                    (not (Bc_blocked_p9))

                    ; #16881: <==negation-removal== 57600 (pos)
                    (not (Pa_blocked_p9))

                    ; #28205: <==negation-removal== 92802 (pos)
                    (not (Bd_blocked_p9))

                    ; #33963: <==negation-removal== 50377 (pos)
                    (not (Pa_not_obss_p9))

                    ; #39310: <==negation-removal== 35824 (pos)
                    (not (Pd_blocked_p9))

                    ; #40526: <==negation-removal== 12755 (pos)
                    (not (Ba_blocked_p9))

                    ; #52672: <==negation-removal== 59110 (pos)
                    (not (Pd_not_obss_p9))

                    ; #55786: <==negation-removal== 84720 (pos)
                    (not (Pb_blocked_p9))

                    ; #56719: <==negation-removal== 25635 (pos)
                    (not (Pb_not_obss_p9))

                    ; #61418: <==negation-removal== 82006 (pos)
                    (not (Bb_not_obss_p9))

                    ; #70388: <==negation-removal== 41912 (pos)
                    (not (Pc_blocked_p9))

                    ; #76539: <==negation-removal== 85818 (pos)
                    (not (Ba_not_obss_p9))

                    ; #78733: <==negation-removal== 77443 (pos)
                    (not (Bd_not_obss_p9))

                    ; #85057: <==negation-removal== 13211 (pos)
                    (not (Pc_not_obss_p9))

                    ; #87503: <==negation-removal== 21115 (pos)
                    (not (not_obss_p9))

                    ; #95529: <==negation-removal== 41595 (pos)
                    (not (Bb_blocked_p9))))

    (:action move_a_p0011_p0011
        :precondition (and (checked_p0011)
                           (at_a_p0011)
                           (succ_p0011_p0011)
                           (Ba_not_blocked_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #23295: <==commonly_known== 80428 (neg)
                    (not_at_a_p0011)

                    ; #80428: origin
                    (at_a_p0011)

                    ; #23295: <==negation-removal== 80428 (pos)
                    (not (not_at_a_p0011))

                    ; #80428: origin
                    (not (at_a_p0011))))

    (:action move_a_p0011_p012
        :precondition (and (checked_p012)
                           (succ_p0011_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (at_a_p0011))
        :effect (and
                    ; #23295: <==commonly_known== 80428 (neg)
                    (not_at_a_p0011)

                    ; #67762: origin
                    (at_a_p012)

                    ; #15318: <==negation-removal== 67762 (pos)
                    (not (not_at_a_p012))

                    ; #80428: origin
                    (not (at_a_p0011))))

    (:action move_a_p0011_p1
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (succ_p0011_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p0011))
        :effect (and
                    ; #23295: <==commonly_known== 80428 (neg)
                    (not_at_a_p0011)

                    ; #24164: origin
                    (at_a_p1)

                    ; #28702: <==negation-removal== 24164 (pos)
                    (not (not_at_a_p1))

                    ; #80428: origin
                    (not (at_a_p0011))))

    (:action move_a_p0011_p10
        :precondition (and (checked_p10)
                           (Ba_not_blocked_p10)
                           (at_a_p0011)
                           (Pa_not_blocked_p10)
                           (succ_p0011_p10))
        :effect (and
                    ; #23295: <==commonly_known== 80428 (neg)
                    (not_at_a_p0011)

                    ; #36699: origin
                    (at_a_p10)

                    ; #80428: origin
                    (not (at_a_p0011))

                    ; #84161: <==negation-removal== 36699 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p0011_p2
        :precondition (and (checked_p2)
                           (succ_p0011_p2)
                           (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p0011))
        :effect (and
                    ; #23295: <==commonly_known== 80428 (neg)
                    (not_at_a_p0011)

                    ; #50231: origin
                    (at_a_p2)

                    ; #57536: <==negation-removal== 50231 (pos)
                    (not (not_at_a_p2))

                    ; #80428: origin
                    (not (at_a_p0011))))

    (:action move_a_p0011_p3
        :precondition (and (Ba_not_blocked_p3)
                           (succ_p0011_p3)
                           (checked_p3)
                           (at_a_p0011)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #23295: <==commonly_known== 80428 (neg)
                    (not_at_a_p0011)

                    ; #76093: origin
                    (at_a_p3)

                    ; #70898: <==negation-removal== 76093 (pos)
                    (not (not_at_a_p3))

                    ; #80428: origin
                    (not (at_a_p0011))))

    (:action move_a_p0011_p4
        :precondition (and (succ_p0011_p4)
                           (checked_p4)
                           (at_a_p0011)
                           (Ba_not_blocked_p4)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #23295: <==commonly_known== 80428 (neg)
                    (not_at_a_p0011)

                    ; #64941: origin
                    (at_a_p4)

                    ; #80428: origin
                    (not (at_a_p0011))

                    ; #86879: <==negation-removal== 64941 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p0011_p5
        :precondition (and (Ba_not_blocked_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (succ_p0011_p5)
                           (at_a_p0011))
        :effect (and
                    ; #23295: <==commonly_known== 80428 (neg)
                    (not_at_a_p0011)

                    ; #48082: origin
                    (at_a_p5)

                    ; #65982: <==negation-removal== 48082 (pos)
                    (not (not_at_a_p5))

                    ; #80428: origin
                    (not (at_a_p0011))))

    (:action move_a_p0011_p6
        :precondition (and (Pa_not_blocked_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (succ_p0011_p6)
                           (at_a_p0011))
        :effect (and
                    ; #23295: <==commonly_known== 80428 (neg)
                    (not_at_a_p0011)

                    ; #69574: origin
                    (at_a_p6)

                    ; #16315: <==negation-removal== 69574 (pos)
                    (not (not_at_a_p6))

                    ; #80428: origin
                    (not (at_a_p0011))))

    (:action move_a_p0011_p7
        :precondition (and (checked_p7)
                           (succ_p0011_p7)
                           (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p0011))
        :effect (and
                    ; #19003: origin
                    (at_a_p7)

                    ; #23295: <==commonly_known== 80428 (neg)
                    (not_at_a_p0011)

                    ; #20315: <==negation-removal== 19003 (pos)
                    (not (not_at_a_p7))

                    ; #80428: origin
                    (not (at_a_p0011))))

    (:action move_a_p0011_p8
        :precondition (and (succ_p0011_p8)
                           (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (at_a_p0011))
        :effect (and
                    ; #23295: <==commonly_known== 80428 (neg)
                    (not_at_a_p0011)

                    ; #73194: origin
                    (at_a_p8)

                    ; #75415: <==negation-removal== 73194 (pos)
                    (not (not_at_a_p8))

                    ; #80428: origin
                    (not (at_a_p0011))))

    (:action move_a_p0011_p9
        :precondition (and (Ba_not_blocked_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p0011_p9)
                           (at_a_p0011))
        :effect (and
                    ; #23295: <==commonly_known== 80428 (neg)
                    (not_at_a_p0011)

                    ; #37260: origin
                    (at_a_p9)

                    ; #42207: <==negation-removal== 37260 (pos)
                    (not (not_at_a_p9))

                    ; #80428: origin
                    (not (at_a_p0011))))

    (:action move_a_p012_p0011
        :precondition (and (succ_p012_p0011)
                           (checked_p0011)
                           (at_a_p012)
                           (Pa_not_blocked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #15318: <==commonly_known== 67762 (neg)
                    (not_at_a_p012)

                    ; #80428: origin
                    (at_a_p0011)

                    ; #23295: <==negation-removal== 80428 (pos)
                    (not (not_at_a_p0011))

                    ; #67762: origin
                    (not (at_a_p012))))

    (:action move_a_p012_p012
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (succ_p012_p012)
                           (at_a_p012))
        :effect (and
                    ; #15318: <==commonly_known== 67762 (neg)
                    (not_at_a_p012)

                    ; #67762: origin
                    (at_a_p012)

                    ; #15318: <==negation-removal== 67762 (pos)
                    (not (not_at_a_p012))

                    ; #67762: origin
                    (not (at_a_p012))))

    (:action move_a_p012_p1
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (succ_p012_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p012))
        :effect (and
                    ; #15318: <==commonly_known== 67762 (neg)
                    (not_at_a_p012)

                    ; #24164: origin
                    (at_a_p1)

                    ; #28702: <==negation-removal== 24164 (pos)
                    (not (not_at_a_p1))

                    ; #67762: origin
                    (not (at_a_p012))))

    (:action move_a_p012_p10
        :precondition (and (checked_p10)
                           (succ_p012_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (at_a_p012))
        :effect (and
                    ; #15318: <==commonly_known== 67762 (neg)
                    (not_at_a_p012)

                    ; #36699: origin
                    (at_a_p10)

                    ; #67762: origin
                    (not (at_a_p012))

                    ; #84161: <==negation-removal== 36699 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p012_p2
        :precondition (and (Ba_not_blocked_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2)
                           (succ_p012_p2)
                           (at_a_p012))
        :effect (and
                    ; #15318: <==commonly_known== 67762 (neg)
                    (not_at_a_p012)

                    ; #50231: origin
                    (at_a_p2)

                    ; #57536: <==negation-removal== 50231 (pos)
                    (not (not_at_a_p2))

                    ; #67762: origin
                    (not (at_a_p012))))

    (:action move_a_p012_p3
        :precondition (and (Ba_not_blocked_p3)
                           (checked_p3)
                           (at_a_p012)
                           (Pa_not_blocked_p3)
                           (succ_p012_p3))
        :effect (and
                    ; #15318: <==commonly_known== 67762 (neg)
                    (not_at_a_p012)

                    ; #76093: origin
                    (at_a_p3)

                    ; #67762: origin
                    (not (at_a_p012))

                    ; #70898: <==negation-removal== 76093 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p012_p4
        :precondition (and (succ_p012_p4)
                           (at_a_p012)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #15318: <==commonly_known== 67762 (neg)
                    (not_at_a_p012)

                    ; #64941: origin
                    (at_a_p4)

                    ; #67762: origin
                    (not (at_a_p012))

                    ; #86879: <==negation-removal== 64941 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p012_p5
        :precondition (and (succ_p012_p5)
                           (Ba_not_blocked_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p012))
        :effect (and
                    ; #15318: <==commonly_known== 67762 (neg)
                    (not_at_a_p012)

                    ; #48082: origin
                    (at_a_p5)

                    ; #65982: <==negation-removal== 48082 (pos)
                    (not (not_at_a_p5))

                    ; #67762: origin
                    (not (at_a_p012))))

    (:action move_a_p012_p6
        :precondition (and (Pa_not_blocked_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p012)
                           (succ_p012_p6))
        :effect (and
                    ; #15318: <==commonly_known== 67762 (neg)
                    (not_at_a_p012)

                    ; #69574: origin
                    (at_a_p6)

                    ; #16315: <==negation-removal== 69574 (pos)
                    (not (not_at_a_p6))

                    ; #67762: origin
                    (not (at_a_p012))))

    (:action move_a_p012_p7
        :precondition (and (checked_p7)
                           (succ_p012_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p012))
        :effect (and
                    ; #15318: <==commonly_known== 67762 (neg)
                    (not_at_a_p012)

                    ; #19003: origin
                    (at_a_p7)

                    ; #20315: <==negation-removal== 19003 (pos)
                    (not (not_at_a_p7))

                    ; #67762: origin
                    (not (at_a_p012))))

    (:action move_a_p012_p8
        :precondition (and (succ_p012_p8)
                           (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (at_a_p012))
        :effect (and
                    ; #15318: <==commonly_known== 67762 (neg)
                    (not_at_a_p012)

                    ; #73194: origin
                    (at_a_p8)

                    ; #67762: origin
                    (not (at_a_p012))

                    ; #75415: <==negation-removal== 73194 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p012_p9
        :precondition (and (succ_p012_p9)
                           (Ba_not_blocked_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p012))
        :effect (and
                    ; #15318: <==commonly_known== 67762 (neg)
                    (not_at_a_p012)

                    ; #37260: origin
                    (at_a_p9)

                    ; #42207: <==negation-removal== 37260 (pos)
                    (not (not_at_a_p9))

                    ; #67762: origin
                    (not (at_a_p012))))

    (:action move_a_p10_p0011
        :precondition (and (at_a_p10)
                           (succ_p10_p0011)
                           (checked_p0011)
                           (Pa_not_blocked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #80428: origin
                    (at_a_p0011)

                    ; #84161: <==commonly_known== 36699 (neg)
                    (not_at_a_p10)

                    ; #23295: <==negation-removal== 80428 (pos)
                    (not (not_at_a_p0011))

                    ; #36699: origin
                    (not (at_a_p10))))

    (:action move_a_p10_p012
        :precondition (and (checked_p012)
                           (Pa_not_blocked_p012)
                           (Ba_not_blocked_p012)
                           (at_a_p10)
                           (succ_p10_p012))
        :effect (and
                    ; #67762: origin
                    (at_a_p012)

                    ; #84161: <==commonly_known== 36699 (neg)
                    (not_at_a_p10)

                    ; #15318: <==negation-removal== 67762 (pos)
                    (not (not_at_a_p012))

                    ; #36699: origin
                    (not (at_a_p10))))

    (:action move_a_p10_p1
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (at_a_p10)
                           (Pa_not_blocked_p1)
                           (succ_p10_p1))
        :effect (and
                    ; #24164: origin
                    (at_a_p1)

                    ; #84161: <==commonly_known== 36699 (neg)
                    (not_at_a_p10)

                    ; #28702: <==negation-removal== 24164 (pos)
                    (not (not_at_a_p1))

                    ; #36699: origin
                    (not (at_a_p10))))

    (:action move_a_p10_p10
        :precondition (and (checked_p10)
                           (at_a_p10)
                           (succ_p10_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10))
        :effect (and
                    ; #36699: origin
                    (at_a_p10)

                    ; #84161: <==commonly_known== 36699 (neg)
                    (not_at_a_p10)

                    ; #36699: origin
                    (not (at_a_p10))

                    ; #84161: <==negation-removal== 36699 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p10_p2
        :precondition (and (at_a_p10)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (succ_p10_p2)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #50231: origin
                    (at_a_p2)

                    ; #84161: <==commonly_known== 36699 (neg)
                    (not_at_a_p10)

                    ; #36699: origin
                    (not (at_a_p10))

                    ; #57536: <==negation-removal== 50231 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p10_p3
        :precondition (and (Ba_not_blocked_p3)
                           (at_a_p10)
                           (checked_p3)
                           (succ_p10_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #76093: origin
                    (at_a_p3)

                    ; #84161: <==commonly_known== 36699 (neg)
                    (not_at_a_p10)

                    ; #36699: origin
                    (not (at_a_p10))

                    ; #70898: <==negation-removal== 76093 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p10_p4
        :precondition (and (at_a_p10)
                           (succ_p10_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #64941: origin
                    (at_a_p4)

                    ; #84161: <==commonly_known== 36699 (neg)
                    (not_at_a_p10)

                    ; #36699: origin
                    (not (at_a_p10))

                    ; #86879: <==negation-removal== 64941 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p10_p5
        :precondition (and (at_a_p10)
                           (Ba_not_blocked_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (succ_p10_p5))
        :effect (and
                    ; #48082: origin
                    (at_a_p5)

                    ; #84161: <==commonly_known== 36699 (neg)
                    (not_at_a_p10)

                    ; #36699: origin
                    (not (at_a_p10))

                    ; #65982: <==negation-removal== 48082 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p10_p6
        :precondition (and (Pa_not_blocked_p6)
                           (at_a_p10)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (succ_p10_p6))
        :effect (and
                    ; #69574: origin
                    (at_a_p6)

                    ; #84161: <==commonly_known== 36699 (neg)
                    (not_at_a_p10)

                    ; #16315: <==negation-removal== 69574 (pos)
                    (not (not_at_a_p6))

                    ; #36699: origin
                    (not (at_a_p10))))

    (:action move_a_p10_p7
        :precondition (and (checked_p7)
                           (at_a_p10)
                           (succ_p10_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #19003: origin
                    (at_a_p7)

                    ; #84161: <==commonly_known== 36699 (neg)
                    (not_at_a_p10)

                    ; #20315: <==negation-removal== 19003 (pos)
                    (not (not_at_a_p7))

                    ; #36699: origin
                    (not (at_a_p10))))

    (:action move_a_p10_p8
        :precondition (and (succ_p10_p8)
                           (at_a_p10)
                           (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #73194: origin
                    (at_a_p8)

                    ; #84161: <==commonly_known== 36699 (neg)
                    (not_at_a_p10)

                    ; #36699: origin
                    (not (at_a_p10))

                    ; #75415: <==negation-removal== 73194 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p10_p9
        :precondition (and (Ba_not_blocked_p9)
                           (checked_p9)
                           (at_a_p10)
                           (Pa_not_blocked_p9)
                           (succ_p10_p9))
        :effect (and
                    ; #37260: origin
                    (at_a_p9)

                    ; #84161: <==commonly_known== 36699 (neg)
                    (not_at_a_p10)

                    ; #36699: origin
                    (not (at_a_p10))

                    ; #42207: <==negation-removal== 37260 (pos)
                    (not (not_at_a_p9))))

    (:action move_a_p1_p0011
        :precondition (and (succ_p1_p0011)
                           (checked_p0011)
                           (at_a_p1)
                           (Ba_not_blocked_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #28702: <==commonly_known== 24164 (neg)
                    (not_at_a_p1)

                    ; #80428: origin
                    (at_a_p0011)

                    ; #23295: <==negation-removal== 80428 (pos)
                    (not (not_at_a_p0011))

                    ; #24164: origin
                    (not (at_a_p1))))

    (:action move_a_p1_p012
        :precondition (and (succ_p1_p012)
                           (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (at_a_p1))
        :effect (and
                    ; #28702: <==commonly_known== 24164 (neg)
                    (not_at_a_p1)

                    ; #67762: origin
                    (at_a_p012)

                    ; #15318: <==negation-removal== 67762 (pos)
                    (not (not_at_a_p012))

                    ; #24164: origin
                    (not (at_a_p1))))

    (:action move_a_p1_p1
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1)
                           (succ_p1_p1)
                           (at_a_p1))
        :effect (and
                    ; #24164: origin
                    (at_a_p1)

                    ; #28702: <==commonly_known== 24164 (neg)
                    (not_at_a_p1)

                    ; #24164: origin
                    (not (at_a_p1))

                    ; #28702: <==negation-removal== 24164 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p1_p10
        :precondition (and (checked_p10)
                           (succ_p1_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (at_a_p1))
        :effect (and
                    ; #28702: <==commonly_known== 24164 (neg)
                    (not_at_a_p1)

                    ; #36699: origin
                    (at_a_p10)

                    ; #24164: origin
                    (not (at_a_p1))

                    ; #84161: <==negation-removal== 36699 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p1_p2
        :precondition (and (checked_p2)
                           (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p1)
                           (succ_p1_p2))
        :effect (and
                    ; #28702: <==commonly_known== 24164 (neg)
                    (not_at_a_p1)

                    ; #50231: origin
                    (at_a_p2)

                    ; #24164: origin
                    (not (at_a_p1))

                    ; #57536: <==negation-removal== 50231 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p1_p3
        :precondition (and (succ_p1_p3)
                           (Ba_not_blocked_p3)
                           (checked_p3)
                           (at_a_p1)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #28702: <==commonly_known== 24164 (neg)
                    (not_at_a_p1)

                    ; #76093: origin
                    (at_a_p3)

                    ; #24164: origin
                    (not (at_a_p1))

                    ; #70898: <==negation-removal== 76093 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p1_p4
        :precondition (and (succ_p1_p4)
                           (checked_p4)
                           (at_a_p1)
                           (Ba_not_blocked_p4)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #28702: <==commonly_known== 24164 (neg)
                    (not_at_a_p1)

                    ; #64941: origin
                    (at_a_p4)

                    ; #24164: origin
                    (not (at_a_p1))

                    ; #86879: <==negation-removal== 64941 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p1_p5
        :precondition (and (succ_p1_p5)
                           (Ba_not_blocked_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p1))
        :effect (and
                    ; #28702: <==commonly_known== 24164 (neg)
                    (not_at_a_p1)

                    ; #48082: origin
                    (at_a_p5)

                    ; #24164: origin
                    (not (at_a_p1))

                    ; #65982: <==negation-removal== 48082 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p1_p6
        :precondition (and (succ_p1_p6)
                           (Pa_not_blocked_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p1))
        :effect (and
                    ; #28702: <==commonly_known== 24164 (neg)
                    (not_at_a_p1)

                    ; #69574: origin
                    (at_a_p6)

                    ; #16315: <==negation-removal== 69574 (pos)
                    (not (not_at_a_p6))

                    ; #24164: origin
                    (not (at_a_p1))))

    (:action move_a_p1_p7
        :precondition (and (succ_p1_p7)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p1))
        :effect (and
                    ; #19003: origin
                    (at_a_p7)

                    ; #28702: <==commonly_known== 24164 (neg)
                    (not_at_a_p1)

                    ; #20315: <==negation-removal== 19003 (pos)
                    (not (not_at_a_p7))

                    ; #24164: origin
                    (not (at_a_p1))))

    (:action move_a_p1_p8
        :precondition (and (succ_p1_p8)
                           (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (at_a_p1))
        :effect (and
                    ; #28702: <==commonly_known== 24164 (neg)
                    (not_at_a_p1)

                    ; #73194: origin
                    (at_a_p8)

                    ; #24164: origin
                    (not (at_a_p1))

                    ; #75415: <==negation-removal== 73194 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p1_p9
        :precondition (and (Ba_not_blocked_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p1)
                           (succ_p1_p9))
        :effect (and
                    ; #28702: <==commonly_known== 24164 (neg)
                    (not_at_a_p1)

                    ; #37260: origin
                    (at_a_p9)

                    ; #24164: origin
                    (not (at_a_p1))

                    ; #42207: <==negation-removal== 37260 (pos)
                    (not (not_at_a_p9))))

    (:action move_a_p2_p0011
        :precondition (and (succ_p2_p0011)
                           (checked_p0011)
                           (Pa_not_blocked_p0011)
                           (Ba_not_blocked_p0011)
                           (at_a_p2))
        :effect (and
                    ; #57536: <==commonly_known== 50231 (neg)
                    (not_at_a_p2)

                    ; #80428: origin
                    (at_a_p0011)

                    ; #23295: <==negation-removal== 80428 (pos)
                    (not (not_at_a_p0011))

                    ; #50231: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p012
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (succ_p2_p012)
                           (at_a_p2))
        :effect (and
                    ; #57536: <==commonly_known== 50231 (neg)
                    (not_at_a_p2)

                    ; #67762: origin
                    (at_a_p012)

                    ; #15318: <==negation-removal== 67762 (pos)
                    (not (not_at_a_p012))

                    ; #50231: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p1
        :precondition (and (Ba_not_blocked_p1)
                           (succ_p2_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p2))
        :effect (and
                    ; #24164: origin
                    (at_a_p1)

                    ; #57536: <==commonly_known== 50231 (neg)
                    (not_at_a_p2)

                    ; #28702: <==negation-removal== 24164 (pos)
                    (not (not_at_a_p1))

                    ; #50231: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p10
        :precondition (and (checked_p10)
                           (succ_p2_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (at_a_p2))
        :effect (and
                    ; #36699: origin
                    (at_a_p10)

                    ; #57536: <==commonly_known== 50231 (neg)
                    (not_at_a_p2)

                    ; #50231: origin
                    (not (at_a_p2))

                    ; #84161: <==negation-removal== 36699 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p2_p2
        :precondition (and (checked_p2)
                           (Pa_not_blocked_p2)
                           (succ_p2_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p2))
        :effect (and
                    ; #50231: origin
                    (at_a_p2)

                    ; #57536: <==commonly_known== 50231 (neg)
                    (not_at_a_p2)

                    ; #50231: origin
                    (not (at_a_p2))

                    ; #57536: <==negation-removal== 50231 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p2_p3
        :precondition (and (Ba_not_blocked_p3)
                           (succ_p2_p3)
                           (checked_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p2))
        :effect (and
                    ; #57536: <==commonly_known== 50231 (neg)
                    (not_at_a_p2)

                    ; #76093: origin
                    (at_a_p3)

                    ; #50231: origin
                    (not (at_a_p2))

                    ; #70898: <==negation-removal== 76093 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p2_p4
        :precondition (and (succ_p2_p4)
                           (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p2))
        :effect (and
                    ; #57536: <==commonly_known== 50231 (neg)
                    (not_at_a_p2)

                    ; #64941: origin
                    (at_a_p4)

                    ; #50231: origin
                    (not (at_a_p2))

                    ; #86879: <==negation-removal== 64941 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p2_p5
        :precondition (and (Ba_not_blocked_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (succ_p2_p5)
                           (at_a_p2))
        :effect (and
                    ; #48082: origin
                    (at_a_p5)

                    ; #57536: <==commonly_known== 50231 (neg)
                    (not_at_a_p2)

                    ; #50231: origin
                    (not (at_a_p2))

                    ; #65982: <==negation-removal== 48082 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p2_p6
        :precondition (and (Pa_not_blocked_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (succ_p2_p6)
                           (at_a_p2))
        :effect (and
                    ; #57536: <==commonly_known== 50231 (neg)
                    (not_at_a_p2)

                    ; #69574: origin
                    (at_a_p6)

                    ; #16315: <==negation-removal== 69574 (pos)
                    (not (not_at_a_p6))

                    ; #50231: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p7
        :precondition (and (checked_p7)
                           (at_a_p2)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (succ_p2_p7))
        :effect (and
                    ; #19003: origin
                    (at_a_p7)

                    ; #57536: <==commonly_known== 50231 (neg)
                    (not_at_a_p2)

                    ; #20315: <==negation-removal== 19003 (pos)
                    (not (not_at_a_p7))

                    ; #50231: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p8
        :precondition (and (succ_p2_p8)
                           (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (at_a_p2))
        :effect (and
                    ; #57536: <==commonly_known== 50231 (neg)
                    (not_at_a_p2)

                    ; #73194: origin
                    (at_a_p8)

                    ; #50231: origin
                    (not (at_a_p2))

                    ; #75415: <==negation-removal== 73194 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p2_p9
        :precondition (and (Ba_not_blocked_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p2_p9)
                           (at_a_p2))
        :effect (and
                    ; #37260: origin
                    (at_a_p9)

                    ; #57536: <==commonly_known== 50231 (neg)
                    (not_at_a_p2)

                    ; #42207: <==negation-removal== 37260 (pos)
                    (not (not_at_a_p9))

                    ; #50231: origin
                    (not (at_a_p2))))

    (:action move_a_p3_p0011
        :precondition (and (at_a_p3)
                           (succ_p3_p0011)
                           (checked_p0011)
                           (Pa_not_blocked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #70898: <==commonly_known== 76093 (neg)
                    (not_at_a_p3)

                    ; #80428: origin
                    (at_a_p0011)

                    ; #23295: <==negation-removal== 80428 (pos)
                    (not (not_at_a_p0011))

                    ; #76093: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p012
        :precondition (and (at_a_p3)
                           (checked_p012)
                           (Pa_not_blocked_p012)
                           (Ba_not_blocked_p012)
                           (succ_p3_p012))
        :effect (and
                    ; #67762: origin
                    (at_a_p012)

                    ; #70898: <==commonly_known== 76093 (neg)
                    (not_at_a_p3)

                    ; #15318: <==negation-removal== 67762 (pos)
                    (not (not_at_a_p012))

                    ; #76093: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p1
        :precondition (and (at_a_p3)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1)
                           (succ_p3_p1))
        :effect (and
                    ; #24164: origin
                    (at_a_p1)

                    ; #70898: <==commonly_known== 76093 (neg)
                    (not_at_a_p3)

                    ; #28702: <==negation-removal== 24164 (pos)
                    (not (not_at_a_p1))

                    ; #76093: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p10
        :precondition (and (checked_p10)
                           (at_a_p3)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (succ_p3_p10))
        :effect (and
                    ; #36699: origin
                    (at_a_p10)

                    ; #70898: <==commonly_known== 76093 (neg)
                    (not_at_a_p3)

                    ; #76093: origin
                    (not (at_a_p3))

                    ; #84161: <==negation-removal== 36699 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p3_p2
        :precondition (and (at_a_p3)
                           (succ_p3_p2)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #50231: origin
                    (at_a_p2)

                    ; #70898: <==commonly_known== 76093 (neg)
                    (not_at_a_p3)

                    ; #57536: <==negation-removal== 50231 (pos)
                    (not (not_at_a_p2))

                    ; #76093: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p3
        :precondition (and (at_a_p3)
                           (succ_p3_p3)
                           (Ba_not_blocked_p3)
                           (checked_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #70898: <==commonly_known== 76093 (neg)
                    (not_at_a_p3)

                    ; #76093: origin
                    (at_a_p3)

                    ; #70898: <==negation-removal== 76093 (pos)
                    (not (not_at_a_p3))

                    ; #76093: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p4
        :precondition (and (at_a_p3)
                           (succ_p3_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #64941: origin
                    (at_a_p4)

                    ; #70898: <==commonly_known== 76093 (neg)
                    (not_at_a_p3)

                    ; #76093: origin
                    (not (at_a_p3))

                    ; #86879: <==negation-removal== 64941 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p3_p5
        :precondition (and (at_a_p3)
                           (Ba_not_blocked_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (succ_p3_p5))
        :effect (and
                    ; #48082: origin
                    (at_a_p5)

                    ; #70898: <==commonly_known== 76093 (neg)
                    (not_at_a_p3)

                    ; #65982: <==negation-removal== 48082 (pos)
                    (not (not_at_a_p5))

                    ; #76093: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p6
        :precondition (and (at_a_p3)
                           (Pa_not_blocked_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (succ_p3_p6))
        :effect (and
                    ; #69574: origin
                    (at_a_p6)

                    ; #70898: <==commonly_known== 76093 (neg)
                    (not_at_a_p3)

                    ; #16315: <==negation-removal== 69574 (pos)
                    (not (not_at_a_p6))

                    ; #76093: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p7
        :precondition (and (at_a_p3)
                           (succ_p3_p7)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #19003: origin
                    (at_a_p7)

                    ; #70898: <==commonly_known== 76093 (neg)
                    (not_at_a_p3)

                    ; #20315: <==negation-removal== 19003 (pos)
                    (not (not_at_a_p7))

                    ; #76093: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p8
        :precondition (and (at_a_p3)
                           (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (succ_p3_p8))
        :effect (and
                    ; #70898: <==commonly_known== 76093 (neg)
                    (not_at_a_p3)

                    ; #73194: origin
                    (at_a_p8)

                    ; #75415: <==negation-removal== 73194 (pos)
                    (not (not_at_a_p8))

                    ; #76093: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p9
        :precondition (and (Ba_not_blocked_p9)
                           (at_a_p3)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p3_p9))
        :effect (and
                    ; #37260: origin
                    (at_a_p9)

                    ; #70898: <==commonly_known== 76093 (neg)
                    (not_at_a_p3)

                    ; #42207: <==negation-removal== 37260 (pos)
                    (not (not_at_a_p9))

                    ; #76093: origin
                    (not (at_a_p3))))

    (:action move_a_p4_p0011
        :precondition (and (succ_p4_p0011)
                           (at_a_p4)
                           (checked_p0011)
                           (Pa_not_blocked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #80428: origin
                    (at_a_p0011)

                    ; #86879: <==commonly_known== 64941 (neg)
                    (not_at_a_p4)

                    ; #23295: <==negation-removal== 80428 (pos)
                    (not (not_at_a_p0011))

                    ; #64941: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p012
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (succ_p4_p012)
                           (at_a_p4))
        :effect (and
                    ; #67762: origin
                    (at_a_p012)

                    ; #86879: <==commonly_known== 64941 (neg)
                    (not_at_a_p4)

                    ; #15318: <==negation-removal== 67762 (pos)
                    (not (not_at_a_p012))

                    ; #64941: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p1
        :precondition (and (succ_p4_p1)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p4))
        :effect (and
                    ; #24164: origin
                    (at_a_p1)

                    ; #86879: <==commonly_known== 64941 (neg)
                    (not_at_a_p4)

                    ; #28702: <==negation-removal== 24164 (pos)
                    (not (not_at_a_p1))

                    ; #64941: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p10
        :precondition (and (checked_p10)
                           (succ_p4_p10)
                           (Ba_not_blocked_p10)
                           (at_a_p4)
                           (Pa_not_blocked_p10))
        :effect (and
                    ; #36699: origin
                    (at_a_p10)

                    ; #86879: <==commonly_known== 64941 (neg)
                    (not_at_a_p4)

                    ; #64941: origin
                    (not (at_a_p4))

                    ; #84161: <==negation-removal== 36699 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p4_p2
        :precondition (and (checked_p2)
                           (Pa_not_blocked_p2)
                           (succ_p4_p2)
                           (at_a_p4)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #50231: origin
                    (at_a_p2)

                    ; #86879: <==commonly_known== 64941 (neg)
                    (not_at_a_p4)

                    ; #57536: <==negation-removal== 50231 (pos)
                    (not (not_at_a_p2))

                    ; #64941: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p3
        :precondition (and (Ba_not_blocked_p3)
                           (checked_p3)
                           (succ_p4_p3)
                           (at_a_p4)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #76093: origin
                    (at_a_p3)

                    ; #86879: <==commonly_known== 64941 (neg)
                    (not_at_a_p4)

                    ; #64941: origin
                    (not (at_a_p4))

                    ; #70898: <==negation-removal== 76093 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p4_p4
        :precondition (and (at_a_p4)
                           (succ_p4_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #64941: origin
                    (at_a_p4)

                    ; #86879: <==commonly_known== 64941 (neg)
                    (not_at_a_p4)

                    ; #64941: origin
                    (not (at_a_p4))

                    ; #86879: <==negation-removal== 64941 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p4_p5
        :precondition (and (Ba_not_blocked_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p4)
                           (succ_p4_p5))
        :effect (and
                    ; #48082: origin
                    (at_a_p5)

                    ; #86879: <==commonly_known== 64941 (neg)
                    (not_at_a_p4)

                    ; #64941: origin
                    (not (at_a_p4))

                    ; #65982: <==negation-removal== 48082 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p4_p6
        :precondition (and (succ_p4_p6)
                           (Pa_not_blocked_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p4))
        :effect (and
                    ; #69574: origin
                    (at_a_p6)

                    ; #86879: <==commonly_known== 64941 (neg)
                    (not_at_a_p4)

                    ; #16315: <==negation-removal== 69574 (pos)
                    (not (not_at_a_p6))

                    ; #64941: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p7
        :precondition (and (checked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p4)
                           (Pa_not_blocked_p7)
                           (succ_p4_p7))
        :effect (and
                    ; #19003: origin
                    (at_a_p7)

                    ; #86879: <==commonly_known== 64941 (neg)
                    (not_at_a_p4)

                    ; #20315: <==negation-removal== 19003 (pos)
                    (not (not_at_a_p7))

                    ; #64941: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p8
        :precondition (and (succ_p4_p8)
                           (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (at_a_p4)
                           (checked_p8))
        :effect (and
                    ; #73194: origin
                    (at_a_p8)

                    ; #86879: <==commonly_known== 64941 (neg)
                    (not_at_a_p4)

                    ; #64941: origin
                    (not (at_a_p4))

                    ; #75415: <==negation-removal== 73194 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p4_p9
        :precondition (and (Ba_not_blocked_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p4)
                           (succ_p4_p9))
        :effect (and
                    ; #37260: origin
                    (at_a_p9)

                    ; #86879: <==commonly_known== 64941 (neg)
                    (not_at_a_p4)

                    ; #42207: <==negation-removal== 37260 (pos)
                    (not (not_at_a_p9))

                    ; #64941: origin
                    (not (at_a_p4))))

    (:action move_a_p5_p0011
        :precondition (and (checked_p0011)
                           (succ_p5_p0011)
                           (at_a_p5)
                           (Pa_not_blocked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #65982: <==commonly_known== 48082 (neg)
                    (not_at_a_p5)

                    ; #80428: origin
                    (at_a_p0011)

                    ; #23295: <==negation-removal== 80428 (pos)
                    (not (not_at_a_p0011))

                    ; #48082: origin
                    (not (at_a_p5))))

    (:action move_a_p5_p012
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (succ_p5_p012)
                           (at_a_p5))
        :effect (and
                    ; #65982: <==commonly_known== 48082 (neg)
                    (not_at_a_p5)

                    ; #67762: origin
                    (at_a_p012)

                    ; #15318: <==negation-removal== 67762 (pos)
                    (not (not_at_a_p012))

                    ; #48082: origin
                    (not (at_a_p5))))

    (:action move_a_p5_p1
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1)
                           (succ_p5_p1)
                           (at_a_p5))
        :effect (and
                    ; #24164: origin
                    (at_a_p1)

                    ; #65982: <==commonly_known== 48082 (neg)
                    (not_at_a_p5)

                    ; #28702: <==negation-removal== 24164 (pos)
                    (not (not_at_a_p1))

                    ; #48082: origin
                    (not (at_a_p5))))

    (:action move_a_p5_p10
        :precondition (and (checked_p10)
                           (at_a_p5)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (succ_p5_p10))
        :effect (and
                    ; #36699: origin
                    (at_a_p10)

                    ; #65982: <==commonly_known== 48082 (neg)
                    (not_at_a_p5)

                    ; #48082: origin
                    (not (at_a_p5))

                    ; #84161: <==negation-removal== 36699 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p5_p2
        :precondition (and (checked_p2)
                           (Pa_not_blocked_p2)
                           (succ_p5_p2)
                           (at_a_p5)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #50231: origin
                    (at_a_p2)

                    ; #65982: <==commonly_known== 48082 (neg)
                    (not_at_a_p5)

                    ; #48082: origin
                    (not (at_a_p5))

                    ; #57536: <==negation-removal== 50231 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p5_p3
        :precondition (and (succ_p5_p3)
                           (Ba_not_blocked_p3)
                           (checked_p3)
                           (at_a_p5)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #65982: <==commonly_known== 48082 (neg)
                    (not_at_a_p5)

                    ; #76093: origin
                    (at_a_p3)

                    ; #48082: origin
                    (not (at_a_p5))

                    ; #70898: <==negation-removal== 76093 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p5_p4
        :precondition (and (succ_p5_p4)
                           (at_a_p5)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #64941: origin
                    (at_a_p4)

                    ; #65982: <==commonly_known== 48082 (neg)
                    (not_at_a_p5)

                    ; #48082: origin
                    (not (at_a_p5))

                    ; #86879: <==negation-removal== 64941 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p5_p5
        :precondition (and (Ba_not_blocked_p5)
                           (succ_p5_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p5))
        :effect (and
                    ; #48082: origin
                    (at_a_p5)

                    ; #65982: <==commonly_known== 48082 (neg)
                    (not_at_a_p5)

                    ; #48082: origin
                    (not (at_a_p5))

                    ; #65982: <==negation-removal== 48082 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p5_p6
        :precondition (and (Pa_not_blocked_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p5)
                           (succ_p5_p6))
        :effect (and
                    ; #65982: <==commonly_known== 48082 (neg)
                    (not_at_a_p5)

                    ; #69574: origin
                    (at_a_p6)

                    ; #16315: <==negation-removal== 69574 (pos)
                    (not (not_at_a_p6))

                    ; #48082: origin
                    (not (at_a_p5))))

    (:action move_a_p5_p7
        :precondition (and (at_a_p5)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p5_p7)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #19003: origin
                    (at_a_p7)

                    ; #65982: <==commonly_known== 48082 (neg)
                    (not_at_a_p5)

                    ; #20315: <==negation-removal== 19003 (pos)
                    (not (not_at_a_p7))

                    ; #48082: origin
                    (not (at_a_p5))))

    (:action move_a_p5_p8
        :precondition (and (succ_p5_p8)
                           (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (at_a_p5))
        :effect (and
                    ; #65982: <==commonly_known== 48082 (neg)
                    (not_at_a_p5)

                    ; #73194: origin
                    (at_a_p8)

                    ; #48082: origin
                    (not (at_a_p5))

                    ; #75415: <==negation-removal== 73194 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p5_p9
        :precondition (and (Ba_not_blocked_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p5)
                           (succ_p5_p9))
        :effect (and
                    ; #37260: origin
                    (at_a_p9)

                    ; #65982: <==commonly_known== 48082 (neg)
                    (not_at_a_p5)

                    ; #42207: <==negation-removal== 37260 (pos)
                    (not (not_at_a_p9))

                    ; #48082: origin
                    (not (at_a_p5))))

    (:action move_a_p6_p0011
        :precondition (and (checked_p0011)
                           (succ_p6_p0011)
                           (Pa_not_blocked_p0011)
                           (Ba_not_blocked_p0011)
                           (at_a_p6))
        :effect (and
                    ; #16315: <==commonly_known== 69574 (neg)
                    (not_at_a_p6)

                    ; #80428: origin
                    (at_a_p0011)

                    ; #23295: <==negation-removal== 80428 (pos)
                    (not (not_at_a_p0011))

                    ; #69574: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p012
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (succ_p6_p012)
                           (at_a_p6))
        :effect (and
                    ; #16315: <==commonly_known== 69574 (neg)
                    (not_at_a_p6)

                    ; #67762: origin
                    (at_a_p012)

                    ; #15318: <==negation-removal== 67762 (pos)
                    (not (not_at_a_p012))

                    ; #69574: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p1
        :precondition (and (succ_p6_p1)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p6))
        :effect (and
                    ; #16315: <==commonly_known== 69574 (neg)
                    (not_at_a_p6)

                    ; #24164: origin
                    (at_a_p1)

                    ; #28702: <==negation-removal== 24164 (pos)
                    (not (not_at_a_p1))

                    ; #69574: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p10
        :precondition (and (checked_p10)
                           (at_a_p6)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (succ_p6_p10))
        :effect (and
                    ; #16315: <==commonly_known== 69574 (neg)
                    (not_at_a_p6)

                    ; #36699: origin
                    (at_a_p10)

                    ; #69574: origin
                    (not (at_a_p6))

                    ; #84161: <==negation-removal== 36699 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p6_p2
        :precondition (and (succ_p6_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p6))
        :effect (and
                    ; #16315: <==commonly_known== 69574 (neg)
                    (not_at_a_p6)

                    ; #50231: origin
                    (at_a_p2)

                    ; #57536: <==negation-removal== 50231 (pos)
                    (not (not_at_a_p2))

                    ; #69574: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p3
        :precondition (and (Ba_not_blocked_p3)
                           (at_a_p6)
                           (checked_p3)
                           (Pa_not_blocked_p3)
                           (succ_p6_p3))
        :effect (and
                    ; #16315: <==commonly_known== 69574 (neg)
                    (not_at_a_p6)

                    ; #76093: origin
                    (at_a_p3)

                    ; #69574: origin
                    (not (at_a_p6))

                    ; #70898: <==negation-removal== 76093 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p6_p4
        :precondition (and (succ_p6_p4)
                           (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p6))
        :effect (and
                    ; #16315: <==commonly_known== 69574 (neg)
                    (not_at_a_p6)

                    ; #64941: origin
                    (at_a_p4)

                    ; #69574: origin
                    (not (at_a_p6))

                    ; #86879: <==negation-removal== 64941 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p6_p5
        :precondition (and (succ_p6_p5)
                           (Ba_not_blocked_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p6))
        :effect (and
                    ; #16315: <==commonly_known== 69574 (neg)
                    (not_at_a_p6)

                    ; #48082: origin
                    (at_a_p5)

                    ; #65982: <==negation-removal== 48082 (pos)
                    (not (not_at_a_p5))

                    ; #69574: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p6
        :precondition (and (Pa_not_blocked_p6)
                           (succ_p6_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p6))
        :effect (and
                    ; #16315: <==commonly_known== 69574 (neg)
                    (not_at_a_p6)

                    ; #69574: origin
                    (at_a_p6)

                    ; #16315: <==negation-removal== 69574 (pos)
                    (not (not_at_a_p6))

                    ; #69574: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p7
        :precondition (and (checked_p7)
                           (at_a_p6)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (succ_p6_p7))
        :effect (and
                    ; #16315: <==commonly_known== 69574 (neg)
                    (not_at_a_p6)

                    ; #19003: origin
                    (at_a_p7)

                    ; #20315: <==negation-removal== 19003 (pos)
                    (not (not_at_a_p7))

                    ; #69574: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p8
        :precondition (and (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (succ_p6_p8)
                           (at_a_p6))
        :effect (and
                    ; #16315: <==commonly_known== 69574 (neg)
                    (not_at_a_p6)

                    ; #73194: origin
                    (at_a_p8)

                    ; #69574: origin
                    (not (at_a_p6))

                    ; #75415: <==negation-removal== 73194 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p6_p9
        :precondition (and (Ba_not_blocked_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p6_p9)
                           (at_a_p6))
        :effect (and
                    ; #16315: <==commonly_known== 69574 (neg)
                    (not_at_a_p6)

                    ; #37260: origin
                    (at_a_p9)

                    ; #42207: <==negation-removal== 37260 (pos)
                    (not (not_at_a_p9))

                    ; #69574: origin
                    (not (at_a_p6))))

    (:action move_a_p7_p0011
        :precondition (and (at_a_p7)
                           (checked_p0011)
                           (succ_p7_p0011)
                           (Ba_not_blocked_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #20315: <==commonly_known== 19003 (neg)
                    (not_at_a_p7)

                    ; #80428: origin
                    (at_a_p0011)

                    ; #19003: origin
                    (not (at_a_p7))

                    ; #23295: <==negation-removal== 80428 (pos)
                    (not (not_at_a_p0011))))

    (:action move_a_p7_p012
        :precondition (and (checked_p012)
                           (succ_p7_p012)
                           (Pa_not_blocked_p012)
                           (at_a_p7)
                           (Ba_not_blocked_p012))
        :effect (and
                    ; #20315: <==commonly_known== 19003 (neg)
                    (not_at_a_p7)

                    ; #67762: origin
                    (at_a_p012)

                    ; #15318: <==negation-removal== 67762 (pos)
                    (not (not_at_a_p012))

                    ; #19003: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p1
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (at_a_p7)
                           (Pa_not_blocked_p1)
                           (succ_p7_p1))
        :effect (and
                    ; #20315: <==commonly_known== 19003 (neg)
                    (not_at_a_p7)

                    ; #24164: origin
                    (at_a_p1)

                    ; #19003: origin
                    (not (at_a_p7))

                    ; #28702: <==negation-removal== 24164 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p7_p10
        :precondition (and (checked_p10)
                           (succ_p7_p10)
                           (at_a_p7)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10))
        :effect (and
                    ; #20315: <==commonly_known== 19003 (neg)
                    (not_at_a_p7)

                    ; #36699: origin
                    (at_a_p10)

                    ; #19003: origin
                    (not (at_a_p7))

                    ; #84161: <==negation-removal== 36699 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p7_p2
        :precondition (and (at_a_p7)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (succ_p7_p2)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #20315: <==commonly_known== 19003 (neg)
                    (not_at_a_p7)

                    ; #50231: origin
                    (at_a_p2)

                    ; #19003: origin
                    (not (at_a_p7))

                    ; #57536: <==negation-removal== 50231 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p7_p3
        :precondition (and (Ba_not_blocked_p3)
                           (at_a_p7)
                           (checked_p3)
                           (succ_p7_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #20315: <==commonly_known== 19003 (neg)
                    (not_at_a_p7)

                    ; #76093: origin
                    (at_a_p3)

                    ; #19003: origin
                    (not (at_a_p7))

                    ; #70898: <==negation-removal== 76093 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p7_p4
        :precondition (and (at_a_p7)
                           (succ_p7_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #20315: <==commonly_known== 19003 (neg)
                    (not_at_a_p7)

                    ; #64941: origin
                    (at_a_p4)

                    ; #19003: origin
                    (not (at_a_p7))

                    ; #86879: <==negation-removal== 64941 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p7_p5
        :precondition (and (at_a_p7)
                           (Ba_not_blocked_p5)
                           (succ_p7_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #20315: <==commonly_known== 19003 (neg)
                    (not_at_a_p7)

                    ; #48082: origin
                    (at_a_p5)

                    ; #19003: origin
                    (not (at_a_p7))

                    ; #65982: <==negation-removal== 48082 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p7_p6
        :precondition (and (succ_p7_p6)
                           (at_a_p7)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #20315: <==commonly_known== 19003 (neg)
                    (not_at_a_p7)

                    ; #69574: origin
                    (at_a_p6)

                    ; #16315: <==negation-removal== 69574 (pos)
                    (not (not_at_a_p6))

                    ; #19003: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p7
        :precondition (and (checked_p7)
                           (at_a_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #19003: origin
                    (at_a_p7)

                    ; #20315: <==commonly_known== 19003 (neg)
                    (not_at_a_p7)

                    ; #19003: origin
                    (not (at_a_p7))

                    ; #20315: <==negation-removal== 19003 (pos)
                    (not (not_at_a_p7))))

    (:action move_a_p7_p8
        :precondition (and (at_a_p7)
                           (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (succ_p7_p8))
        :effect (and
                    ; #20315: <==commonly_known== 19003 (neg)
                    (not_at_a_p7)

                    ; #73194: origin
                    (at_a_p8)

                    ; #19003: origin
                    (not (at_a_p7))

                    ; #75415: <==negation-removal== 73194 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p7_p9
        :precondition (and (Ba_not_blocked_p9)
                           (succ_p7_p9)
                           (checked_p9)
                           (at_a_p7)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #20315: <==commonly_known== 19003 (neg)
                    (not_at_a_p7)

                    ; #37260: origin
                    (at_a_p9)

                    ; #19003: origin
                    (not (at_a_p7))

                    ; #42207: <==negation-removal== 37260 (pos)
                    (not (not_at_a_p9))))

    (:action move_a_p8_p0011
        :precondition (and (succ_p8_p0011)
                           (checked_p0011)
                           (at_a_p8)
                           (Ba_not_blocked_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #75415: <==commonly_known== 73194 (neg)
                    (not_at_a_p8)

                    ; #80428: origin
                    (at_a_p0011)

                    ; #23295: <==negation-removal== 80428 (pos)
                    (not (not_at_a_p0011))

                    ; #73194: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p012
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (succ_p8_p012)
                           (at_a_p8))
        :effect (and
                    ; #67762: origin
                    (at_a_p012)

                    ; #75415: <==commonly_known== 73194 (neg)
                    (not_at_a_p8)

                    ; #15318: <==negation-removal== 67762 (pos)
                    (not (not_at_a_p012))

                    ; #73194: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p1
        :precondition (and (succ_p8_p1)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p8))
        :effect (and
                    ; #24164: origin
                    (at_a_p1)

                    ; #75415: <==commonly_known== 73194 (neg)
                    (not_at_a_p8)

                    ; #28702: <==negation-removal== 24164 (pos)
                    (not (not_at_a_p1))

                    ; #73194: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p10
        :precondition (and (checked_p10)
                           (succ_p8_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (at_a_p8))
        :effect (and
                    ; #36699: origin
                    (at_a_p10)

                    ; #75415: <==commonly_known== 73194 (neg)
                    (not_at_a_p8)

                    ; #73194: origin
                    (not (at_a_p8))

                    ; #84161: <==negation-removal== 36699 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p8_p2
        :precondition (and (checked_p2)
                           (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p8)
                           (succ_p8_p2))
        :effect (and
                    ; #50231: origin
                    (at_a_p2)

                    ; #75415: <==commonly_known== 73194 (neg)
                    (not_at_a_p8)

                    ; #57536: <==negation-removal== 50231 (pos)
                    (not (not_at_a_p2))

                    ; #73194: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p3
        :precondition (and (Ba_not_blocked_p3)
                           (checked_p3)
                           (succ_p8_p3)
                           (at_a_p8)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #75415: <==commonly_known== 73194 (neg)
                    (not_at_a_p8)

                    ; #76093: origin
                    (at_a_p3)

                    ; #70898: <==negation-removal== 76093 (pos)
                    (not (not_at_a_p3))

                    ; #73194: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p4
        :precondition (and (succ_p8_p4)
                           (checked_p4)
                           (at_a_p8)
                           (Ba_not_blocked_p4)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #64941: origin
                    (at_a_p4)

                    ; #75415: <==commonly_known== 73194 (neg)
                    (not_at_a_p8)

                    ; #73194: origin
                    (not (at_a_p8))

                    ; #86879: <==negation-removal== 64941 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p8_p5
        :precondition (and (Ba_not_blocked_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (succ_p8_p5)
                           (at_a_p8))
        :effect (and
                    ; #48082: origin
                    (at_a_p5)

                    ; #75415: <==commonly_known== 73194 (neg)
                    (not_at_a_p8)

                    ; #65982: <==negation-removal== 48082 (pos)
                    (not (not_at_a_p5))

                    ; #73194: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p6
        :precondition (and (Pa_not_blocked_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p8)
                           (succ_p8_p6))
        :effect (and
                    ; #69574: origin
                    (at_a_p6)

                    ; #75415: <==commonly_known== 73194 (neg)
                    (not_at_a_p8)

                    ; #16315: <==negation-removal== 69574 (pos)
                    (not (not_at_a_p6))

                    ; #73194: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p7
        :precondition (and (succ_p8_p7)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p8))
        :effect (and
                    ; #19003: origin
                    (at_a_p7)

                    ; #75415: <==commonly_known== 73194 (neg)
                    (not_at_a_p8)

                    ; #20315: <==negation-removal== 19003 (pos)
                    (not (not_at_a_p7))

                    ; #73194: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p8
        :precondition (and (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (succ_p8_p8)
                           (at_a_p8))
        :effect (and
                    ; #73194: origin
                    (at_a_p8)

                    ; #75415: <==commonly_known== 73194 (neg)
                    (not_at_a_p8)

                    ; #73194: origin
                    (not (at_a_p8))

                    ; #75415: <==negation-removal== 73194 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p8_p9
        :precondition (and (Ba_not_blocked_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p8_p9)
                           (at_a_p8))
        :effect (and
                    ; #37260: origin
                    (at_a_p9)

                    ; #75415: <==commonly_known== 73194 (neg)
                    (not_at_a_p8)

                    ; #42207: <==negation-removal== 37260 (pos)
                    (not (not_at_a_p9))

                    ; #73194: origin
                    (not (at_a_p8))))

    (:action move_a_p9_p0011
        :precondition (and (succ_p9_p0011)
                           (checked_p0011)
                           (Pa_not_blocked_p0011)
                           (at_a_p9)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #42207: <==commonly_known== 37260 (neg)
                    (not_at_a_p9)

                    ; #80428: origin
                    (at_a_p0011)

                    ; #23295: <==negation-removal== 80428 (pos)
                    (not (not_at_a_p0011))

                    ; #37260: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p012
        :precondition (and (checked_p012)
                           (Pa_not_blocked_p012)
                           (Ba_not_blocked_p012)
                           (succ_p9_p012)
                           (at_a_p9))
        :effect (and
                    ; #42207: <==commonly_known== 37260 (neg)
                    (not_at_a_p9)

                    ; #67762: origin
                    (at_a_p012)

                    ; #15318: <==negation-removal== 67762 (pos)
                    (not (not_at_a_p012))

                    ; #37260: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p1
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p9)
                           (succ_p9_p1))
        :effect (and
                    ; #24164: origin
                    (at_a_p1)

                    ; #42207: <==commonly_known== 37260 (neg)
                    (not_at_a_p9)

                    ; #28702: <==negation-removal== 24164 (pos)
                    (not (not_at_a_p1))

                    ; #37260: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p10
        :precondition (and (checked_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (succ_p9_p10)
                           (at_a_p9))
        :effect (and
                    ; #36699: origin
                    (at_a_p10)

                    ; #42207: <==commonly_known== 37260 (neg)
                    (not_at_a_p9)

                    ; #37260: origin
                    (not (at_a_p9))

                    ; #84161: <==negation-removal== 36699 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p9_p2
        :precondition (and (checked_p2)
                           (Pa_not_blocked_p2)
                           (succ_p9_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p9))
        :effect (and
                    ; #42207: <==commonly_known== 37260 (neg)
                    (not_at_a_p9)

                    ; #50231: origin
                    (at_a_p2)

                    ; #37260: origin
                    (not (at_a_p9))

                    ; #57536: <==negation-removal== 50231 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p9_p3
        :precondition (and (Ba_not_blocked_p3)
                           (checked_p3)
                           (succ_p9_p3)
                           (at_a_p9)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #42207: <==commonly_known== 37260 (neg)
                    (not_at_a_p9)

                    ; #76093: origin
                    (at_a_p3)

                    ; #37260: origin
                    (not (at_a_p9))

                    ; #70898: <==negation-removal== 76093 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p9_p4
        :precondition (and (succ_p9_p4)
                           (Pa_not_blocked_p4)
                           (at_a_p9)
                           (Ba_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #42207: <==commonly_known== 37260 (neg)
                    (not_at_a_p9)

                    ; #64941: origin
                    (at_a_p4)

                    ; #37260: origin
                    (not (at_a_p9))

                    ; #86879: <==negation-removal== 64941 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p9_p5
        :precondition (and (Ba_not_blocked_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p9)
                           (succ_p9_p5))
        :effect (and
                    ; #42207: <==commonly_known== 37260 (neg)
                    (not_at_a_p9)

                    ; #48082: origin
                    (at_a_p5)

                    ; #37260: origin
                    (not (at_a_p9))

                    ; #65982: <==negation-removal== 48082 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p9_p6
        :precondition (and (Pa_not_blocked_p6)
                           (succ_p9_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p9))
        :effect (and
                    ; #42207: <==commonly_known== 37260 (neg)
                    (not_at_a_p9)

                    ; #69574: origin
                    (at_a_p6)

                    ; #16315: <==negation-removal== 69574 (pos)
                    (not (not_at_a_p6))

                    ; #37260: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p7
        :precondition (and (checked_p7)
                           (succ_p9_p7)
                           (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p9))
        :effect (and
                    ; #19003: origin
                    (at_a_p7)

                    ; #42207: <==commonly_known== 37260 (neg)
                    (not_at_a_p9)

                    ; #20315: <==negation-removal== 19003 (pos)
                    (not (not_at_a_p7))

                    ; #37260: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p8
        :precondition (and (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (succ_p9_p8)
                           (at_a_p9))
        :effect (and
                    ; #42207: <==commonly_known== 37260 (neg)
                    (not_at_a_p9)

                    ; #73194: origin
                    (at_a_p8)

                    ; #37260: origin
                    (not (at_a_p9))

                    ; #75415: <==negation-removal== 73194 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p9_p9
        :precondition (and (Ba_not_blocked_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p9_p9)
                           (at_a_p9))
        :effect (and
                    ; #37260: origin
                    (at_a_p9)

                    ; #42207: <==commonly_known== 37260 (neg)
                    (not_at_a_p9)

                    ; #37260: origin
                    (not (at_a_p9))

                    ; #42207: <==negation-removal== 37260 (pos)
                    (not (not_at_a_p9))))

    (:action move_b_p0011_p0011
        :precondition (and (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (at_b_p0011)
                           (checked_p0011)
                           (succ_p0011_p0011))
        :effect (and
                    ; #37935: <==commonly_known== 51978 (neg)
                    (not_at_b_p0011)

                    ; #51978: origin
                    (at_b_p0011)

                    ; #37935: <==negation-removal== 51978 (pos)
                    (not (not_at_b_p0011))

                    ; #51978: origin
                    (not (at_b_p0011))))

    (:action move_b_p0011_p012
        :precondition (and (Bb_not_blocked_p012)
                           (succ_p0011_p012)
                           (checked_p012)
                           (at_b_p0011)
                           (Pb_not_blocked_p012))
        :effect (and
                    ; #37935: <==commonly_known== 51978 (neg)
                    (not_at_b_p0011)

                    ; #71260: origin
                    (at_b_p012)

                    ; #51978: origin
                    (not (at_b_p0011))

                    ; #57281: <==negation-removal== 71260 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p0011_p1
        :precondition (and (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (succ_p0011_p1)
                           (at_b_p0011))
        :effect (and
                    ; #37935: <==commonly_known== 51978 (neg)
                    (not_at_b_p0011)

                    ; #83626: origin
                    (at_b_p1)

                    ; #51978: origin
                    (not (at_b_p0011))

                    ; #89412: <==negation-removal== 83626 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p0011_p10
        :precondition (and (checked_p10)
                           (Pb_not_blocked_p10)
                           (at_b_p0011)
                           (Bb_not_blocked_p10)
                           (succ_p0011_p10))
        :effect (and
                    ; #37935: <==commonly_known== 51978 (neg)
                    (not_at_b_p0011)

                    ; #67785: origin
                    (at_b_p10)

                    ; #51978: origin
                    (not (at_b_p0011))

                    ; #68342: <==negation-removal== 67785 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p0011_p2
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (succ_p0011_p2)
                           (at_b_p0011)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #37935: <==commonly_known== 51978 (neg)
                    (not_at_b_p0011)

                    ; #62294: origin
                    (at_b_p2)

                    ; #40230: <==negation-removal== 62294 (pos)
                    (not (not_at_b_p2))

                    ; #51978: origin
                    (not (at_b_p0011))))

    (:action move_b_p0011_p3
        :precondition (and (checked_p3)
                           (succ_p0011_p3)
                           (Pb_not_blocked_p3)
                           (at_b_p0011)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #37935: <==commonly_known== 51978 (neg)
                    (not_at_b_p0011)

                    ; #79309: origin
                    (at_b_p3)

                    ; #48607: <==negation-removal== 79309 (pos)
                    (not (not_at_b_p3))

                    ; #51978: origin
                    (not (at_b_p0011))))

    (:action move_b_p0011_p4
        :precondition (and (Bb_not_blocked_p4)
                           (at_b_p0011)
                           (succ_p0011_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #36407: origin
                    (at_b_p4)

                    ; #37935: <==commonly_known== 51978 (neg)
                    (not_at_b_p0011)

                    ; #51978: origin
                    (not (at_b_p0011))

                    ; #57928: <==negation-removal== 36407 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p0011_p5
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p0011)
                           (succ_p0011_p5))
        :effect (and
                    ; #26400: origin
                    (at_b_p5)

                    ; #37935: <==commonly_known== 51978 (neg)
                    (not_at_b_p0011)

                    ; #51978: origin
                    (not (at_b_p0011))

                    ; #91354: <==negation-removal== 26400 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p0011_p6
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (succ_p0011_p6)
                           (at_b_p0011))
        :effect (and
                    ; #37935: <==commonly_known== 51978 (neg)
                    (not_at_b_p0011)

                    ; #51738: origin
                    (at_b_p6)

                    ; #22354: <==negation-removal== 51738 (pos)
                    (not (not_at_b_p6))

                    ; #51978: origin
                    (not (at_b_p0011))))

    (:action move_b_p0011_p7
        :precondition (and (checked_p7)
                           (succ_p0011_p7)
                           (at_b_p0011)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #16657: origin
                    (at_b_p7)

                    ; #37935: <==commonly_known== 51978 (neg)
                    (not_at_b_p0011)

                    ; #38469: <==negation-removal== 16657 (pos)
                    (not (not_at_b_p7))

                    ; #51978: origin
                    (not (at_b_p0011))))

    (:action move_b_p0011_p8
        :precondition (and (Pb_not_blocked_p8)
                           (succ_p0011_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8)
                           (at_b_p0011))
        :effect (and
                    ; #37935: <==commonly_known== 51978 (neg)
                    (not_at_b_p0011)

                    ; #44161: origin
                    (at_b_p8)

                    ; #27614: <==negation-removal== 44161 (pos)
                    (not (not_at_b_p8))

                    ; #51978: origin
                    (not (at_b_p0011))))

    (:action move_b_p0011_p9
        :precondition (and (checked_p9)
                           (succ_p0011_p9)
                           (Bb_not_blocked_p9)
                           (at_b_p0011)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #37935: <==commonly_known== 51978 (neg)
                    (not_at_b_p0011)

                    ; #58525: origin
                    (at_b_p9)

                    ; #26078: <==negation-removal== 58525 (pos)
                    (not (not_at_b_p9))

                    ; #51978: origin
                    (not (at_b_p0011))))

    (:action move_b_p012_p0011
        :precondition (and (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (succ_p012_p0011)
                           (at_b_p012)
                           (checked_p0011))
        :effect (and
                    ; #51978: origin
                    (at_b_p0011)

                    ; #57281: <==commonly_known== 71260 (neg)
                    (not_at_b_p012)

                    ; #37935: <==negation-removal== 51978 (pos)
                    (not (not_at_b_p0011))

                    ; #71260: origin
                    (not (at_b_p012))))

    (:action move_b_p012_p012
        :precondition (and (Bb_not_blocked_p012)
                           (checked_p012)
                           (Pb_not_blocked_p012)
                           (at_b_p012)
                           (succ_p012_p012))
        :effect (and
                    ; #57281: <==commonly_known== 71260 (neg)
                    (not_at_b_p012)

                    ; #71260: origin
                    (at_b_p012)

                    ; #57281: <==negation-removal== 71260 (pos)
                    (not (not_at_b_p012))

                    ; #71260: origin
                    (not (at_b_p012))))

    (:action move_b_p012_p1
        :precondition (and (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (succ_p012_p1)
                           (at_b_p012))
        :effect (and
                    ; #57281: <==commonly_known== 71260 (neg)
                    (not_at_b_p012)

                    ; #83626: origin
                    (at_b_p1)

                    ; #71260: origin
                    (not (at_b_p012))

                    ; #89412: <==negation-removal== 83626 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p012_p10
        :precondition (and (checked_p10)
                           (Pb_not_blocked_p10)
                           (at_b_p012)
                           (succ_p012_p10)
                           (Bb_not_blocked_p10))
        :effect (and
                    ; #57281: <==commonly_known== 71260 (neg)
                    (not_at_b_p012)

                    ; #67785: origin
                    (at_b_p10)

                    ; #68342: <==negation-removal== 67785 (pos)
                    (not (not_at_b_p10))

                    ; #71260: origin
                    (not (at_b_p012))))

    (:action move_b_p012_p2
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p012)
                           (succ_p012_p2)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #57281: <==commonly_known== 71260 (neg)
                    (not_at_b_p012)

                    ; #62294: origin
                    (at_b_p2)

                    ; #40230: <==negation-removal== 62294 (pos)
                    (not (not_at_b_p2))

                    ; #71260: origin
                    (not (at_b_p012))))

    (:action move_b_p012_p3
        :precondition (and (checked_p3)
                           (Pb_not_blocked_p3)
                           (at_b_p012)
                           (succ_p012_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #57281: <==commonly_known== 71260 (neg)
                    (not_at_b_p012)

                    ; #79309: origin
                    (at_b_p3)

                    ; #48607: <==negation-removal== 79309 (pos)
                    (not (not_at_b_p3))

                    ; #71260: origin
                    (not (at_b_p012))))

    (:action move_b_p012_p4
        :precondition (and (Bb_not_blocked_p4)
                           (succ_p012_p4)
                           (at_b_p012)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #36407: origin
                    (at_b_p4)

                    ; #57281: <==commonly_known== 71260 (neg)
                    (not_at_b_p012)

                    ; #57928: <==negation-removal== 36407 (pos)
                    (not (not_at_b_p4))

                    ; #71260: origin
                    (not (at_b_p012))))

    (:action move_b_p012_p5
        :precondition (and (Bb_not_blocked_p5)
                           (succ_p012_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p012))
        :effect (and
                    ; #26400: origin
                    (at_b_p5)

                    ; #57281: <==commonly_known== 71260 (neg)
                    (not_at_b_p012)

                    ; #71260: origin
                    (not (at_b_p012))

                    ; #91354: <==negation-removal== 26400 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p012_p6
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p012)
                           (succ_p012_p6))
        :effect (and
                    ; #51738: origin
                    (at_b_p6)

                    ; #57281: <==commonly_known== 71260 (neg)
                    (not_at_b_p012)

                    ; #22354: <==negation-removal== 51738 (pos)
                    (not (not_at_b_p6))

                    ; #71260: origin
                    (not (at_b_p012))))

    (:action move_b_p012_p7
        :precondition (and (checked_p7)
                           (succ_p012_p7)
                           (at_b_p012)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7))
        :effect (and
                    ; #16657: origin
                    (at_b_p7)

                    ; #57281: <==commonly_known== 71260 (neg)
                    (not_at_b_p012)

                    ; #38469: <==negation-removal== 16657 (pos)
                    (not (not_at_b_p7))

                    ; #71260: origin
                    (not (at_b_p012))))

    (:action move_b_p012_p8
        :precondition (and (succ_p012_p8)
                           (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p012)
                           (checked_p8))
        :effect (and
                    ; #44161: origin
                    (at_b_p8)

                    ; #57281: <==commonly_known== 71260 (neg)
                    (not_at_b_p012)

                    ; #27614: <==negation-removal== 44161 (pos)
                    (not (not_at_b_p8))

                    ; #71260: origin
                    (not (at_b_p012))))

    (:action move_b_p012_p9
        :precondition (and (succ_p012_p9)
                           (checked_p9)
                           (Bb_not_blocked_p9)
                           (at_b_p012)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #57281: <==commonly_known== 71260 (neg)
                    (not_at_b_p012)

                    ; #58525: origin
                    (at_b_p9)

                    ; #26078: <==negation-removal== 58525 (pos)
                    (not (not_at_b_p9))

                    ; #71260: origin
                    (not (at_b_p012))))

    (:action move_b_p10_p0011
        :precondition (and (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (succ_p10_p0011)
                           (at_b_p10)
                           (checked_p0011))
        :effect (and
                    ; #51978: origin
                    (at_b_p0011)

                    ; #68342: <==commonly_known== 67785 (neg)
                    (not_at_b_p10)

                    ; #37935: <==negation-removal== 51978 (pos)
                    (not (not_at_b_p0011))

                    ; #67785: origin
                    (not (at_b_p10))))

    (:action move_b_p10_p012
        :precondition (and (Bb_not_blocked_p012)
                           (checked_p012)
                           (succ_p10_p012)
                           (at_b_p10)
                           (Pb_not_blocked_p012))
        :effect (and
                    ; #68342: <==commonly_known== 67785 (neg)
                    (not_at_b_p10)

                    ; #71260: origin
                    (at_b_p012)

                    ; #57281: <==negation-removal== 71260 (pos)
                    (not (not_at_b_p012))

                    ; #67785: origin
                    (not (at_b_p10))))

    (:action move_b_p10_p1
        :precondition (and (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (at_b_p10)
                           (succ_p10_p1))
        :effect (and
                    ; #68342: <==commonly_known== 67785 (neg)
                    (not_at_b_p10)

                    ; #83626: origin
                    (at_b_p1)

                    ; #67785: origin
                    (not (at_b_p10))

                    ; #89412: <==negation-removal== 83626 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p10_p10
        :precondition (and (checked_p10)
                           (Pb_not_blocked_p10)
                           (succ_p10_p10)
                           (at_b_p10)
                           (Bb_not_blocked_p10))
        :effect (and
                    ; #67785: origin
                    (at_b_p10)

                    ; #68342: <==commonly_known== 67785 (neg)
                    (not_at_b_p10)

                    ; #67785: origin
                    (not (at_b_p10))

                    ; #68342: <==negation-removal== 67785 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p10_p2
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p10)
                           (succ_p10_p2)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #62294: origin
                    (at_b_p2)

                    ; #68342: <==commonly_known== 67785 (neg)
                    (not_at_b_p10)

                    ; #40230: <==negation-removal== 62294 (pos)
                    (not (not_at_b_p2))

                    ; #67785: origin
                    (not (at_b_p10))))

    (:action move_b_p10_p3
        :precondition (and (checked_p3)
                           (at_b_p10)
                           (Pb_not_blocked_p3)
                           (succ_p10_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #68342: <==commonly_known== 67785 (neg)
                    (not_at_b_p10)

                    ; #79309: origin
                    (at_b_p3)

                    ; #48607: <==negation-removal== 79309 (pos)
                    (not (not_at_b_p3))

                    ; #67785: origin
                    (not (at_b_p10))))

    (:action move_b_p10_p4
        :precondition (and (Bb_not_blocked_p4)
                           (at_b_p10)
                           (succ_p10_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #36407: origin
                    (at_b_p4)

                    ; #68342: <==commonly_known== 67785 (neg)
                    (not_at_b_p10)

                    ; #57928: <==negation-removal== 36407 (pos)
                    (not (not_at_b_p4))

                    ; #67785: origin
                    (not (at_b_p10))))

    (:action move_b_p10_p5
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (at_b_p10)
                           (Pb_not_blocked_p5)
                           (succ_p10_p5))
        :effect (and
                    ; #26400: origin
                    (at_b_p5)

                    ; #68342: <==commonly_known== 67785 (neg)
                    (not_at_b_p10)

                    ; #67785: origin
                    (not (at_b_p10))

                    ; #91354: <==negation-removal== 26400 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p10_p6
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p10)
                           (succ_p10_p6))
        :effect (and
                    ; #51738: origin
                    (at_b_p6)

                    ; #68342: <==commonly_known== 67785 (neg)
                    (not_at_b_p10)

                    ; #22354: <==negation-removal== 51738 (pos)
                    (not (not_at_b_p6))

                    ; #67785: origin
                    (not (at_b_p10))))

    (:action move_b_p10_p7
        :precondition (and (checked_p7)
                           (succ_p10_p7)
                           (at_b_p10)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7))
        :effect (and
                    ; #16657: origin
                    (at_b_p7)

                    ; #68342: <==commonly_known== 67785 (neg)
                    (not_at_b_p10)

                    ; #38469: <==negation-removal== 16657 (pos)
                    (not (not_at_b_p7))

                    ; #67785: origin
                    (not (at_b_p10))))

    (:action move_b_p10_p8
        :precondition (and (Pb_not_blocked_p8)
                           (succ_p10_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p10)
                           (checked_p8))
        :effect (and
                    ; #44161: origin
                    (at_b_p8)

                    ; #68342: <==commonly_known== 67785 (neg)
                    (not_at_b_p10)

                    ; #27614: <==negation-removal== 44161 (pos)
                    (not (not_at_b_p8))

                    ; #67785: origin
                    (not (at_b_p10))))

    (:action move_b_p10_p9
        :precondition (and (checked_p9)
                           (at_b_p10)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (succ_p10_p9))
        :effect (and
                    ; #58525: origin
                    (at_b_p9)

                    ; #68342: <==commonly_known== 67785 (neg)
                    (not_at_b_p10)

                    ; #26078: <==negation-removal== 58525 (pos)
                    (not (not_at_b_p9))

                    ; #67785: origin
                    (not (at_b_p10))))

    (:action move_b_p1_p0011
        :precondition (and (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (succ_p1_p0011)
                           (checked_p0011)
                           (at_b_p1))
        :effect (and
                    ; #51978: origin
                    (at_b_p0011)

                    ; #89412: <==commonly_known== 83626 (neg)
                    (not_at_b_p1)

                    ; #37935: <==negation-removal== 51978 (pos)
                    (not (not_at_b_p0011))

                    ; #83626: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p012
        :precondition (and (succ_p1_p012)
                           (Bb_not_blocked_p012)
                           (checked_p012)
                           (Pb_not_blocked_p012)
                           (at_b_p1))
        :effect (and
                    ; #71260: origin
                    (at_b_p012)

                    ; #89412: <==commonly_known== 83626 (neg)
                    (not_at_b_p1)

                    ; #57281: <==negation-removal== 71260 (pos)
                    (not (not_at_b_p012))

                    ; #83626: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p1
        :precondition (and (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (succ_p1_p1)
                           (at_b_p1))
        :effect (and
                    ; #83626: origin
                    (at_b_p1)

                    ; #89412: <==commonly_known== 83626 (neg)
                    (not_at_b_p1)

                    ; #83626: origin
                    (not (at_b_p1))

                    ; #89412: <==negation-removal== 83626 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p1_p10
        :precondition (and (checked_p10)
                           (succ_p1_p10)
                           (Pb_not_blocked_p10)
                           (Bb_not_blocked_p10)
                           (at_b_p1))
        :effect (and
                    ; #67785: origin
                    (at_b_p10)

                    ; #89412: <==commonly_known== 83626 (neg)
                    (not_at_b_p1)

                    ; #68342: <==negation-removal== 67785 (pos)
                    (not (not_at_b_p10))

                    ; #83626: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p2
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (Bb_not_blocked_p2)
                           (at_b_p1)
                           (succ_p1_p2))
        :effect (and
                    ; #62294: origin
                    (at_b_p2)

                    ; #89412: <==commonly_known== 83626 (neg)
                    (not_at_b_p1)

                    ; #40230: <==negation-removal== 62294 (pos)
                    (not (not_at_b_p2))

                    ; #83626: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p3
        :precondition (and (succ_p1_p3)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (at_b_p1)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #79309: origin
                    (at_b_p3)

                    ; #89412: <==commonly_known== 83626 (neg)
                    (not_at_b_p1)

                    ; #48607: <==negation-removal== 79309 (pos)
                    (not (not_at_b_p3))

                    ; #83626: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p4
        :precondition (and (Bb_not_blocked_p4)
                           (succ_p1_p4)
                           (at_b_p1)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #36407: origin
                    (at_b_p4)

                    ; #89412: <==commonly_known== 83626 (neg)
                    (not_at_b_p1)

                    ; #57928: <==negation-removal== 36407 (pos)
                    (not (not_at_b_p4))

                    ; #83626: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p5
        :precondition (and (succ_p1_p5)
                           (Bb_not_blocked_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p1))
        :effect (and
                    ; #26400: origin
                    (at_b_p5)

                    ; #89412: <==commonly_known== 83626 (neg)
                    (not_at_b_p1)

                    ; #83626: origin
                    (not (at_b_p1))

                    ; #91354: <==negation-removal== 26400 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p1_p6
        :precondition (and (Bb_not_blocked_p6)
                           (succ_p1_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p1))
        :effect (and
                    ; #51738: origin
                    (at_b_p6)

                    ; #89412: <==commonly_known== 83626 (neg)
                    (not_at_b_p1)

                    ; #22354: <==negation-removal== 51738 (pos)
                    (not (not_at_b_p6))

                    ; #83626: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p7
        :precondition (and (succ_p1_p7)
                           (checked_p7)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (at_b_p1))
        :effect (and
                    ; #16657: origin
                    (at_b_p7)

                    ; #89412: <==commonly_known== 83626 (neg)
                    (not_at_b_p1)

                    ; #38469: <==negation-removal== 16657 (pos)
                    (not (not_at_b_p7))

                    ; #83626: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p8
        :precondition (and (Pb_not_blocked_p8)
                           (succ_p1_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8)
                           (at_b_p1))
        :effect (and
                    ; #44161: origin
                    (at_b_p8)

                    ; #89412: <==commonly_known== 83626 (neg)
                    (not_at_b_p1)

                    ; #27614: <==negation-removal== 44161 (pos)
                    (not (not_at_b_p8))

                    ; #83626: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p9
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (at_b_p1)
                           (succ_p1_p9))
        :effect (and
                    ; #58525: origin
                    (at_b_p9)

                    ; #89412: <==commonly_known== 83626 (neg)
                    (not_at_b_p1)

                    ; #26078: <==negation-removal== 58525 (pos)
                    (not (not_at_b_p9))

                    ; #83626: origin
                    (not (at_b_p1))))

    (:action move_b_p2_p0011
        :precondition (and (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (at_b_p2)
                           (checked_p0011)
                           (succ_p2_p0011))
        :effect (and
                    ; #40230: <==commonly_known== 62294 (neg)
                    (not_at_b_p2)

                    ; #51978: origin
                    (at_b_p0011)

                    ; #37935: <==negation-removal== 51978 (pos)
                    (not (not_at_b_p0011))

                    ; #62294: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p012
        :precondition (and (Bb_not_blocked_p012)
                           (checked_p012)
                           (Pb_not_blocked_p012)
                           (succ_p2_p012)
                           (at_b_p2))
        :effect (and
                    ; #40230: <==commonly_known== 62294 (neg)
                    (not_at_b_p2)

                    ; #71260: origin
                    (at_b_p012)

                    ; #57281: <==negation-removal== 71260 (pos)
                    (not (not_at_b_p012))

                    ; #62294: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p1
        :precondition (and (Bb_not_blocked_p1)
                           (succ_p2_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (at_b_p2))
        :effect (and
                    ; #40230: <==commonly_known== 62294 (neg)
                    (not_at_b_p2)

                    ; #83626: origin
                    (at_b_p1)

                    ; #62294: origin
                    (not (at_b_p2))

                    ; #89412: <==negation-removal== 83626 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p2_p10
        :precondition (and (checked_p10)
                           (Pb_not_blocked_p10)
                           (succ_p2_p10)
                           (Bb_not_blocked_p10)
                           (at_b_p2))
        :effect (and
                    ; #40230: <==commonly_known== 62294 (neg)
                    (not_at_b_p2)

                    ; #67785: origin
                    (at_b_p10)

                    ; #62294: origin
                    (not (at_b_p2))

                    ; #68342: <==negation-removal== 67785 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p2_p2
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (succ_p2_p2)
                           (Bb_not_blocked_p2)
                           (at_b_p2))
        :effect (and
                    ; #40230: <==commonly_known== 62294 (neg)
                    (not_at_b_p2)

                    ; #62294: origin
                    (at_b_p2)

                    ; #40230: <==negation-removal== 62294 (pos)
                    (not (not_at_b_p2))

                    ; #62294: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p3
        :precondition (and (checked_p3)
                           (succ_p2_p3)
                           (Pb_not_blocked_p3)
                           (at_b_p2)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #40230: <==commonly_known== 62294 (neg)
                    (not_at_b_p2)

                    ; #79309: origin
                    (at_b_p3)

                    ; #48607: <==negation-removal== 79309 (pos)
                    (not (not_at_b_p3))

                    ; #62294: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p4
        :precondition (and (Bb_not_blocked_p4)
                           (succ_p2_p4)
                           (at_b_p2)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #36407: origin
                    (at_b_p4)

                    ; #40230: <==commonly_known== 62294 (neg)
                    (not_at_b_p2)

                    ; #57928: <==negation-removal== 36407 (pos)
                    (not (not_at_b_p4))

                    ; #62294: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p5
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p2)
                           (succ_p2_p5))
        :effect (and
                    ; #26400: origin
                    (at_b_p5)

                    ; #40230: <==commonly_known== 62294 (neg)
                    (not_at_b_p2)

                    ; #62294: origin
                    (not (at_b_p2))

                    ; #91354: <==negation-removal== 26400 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p2_p6
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p2)
                           (succ_p2_p6))
        :effect (and
                    ; #40230: <==commonly_known== 62294 (neg)
                    (not_at_b_p2)

                    ; #51738: origin
                    (at_b_p6)

                    ; #22354: <==negation-removal== 51738 (pos)
                    (not (not_at_b_p6))

                    ; #62294: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p7
        :precondition (and (checked_p7)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (at_b_p2)
                           (succ_p2_p7))
        :effect (and
                    ; #16657: origin
                    (at_b_p7)

                    ; #40230: <==commonly_known== 62294 (neg)
                    (not_at_b_p2)

                    ; #38469: <==negation-removal== 16657 (pos)
                    (not (not_at_b_p7))

                    ; #62294: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p8
        :precondition (and (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (succ_p2_p8)
                           (checked_p8)
                           (at_b_p2))
        :effect (and
                    ; #40230: <==commonly_known== 62294 (neg)
                    (not_at_b_p2)

                    ; #44161: origin
                    (at_b_p8)

                    ; #27614: <==negation-removal== 44161 (pos)
                    (not (not_at_b_p8))

                    ; #62294: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p9
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (succ_p2_p9)
                           (Pb_not_blocked_p9)
                           (at_b_p2))
        :effect (and
                    ; #40230: <==commonly_known== 62294 (neg)
                    (not_at_b_p2)

                    ; #58525: origin
                    (at_b_p9)

                    ; #26078: <==negation-removal== 58525 (pos)
                    (not (not_at_b_p9))

                    ; #62294: origin
                    (not (at_b_p2))))

    (:action move_b_p3_p0011
        :precondition (and (succ_p3_p0011)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (checked_p0011)
                           (at_b_p3))
        :effect (and
                    ; #48607: <==commonly_known== 79309 (neg)
                    (not_at_b_p3)

                    ; #51978: origin
                    (at_b_p0011)

                    ; #37935: <==negation-removal== 51978 (pos)
                    (not (not_at_b_p0011))

                    ; #79309: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p012
        :precondition (and (Bb_not_blocked_p012)
                           (checked_p012)
                           (Pb_not_blocked_p012)
                           (at_b_p3)
                           (succ_p3_p012))
        :effect (and
                    ; #48607: <==commonly_known== 79309 (neg)
                    (not_at_b_p3)

                    ; #71260: origin
                    (at_b_p012)

                    ; #57281: <==negation-removal== 71260 (pos)
                    (not (not_at_b_p012))

                    ; #79309: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p1
        :precondition (and (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (succ_p3_p1)
                           (at_b_p3))
        :effect (and
                    ; #48607: <==commonly_known== 79309 (neg)
                    (not_at_b_p3)

                    ; #83626: origin
                    (at_b_p1)

                    ; #79309: origin
                    (not (at_b_p3))

                    ; #89412: <==negation-removal== 83626 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p3_p10
        :precondition (and (checked_p10)
                           (Pb_not_blocked_p10)
                           (Bb_not_blocked_p10)
                           (at_b_p3)
                           (succ_p3_p10))
        :effect (and
                    ; #48607: <==commonly_known== 79309 (neg)
                    (not_at_b_p3)

                    ; #67785: origin
                    (at_b_p10)

                    ; #68342: <==negation-removal== 67785 (pos)
                    (not (not_at_b_p10))

                    ; #79309: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p2
        :precondition (and (Pb_not_blocked_p2)
                           (succ_p3_p2)
                           (checked_p2)
                           (at_b_p3)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #48607: <==commonly_known== 79309 (neg)
                    (not_at_b_p3)

                    ; #62294: origin
                    (at_b_p2)

                    ; #40230: <==negation-removal== 62294 (pos)
                    (not (not_at_b_p2))

                    ; #79309: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p3
        :precondition (and (succ_p3_p3)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (at_b_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #48607: <==commonly_known== 79309 (neg)
                    (not_at_b_p3)

                    ; #79309: origin
                    (at_b_p3)

                    ; #48607: <==negation-removal== 79309 (pos)
                    (not (not_at_b_p3))

                    ; #79309: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p4
        :precondition (and (Bb_not_blocked_p4)
                           (at_b_p3)
                           (Pb_not_blocked_p4)
                           (succ_p3_p4)
                           (checked_p4))
        :effect (and
                    ; #36407: origin
                    (at_b_p4)

                    ; #48607: <==commonly_known== 79309 (neg)
                    (not_at_b_p3)

                    ; #57928: <==negation-removal== 36407 (pos)
                    (not (not_at_b_p4))

                    ; #79309: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p5
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (succ_p3_p5)
                           (at_b_p3))
        :effect (and
                    ; #26400: origin
                    (at_b_p5)

                    ; #48607: <==commonly_known== 79309 (neg)
                    (not_at_b_p3)

                    ; #79309: origin
                    (not (at_b_p3))

                    ; #91354: <==negation-removal== 26400 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p3_p6
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p3)
                           (succ_p3_p6))
        :effect (and
                    ; #48607: <==commonly_known== 79309 (neg)
                    (not_at_b_p3)

                    ; #51738: origin
                    (at_b_p6)

                    ; #22354: <==negation-removal== 51738 (pos)
                    (not (not_at_b_p6))

                    ; #79309: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p7
        :precondition (and (succ_p3_p7)
                           (checked_p7)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (at_b_p3))
        :effect (and
                    ; #16657: origin
                    (at_b_p7)

                    ; #48607: <==commonly_known== 79309 (neg)
                    (not_at_b_p3)

                    ; #38469: <==negation-removal== 16657 (pos)
                    (not (not_at_b_p7))

                    ; #79309: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p8
        :precondition (and (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8)
                           (at_b_p3)
                           (succ_p3_p8))
        :effect (and
                    ; #44161: origin
                    (at_b_p8)

                    ; #48607: <==commonly_known== 79309 (neg)
                    (not_at_b_p3)

                    ; #27614: <==negation-removal== 44161 (pos)
                    (not (not_at_b_p8))

                    ; #79309: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p9
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (at_b_p3)
                           (Pb_not_blocked_p9)
                           (succ_p3_p9))
        :effect (and
                    ; #48607: <==commonly_known== 79309 (neg)
                    (not_at_b_p3)

                    ; #58525: origin
                    (at_b_p9)

                    ; #26078: <==negation-removal== 58525 (pos)
                    (not (not_at_b_p9))

                    ; #79309: origin
                    (not (at_b_p3))))

    (:action move_b_p4_p0011
        :precondition (and (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (succ_p4_p0011)
                           (checked_p0011)
                           (at_b_p4))
        :effect (and
                    ; #51978: origin
                    (at_b_p0011)

                    ; #57928: <==commonly_known== 36407 (neg)
                    (not_at_b_p4)

                    ; #36407: origin
                    (not (at_b_p4))

                    ; #37935: <==negation-removal== 51978 (pos)
                    (not (not_at_b_p0011))))

    (:action move_b_p4_p012
        :precondition (and (Bb_not_blocked_p012)
                           (checked_p012)
                           (succ_p4_p012)
                           (at_b_p4)
                           (Pb_not_blocked_p012))
        :effect (and
                    ; #57928: <==commonly_known== 36407 (neg)
                    (not_at_b_p4)

                    ; #71260: origin
                    (at_b_p012)

                    ; #36407: origin
                    (not (at_b_p4))

                    ; #57281: <==negation-removal== 71260 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p4_p1
        :precondition (and (succ_p4_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (at_b_p4))
        :effect (and
                    ; #57928: <==commonly_known== 36407 (neg)
                    (not_at_b_p4)

                    ; #83626: origin
                    (at_b_p1)

                    ; #36407: origin
                    (not (at_b_p4))

                    ; #89412: <==negation-removal== 83626 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p4_p10
        :precondition (and (checked_p10)
                           (Pb_not_blocked_p10)
                           (succ_p4_p10)
                           (at_b_p4)
                           (Bb_not_blocked_p10))
        :effect (and
                    ; #57928: <==commonly_known== 36407 (neg)
                    (not_at_b_p4)

                    ; #67785: origin
                    (at_b_p10)

                    ; #36407: origin
                    (not (at_b_p4))

                    ; #68342: <==negation-removal== 67785 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p4_p2
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (succ_p4_p2)
                           (at_b_p4)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #57928: <==commonly_known== 36407 (neg)
                    (not_at_b_p4)

                    ; #62294: origin
                    (at_b_p2)

                    ; #36407: origin
                    (not (at_b_p4))

                    ; #40230: <==negation-removal== 62294 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p4_p3
        :precondition (and (checked_p3)
                           (Pb_not_blocked_p3)
                           (succ_p4_p3)
                           (at_b_p4)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #57928: <==commonly_known== 36407 (neg)
                    (not_at_b_p4)

                    ; #79309: origin
                    (at_b_p3)

                    ; #36407: origin
                    (not (at_b_p4))

                    ; #48607: <==negation-removal== 79309 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p4_p4
        :precondition (and (Bb_not_blocked_p4)
                           (at_b_p4)
                           (succ_p4_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #36407: origin
                    (at_b_p4)

                    ; #57928: <==commonly_known== 36407 (neg)
                    (not_at_b_p4)

                    ; #36407: origin
                    (not (at_b_p4))

                    ; #57928: <==negation-removal== 36407 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p4_p5
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (succ_p4_p5)
                           (at_b_p4))
        :effect (and
                    ; #26400: origin
                    (at_b_p5)

                    ; #57928: <==commonly_known== 36407 (neg)
                    (not_at_b_p4)

                    ; #36407: origin
                    (not (at_b_p4))

                    ; #91354: <==negation-removal== 26400 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p4_p6
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (succ_p4_p6)
                           (checked_p6)
                           (at_b_p4))
        :effect (and
                    ; #51738: origin
                    (at_b_p6)

                    ; #57928: <==commonly_known== 36407 (neg)
                    (not_at_b_p4)

                    ; #22354: <==negation-removal== 51738 (pos)
                    (not (not_at_b_p6))

                    ; #36407: origin
                    (not (at_b_p4))))

    (:action move_b_p4_p7
        :precondition (and (checked_p7)
                           (at_b_p4)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (succ_p4_p7))
        :effect (and
                    ; #16657: origin
                    (at_b_p7)

                    ; #57928: <==commonly_known== 36407 (neg)
                    (not_at_b_p4)

                    ; #36407: origin
                    (not (at_b_p4))

                    ; #38469: <==negation-removal== 16657 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p4_p8
        :precondition (and (succ_p4_p8)
                           (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p4)
                           (checked_p8))
        :effect (and
                    ; #44161: origin
                    (at_b_p8)

                    ; #57928: <==commonly_known== 36407 (neg)
                    (not_at_b_p4)

                    ; #27614: <==negation-removal== 44161 (pos)
                    (not (not_at_b_p8))

                    ; #36407: origin
                    (not (at_b_p4))))

    (:action move_b_p4_p9
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (succ_p4_p9)
                           (at_b_p4))
        :effect (and
                    ; #57928: <==commonly_known== 36407 (neg)
                    (not_at_b_p4)

                    ; #58525: origin
                    (at_b_p9)

                    ; #26078: <==negation-removal== 58525 (pos)
                    (not (not_at_b_p9))

                    ; #36407: origin
                    (not (at_b_p4))))

    (:action move_b_p5_p0011
        :precondition (and (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (at_b_p5)
                           (succ_p5_p0011)
                           (checked_p0011))
        :effect (and
                    ; #51978: origin
                    (at_b_p0011)

                    ; #91354: <==commonly_known== 26400 (neg)
                    (not_at_b_p5)

                    ; #26400: origin
                    (not (at_b_p5))

                    ; #37935: <==negation-removal== 51978 (pos)
                    (not (not_at_b_p0011))))

    (:action move_b_p5_p012
        :precondition (and (Bb_not_blocked_p012)
                           (checked_p012)
                           (at_b_p5)
                           (succ_p5_p012)
                           (Pb_not_blocked_p012))
        :effect (and
                    ; #71260: origin
                    (at_b_p012)

                    ; #91354: <==commonly_known== 26400 (neg)
                    (not_at_b_p5)

                    ; #26400: origin
                    (not (at_b_p5))

                    ; #57281: <==negation-removal== 71260 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p5_p1
        :precondition (and (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (at_b_p5)
                           (succ_p5_p1))
        :effect (and
                    ; #83626: origin
                    (at_b_p1)

                    ; #91354: <==commonly_known== 26400 (neg)
                    (not_at_b_p5)

                    ; #26400: origin
                    (not (at_b_p5))

                    ; #89412: <==negation-removal== 83626 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p5_p10
        :precondition (and (checked_p10)
                           (Pb_not_blocked_p10)
                           (at_b_p5)
                           (Bb_not_blocked_p10)
                           (succ_p5_p10))
        :effect (and
                    ; #67785: origin
                    (at_b_p10)

                    ; #91354: <==commonly_known== 26400 (neg)
                    (not_at_b_p5)

                    ; #26400: origin
                    (not (at_b_p5))

                    ; #68342: <==negation-removal== 67785 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p5_p2
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (succ_p5_p2)
                           (at_b_p5)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #62294: origin
                    (at_b_p2)

                    ; #91354: <==commonly_known== 26400 (neg)
                    (not_at_b_p5)

                    ; #26400: origin
                    (not (at_b_p5))

                    ; #40230: <==negation-removal== 62294 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p5_p3
        :precondition (and (succ_p5_p3)
                           (checked_p3)
                           (at_b_p5)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #79309: origin
                    (at_b_p3)

                    ; #91354: <==commonly_known== 26400 (neg)
                    (not_at_b_p5)

                    ; #26400: origin
                    (not (at_b_p5))

                    ; #48607: <==negation-removal== 79309 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p5_p4
        :precondition (and (Bb_not_blocked_p4)
                           (succ_p5_p4)
                           (at_b_p5)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #36407: origin
                    (at_b_p4)

                    ; #91354: <==commonly_known== 26400 (neg)
                    (not_at_b_p5)

                    ; #26400: origin
                    (not (at_b_p5))

                    ; #57928: <==negation-removal== 36407 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p5_p5
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (at_b_p5)
                           (Pb_not_blocked_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #26400: origin
                    (at_b_p5)

                    ; #91354: <==commonly_known== 26400 (neg)
                    (not_at_b_p5)

                    ; #26400: origin
                    (not (at_b_p5))

                    ; #91354: <==negation-removal== 26400 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p5_p6
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p5)
                           (succ_p5_p6))
        :effect (and
                    ; #51738: origin
                    (at_b_p6)

                    ; #91354: <==commonly_known== 26400 (neg)
                    (not_at_b_p5)

                    ; #22354: <==negation-removal== 51738 (pos)
                    (not (not_at_b_p6))

                    ; #26400: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p7
        :precondition (and (checked_p7)
                           (succ_p5_p7)
                           (at_b_p5)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7))
        :effect (and
                    ; #16657: origin
                    (at_b_p7)

                    ; #91354: <==commonly_known== 26400 (neg)
                    (not_at_b_p5)

                    ; #26400: origin
                    (not (at_b_p5))

                    ; #38469: <==negation-removal== 16657 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p5_p8
        :precondition (and (succ_p5_p8)
                           (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p5)
                           (checked_p8))
        :effect (and
                    ; #44161: origin
                    (at_b_p8)

                    ; #91354: <==commonly_known== 26400 (neg)
                    (not_at_b_p5)

                    ; #26400: origin
                    (not (at_b_p5))

                    ; #27614: <==negation-removal== 44161 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p5_p9
        :precondition (and (checked_p9)
                           (at_b_p5)
                           (Bb_not_blocked_p9)
                           (succ_p5_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #58525: origin
                    (at_b_p9)

                    ; #91354: <==commonly_known== 26400 (neg)
                    (not_at_b_p5)

                    ; #26078: <==negation-removal== 58525 (pos)
                    (not (not_at_b_p9))

                    ; #26400: origin
                    (not (at_b_p5))))

    (:action move_b_p6_p0011
        :precondition (and (at_b_p6)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (checked_p0011)
                           (succ_p6_p0011))
        :effect (and
                    ; #22354: <==commonly_known== 51738 (neg)
                    (not_at_b_p6)

                    ; #51978: origin
                    (at_b_p0011)

                    ; #37935: <==negation-removal== 51978 (pos)
                    (not (not_at_b_p0011))

                    ; #51738: origin
                    (not (at_b_p6))))

    (:action move_b_p6_p012
        :precondition (and (at_b_p6)
                           (Bb_not_blocked_p012)
                           (checked_p012)
                           (Pb_not_blocked_p012)
                           (succ_p6_p012))
        :effect (and
                    ; #22354: <==commonly_known== 51738 (neg)
                    (not_at_b_p6)

                    ; #71260: origin
                    (at_b_p012)

                    ; #51738: origin
                    (not (at_b_p6))

                    ; #57281: <==negation-removal== 71260 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p6_p1
        :precondition (and (at_b_p6)
                           (succ_p6_p1)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #22354: <==commonly_known== 51738 (neg)
                    (not_at_b_p6)

                    ; #83626: origin
                    (at_b_p1)

                    ; #51738: origin
                    (not (at_b_p6))

                    ; #89412: <==negation-removal== 83626 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p6_p10
        :precondition (and (at_b_p6)
                           (Pb_not_blocked_p10)
                           (checked_p10)
                           (Bb_not_blocked_p10)
                           (succ_p6_p10))
        :effect (and
                    ; #22354: <==commonly_known== 51738 (neg)
                    (not_at_b_p6)

                    ; #67785: origin
                    (at_b_p10)

                    ; #51738: origin
                    (not (at_b_p6))

                    ; #68342: <==negation-removal== 67785 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p6_p2
        :precondition (and (at_b_p6)
                           (succ_p6_p2)
                           (Pb_not_blocked_p2)
                           (checked_p2)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #22354: <==commonly_known== 51738 (neg)
                    (not_at_b_p6)

                    ; #62294: origin
                    (at_b_p2)

                    ; #40230: <==negation-removal== 62294 (pos)
                    (not (not_at_b_p2))

                    ; #51738: origin
                    (not (at_b_p6))))

    (:action move_b_p6_p3
        :precondition (and (at_b_p6)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (succ_p6_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #22354: <==commonly_known== 51738 (neg)
                    (not_at_b_p6)

                    ; #79309: origin
                    (at_b_p3)

                    ; #48607: <==negation-removal== 79309 (pos)
                    (not (not_at_b_p3))

                    ; #51738: origin
                    (not (at_b_p6))))

    (:action move_b_p6_p4
        :precondition (and (at_b_p6)
                           (Bb_not_blocked_p4)
                           (succ_p6_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #22354: <==commonly_known== 51738 (neg)
                    (not_at_b_p6)

                    ; #36407: origin
                    (at_b_p4)

                    ; #51738: origin
                    (not (at_b_p6))

                    ; #57928: <==negation-removal== 36407 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p6_p5
        :precondition (and (at_b_p6)
                           (Bb_not_blocked_p5)
                           (succ_p6_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #22354: <==commonly_known== 51738 (neg)
                    (not_at_b_p6)

                    ; #26400: origin
                    (at_b_p5)

                    ; #51738: origin
                    (not (at_b_p6))

                    ; #91354: <==negation-removal== 26400 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p6_p6
        :precondition (and (at_b_p6)
                           (Pb_not_blocked_p6)
                           (Bb_not_blocked_p6)
                           (succ_p6_p6)
                           (checked_p6))
        :effect (and
                    ; #22354: <==commonly_known== 51738 (neg)
                    (not_at_b_p6)

                    ; #51738: origin
                    (at_b_p6)

                    ; #22354: <==negation-removal== 51738 (pos)
                    (not (not_at_b_p6))

                    ; #51738: origin
                    (not (at_b_p6))))

    (:action move_b_p6_p7
        :precondition (and (at_b_p6)
                           (checked_p7)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (succ_p6_p7))
        :effect (and
                    ; #16657: origin
                    (at_b_p7)

                    ; #22354: <==commonly_known== 51738 (neg)
                    (not_at_b_p6)

                    ; #38469: <==negation-removal== 16657 (pos)
                    (not (not_at_b_p7))

                    ; #51738: origin
                    (not (at_b_p6))))

    (:action move_b_p6_p8
        :precondition (and (at_b_p6)
                           (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8)
                           (succ_p6_p8))
        :effect (and
                    ; #22354: <==commonly_known== 51738 (neg)
                    (not_at_b_p6)

                    ; #44161: origin
                    (at_b_p8)

                    ; #27614: <==negation-removal== 44161 (pos)
                    (not (not_at_b_p8))

                    ; #51738: origin
                    (not (at_b_p6))))

    (:action move_b_p6_p9
        :precondition (and (at_b_p6)
                           (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (succ_p6_p9))
        :effect (and
                    ; #22354: <==commonly_known== 51738 (neg)
                    (not_at_b_p6)

                    ; #58525: origin
                    (at_b_p9)

                    ; #26078: <==negation-removal== 58525 (pos)
                    (not (not_at_b_p9))

                    ; #51738: origin
                    (not (at_b_p6))))

    (:action move_b_p7_p0011
        :precondition (and (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (at_b_p7)
                           (checked_p0011)
                           (succ_p7_p0011))
        :effect (and
                    ; #38469: <==commonly_known== 16657 (neg)
                    (not_at_b_p7)

                    ; #51978: origin
                    (at_b_p0011)

                    ; #16657: origin
                    (not (at_b_p7))

                    ; #37935: <==negation-removal== 51978 (pos)
                    (not (not_at_b_p0011))))

    (:action move_b_p7_p012
        :precondition (and (Bb_not_blocked_p012)
                           (succ_p7_p012)
                           (checked_p012)
                           (at_b_p7)
                           (Pb_not_blocked_p012))
        :effect (and
                    ; #38469: <==commonly_known== 16657 (neg)
                    (not_at_b_p7)

                    ; #71260: origin
                    (at_b_p012)

                    ; #16657: origin
                    (not (at_b_p7))

                    ; #57281: <==negation-removal== 71260 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p7_p1
        :precondition (and (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (at_b_p7)
                           (succ_p7_p1))
        :effect (and
                    ; #38469: <==commonly_known== 16657 (neg)
                    (not_at_b_p7)

                    ; #83626: origin
                    (at_b_p1)

                    ; #16657: origin
                    (not (at_b_p7))

                    ; #89412: <==negation-removal== 83626 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p7_p10
        :precondition (and (checked_p10)
                           (Pb_not_blocked_p10)
                           (succ_p7_p10)
                           (at_b_p7)
                           (Bb_not_blocked_p10))
        :effect (and
                    ; #38469: <==commonly_known== 16657 (neg)
                    (not_at_b_p7)

                    ; #67785: origin
                    (at_b_p10)

                    ; #16657: origin
                    (not (at_b_p7))

                    ; #68342: <==negation-removal== 67785 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p7_p2
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p7)
                           (succ_p7_p2)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #38469: <==commonly_known== 16657 (neg)
                    (not_at_b_p7)

                    ; #62294: origin
                    (at_b_p2)

                    ; #16657: origin
                    (not (at_b_p7))

                    ; #40230: <==negation-removal== 62294 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p7_p3
        :precondition (and (at_b_p7)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (succ_p7_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #38469: <==commonly_known== 16657 (neg)
                    (not_at_b_p7)

                    ; #79309: origin
                    (at_b_p3)

                    ; #16657: origin
                    (not (at_b_p7))

                    ; #48607: <==negation-removal== 79309 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p7_p4
        :precondition (and (Bb_not_blocked_p4)
                           (at_b_p7)
                           (succ_p7_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #36407: origin
                    (at_b_p4)

                    ; #38469: <==commonly_known== 16657 (neg)
                    (not_at_b_p7)

                    ; #16657: origin
                    (not (at_b_p7))

                    ; #57928: <==negation-removal== 36407 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p7_p5
        :precondition (and (Bb_not_blocked_p5)
                           (at_b_p7)
                           (succ_p7_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #26400: origin
                    (at_b_p5)

                    ; #38469: <==commonly_known== 16657 (neg)
                    (not_at_b_p7)

                    ; #16657: origin
                    (not (at_b_p7))

                    ; #91354: <==negation-removal== 26400 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p7_p6
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (succ_p7_p6)
                           (checked_p6)
                           (at_b_p7))
        :effect (and
                    ; #38469: <==commonly_known== 16657 (neg)
                    (not_at_b_p7)

                    ; #51738: origin
                    (at_b_p6)

                    ; #16657: origin
                    (not (at_b_p7))

                    ; #22354: <==negation-removal== 51738 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p7_p7
        :precondition (and (checked_p7)
                           (at_b_p7)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #16657: origin
                    (at_b_p7)

                    ; #38469: <==commonly_known== 16657 (neg)
                    (not_at_b_p7)

                    ; #16657: origin
                    (not (at_b_p7))

                    ; #38469: <==negation-removal== 16657 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p7_p8
        :precondition (and (Pb_not_blocked_p8)
                           (at_b_p7)
                           (Bb_not_blocked_p8)
                           (checked_p8)
                           (succ_p7_p8))
        :effect (and
                    ; #38469: <==commonly_known== 16657 (neg)
                    (not_at_b_p7)

                    ; #44161: origin
                    (at_b_p8)

                    ; #16657: origin
                    (not (at_b_p7))

                    ; #27614: <==negation-removal== 44161 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p7_p9
        :precondition (and (checked_p9)
                           (succ_p7_p9)
                           (at_b_p7)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #38469: <==commonly_known== 16657 (neg)
                    (not_at_b_p7)

                    ; #58525: origin
                    (at_b_p9)

                    ; #16657: origin
                    (not (at_b_p7))

                    ; #26078: <==negation-removal== 58525 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p8_p0011
        :precondition (and (succ_p8_p0011)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (at_b_p8)
                           (checked_p0011))
        :effect (and
                    ; #27614: <==commonly_known== 44161 (neg)
                    (not_at_b_p8)

                    ; #51978: origin
                    (at_b_p0011)

                    ; #37935: <==negation-removal== 51978 (pos)
                    (not (not_at_b_p0011))

                    ; #44161: origin
                    (not (at_b_p8))))

    (:action move_b_p8_p012
        :precondition (and (Bb_not_blocked_p012)
                           (checked_p012)
                           (at_b_p8)
                           (succ_p8_p012)
                           (Pb_not_blocked_p012))
        :effect (and
                    ; #27614: <==commonly_known== 44161 (neg)
                    (not_at_b_p8)

                    ; #71260: origin
                    (at_b_p012)

                    ; #44161: origin
                    (not (at_b_p8))

                    ; #57281: <==negation-removal== 71260 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p8_p1
        :precondition (and (Bb_not_blocked_p1)
                           (succ_p8_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (at_b_p8))
        :effect (and
                    ; #27614: <==commonly_known== 44161 (neg)
                    (not_at_b_p8)

                    ; #83626: origin
                    (at_b_p1)

                    ; #44161: origin
                    (not (at_b_p8))

                    ; #89412: <==negation-removal== 83626 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p8_p10
        :precondition (and (checked_p10)
                           (Pb_not_blocked_p10)
                           (succ_p8_p10)
                           (at_b_p8)
                           (Bb_not_blocked_p10))
        :effect (and
                    ; #27614: <==commonly_known== 44161 (neg)
                    (not_at_b_p8)

                    ; #67785: origin
                    (at_b_p10)

                    ; #44161: origin
                    (not (at_b_p8))

                    ; #68342: <==negation-removal== 67785 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p8_p2
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p8)
                           (Bb_not_blocked_p2)
                           (succ_p8_p2))
        :effect (and
                    ; #27614: <==commonly_known== 44161 (neg)
                    (not_at_b_p8)

                    ; #62294: origin
                    (at_b_p2)

                    ; #40230: <==negation-removal== 62294 (pos)
                    (not (not_at_b_p2))

                    ; #44161: origin
                    (not (at_b_p8))))

    (:action move_b_p8_p3
        :precondition (and (checked_p3)
                           (at_b_p8)
                           (Pb_not_blocked_p3)
                           (succ_p8_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #27614: <==commonly_known== 44161 (neg)
                    (not_at_b_p8)

                    ; #79309: origin
                    (at_b_p3)

                    ; #44161: origin
                    (not (at_b_p8))

                    ; #48607: <==negation-removal== 79309 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p8_p4
        :precondition (and (Bb_not_blocked_p4)
                           (at_b_p8)
                           (succ_p8_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #27614: <==commonly_known== 44161 (neg)
                    (not_at_b_p8)

                    ; #36407: origin
                    (at_b_p4)

                    ; #44161: origin
                    (not (at_b_p8))

                    ; #57928: <==negation-removal== 36407 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p8_p5
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (at_b_p8)
                           (Pb_not_blocked_p5)
                           (succ_p8_p5))
        :effect (and
                    ; #26400: origin
                    (at_b_p5)

                    ; #27614: <==commonly_known== 44161 (neg)
                    (not_at_b_p8)

                    ; #44161: origin
                    (not (at_b_p8))

                    ; #91354: <==negation-removal== 26400 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p8_p6
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p8)
                           (succ_p8_p6))
        :effect (and
                    ; #27614: <==commonly_known== 44161 (neg)
                    (not_at_b_p8)

                    ; #51738: origin
                    (at_b_p6)

                    ; #22354: <==negation-removal== 51738 (pos)
                    (not (not_at_b_p6))

                    ; #44161: origin
                    (not (at_b_p8))))

    (:action move_b_p8_p7
        :precondition (and (succ_p8_p7)
                           (checked_p7)
                           (at_b_p8)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7))
        :effect (and
                    ; #16657: origin
                    (at_b_p7)

                    ; #27614: <==commonly_known== 44161 (neg)
                    (not_at_b_p8)

                    ; #38469: <==negation-removal== 16657 (pos)
                    (not (not_at_b_p7))

                    ; #44161: origin
                    (not (at_b_p8))))

    (:action move_b_p8_p8
        :precondition (and (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p8)
                           (checked_p8)
                           (succ_p8_p8))
        :effect (and
                    ; #27614: <==commonly_known== 44161 (neg)
                    (not_at_b_p8)

                    ; #44161: origin
                    (at_b_p8)

                    ; #27614: <==negation-removal== 44161 (pos)
                    (not (not_at_b_p8))

                    ; #44161: origin
                    (not (at_b_p8))))

    (:action move_b_p8_p9
        :precondition (and (checked_p9)
                           (at_b_p8)
                           (Bb_not_blocked_p9)
                           (succ_p8_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #27614: <==commonly_known== 44161 (neg)
                    (not_at_b_p8)

                    ; #58525: origin
                    (at_b_p9)

                    ; #26078: <==negation-removal== 58525 (pos)
                    (not (not_at_b_p9))

                    ; #44161: origin
                    (not (at_b_p8))))

    (:action move_b_p9_p0011
        :precondition (and (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (at_b_p9)
                           (succ_p9_p0011)
                           (checked_p0011))
        :effect (and
                    ; #26078: <==commonly_known== 58525 (neg)
                    (not_at_b_p9)

                    ; #51978: origin
                    (at_b_p0011)

                    ; #37935: <==negation-removal== 51978 (pos)
                    (not (not_at_b_p0011))

                    ; #58525: origin
                    (not (at_b_p9))))

    (:action move_b_p9_p012
        :precondition (and (Bb_not_blocked_p012)
                           (checked_p012)
                           (succ_p9_p012)
                           (at_b_p9)
                           (Pb_not_blocked_p012))
        :effect (and
                    ; #26078: <==commonly_known== 58525 (neg)
                    (not_at_b_p9)

                    ; #71260: origin
                    (at_b_p012)

                    ; #57281: <==negation-removal== 71260 (pos)
                    (not (not_at_b_p012))

                    ; #58525: origin
                    (not (at_b_p9))))

    (:action move_b_p9_p1
        :precondition (and (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (at_b_p9)
                           (succ_p9_p1))
        :effect (and
                    ; #26078: <==commonly_known== 58525 (neg)
                    (not_at_b_p9)

                    ; #83626: origin
                    (at_b_p1)

                    ; #58525: origin
                    (not (at_b_p9))

                    ; #89412: <==negation-removal== 83626 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p9_p10
        :precondition (and (checked_p10)
                           (Pb_not_blocked_p10)
                           (at_b_p9)
                           (succ_p9_p10)
                           (Bb_not_blocked_p10))
        :effect (and
                    ; #26078: <==commonly_known== 58525 (neg)
                    (not_at_b_p9)

                    ; #67785: origin
                    (at_b_p10)

                    ; #58525: origin
                    (not (at_b_p9))

                    ; #68342: <==negation-removal== 67785 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p9_p2
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p9)
                           (succ_p9_p2)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #26078: <==commonly_known== 58525 (neg)
                    (not_at_b_p9)

                    ; #62294: origin
                    (at_b_p2)

                    ; #40230: <==negation-removal== 62294 (pos)
                    (not (not_at_b_p2))

                    ; #58525: origin
                    (not (at_b_p9))))

    (:action move_b_p9_p3
        :precondition (and (at_b_p9)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (succ_p9_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #26078: <==commonly_known== 58525 (neg)
                    (not_at_b_p9)

                    ; #79309: origin
                    (at_b_p3)

                    ; #48607: <==negation-removal== 79309 (pos)
                    (not (not_at_b_p3))

                    ; #58525: origin
                    (not (at_b_p9))))

    (:action move_b_p9_p4
        :precondition (and (Bb_not_blocked_p4)
                           (at_b_p9)
                           (succ_p9_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #26078: <==commonly_known== 58525 (neg)
                    (not_at_b_p9)

                    ; #36407: origin
                    (at_b_p4)

                    ; #57928: <==negation-removal== 36407 (pos)
                    (not (not_at_b_p4))

                    ; #58525: origin
                    (not (at_b_p9))))

    (:action move_b_p9_p5
        :precondition (and (Bb_not_blocked_p5)
                           (at_b_p9)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (succ_p9_p5))
        :effect (and
                    ; #26078: <==commonly_known== 58525 (neg)
                    (not_at_b_p9)

                    ; #26400: origin
                    (at_b_p5)

                    ; #58525: origin
                    (not (at_b_p9))

                    ; #91354: <==negation-removal== 26400 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p9_p6
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (succ_p9_p6)
                           (checked_p6)
                           (at_b_p9))
        :effect (and
                    ; #26078: <==commonly_known== 58525 (neg)
                    (not_at_b_p9)

                    ; #51738: origin
                    (at_b_p6)

                    ; #22354: <==negation-removal== 51738 (pos)
                    (not (not_at_b_p6))

                    ; #58525: origin
                    (not (at_b_p9))))

    (:action move_b_p9_p7
        :precondition (and (checked_p7)
                           (at_b_p9)
                           (succ_p9_p7)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7))
        :effect (and
                    ; #16657: origin
                    (at_b_p7)

                    ; #26078: <==commonly_known== 58525 (neg)
                    (not_at_b_p9)

                    ; #38469: <==negation-removal== 16657 (pos)
                    (not (not_at_b_p7))

                    ; #58525: origin
                    (not (at_b_p9))))

    (:action move_b_p9_p8
        :precondition (and (Pb_not_blocked_p8)
                           (at_b_p9)
                           (Bb_not_blocked_p8)
                           (checked_p8)
                           (succ_p9_p8))
        :effect (and
                    ; #26078: <==commonly_known== 58525 (neg)
                    (not_at_b_p9)

                    ; #44161: origin
                    (at_b_p8)

                    ; #27614: <==negation-removal== 44161 (pos)
                    (not (not_at_b_p8))

                    ; #58525: origin
                    (not (at_b_p9))))

    (:action move_b_p9_p9
        :precondition (and (checked_p9)
                           (at_b_p9)
                           (succ_p9_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #26078: <==commonly_known== 58525 (neg)
                    (not_at_b_p9)

                    ; #58525: origin
                    (at_b_p9)

                    ; #26078: <==negation-removal== 58525 (pos)
                    (not (not_at_b_p9))

                    ; #58525: origin
                    (not (at_b_p9))))

    (:action move_c_p0011_p0011
        :precondition (and (Bc_not_blocked_p0011)
                           (checked_p0011)
                           (at_c_p0011)
                           (succ_p0011_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13023: origin
                    (at_c_p0011)

                    ; #21647: <==commonly_known== 13023 (neg)
                    (not_at_c_p0011)

                    ; #13023: origin
                    (not (at_c_p0011))

                    ; #21647: <==negation-removal== 13023 (pos)
                    (not (not_at_c_p0011))))

    (:action move_c_p0011_p012
        :precondition (and (checked_p012)
                           (succ_p0011_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (at_c_p0011))
        :effect (and
                    ; #21647: <==commonly_known== 13023 (neg)
                    (not_at_c_p0011)

                    ; #53903: origin
                    (at_c_p012)

                    ; #13023: origin
                    (not (at_c_p0011))

                    ; #99428: <==negation-removal== 53903 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p0011_p1
        :precondition (and (Pc_not_blocked_p1)
                           (checked_p1)
                           (succ_p0011_p1)
                           (Bc_not_blocked_p1)
                           (at_c_p0011))
        :effect (and
                    ; #21647: <==commonly_known== 13023 (neg)
                    (not_at_c_p0011)

                    ; #47689: origin
                    (at_c_p1)

                    ; #13023: origin
                    (not (at_c_p0011))

                    ; #42742: <==negation-removal== 47689 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p0011_p10
        :precondition (and (checked_p10)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10)
                           (at_c_p0011)
                           (succ_p0011_p10))
        :effect (and
                    ; #21647: <==commonly_known== 13023 (neg)
                    (not_at_c_p0011)

                    ; #68218: origin
                    (at_c_p10)

                    ; #13023: origin
                    (not (at_c_p0011))

                    ; #21245: <==negation-removal== 68218 (pos)
                    (not (not_at_c_p10))))

    (:action move_c_p0011_p2
        :precondition (and (Pc_not_blocked_p2)
                           (checked_p2)
                           (succ_p0011_p2)
                           (at_c_p0011)
                           (Bc_not_blocked_p2))
        :effect (and
                    ; #20040: origin
                    (at_c_p2)

                    ; #21647: <==commonly_known== 13023 (neg)
                    (not_at_c_p0011)

                    ; #13023: origin
                    (not (at_c_p0011))

                    ; #53695: <==negation-removal== 20040 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p0011_p3
        :precondition (and (succ_p0011_p3)
                           (checked_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p0011)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #21647: <==commonly_known== 13023 (neg)
                    (not_at_c_p0011)

                    ; #43568: origin
                    (at_c_p3)

                    ; #13023: origin
                    (not (at_c_p0011))

                    ; #74329: <==negation-removal== 43568 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p0011_p4
        :precondition (and (Pc_not_blocked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p0011)
                           (succ_p0011_p4)
                           (checked_p4))
        :effect (and
                    ; #21647: <==commonly_known== 13023 (neg)
                    (not_at_c_p0011)

                    ; #44024: origin
                    (at_c_p4)

                    ; #13023: origin
                    (not (at_c_p0011))

                    ; #62064: <==negation-removal== 44024 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p0011_p5
        :precondition (and (Pc_not_blocked_p5)
                           (checked_p5)
                           (at_c_p0011)
                           (succ_p0011_p5)
                           (Bc_not_blocked_p5))
        :effect (and
                    ; #21647: <==commonly_known== 13023 (neg)
                    (not_at_c_p0011)

                    ; #39390: origin
                    (at_c_p5)

                    ; #13023: origin
                    (not (at_c_p0011))

                    ; #85778: <==negation-removal== 39390 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p0011_p6
        :precondition (and (checked_p6)
                           (succ_p0011_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p0011)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #21647: <==commonly_known== 13023 (neg)
                    (not_at_c_p0011)

                    ; #81257: origin
                    (at_c_p6)

                    ; #13023: origin
                    (not (at_c_p0011))

                    ; #59398: <==negation-removal== 81257 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p0011_p7
        :precondition (and (checked_p7)
                           (succ_p0011_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p0011)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #21647: <==commonly_known== 13023 (neg)
                    (not_at_c_p0011)

                    ; #59751: origin
                    (at_c_p7)

                    ; #13023: origin
                    (not (at_c_p0011))

                    ; #26401: <==negation-removal== 59751 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p0011_p8
        :precondition (and (succ_p0011_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p0011)
                           (Bc_not_blocked_p8))
        :effect (and
                    ; #18235: origin
                    (at_c_p8)

                    ; #21647: <==commonly_known== 13023 (neg)
                    (not_at_c_p0011)

                    ; #13023: origin
                    (not (at_c_p0011))

                    ; #18880: <==negation-removal== 18235 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p0011_p9
        :precondition (and (checked_p9)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p0011)
                           (succ_p0011_p9))
        :effect (and
                    ; #21647: <==commonly_known== 13023 (neg)
                    (not_at_c_p0011)

                    ; #50189: origin
                    (at_c_p9)

                    ; #13023: origin
                    (not (at_c_p0011))

                    ; #37506: <==negation-removal== 50189 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p012_p0011
        :precondition (and (Bc_not_blocked_p0011)
                           (succ_p012_p0011)
                           (checked_p0011)
                           (at_c_p012)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13023: origin
                    (at_c_p0011)

                    ; #99428: <==commonly_known== 53903 (neg)
                    (not_at_c_p012)

                    ; #21647: <==negation-removal== 13023 (pos)
                    (not (not_at_c_p0011))

                    ; #53903: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p012
        :precondition (and (checked_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (succ_p012_p012)
                           (at_c_p012))
        :effect (and
                    ; #53903: origin
                    (at_c_p012)

                    ; #99428: <==commonly_known== 53903 (neg)
                    (not_at_c_p012)

                    ; #53903: origin
                    (not (at_c_p012))

                    ; #99428: <==negation-removal== 53903 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p012_p1
        :precondition (and (checked_p1)
                           (succ_p012_p1)
                           (Pc_not_blocked_p1)
                           (at_c_p012)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #47689: origin
                    (at_c_p1)

                    ; #99428: <==commonly_known== 53903 (neg)
                    (not_at_c_p012)

                    ; #42742: <==negation-removal== 47689 (pos)
                    (not (not_at_c_p1))

                    ; #53903: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p10
        :precondition (and (checked_p10)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10)
                           (succ_p012_p10)
                           (at_c_p012))
        :effect (and
                    ; #68218: origin
                    (at_c_p10)

                    ; #99428: <==commonly_known== 53903 (neg)
                    (not_at_c_p012)

                    ; #21245: <==negation-removal== 68218 (pos)
                    (not (not_at_c_p10))

                    ; #53903: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p2
        :precondition (and (Pc_not_blocked_p2)
                           (checked_p2)
                           (succ_p012_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p012))
        :effect (and
                    ; #20040: origin
                    (at_c_p2)

                    ; #99428: <==commonly_known== 53903 (neg)
                    (not_at_c_p012)

                    ; #53695: <==negation-removal== 20040 (pos)
                    (not (not_at_c_p2))

                    ; #53903: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p3
        :precondition (and (checked_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p012)
                           (Bc_not_blocked_p3)
                           (succ_p012_p3))
        :effect (and
                    ; #43568: origin
                    (at_c_p3)

                    ; #99428: <==commonly_known== 53903 (neg)
                    (not_at_c_p012)

                    ; #53903: origin
                    (not (at_c_p012))

                    ; #74329: <==negation-removal== 43568 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p012_p4
        :precondition (and (succ_p012_p4)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p012)
                           (checked_p4))
        :effect (and
                    ; #44024: origin
                    (at_c_p4)

                    ; #99428: <==commonly_known== 53903 (neg)
                    (not_at_c_p012)

                    ; #53903: origin
                    (not (at_c_p012))

                    ; #62064: <==negation-removal== 44024 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p012_p5
        :precondition (and (succ_p012_p5)
                           (Pc_not_blocked_p5)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (at_c_p012))
        :effect (and
                    ; #39390: origin
                    (at_c_p5)

                    ; #99428: <==commonly_known== 53903 (neg)
                    (not_at_c_p012)

                    ; #53903: origin
                    (not (at_c_p012))

                    ; #85778: <==negation-removal== 39390 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p012_p6
        :precondition (and (checked_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p012)
                           (succ_p012_p6)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #81257: origin
                    (at_c_p6)

                    ; #99428: <==commonly_known== 53903 (neg)
                    (not_at_c_p012)

                    ; #53903: origin
                    (not (at_c_p012))

                    ; #59398: <==negation-removal== 81257 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p012_p7
        :precondition (and (checked_p7)
                           (succ_p012_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p012)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #59751: origin
                    (at_c_p7)

                    ; #99428: <==commonly_known== 53903 (neg)
                    (not_at_c_p012)

                    ; #26401: <==negation-removal== 59751 (pos)
                    (not (not_at_c_p7))

                    ; #53903: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p8
        :precondition (and (succ_p012_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p012)
                           (Bc_not_blocked_p8))
        :effect (and
                    ; #18235: origin
                    (at_c_p8)

                    ; #99428: <==commonly_known== 53903 (neg)
                    (not_at_c_p012)

                    ; #18880: <==negation-removal== 18235 (pos)
                    (not (not_at_c_p8))

                    ; #53903: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p9
        :precondition (and (succ_p012_p9)
                           (Bc_not_blocked_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p012))
        :effect (and
                    ; #50189: origin
                    (at_c_p9)

                    ; #99428: <==commonly_known== 53903 (neg)
                    (not_at_c_p012)

                    ; #37506: <==negation-removal== 50189 (pos)
                    (not (not_at_c_p9))

                    ; #53903: origin
                    (not (at_c_p012))))

    (:action move_c_p10_p0011
        :precondition (and (at_c_p10)
                           (Bc_not_blocked_p0011)
                           (succ_p10_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13023: origin
                    (at_c_p0011)

                    ; #21245: <==commonly_known== 68218 (neg)
                    (not_at_c_p10)

                    ; #21647: <==negation-removal== 13023 (pos)
                    (not (not_at_c_p0011))

                    ; #68218: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p012
        :precondition (and (at_c_p10)
                           (checked_p012)
                           (succ_p10_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012))
        :effect (and
                    ; #21245: <==commonly_known== 68218 (neg)
                    (not_at_c_p10)

                    ; #53903: origin
                    (at_c_p012)

                    ; #68218: origin
                    (not (at_c_p10))

                    ; #99428: <==negation-removal== 53903 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p10_p1
        :precondition (and (at_c_p10)
                           (checked_p1)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (succ_p10_p1))
        :effect (and
                    ; #21245: <==commonly_known== 68218 (neg)
                    (not_at_c_p10)

                    ; #47689: origin
                    (at_c_p1)

                    ; #42742: <==negation-removal== 47689 (pos)
                    (not (not_at_c_p1))

                    ; #68218: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p10
        :precondition (and (checked_p10)
                           (at_c_p10)
                           (succ_p10_p10)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #21245: <==commonly_known== 68218 (neg)
                    (not_at_c_p10)

                    ; #68218: origin
                    (at_c_p10)

                    ; #21245: <==negation-removal== 68218 (pos)
                    (not (not_at_c_p10))

                    ; #68218: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p2
        :precondition (and (at_c_p10)
                           (Pc_not_blocked_p2)
                           (checked_p2)
                           (succ_p10_p2)
                           (Bc_not_blocked_p2))
        :effect (and
                    ; #20040: origin
                    (at_c_p2)

                    ; #21245: <==commonly_known== 68218 (neg)
                    (not_at_c_p10)

                    ; #53695: <==negation-removal== 20040 (pos)
                    (not (not_at_c_p2))

                    ; #68218: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p3
        :precondition (and (at_c_p10)
                           (checked_p3)
                           (Pc_not_blocked_p3)
                           (succ_p10_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #21245: <==commonly_known== 68218 (neg)
                    (not_at_c_p10)

                    ; #43568: origin
                    (at_c_p3)

                    ; #68218: origin
                    (not (at_c_p10))

                    ; #74329: <==negation-removal== 43568 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p10_p4
        :precondition (and (at_c_p10)
                           (succ_p10_p4)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #21245: <==commonly_known== 68218 (neg)
                    (not_at_c_p10)

                    ; #44024: origin
                    (at_c_p4)

                    ; #62064: <==negation-removal== 44024 (pos)
                    (not (not_at_c_p4))

                    ; #68218: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p5
        :precondition (and (at_c_p10)
                           (Pc_not_blocked_p5)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (succ_p10_p5))
        :effect (and
                    ; #21245: <==commonly_known== 68218 (neg)
                    (not_at_c_p10)

                    ; #39390: origin
                    (at_c_p5)

                    ; #68218: origin
                    (not (at_c_p10))

                    ; #85778: <==negation-removal== 39390 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p10_p6
        :precondition (and (at_c_p10)
                           (checked_p6)
                           (Pc_not_blocked_p6)
                           (Bc_not_blocked_p6)
                           (succ_p10_p6))
        :effect (and
                    ; #21245: <==commonly_known== 68218 (neg)
                    (not_at_c_p10)

                    ; #81257: origin
                    (at_c_p6)

                    ; #59398: <==negation-removal== 81257 (pos)
                    (not (not_at_c_p6))

                    ; #68218: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p7
        :precondition (and (at_c_p10)
                           (checked_p7)
                           (succ_p10_p7)
                           (Pc_not_blocked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #21245: <==commonly_known== 68218 (neg)
                    (not_at_c_p10)

                    ; #59751: origin
                    (at_c_p7)

                    ; #26401: <==negation-removal== 59751 (pos)
                    (not (not_at_c_p7))

                    ; #68218: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p8
        :precondition (and (at_c_p10)
                           (succ_p10_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8))
        :effect (and
                    ; #18235: origin
                    (at_c_p8)

                    ; #21245: <==commonly_known== 68218 (neg)
                    (not_at_c_p10)

                    ; #18880: <==negation-removal== 18235 (pos)
                    (not (not_at_c_p8))

                    ; #68218: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p9
        :precondition (and (checked_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p10)
                           (Pc_not_blocked_p9)
                           (succ_p10_p9))
        :effect (and
                    ; #21245: <==commonly_known== 68218 (neg)
                    (not_at_c_p10)

                    ; #50189: origin
                    (at_c_p9)

                    ; #37506: <==negation-removal== 50189 (pos)
                    (not (not_at_c_p9))

                    ; #68218: origin
                    (not (at_c_p10))))

    (:action move_c_p1_p0011
        :precondition (and (Bc_not_blocked_p0011)
                           (succ_p1_p0011)
                           (checked_p0011)
                           (at_c_p1)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13023: origin
                    (at_c_p0011)

                    ; #42742: <==commonly_known== 47689 (neg)
                    (not_at_c_p1)

                    ; #21647: <==negation-removal== 13023 (pos)
                    (not (not_at_c_p0011))

                    ; #47689: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p012
        :precondition (and (succ_p1_p012)
                           (checked_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (at_c_p1))
        :effect (and
                    ; #42742: <==commonly_known== 47689 (neg)
                    (not_at_c_p1)

                    ; #53903: origin
                    (at_c_p012)

                    ; #47689: origin
                    (not (at_c_p1))

                    ; #99428: <==negation-removal== 53903 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p1_p1
        :precondition (and (checked_p1)
                           (Pc_not_blocked_p1)
                           (at_c_p1)
                           (Bc_not_blocked_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #42742: <==commonly_known== 47689 (neg)
                    (not_at_c_p1)

                    ; #47689: origin
                    (at_c_p1)

                    ; #42742: <==negation-removal== 47689 (pos)
                    (not (not_at_c_p1))

                    ; #47689: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p10
        :precondition (and (checked_p10)
                           (succ_p1_p10)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10)
                           (at_c_p1))
        :effect (and
                    ; #42742: <==commonly_known== 47689 (neg)
                    (not_at_c_p1)

                    ; #68218: origin
                    (at_c_p10)

                    ; #21245: <==negation-removal== 68218 (pos)
                    (not (not_at_c_p10))

                    ; #47689: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p2
        :precondition (and (Pc_not_blocked_p2)
                           (checked_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p1)
                           (succ_p1_p2))
        :effect (and
                    ; #20040: origin
                    (at_c_p2)

                    ; #42742: <==commonly_known== 47689 (neg)
                    (not_at_c_p1)

                    ; #47689: origin
                    (not (at_c_p1))

                    ; #53695: <==negation-removal== 20040 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p1_p3
        :precondition (and (succ_p1_p3)
                           (checked_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p1)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #42742: <==commonly_known== 47689 (neg)
                    (not_at_c_p1)

                    ; #43568: origin
                    (at_c_p3)

                    ; #47689: origin
                    (not (at_c_p1))

                    ; #74329: <==negation-removal== 43568 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p1_p4
        :precondition (and (succ_p1_p4)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p1)
                           (checked_p4))
        :effect (and
                    ; #42742: <==commonly_known== 47689 (neg)
                    (not_at_c_p1)

                    ; #44024: origin
                    (at_c_p4)

                    ; #47689: origin
                    (not (at_c_p1))

                    ; #62064: <==negation-removal== 44024 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p1_p5
        :precondition (and (succ_p1_p5)
                           (Pc_not_blocked_p5)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (at_c_p1))
        :effect (and
                    ; #39390: origin
                    (at_c_p5)

                    ; #42742: <==commonly_known== 47689 (neg)
                    (not_at_c_p1)

                    ; #47689: origin
                    (not (at_c_p1))

                    ; #85778: <==negation-removal== 39390 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p1_p6
        :precondition (and (succ_p1_p6)
                           (checked_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p1)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #42742: <==commonly_known== 47689 (neg)
                    (not_at_c_p1)

                    ; #81257: origin
                    (at_c_p6)

                    ; #47689: origin
                    (not (at_c_p1))

                    ; #59398: <==negation-removal== 81257 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p1_p7
        :precondition (and (succ_p1_p7)
                           (checked_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p1)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #42742: <==commonly_known== 47689 (neg)
                    (not_at_c_p1)

                    ; #59751: origin
                    (at_c_p7)

                    ; #26401: <==negation-removal== 59751 (pos)
                    (not (not_at_c_p7))

                    ; #47689: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p8
        :precondition (and (succ_p1_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p1)
                           (Bc_not_blocked_p8))
        :effect (and
                    ; #18235: origin
                    (at_c_p8)

                    ; #42742: <==commonly_known== 47689 (neg)
                    (not_at_c_p1)

                    ; #18880: <==negation-removal== 18235 (pos)
                    (not (not_at_c_p8))

                    ; #47689: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p9
        :precondition (and (checked_p9)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p1)
                           (succ_p1_p9))
        :effect (and
                    ; #42742: <==commonly_known== 47689 (neg)
                    (not_at_c_p1)

                    ; #50189: origin
                    (at_c_p9)

                    ; #37506: <==negation-removal== 50189 (pos)
                    (not (not_at_c_p9))

                    ; #47689: origin
                    (not (at_c_p1))))

    (:action move_c_p2_p0011
        :precondition (and (Bc_not_blocked_p0011)
                           (at_c_p2)
                           (checked_p0011)
                           (succ_p2_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13023: origin
                    (at_c_p0011)

                    ; #53695: <==commonly_known== 20040 (neg)
                    (not_at_c_p2)

                    ; #20040: origin
                    (not (at_c_p2))

                    ; #21647: <==negation-removal== 13023 (pos)
                    (not (not_at_c_p0011))))

    (:action move_c_p2_p012
        :precondition (and (checked_p012)
                           (at_c_p2)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (succ_p2_p012))
        :effect (and
                    ; #53695: <==commonly_known== 20040 (neg)
                    (not_at_c_p2)

                    ; #53903: origin
                    (at_c_p012)

                    ; #20040: origin
                    (not (at_c_p2))

                    ; #99428: <==negation-removal== 53903 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p2_p1
        :precondition (and (Pc_not_blocked_p1)
                           (succ_p2_p1)
                           (checked_p1)
                           (at_c_p2)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #47689: origin
                    (at_c_p1)

                    ; #53695: <==commonly_known== 20040 (neg)
                    (not_at_c_p2)

                    ; #20040: origin
                    (not (at_c_p2))

                    ; #42742: <==negation-removal== 47689 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p2_p10
        :precondition (and (checked_p10)
                           (at_c_p2)
                           (succ_p2_p10)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #53695: <==commonly_known== 20040 (neg)
                    (not_at_c_p2)

                    ; #68218: origin
                    (at_c_p10)

                    ; #20040: origin
                    (not (at_c_p2))

                    ; #21245: <==negation-removal== 68218 (pos)
                    (not (not_at_c_p10))))

    (:action move_c_p2_p2
        :precondition (and (Pc_not_blocked_p2)
                           (checked_p2)
                           (at_c_p2)
                           (succ_p2_p2)
                           (Bc_not_blocked_p2))
        :effect (and
                    ; #20040: origin
                    (at_c_p2)

                    ; #53695: <==commonly_known== 20040 (neg)
                    (not_at_c_p2)

                    ; #20040: origin
                    (not (at_c_p2))

                    ; #53695: <==negation-removal== 20040 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p2_p3
        :precondition (and (at_c_p2)
                           (succ_p2_p3)
                           (checked_p3)
                           (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #43568: origin
                    (at_c_p3)

                    ; #53695: <==commonly_known== 20040 (neg)
                    (not_at_c_p2)

                    ; #20040: origin
                    (not (at_c_p2))

                    ; #74329: <==negation-removal== 43568 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p2_p4
        :precondition (and (succ_p2_p4)
                           (at_c_p2)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #44024: origin
                    (at_c_p4)

                    ; #53695: <==commonly_known== 20040 (neg)
                    (not_at_c_p2)

                    ; #20040: origin
                    (not (at_c_p2))

                    ; #62064: <==negation-removal== 44024 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p2_p5
        :precondition (and (Pc_not_blocked_p5)
                           (at_c_p2)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (succ_p2_p5))
        :effect (and
                    ; #39390: origin
                    (at_c_p5)

                    ; #53695: <==commonly_known== 20040 (neg)
                    (not_at_c_p2)

                    ; #20040: origin
                    (not (at_c_p2))

                    ; #85778: <==negation-removal== 39390 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p2_p6
        :precondition (and (checked_p6)
                           (at_c_p2)
                           (Pc_not_blocked_p6)
                           (succ_p2_p6)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #53695: <==commonly_known== 20040 (neg)
                    (not_at_c_p2)

                    ; #81257: origin
                    (at_c_p6)

                    ; #20040: origin
                    (not (at_c_p2))

                    ; #59398: <==negation-removal== 81257 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p2_p7
        :precondition (and (checked_p7)
                           (at_c_p2)
                           (Pc_not_blocked_p7)
                           (succ_p2_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #53695: <==commonly_known== 20040 (neg)
                    (not_at_c_p2)

                    ; #59751: origin
                    (at_c_p7)

                    ; #20040: origin
                    (not (at_c_p2))

                    ; #26401: <==negation-removal== 59751 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p2_p8
        :precondition (and (at_c_p2)
                           (succ_p2_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8))
        :effect (and
                    ; #18235: origin
                    (at_c_p8)

                    ; #53695: <==commonly_known== 20040 (neg)
                    (not_at_c_p2)

                    ; #18880: <==negation-removal== 18235 (pos)
                    (not (not_at_c_p8))

                    ; #20040: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p9
        :precondition (and (checked_p9)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p2)
                           (succ_p2_p9))
        :effect (and
                    ; #50189: origin
                    (at_c_p9)

                    ; #53695: <==commonly_known== 20040 (neg)
                    (not_at_c_p2)

                    ; #20040: origin
                    (not (at_c_p2))

                    ; #37506: <==negation-removal== 50189 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p3_p0011
        :precondition (and (succ_p3_p0011)
                           (Bc_not_blocked_p0011)
                           (at_c_p3)
                           (checked_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13023: origin
                    (at_c_p0011)

                    ; #74329: <==commonly_known== 43568 (neg)
                    (not_at_c_p3)

                    ; #21647: <==negation-removal== 13023 (pos)
                    (not (not_at_c_p0011))

                    ; #43568: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p012
        :precondition (and (checked_p012)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012)
                           (at_c_p3)
                           (succ_p3_p012))
        :effect (and
                    ; #53903: origin
                    (at_c_p012)

                    ; #74329: <==commonly_known== 43568 (neg)
                    (not_at_c_p3)

                    ; #43568: origin
                    (not (at_c_p3))

                    ; #99428: <==negation-removal== 53903 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p3_p1
        :precondition (and (checked_p1)
                           (at_c_p3)
                           (Pc_not_blocked_p1)
                           (succ_p3_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #47689: origin
                    (at_c_p1)

                    ; #74329: <==commonly_known== 43568 (neg)
                    (not_at_c_p3)

                    ; #42742: <==negation-removal== 47689 (pos)
                    (not (not_at_c_p1))

                    ; #43568: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p10
        :precondition (and (checked_p10)
                           (at_c_p3)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10)
                           (succ_p3_p10))
        :effect (and
                    ; #68218: origin
                    (at_c_p10)

                    ; #74329: <==commonly_known== 43568 (neg)
                    (not_at_c_p3)

                    ; #21245: <==negation-removal== 68218 (pos)
                    (not (not_at_c_p10))

                    ; #43568: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p2
        :precondition (and (Pc_not_blocked_p2)
                           (succ_p3_p2)
                           (checked_p2)
                           (at_c_p3)
                           (Bc_not_blocked_p2))
        :effect (and
                    ; #20040: origin
                    (at_c_p2)

                    ; #74329: <==commonly_known== 43568 (neg)
                    (not_at_c_p3)

                    ; #43568: origin
                    (not (at_c_p3))

                    ; #53695: <==negation-removal== 20040 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p3_p3
        :precondition (and (succ_p3_p3)
                           (at_c_p3)
                           (checked_p3)
                           (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #43568: origin
                    (at_c_p3)

                    ; #74329: <==commonly_known== 43568 (neg)
                    (not_at_c_p3)

                    ; #43568: origin
                    (not (at_c_p3))

                    ; #74329: <==negation-removal== 43568 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p3_p4
        :precondition (and (at_c_p3)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (succ_p3_p4)
                           (checked_p4))
        :effect (and
                    ; #44024: origin
                    (at_c_p4)

                    ; #74329: <==commonly_known== 43568 (neg)
                    (not_at_c_p3)

                    ; #43568: origin
                    (not (at_c_p3))

                    ; #62064: <==negation-removal== 44024 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p3_p5
        :precondition (and (Pc_not_blocked_p5)
                           (checked_p5)
                           (at_c_p3)
                           (succ_p3_p5)
                           (Bc_not_blocked_p5))
        :effect (and
                    ; #39390: origin
                    (at_c_p5)

                    ; #74329: <==commonly_known== 43568 (neg)
                    (not_at_c_p3)

                    ; #43568: origin
                    (not (at_c_p3))

                    ; #85778: <==negation-removal== 39390 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p3_p6
        :precondition (and (checked_p6)
                           (at_c_p3)
                           (Pc_not_blocked_p6)
                           (succ_p3_p6)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #74329: <==commonly_known== 43568 (neg)
                    (not_at_c_p3)

                    ; #81257: origin
                    (at_c_p6)

                    ; #43568: origin
                    (not (at_c_p3))

                    ; #59398: <==negation-removal== 81257 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p3_p7
        :precondition (and (succ_p3_p7)
                           (checked_p7)
                           (at_c_p3)
                           (Pc_not_blocked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #59751: origin
                    (at_c_p7)

                    ; #74329: <==commonly_known== 43568 (neg)
                    (not_at_c_p3)

                    ; #26401: <==negation-removal== 59751 (pos)
                    (not (not_at_c_p7))

                    ; #43568: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p8
        :precondition (and (at_c_p3)
                           (checked_p8)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (succ_p3_p8))
        :effect (and
                    ; #18235: origin
                    (at_c_p8)

                    ; #74329: <==commonly_known== 43568 (neg)
                    (not_at_c_p3)

                    ; #18880: <==negation-removal== 18235 (pos)
                    (not (not_at_c_p8))

                    ; #43568: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p9
        :precondition (and (checked_p9)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p3)
                           (succ_p3_p9))
        :effect (and
                    ; #50189: origin
                    (at_c_p9)

                    ; #74329: <==commonly_known== 43568 (neg)
                    (not_at_c_p3)

                    ; #37506: <==negation-removal== 50189 (pos)
                    (not (not_at_c_p9))

                    ; #43568: origin
                    (not (at_c_p3))))

    (:action move_c_p4_p0011
        :precondition (and (Bc_not_blocked_p0011)
                           (succ_p4_p0011)
                           (checked_p0011)
                           (at_c_p4)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13023: origin
                    (at_c_p0011)

                    ; #62064: <==commonly_known== 44024 (neg)
                    (not_at_c_p4)

                    ; #21647: <==negation-removal== 13023 (pos)
                    (not (not_at_c_p0011))

                    ; #44024: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p012
        :precondition (and (checked_p012)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012)
                           (succ_p4_p012)
                           (at_c_p4))
        :effect (and
                    ; #53903: origin
                    (at_c_p012)

                    ; #62064: <==commonly_known== 44024 (neg)
                    (not_at_c_p4)

                    ; #44024: origin
                    (not (at_c_p4))

                    ; #99428: <==negation-removal== 53903 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p4_p1
        :precondition (and (succ_p4_p1)
                           (Pc_not_blocked_p1)
                           (checked_p1)
                           (Bc_not_blocked_p1)
                           (at_c_p4))
        :effect (and
                    ; #47689: origin
                    (at_c_p1)

                    ; #62064: <==commonly_known== 44024 (neg)
                    (not_at_c_p4)

                    ; #42742: <==negation-removal== 47689 (pos)
                    (not (not_at_c_p1))

                    ; #44024: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p10
        :precondition (and (checked_p10)
                           (succ_p4_p10)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10)
                           (at_c_p4))
        :effect (and
                    ; #62064: <==commonly_known== 44024 (neg)
                    (not_at_c_p4)

                    ; #68218: origin
                    (at_c_p10)

                    ; #21245: <==negation-removal== 68218 (pos)
                    (not (not_at_c_p10))

                    ; #44024: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p2
        :precondition (and (Pc_not_blocked_p2)
                           (checked_p2)
                           (succ_p4_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p4))
        :effect (and
                    ; #20040: origin
                    (at_c_p2)

                    ; #62064: <==commonly_known== 44024 (neg)
                    (not_at_c_p4)

                    ; #44024: origin
                    (not (at_c_p4))

                    ; #53695: <==negation-removal== 20040 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p4_p3
        :precondition (and (Pc_not_blocked_p3)
                           (checked_p3)
                           (succ_p4_p3)
                           (at_c_p4)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #43568: origin
                    (at_c_p3)

                    ; #62064: <==commonly_known== 44024 (neg)
                    (not_at_c_p4)

                    ; #44024: origin
                    (not (at_c_p4))

                    ; #74329: <==negation-removal== 43568 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p4_p4
        :precondition (and (Bc_not_blocked_p4)
                           (succ_p4_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p4)
                           (checked_p4))
        :effect (and
                    ; #44024: origin
                    (at_c_p4)

                    ; #62064: <==commonly_known== 44024 (neg)
                    (not_at_c_p4)

                    ; #44024: origin
                    (not (at_c_p4))

                    ; #62064: <==negation-removal== 44024 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p4_p5
        :precondition (and (Pc_not_blocked_p5)
                           (checked_p5)
                           (succ_p4_p5)
                           (Bc_not_blocked_p5)
                           (at_c_p4))
        :effect (and
                    ; #39390: origin
                    (at_c_p5)

                    ; #62064: <==commonly_known== 44024 (neg)
                    (not_at_c_p4)

                    ; #44024: origin
                    (not (at_c_p4))

                    ; #85778: <==negation-removal== 39390 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p4_p6
        :precondition (and (succ_p4_p6)
                           (checked_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p4)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #62064: <==commonly_known== 44024 (neg)
                    (not_at_c_p4)

                    ; #81257: origin
                    (at_c_p6)

                    ; #44024: origin
                    (not (at_c_p4))

                    ; #59398: <==negation-removal== 81257 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p4_p7
        :precondition (and (checked_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p4)
                           (succ_p4_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #59751: origin
                    (at_c_p7)

                    ; #62064: <==commonly_known== 44024 (neg)
                    (not_at_c_p4)

                    ; #26401: <==negation-removal== 59751 (pos)
                    (not (not_at_c_p7))

                    ; #44024: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p8
        :precondition (and (succ_p4_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p4))
        :effect (and
                    ; #18235: origin
                    (at_c_p8)

                    ; #62064: <==commonly_known== 44024 (neg)
                    (not_at_c_p4)

                    ; #18880: <==negation-removal== 18235 (pos)
                    (not (not_at_c_p8))

                    ; #44024: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p9
        :precondition (and (checked_p9)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p4_p9)
                           (at_c_p4))
        :effect (and
                    ; #50189: origin
                    (at_c_p9)

                    ; #62064: <==commonly_known== 44024 (neg)
                    (not_at_c_p4)

                    ; #37506: <==negation-removal== 50189 (pos)
                    (not (not_at_c_p9))

                    ; #44024: origin
                    (not (at_c_p4))))

    (:action move_c_p5_p0011
        :precondition (and (Bc_not_blocked_p0011)
                           (at_c_p5)
                           (succ_p5_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13023: origin
                    (at_c_p0011)

                    ; #85778: <==commonly_known== 39390 (neg)
                    (not_at_c_p5)

                    ; #21647: <==negation-removal== 13023 (pos)
                    (not (not_at_c_p0011))

                    ; #39390: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p012
        :precondition (and (checked_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (at_c_p5)
                           (succ_p5_p012))
        :effect (and
                    ; #53903: origin
                    (at_c_p012)

                    ; #85778: <==commonly_known== 39390 (neg)
                    (not_at_c_p5)

                    ; #39390: origin
                    (not (at_c_p5))

                    ; #99428: <==negation-removal== 53903 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p5_p1
        :precondition (and (checked_p1)
                           (at_c_p5)
                           (Pc_not_blocked_p1)
                           (succ_p5_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #47689: origin
                    (at_c_p1)

                    ; #85778: <==commonly_known== 39390 (neg)
                    (not_at_c_p5)

                    ; #39390: origin
                    (not (at_c_p5))

                    ; #42742: <==negation-removal== 47689 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p5_p10
        :precondition (and (checked_p10)
                           (at_c_p5)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10)
                           (succ_p5_p10))
        :effect (and
                    ; #68218: origin
                    (at_c_p10)

                    ; #85778: <==commonly_known== 39390 (neg)
                    (not_at_c_p5)

                    ; #21245: <==negation-removal== 68218 (pos)
                    (not (not_at_c_p10))

                    ; #39390: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p2
        :precondition (and (Pc_not_blocked_p2)
                           (checked_p2)
                           (succ_p5_p2)
                           (at_c_p5)
                           (Bc_not_blocked_p2))
        :effect (and
                    ; #20040: origin
                    (at_c_p2)

                    ; #85778: <==commonly_known== 39390 (neg)
                    (not_at_c_p5)

                    ; #39390: origin
                    (not (at_c_p5))

                    ; #53695: <==negation-removal== 20040 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p5_p3
        :precondition (and (succ_p5_p3)
                           (at_c_p5)
                           (checked_p3)
                           (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #43568: origin
                    (at_c_p3)

                    ; #85778: <==commonly_known== 39390 (neg)
                    (not_at_c_p5)

                    ; #39390: origin
                    (not (at_c_p5))

                    ; #74329: <==negation-removal== 43568 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p5_p4
        :precondition (and (succ_p5_p4)
                           (at_c_p5)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #44024: origin
                    (at_c_p4)

                    ; #85778: <==commonly_known== 39390 (neg)
                    (not_at_c_p5)

                    ; #39390: origin
                    (not (at_c_p5))

                    ; #62064: <==negation-removal== 44024 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p5_p5
        :precondition (and (Pc_not_blocked_p5)
                           (checked_p5)
                           (at_c_p5)
                           (succ_p5_p5)
                           (Bc_not_blocked_p5))
        :effect (and
                    ; #39390: origin
                    (at_c_p5)

                    ; #85778: <==commonly_known== 39390 (neg)
                    (not_at_c_p5)

                    ; #39390: origin
                    (not (at_c_p5))

                    ; #85778: <==negation-removal== 39390 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p5_p6
        :precondition (and (checked_p6)
                           (at_c_p5)
                           (Pc_not_blocked_p6)
                           (succ_p5_p6)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #81257: origin
                    (at_c_p6)

                    ; #85778: <==commonly_known== 39390 (neg)
                    (not_at_c_p5)

                    ; #39390: origin
                    (not (at_c_p5))

                    ; #59398: <==negation-removal== 81257 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p5_p7
        :precondition (and (checked_p7)
                           (succ_p5_p7)
                           (at_c_p5)
                           (Pc_not_blocked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #59751: origin
                    (at_c_p7)

                    ; #85778: <==commonly_known== 39390 (neg)
                    (not_at_c_p5)

                    ; #26401: <==negation-removal== 59751 (pos)
                    (not (not_at_c_p7))

                    ; #39390: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p8
        :precondition (and (succ_p5_p8)
                           (at_c_p5)
                           (checked_p8)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8))
        :effect (and
                    ; #18235: origin
                    (at_c_p8)

                    ; #85778: <==commonly_known== 39390 (neg)
                    (not_at_c_p5)

                    ; #18880: <==negation-removal== 18235 (pos)
                    (not (not_at_c_p8))

                    ; #39390: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p9
        :precondition (and (checked_p9)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p5)
                           (succ_p5_p9))
        :effect (and
                    ; #50189: origin
                    (at_c_p9)

                    ; #85778: <==commonly_known== 39390 (neg)
                    (not_at_c_p5)

                    ; #37506: <==negation-removal== 50189 (pos)
                    (not (not_at_c_p9))

                    ; #39390: origin
                    (not (at_c_p5))))

    (:action move_c_p6_p0011
        :precondition (and (at_c_p6)
                           (Bc_not_blocked_p0011)
                           (checked_p0011)
                           (succ_p6_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13023: origin
                    (at_c_p0011)

                    ; #59398: <==commonly_known== 81257 (neg)
                    (not_at_c_p6)

                    ; #21647: <==negation-removal== 13023 (pos)
                    (not (not_at_c_p0011))

                    ; #81257: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p012
        :precondition (and (at_c_p6)
                           (checked_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (succ_p6_p012))
        :effect (and
                    ; #53903: origin
                    (at_c_p012)

                    ; #59398: <==commonly_known== 81257 (neg)
                    (not_at_c_p6)

                    ; #81257: origin
                    (not (at_c_p6))

                    ; #99428: <==negation-removal== 53903 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p6_p1
        :precondition (and (at_c_p6)
                           (succ_p6_p1)
                           (Pc_not_blocked_p1)
                           (checked_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #47689: origin
                    (at_c_p1)

                    ; #59398: <==commonly_known== 81257 (neg)
                    (not_at_c_p6)

                    ; #42742: <==negation-removal== 47689 (pos)
                    (not (not_at_c_p1))

                    ; #81257: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p10
        :precondition (and (at_c_p6)
                           (checked_p10)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10)
                           (succ_p6_p10))
        :effect (and
                    ; #59398: <==commonly_known== 81257 (neg)
                    (not_at_c_p6)

                    ; #68218: origin
                    (at_c_p10)

                    ; #21245: <==negation-removal== 68218 (pos)
                    (not (not_at_c_p10))

                    ; #81257: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p2
        :precondition (and (at_c_p6)
                           (succ_p6_p2)
                           (Pc_not_blocked_p2)
                           (checked_p2)
                           (Bc_not_blocked_p2))
        :effect (and
                    ; #20040: origin
                    (at_c_p2)

                    ; #59398: <==commonly_known== 81257 (neg)
                    (not_at_c_p6)

                    ; #53695: <==negation-removal== 20040 (pos)
                    (not (not_at_c_p2))

                    ; #81257: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p3
        :precondition (and (at_c_p6)
                           (checked_p3)
                           (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3)
                           (succ_p6_p3))
        :effect (and
                    ; #43568: origin
                    (at_c_p3)

                    ; #59398: <==commonly_known== 81257 (neg)
                    (not_at_c_p6)

                    ; #74329: <==negation-removal== 43568 (pos)
                    (not (not_at_c_p3))

                    ; #81257: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p4
        :precondition (and (at_c_p6)
                           (succ_p6_p4)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #44024: origin
                    (at_c_p4)

                    ; #59398: <==commonly_known== 81257 (neg)
                    (not_at_c_p6)

                    ; #62064: <==negation-removal== 44024 (pos)
                    (not (not_at_c_p4))

                    ; #81257: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p5
        :precondition (and (at_c_p6)
                           (succ_p6_p5)
                           (Pc_not_blocked_p5)
                           (checked_p5)
                           (Bc_not_blocked_p5))
        :effect (and
                    ; #39390: origin
                    (at_c_p5)

                    ; #59398: <==commonly_known== 81257 (neg)
                    (not_at_c_p6)

                    ; #81257: origin
                    (not (at_c_p6))

                    ; #85778: <==negation-removal== 39390 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p6_p6
        :precondition (and (at_c_p6)
                           (succ_p6_p6)
                           (checked_p6)
                           (Pc_not_blocked_p6)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #59398: <==commonly_known== 81257 (neg)
                    (not_at_c_p6)

                    ; #81257: origin
                    (at_c_p6)

                    ; #59398: <==negation-removal== 81257 (pos)
                    (not (not_at_c_p6))

                    ; #81257: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p7
        :precondition (and (at_c_p6)
                           (checked_p7)
                           (Pc_not_blocked_p7)
                           (succ_p6_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #59398: <==commonly_known== 81257 (neg)
                    (not_at_c_p6)

                    ; #59751: origin
                    (at_c_p7)

                    ; #26401: <==negation-removal== 59751 (pos)
                    (not (not_at_c_p7))

                    ; #81257: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p8
        :precondition (and (at_c_p6)
                           (checked_p8)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (succ_p6_p8))
        :effect (and
                    ; #18235: origin
                    (at_c_p8)

                    ; #59398: <==commonly_known== 81257 (neg)
                    (not_at_c_p6)

                    ; #18880: <==negation-removal== 18235 (pos)
                    (not (not_at_c_p8))

                    ; #81257: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p9
        :precondition (and (at_c_p6)
                           (Bc_not_blocked_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p6_p9))
        :effect (and
                    ; #50189: origin
                    (at_c_p9)

                    ; #59398: <==commonly_known== 81257 (neg)
                    (not_at_c_p6)

                    ; #37506: <==negation-removal== 50189 (pos)
                    (not (not_at_c_p9))

                    ; #81257: origin
                    (not (at_c_p6))))

    (:action move_c_p7_p0011
        :precondition (and (Bc_not_blocked_p0011)
                           (at_c_p7)
                           (succ_p7_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13023: origin
                    (at_c_p0011)

                    ; #26401: <==commonly_known== 59751 (neg)
                    (not_at_c_p7)

                    ; #21647: <==negation-removal== 13023 (pos)
                    (not (not_at_c_p0011))

                    ; #59751: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p012
        :precondition (and (checked_p012)
                           (succ_p7_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (at_c_p7))
        :effect (and
                    ; #26401: <==commonly_known== 59751 (neg)
                    (not_at_c_p7)

                    ; #53903: origin
                    (at_c_p012)

                    ; #59751: origin
                    (not (at_c_p7))

                    ; #99428: <==negation-removal== 53903 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p7_p1
        :precondition (and (Pc_not_blocked_p1)
                           (checked_p1)
                           (Bc_not_blocked_p1)
                           (succ_p7_p1)
                           (at_c_p7))
        :effect (and
                    ; #26401: <==commonly_known== 59751 (neg)
                    (not_at_c_p7)

                    ; #47689: origin
                    (at_c_p1)

                    ; #42742: <==negation-removal== 47689 (pos)
                    (not (not_at_c_p1))

                    ; #59751: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p10
        :precondition (and (checked_p10)
                           (succ_p7_p10)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10)
                           (at_c_p7))
        :effect (and
                    ; #26401: <==commonly_known== 59751 (neg)
                    (not_at_c_p7)

                    ; #68218: origin
                    (at_c_p10)

                    ; #21245: <==negation-removal== 68218 (pos)
                    (not (not_at_c_p10))

                    ; #59751: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p2
        :precondition (and (Bc_not_blocked_p2)
                           (checked_p2)
                           (at_c_p7)
                           (succ_p7_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #20040: origin
                    (at_c_p2)

                    ; #26401: <==commonly_known== 59751 (neg)
                    (not_at_c_p7)

                    ; #53695: <==negation-removal== 20040 (pos)
                    (not (not_at_c_p2))

                    ; #59751: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p3
        :precondition (and (succ_p7_p3)
                           (checked_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p7)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #26401: <==commonly_known== 59751 (neg)
                    (not_at_c_p7)

                    ; #43568: origin
                    (at_c_p3)

                    ; #59751: origin
                    (not (at_c_p7))

                    ; #74329: <==negation-removal== 43568 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p7_p4
        :precondition (and (Pc_not_blocked_p4)
                           (Bc_not_blocked_p4)
                           (succ_p7_p4)
                           (at_c_p7)
                           (checked_p4))
        :effect (and
                    ; #26401: <==commonly_known== 59751 (neg)
                    (not_at_c_p7)

                    ; #44024: origin
                    (at_c_p4)

                    ; #59751: origin
                    (not (at_c_p7))

                    ; #62064: <==negation-removal== 44024 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p7_p5
        :precondition (and (Pc_not_blocked_p5)
                           (succ_p7_p5)
                           (checked_p5)
                           (at_c_p7)
                           (Bc_not_blocked_p5))
        :effect (and
                    ; #26401: <==commonly_known== 59751 (neg)
                    (not_at_c_p7)

                    ; #39390: origin
                    (at_c_p5)

                    ; #59751: origin
                    (not (at_c_p7))

                    ; #85778: <==negation-removal== 39390 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p7_p6
        :precondition (and (succ_p7_p6)
                           (checked_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p7)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #26401: <==commonly_known== 59751 (neg)
                    (not_at_c_p7)

                    ; #81257: origin
                    (at_c_p6)

                    ; #59398: <==negation-removal== 81257 (pos)
                    (not (not_at_c_p6))

                    ; #59751: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p7
        :precondition (and (checked_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p7)
                           (succ_p7_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #26401: <==commonly_known== 59751 (neg)
                    (not_at_c_p7)

                    ; #59751: origin
                    (at_c_p7)

                    ; #26401: <==negation-removal== 59751 (pos)
                    (not (not_at_c_p7))

                    ; #59751: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p8
        :precondition (and (checked_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p7)
                           (succ_p7_p8)
                           (Bc_not_blocked_p8))
        :effect (and
                    ; #18235: origin
                    (at_c_p8)

                    ; #26401: <==commonly_known== 59751 (neg)
                    (not_at_c_p7)

                    ; #18880: <==negation-removal== 18235 (pos)
                    (not (not_at_c_p8))

                    ; #59751: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p9
        :precondition (and (checked_p9)
                           (Bc_not_blocked_p9)
                           (succ_p7_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p7))
        :effect (and
                    ; #26401: <==commonly_known== 59751 (neg)
                    (not_at_c_p7)

                    ; #50189: origin
                    (at_c_p9)

                    ; #37506: <==negation-removal== 50189 (pos)
                    (not (not_at_c_p9))

                    ; #59751: origin
                    (not (at_c_p7))))

    (:action move_c_p8_p0011
        :precondition (and (succ_p8_p0011)
                           (Bc_not_blocked_p0011)
                           (at_c_p8)
                           (checked_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13023: origin
                    (at_c_p0011)

                    ; #18880: <==commonly_known== 18235 (neg)
                    (not_at_c_p8)

                    ; #18235: origin
                    (not (at_c_p8))

                    ; #21647: <==negation-removal== 13023 (pos)
                    (not (not_at_c_p0011))))

    (:action move_c_p8_p012
        :precondition (and (checked_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (succ_p8_p012)
                           (at_c_p8))
        :effect (and
                    ; #18880: <==commonly_known== 18235 (neg)
                    (not_at_c_p8)

                    ; #53903: origin
                    (at_c_p012)

                    ; #18235: origin
                    (not (at_c_p8))

                    ; #99428: <==negation-removal== 53903 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p8_p1
        :precondition (and (succ_p8_p1)
                           (checked_p1)
                           (Pc_not_blocked_p1)
                           (at_c_p8)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #18880: <==commonly_known== 18235 (neg)
                    (not_at_c_p8)

                    ; #47689: origin
                    (at_c_p1)

                    ; #18235: origin
                    (not (at_c_p8))

                    ; #42742: <==negation-removal== 47689 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p8_p10
        :precondition (and (checked_p10)
                           (succ_p8_p10)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10)
                           (at_c_p8))
        :effect (and
                    ; #18880: <==commonly_known== 18235 (neg)
                    (not_at_c_p8)

                    ; #68218: origin
                    (at_c_p10)

                    ; #18235: origin
                    (not (at_c_p8))

                    ; #21245: <==negation-removal== 68218 (pos)
                    (not (not_at_c_p10))))

    (:action move_c_p8_p2
        :precondition (and (Pc_not_blocked_p2)
                           (checked_p2)
                           (at_c_p8)
                           (Bc_not_blocked_p2)
                           (succ_p8_p2))
        :effect (and
                    ; #18880: <==commonly_known== 18235 (neg)
                    (not_at_c_p8)

                    ; #20040: origin
                    (at_c_p2)

                    ; #18235: origin
                    (not (at_c_p8))

                    ; #53695: <==negation-removal== 20040 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p8_p3
        :precondition (and (Pc_not_blocked_p3)
                           (checked_p3)
                           (succ_p8_p3)
                           (at_c_p8)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #18880: <==commonly_known== 18235 (neg)
                    (not_at_c_p8)

                    ; #43568: origin
                    (at_c_p3)

                    ; #18235: origin
                    (not (at_c_p8))

                    ; #74329: <==negation-removal== 43568 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p8_p4
        :precondition (and (Pc_not_blocked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p8)
                           (succ_p8_p4)
                           (checked_p4))
        :effect (and
                    ; #18880: <==commonly_known== 18235 (neg)
                    (not_at_c_p8)

                    ; #44024: origin
                    (at_c_p4)

                    ; #18235: origin
                    (not (at_c_p8))

                    ; #62064: <==negation-removal== 44024 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p8_p5
        :precondition (and (Pc_not_blocked_p5)
                           (checked_p5)
                           (succ_p8_p5)
                           (at_c_p8)
                           (Bc_not_blocked_p5))
        :effect (and
                    ; #18880: <==commonly_known== 18235 (neg)
                    (not_at_c_p8)

                    ; #39390: origin
                    (at_c_p5)

                    ; #18235: origin
                    (not (at_c_p8))

                    ; #85778: <==negation-removal== 39390 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p8_p6
        :precondition (and (checked_p6)
                           (succ_p8_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p8)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #18880: <==commonly_known== 18235 (neg)
                    (not_at_c_p8)

                    ; #81257: origin
                    (at_c_p6)

                    ; #18235: origin
                    (not (at_c_p8))

                    ; #59398: <==negation-removal== 81257 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p8_p7
        :precondition (and (succ_p8_p7)
                           (checked_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p8)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #18880: <==commonly_known== 18235 (neg)
                    (not_at_c_p8)

                    ; #59751: origin
                    (at_c_p7)

                    ; #18235: origin
                    (not (at_c_p8))

                    ; #26401: <==negation-removal== 59751 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p8_p8
        :precondition (and (checked_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p8)
                           (succ_p8_p8)
                           (Bc_not_blocked_p8))
        :effect (and
                    ; #18235: origin
                    (at_c_p8)

                    ; #18880: <==commonly_known== 18235 (neg)
                    (not_at_c_p8)

                    ; #18235: origin
                    (not (at_c_p8))

                    ; #18880: <==negation-removal== 18235 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p8_p9
        :precondition (and (checked_p9)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p8_p9)
                           (at_c_p8))
        :effect (and
                    ; #18880: <==commonly_known== 18235 (neg)
                    (not_at_c_p8)

                    ; #50189: origin
                    (at_c_p9)

                    ; #18235: origin
                    (not (at_c_p8))

                    ; #37506: <==negation-removal== 50189 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p9_p0011
        :precondition (and (Bc_not_blocked_p0011)
                           (succ_p9_p0011)
                           (checked_p0011)
                           (at_c_p9)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13023: origin
                    (at_c_p0011)

                    ; #37506: <==commonly_known== 50189 (neg)
                    (not_at_c_p9)

                    ; #21647: <==negation-removal== 13023 (pos)
                    (not (not_at_c_p0011))

                    ; #50189: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p012
        :precondition (and (checked_p012)
                           (succ_p9_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (at_c_p9))
        :effect (and
                    ; #37506: <==commonly_known== 50189 (neg)
                    (not_at_c_p9)

                    ; #53903: origin
                    (at_c_p012)

                    ; #50189: origin
                    (not (at_c_p9))

                    ; #99428: <==negation-removal== 53903 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p9_p1
        :precondition (and (Pc_not_blocked_p1)
                           (checked_p1)
                           (at_c_p9)
                           (Bc_not_blocked_p1)
                           (succ_p9_p1))
        :effect (and
                    ; #37506: <==commonly_known== 50189 (neg)
                    (not_at_c_p9)

                    ; #47689: origin
                    (at_c_p1)

                    ; #42742: <==negation-removal== 47689 (pos)
                    (not (not_at_c_p1))

                    ; #50189: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p10
        :precondition (and (checked_p10)
                           (Pc_not_blocked_p10)
                           (Bc_not_blocked_p10)
                           (succ_p9_p10)
                           (at_c_p9))
        :effect (and
                    ; #37506: <==commonly_known== 50189 (neg)
                    (not_at_c_p9)

                    ; #68218: origin
                    (at_c_p10)

                    ; #21245: <==negation-removal== 68218 (pos)
                    (not (not_at_c_p10))

                    ; #50189: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p2
        :precondition (and (Pc_not_blocked_p2)
                           (checked_p2)
                           (succ_p9_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p9))
        :effect (and
                    ; #20040: origin
                    (at_c_p2)

                    ; #37506: <==commonly_known== 50189 (neg)
                    (not_at_c_p9)

                    ; #50189: origin
                    (not (at_c_p9))

                    ; #53695: <==negation-removal== 20040 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p9_p3
        :precondition (and (checked_p3)
                           (Pc_not_blocked_p3)
                           (succ_p9_p3)
                           (Bc_not_blocked_p3)
                           (at_c_p9))
        :effect (and
                    ; #37506: <==commonly_known== 50189 (neg)
                    (not_at_c_p9)

                    ; #43568: origin
                    (at_c_p3)

                    ; #50189: origin
                    (not (at_c_p9))

                    ; #74329: <==negation-removal== 43568 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p9_p4
        :precondition (and (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (succ_p9_p4)
                           (at_c_p9)
                           (checked_p4))
        :effect (and
                    ; #37506: <==commonly_known== 50189 (neg)
                    (not_at_c_p9)

                    ; #44024: origin
                    (at_c_p4)

                    ; #50189: origin
                    (not (at_c_p9))

                    ; #62064: <==negation-removal== 44024 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p9_p5
        :precondition (and (Pc_not_blocked_p5)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (at_c_p9)
                           (succ_p9_p5))
        :effect (and
                    ; #37506: <==commonly_known== 50189 (neg)
                    (not_at_c_p9)

                    ; #39390: origin
                    (at_c_p5)

                    ; #50189: origin
                    (not (at_c_p9))

                    ; #85778: <==negation-removal== 39390 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p9_p6
        :precondition (and (succ_p9_p6)
                           (at_c_p9)
                           (checked_p6)
                           (Pc_not_blocked_p6)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #37506: <==commonly_known== 50189 (neg)
                    (not_at_c_p9)

                    ; #81257: origin
                    (at_c_p6)

                    ; #50189: origin
                    (not (at_c_p9))

                    ; #59398: <==negation-removal== 81257 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p9_p7
        :precondition (and (checked_p7)
                           (succ_p9_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p9)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #37506: <==commonly_known== 50189 (neg)
                    (not_at_c_p9)

                    ; #59751: origin
                    (at_c_p7)

                    ; #26401: <==negation-removal== 59751 (pos)
                    (not (not_at_c_p7))

                    ; #50189: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p8
        :precondition (and (checked_p8)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (succ_p9_p8)
                           (at_c_p9))
        :effect (and
                    ; #18235: origin
                    (at_c_p8)

                    ; #37506: <==commonly_known== 50189 (neg)
                    (not_at_c_p9)

                    ; #18880: <==negation-removal== 18235 (pos)
                    (not (not_at_c_p8))

                    ; #50189: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p9
        :precondition (and (checked_p9)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p9_p9)
                           (at_c_p9))
        :effect (and
                    ; #37506: <==commonly_known== 50189 (neg)
                    (not_at_c_p9)

                    ; #50189: origin
                    (at_c_p9)

                    ; #37506: <==negation-removal== 50189 (pos)
                    (not (not_at_c_p9))

                    ; #50189: origin
                    (not (at_c_p9))))

    (:action move_d_p0011_p0011
        :precondition (and (Bd_not_blocked_p0011)
                           (checked_p0011)
                           (Pd_not_blocked_p0011)
                           (at_d_p0011)
                           (succ_p0011_p0011))
        :effect (and
                    ; #39227: <==commonly_known== 76307 (neg)
                    (not_at_d_p0011)

                    ; #76307: origin
                    (at_d_p0011)

                    ; #39227: <==negation-removal== 76307 (pos)
                    (not (not_at_d_p0011))

                    ; #76307: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p012
        :precondition (and (checked_p012)
                           (succ_p0011_p012)
                           (Bd_not_blocked_p012)
                           (Pd_not_blocked_p012)
                           (at_d_p0011))
        :effect (and
                    ; #39227: <==commonly_known== 76307 (neg)
                    (not_at_d_p0011)

                    ; #68262: origin
                    (at_d_p012)

                    ; #73250: <==negation-removal== 68262 (pos)
                    (not (not_at_d_p012))

                    ; #76307: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p1
        :precondition (and (checked_p1)
                           (Pd_not_blocked_p1)
                           (succ_p0011_p1)
                           (Bd_not_blocked_p1)
                           (at_d_p0011))
        :effect (and
                    ; #20413: origin
                    (at_d_p1)

                    ; #39227: <==commonly_known== 76307 (neg)
                    (not_at_d_p0011)

                    ; #38504: <==negation-removal== 20413 (pos)
                    (not (not_at_d_p1))

                    ; #76307: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p10
        :precondition (and (checked_p10)
                           (Bd_not_blocked_p10)
                           (Pd_not_blocked_p10)
                           (succ_p0011_p10)
                           (at_d_p0011))
        :effect (and
                    ; #39227: <==commonly_known== 76307 (neg)
                    (not_at_d_p0011)

                    ; #99582: origin
                    (at_d_p10)

                    ; #40906: <==negation-removal== 99582 (pos)
                    (not (not_at_d_p10))

                    ; #76307: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p2
        :precondition (and (checked_p2)
                           (succ_p0011_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p0011)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #39227: <==commonly_known== 76307 (neg)
                    (not_at_d_p0011)

                    ; #48453: origin
                    (at_d_p2)

                    ; #50046: <==negation-removal== 48453 (pos)
                    (not (not_at_d_p2))

                    ; #76307: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p3
        :precondition (and (Pd_not_blocked_p3)
                           (succ_p0011_p3)
                           (checked_p3)
                           (at_d_p0011)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #39227: <==commonly_known== 76307 (neg)
                    (not_at_d_p0011)

                    ; #66735: origin
                    (at_d_p3)

                    ; #68806: <==negation-removal== 66735 (pos)
                    (not (not_at_d_p3))

                    ; #76307: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p4
        :precondition (and (Pd_not_blocked_p4)
                           (succ_p0011_p4)
                           (Bd_not_blocked_p4)
                           (at_d_p0011)
                           (checked_p4))
        :effect (and
                    ; #39227: <==commonly_known== 76307 (neg)
                    (not_at_d_p0011)

                    ; #62183: origin
                    (at_d_p4)

                    ; #40848: <==negation-removal== 62183 (pos)
                    (not (not_at_d_p4))

                    ; #76307: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p5
        :precondition (and (checked_p5)
                           (Bd_not_blocked_p5)
                           (succ_p0011_p5)
                           (at_d_p0011)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #15772: origin
                    (at_d_p5)

                    ; #39227: <==commonly_known== 76307 (neg)
                    (not_at_d_p0011)

                    ; #76307: origin
                    (not (at_d_p0011))

                    ; #77132: <==negation-removal== 15772 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p0011_p6
        :precondition (and (Bd_not_blocked_p6)
                           (checked_p6)
                           (succ_p0011_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p0011))
        :effect (and
                    ; #39227: <==commonly_known== 76307 (neg)
                    (not_at_d_p0011)

                    ; #79916: origin
                    (at_d_p6)

                    ; #31852: <==negation-removal== 79916 (pos)
                    (not (not_at_d_p6))

                    ; #76307: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p7
        :precondition (and (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (succ_p0011_p7)
                           (at_d_p0011))
        :effect (and
                    ; #35119: origin
                    (at_d_p7)

                    ; #39227: <==commonly_known== 76307 (neg)
                    (not_at_d_p0011)

                    ; #76307: origin
                    (not (at_d_p0011))

                    ; #80545: <==negation-removal== 35119 (pos)
                    (not (not_at_d_p7))))

    (:action move_d_p0011_p8
        :precondition (and (succ_p0011_p8)
                           (Pd_not_blocked_p8)
                           (checked_p8)
                           (Bd_not_blocked_p8)
                           (at_d_p0011))
        :effect (and
                    ; #39227: <==commonly_known== 76307 (neg)
                    (not_at_d_p0011)

                    ; #79375: origin
                    (at_d_p8)

                    ; #16757: <==negation-removal== 79375 (pos)
                    (not (not_at_d_p8))

                    ; #76307: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p9
        :precondition (and (checked_p9)
                           (at_d_p0011)
                           (succ_p0011_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #39227: <==commonly_known== 76307 (neg)
                    (not_at_d_p0011)

                    ; #54676: origin
                    (at_d_p9)

                    ; #11352: <==negation-removal== 54676 (pos)
                    (not (not_at_d_p9))

                    ; #76307: origin
                    (not (at_d_p0011))))

    (:action move_d_p012_p0011
        :precondition (and (succ_p012_p0011)
                           (Bd_not_blocked_p0011)
                           (checked_p0011)
                           (Pd_not_blocked_p0011)
                           (at_d_p012))
        :effect (and
                    ; #73250: <==commonly_known== 68262 (neg)
                    (not_at_d_p012)

                    ; #76307: origin
                    (at_d_p0011)

                    ; #39227: <==negation-removal== 76307 (pos)
                    (not (not_at_d_p0011))

                    ; #68262: origin
                    (not (at_d_p012))))

    (:action move_d_p012_p012
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (succ_p012_p012)
                           (Pd_not_blocked_p012)
                           (at_d_p012))
        :effect (and
                    ; #68262: origin
                    (at_d_p012)

                    ; #73250: <==commonly_known== 68262 (neg)
                    (not_at_d_p012)

                    ; #68262: origin
                    (not (at_d_p012))

                    ; #73250: <==negation-removal== 68262 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p012_p1
        :precondition (and (checked_p1)
                           (Pd_not_blocked_p1)
                           (succ_p012_p1)
                           (Bd_not_blocked_p1)
                           (at_d_p012))
        :effect (and
                    ; #20413: origin
                    (at_d_p1)

                    ; #73250: <==commonly_known== 68262 (neg)
                    (not_at_d_p012)

                    ; #38504: <==negation-removal== 20413 (pos)
                    (not (not_at_d_p1))

                    ; #68262: origin
                    (not (at_d_p012))))

    (:action move_d_p012_p10
        :precondition (and (checked_p10)
                           (succ_p012_p10)
                           (Bd_not_blocked_p10)
                           (Pd_not_blocked_p10)
                           (at_d_p012))
        :effect (and
                    ; #73250: <==commonly_known== 68262 (neg)
                    (not_at_d_p012)

                    ; #99582: origin
                    (at_d_p10)

                    ; #40906: <==negation-removal== 99582 (pos)
                    (not (not_at_d_p10))

                    ; #68262: origin
                    (not (at_d_p012))))

    (:action move_d_p012_p2
        :precondition (and (checked_p2)
                           (succ_p012_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p012))
        :effect (and
                    ; #48453: origin
                    (at_d_p2)

                    ; #73250: <==commonly_known== 68262 (neg)
                    (not_at_d_p012)

                    ; #50046: <==negation-removal== 48453 (pos)
                    (not (not_at_d_p2))

                    ; #68262: origin
                    (not (at_d_p012))))

    (:action move_d_p012_p3
        :precondition (and (Pd_not_blocked_p3)
                           (checked_p3)
                           (at_d_p012)
                           (Bd_not_blocked_p3)
                           (succ_p012_p3))
        :effect (and
                    ; #66735: origin
                    (at_d_p3)

                    ; #73250: <==commonly_known== 68262 (neg)
                    (not_at_d_p012)

                    ; #68262: origin
                    (not (at_d_p012))

                    ; #68806: <==negation-removal== 66735 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p012_p4
        :precondition (and (succ_p012_p4)
                           (Pd_not_blocked_p4)
                           (Bd_not_blocked_p4)
                           (checked_p4)
                           (at_d_p012))
        :effect (and
                    ; #62183: origin
                    (at_d_p4)

                    ; #73250: <==commonly_known== 68262 (neg)
                    (not_at_d_p012)

                    ; #40848: <==negation-removal== 62183 (pos)
                    (not (not_at_d_p4))

                    ; #68262: origin
                    (not (at_d_p012))))

    (:action move_d_p012_p5
        :precondition (and (succ_p012_p5)
                           (checked_p5)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (at_d_p012))
        :effect (and
                    ; #15772: origin
                    (at_d_p5)

                    ; #73250: <==commonly_known== 68262 (neg)
                    (not_at_d_p012)

                    ; #68262: origin
                    (not (at_d_p012))

                    ; #77132: <==negation-removal== 15772 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p012_p6
        :precondition (and (Bd_not_blocked_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (succ_p012_p6)
                           (at_d_p012))
        :effect (and
                    ; #73250: <==commonly_known== 68262 (neg)
                    (not_at_d_p012)

                    ; #79916: origin
                    (at_d_p6)

                    ; #31852: <==negation-removal== 79916 (pos)
                    (not (not_at_d_p6))

                    ; #68262: origin
                    (not (at_d_p012))))

    (:action move_d_p012_p7
        :precondition (and (Bd_not_blocked_p7)
                           (checked_p7)
                           (succ_p012_p7)
                           (Pd_not_blocked_p7)
                           (at_d_p012))
        :effect (and
                    ; #35119: origin
                    (at_d_p7)

                    ; #73250: <==commonly_known== 68262 (neg)
                    (not_at_d_p012)

                    ; #68262: origin
                    (not (at_d_p012))

                    ; #80545: <==negation-removal== 35119 (pos)
                    (not (not_at_d_p7))))

    (:action move_d_p012_p8
        :precondition (and (succ_p012_p8)
                           (Pd_not_blocked_p8)
                           (checked_p8)
                           (Bd_not_blocked_p8)
                           (at_d_p012))
        :effect (and
                    ; #73250: <==commonly_known== 68262 (neg)
                    (not_at_d_p012)

                    ; #79375: origin
                    (at_d_p8)

                    ; #16757: <==negation-removal== 79375 (pos)
                    (not (not_at_d_p8))

                    ; #68262: origin
                    (not (at_d_p012))))

    (:action move_d_p012_p9
        :precondition (and (succ_p012_p9)
                           (checked_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9)
                           (at_d_p012))
        :effect (and
                    ; #54676: origin
                    (at_d_p9)

                    ; #73250: <==commonly_known== 68262 (neg)
                    (not_at_d_p012)

                    ; #11352: <==negation-removal== 54676 (pos)
                    (not (not_at_d_p9))

                    ; #68262: origin
                    (not (at_d_p012))))

    (:action move_d_p10_p0011
        :precondition (and (succ_p10_p0011)
                           (at_d_p10)
                           (Bd_not_blocked_p0011)
                           (checked_p0011)
                           (Pd_not_blocked_p0011))
        :effect (and
                    ; #40906: <==commonly_known== 99582 (neg)
                    (not_at_d_p10)

                    ; #76307: origin
                    (at_d_p0011)

                    ; #39227: <==negation-removal== 76307 (pos)
                    (not (not_at_d_p0011))

                    ; #99582: origin
                    (not (at_d_p10))))

    (:action move_d_p10_p012
        :precondition (and (checked_p012)
                           (succ_p10_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p10)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #40906: <==commonly_known== 99582 (neg)
                    (not_at_d_p10)

                    ; #68262: origin
                    (at_d_p012)

                    ; #73250: <==negation-removal== 68262 (pos)
                    (not (not_at_d_p012))

                    ; #99582: origin
                    (not (at_d_p10))))

    (:action move_d_p10_p1
        :precondition (and (checked_p1)
                           (Pd_not_blocked_p1)
                           (at_d_p10)
                           (succ_p10_p1)
                           (Bd_not_blocked_p1))
        :effect (and
                    ; #20413: origin
                    (at_d_p1)

                    ; #40906: <==commonly_known== 99582 (neg)
                    (not_at_d_p10)

                    ; #38504: <==negation-removal== 20413 (pos)
                    (not (not_at_d_p1))

                    ; #99582: origin
                    (not (at_d_p10))))

    (:action move_d_p10_p10
        :precondition (and (checked_p10)
                           (succ_p10_p10)
                           (at_d_p10)
                           (Bd_not_blocked_p10)
                           (Pd_not_blocked_p10))
        :effect (and
                    ; #40906: <==commonly_known== 99582 (neg)
                    (not_at_d_p10)

                    ; #99582: origin
                    (at_d_p10)

                    ; #40906: <==negation-removal== 99582 (pos)
                    (not (not_at_d_p10))

                    ; #99582: origin
                    (not (at_d_p10))))

    (:action move_d_p10_p2
        :precondition (and (checked_p2)
                           (at_d_p10)
                           (succ_p10_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #40906: <==commonly_known== 99582 (neg)
                    (not_at_d_p10)

                    ; #48453: origin
                    (at_d_p2)

                    ; #50046: <==negation-removal== 48453 (pos)
                    (not (not_at_d_p2))

                    ; #99582: origin
                    (not (at_d_p10))))

    (:action move_d_p10_p3
        :precondition (and (Pd_not_blocked_p3)
                           (at_d_p10)
                           (checked_p3)
                           (succ_p10_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #40906: <==commonly_known== 99582 (neg)
                    (not_at_d_p10)

                    ; #66735: origin
                    (at_d_p3)

                    ; #68806: <==negation-removal== 66735 (pos)
                    (not (not_at_d_p3))

                    ; #99582: origin
                    (not (at_d_p10))))

    (:action move_d_p10_p4
        :precondition (and (Pd_not_blocked_p4)
                           (succ_p10_p4)
                           (at_d_p10)
                           (Bd_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #40906: <==commonly_known== 99582 (neg)
                    (not_at_d_p10)

                    ; #62183: origin
                    (at_d_p4)

                    ; #40848: <==negation-removal== 62183 (pos)
                    (not (not_at_d_p4))

                    ; #99582: origin
                    (not (at_d_p10))))

    (:action move_d_p10_p5
        :precondition (and (checked_p5)
                           (at_d_p10)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (succ_p10_p5))
        :effect (and
                    ; #15772: origin
                    (at_d_p5)

                    ; #40906: <==commonly_known== 99582 (neg)
                    (not_at_d_p10)

                    ; #77132: <==negation-removal== 15772 (pos)
                    (not (not_at_d_p5))

                    ; #99582: origin
                    (not (at_d_p10))))

    (:action move_d_p10_p6
        :precondition (and (Bd_not_blocked_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p10)
                           (succ_p10_p6))
        :effect (and
                    ; #40906: <==commonly_known== 99582 (neg)
                    (not_at_d_p10)

                    ; #79916: origin
                    (at_d_p6)

                    ; #31852: <==negation-removal== 79916 (pos)
                    (not (not_at_d_p6))

                    ; #99582: origin
                    (not (at_d_p10))))

    (:action move_d_p10_p7
        :precondition (and (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (succ_p10_p7)
                           (at_d_p10))
        :effect (and
                    ; #35119: origin
                    (at_d_p7)

                    ; #40906: <==commonly_known== 99582 (neg)
                    (not_at_d_p10)

                    ; #80545: <==negation-removal== 35119 (pos)
                    (not (not_at_d_p7))

                    ; #99582: origin
                    (not (at_d_p10))))

    (:action move_d_p10_p8
        :precondition (and (succ_p10_p8)
                           (Pd_not_blocked_p8)
                           (at_d_p10)
                           (checked_p8)
                           (Bd_not_blocked_p8))
        :effect (and
                    ; #40906: <==commonly_known== 99582 (neg)
                    (not_at_d_p10)

                    ; #79375: origin
                    (at_d_p8)

                    ; #16757: <==negation-removal== 79375 (pos)
                    (not (not_at_d_p8))

                    ; #99582: origin
                    (not (at_d_p10))))

    (:action move_d_p10_p9
        :precondition (and (checked_p9)
                           (succ_p10_p9)
                           (at_d_p10)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #40906: <==commonly_known== 99582 (neg)
                    (not_at_d_p10)

                    ; #54676: origin
                    (at_d_p9)

                    ; #11352: <==negation-removal== 54676 (pos)
                    (not (not_at_d_p9))

                    ; #99582: origin
                    (not (at_d_p10))))

    (:action move_d_p1_p0011
        :precondition (and (succ_p1_p0011)
                           (Bd_not_blocked_p0011)
                           (checked_p0011)
                           (Pd_not_blocked_p0011)
                           (at_d_p1))
        :effect (and
                    ; #38504: <==commonly_known== 20413 (neg)
                    (not_at_d_p1)

                    ; #76307: origin
                    (at_d_p0011)

                    ; #20413: origin
                    (not (at_d_p1))

                    ; #39227: <==negation-removal== 76307 (pos)
                    (not (not_at_d_p0011))))

    (:action move_d_p1_p012
        :precondition (and (succ_p1_p012)
                           (checked_p012)
                           (Bd_not_blocked_p012)
                           (Pd_not_blocked_p012)
                           (at_d_p1))
        :effect (and
                    ; #38504: <==commonly_known== 20413 (neg)
                    (not_at_d_p1)

                    ; #68262: origin
                    (at_d_p012)

                    ; #20413: origin
                    (not (at_d_p1))

                    ; #73250: <==negation-removal== 68262 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p1_p1
        :precondition (and (checked_p1)
                           (Pd_not_blocked_p1)
                           (Bd_not_blocked_p1)
                           (succ_p1_p1)
                           (at_d_p1))
        :effect (and
                    ; #20413: origin
                    (at_d_p1)

                    ; #38504: <==commonly_known== 20413 (neg)
                    (not_at_d_p1)

                    ; #20413: origin
                    (not (at_d_p1))

                    ; #38504: <==negation-removal== 20413 (pos)
                    (not (not_at_d_p1))))

    (:action move_d_p1_p10
        :precondition (and (checked_p10)
                           (succ_p1_p10)
                           (Bd_not_blocked_p10)
                           (at_d_p1)
                           (Pd_not_blocked_p10))
        :effect (and
                    ; #38504: <==commonly_known== 20413 (neg)
                    (not_at_d_p1)

                    ; #99582: origin
                    (at_d_p10)

                    ; #20413: origin
                    (not (at_d_p1))

                    ; #40906: <==negation-removal== 99582 (pos)
                    (not (not_at_d_p10))))

    (:action move_d_p1_p2
        :precondition (and (checked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p1)
                           (succ_p1_p2)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #38504: <==commonly_known== 20413 (neg)
                    (not_at_d_p1)

                    ; #48453: origin
                    (at_d_p2)

                    ; #20413: origin
                    (not (at_d_p1))

                    ; #50046: <==negation-removal== 48453 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p1_p3
        :precondition (and (succ_p1_p3)
                           (Pd_not_blocked_p3)
                           (checked_p3)
                           (at_d_p1)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #38504: <==commonly_known== 20413 (neg)
                    (not_at_d_p1)

                    ; #66735: origin
                    (at_d_p3)

                    ; #20413: origin
                    (not (at_d_p1))

                    ; #68806: <==negation-removal== 66735 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p1_p4
        :precondition (and (succ_p1_p4)
                           (Pd_not_blocked_p4)
                           (Bd_not_blocked_p4)
                           (at_d_p1)
                           (checked_p4))
        :effect (and
                    ; #38504: <==commonly_known== 20413 (neg)
                    (not_at_d_p1)

                    ; #62183: origin
                    (at_d_p4)

                    ; #20413: origin
                    (not (at_d_p1))

                    ; #40848: <==negation-removal== 62183 (pos)
                    (not (not_at_d_p4))))

    (:action move_d_p1_p5
        :precondition (and (succ_p1_p5)
                           (checked_p5)
                           (Bd_not_blocked_p5)
                           (at_d_p1)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #15772: origin
                    (at_d_p5)

                    ; #38504: <==commonly_known== 20413 (neg)
                    (not_at_d_p1)

                    ; #20413: origin
                    (not (at_d_p1))

                    ; #77132: <==negation-removal== 15772 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p1_p6
        :precondition (and (succ_p1_p6)
                           (Bd_not_blocked_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p1))
        :effect (and
                    ; #38504: <==commonly_known== 20413 (neg)
                    (not_at_d_p1)

                    ; #79916: origin
                    (at_d_p6)

                    ; #20413: origin
                    (not (at_d_p1))

                    ; #31852: <==negation-removal== 79916 (pos)
                    (not (not_at_d_p6))))

    (:action move_d_p1_p7
        :precondition (and (Bd_not_blocked_p7)
                           (succ_p1_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (at_d_p1))
        :effect (and
                    ; #35119: origin
                    (at_d_p7)

                    ; #38504: <==commonly_known== 20413 (neg)
                    (not_at_d_p1)

                    ; #20413: origin
                    (not (at_d_p1))

                    ; #80545: <==negation-removal== 35119 (pos)
                    (not (not_at_d_p7))))

    (:action move_d_p1_p8
        :precondition (and (Pd_not_blocked_p8)
                           (succ_p1_p8)
                           (checked_p8)
                           (Bd_not_blocked_p8)
                           (at_d_p1))
        :effect (and
                    ; #38504: <==commonly_known== 20413 (neg)
                    (not_at_d_p1)

                    ; #79375: origin
                    (at_d_p8)

                    ; #16757: <==negation-removal== 79375 (pos)
                    (not (not_at_d_p8))

                    ; #20413: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p9
        :precondition (and (checked_p9)
                           (at_d_p1)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9)
                           (succ_p1_p9))
        :effect (and
                    ; #38504: <==commonly_known== 20413 (neg)
                    (not_at_d_p1)

                    ; #54676: origin
                    (at_d_p9)

                    ; #11352: <==negation-removal== 54676 (pos)
                    (not (not_at_d_p9))

                    ; #20413: origin
                    (not (at_d_p1))))

    (:action move_d_p2_p0011
        :precondition (and (Bd_not_blocked_p0011)
                           (at_d_p2)
                           (checked_p0011)
                           (Pd_not_blocked_p0011)
                           (succ_p2_p0011))
        :effect (and
                    ; #50046: <==commonly_known== 48453 (neg)
                    (not_at_d_p2)

                    ; #76307: origin
                    (at_d_p0011)

                    ; #39227: <==negation-removal== 76307 (pos)
                    (not (not_at_d_p0011))

                    ; #48453: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p012
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (Pd_not_blocked_p012)
                           (at_d_p2)
                           (succ_p2_p012))
        :effect (and
                    ; #50046: <==commonly_known== 48453 (neg)
                    (not_at_d_p2)

                    ; #68262: origin
                    (at_d_p012)

                    ; #48453: origin
                    (not (at_d_p2))

                    ; #73250: <==negation-removal== 68262 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p2_p1
        :precondition (and (succ_p2_p1)
                           (checked_p1)
                           (Pd_not_blocked_p1)
                           (Bd_not_blocked_p1)
                           (at_d_p2))
        :effect (and
                    ; #20413: origin
                    (at_d_p1)

                    ; #50046: <==commonly_known== 48453 (neg)
                    (not_at_d_p2)

                    ; #38504: <==negation-removal== 20413 (pos)
                    (not (not_at_d_p1))

                    ; #48453: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p10
        :precondition (and (checked_p10)
                           (succ_p2_p10)
                           (at_d_p2)
                           (Bd_not_blocked_p10)
                           (Pd_not_blocked_p10))
        :effect (and
                    ; #50046: <==commonly_known== 48453 (neg)
                    (not_at_d_p2)

                    ; #99582: origin
                    (at_d_p10)

                    ; #40906: <==negation-removal== 99582 (pos)
                    (not (not_at_d_p10))

                    ; #48453: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p2
        :precondition (and (checked_p2)
                           (succ_p2_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p2)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #48453: origin
                    (at_d_p2)

                    ; #50046: <==commonly_known== 48453 (neg)
                    (not_at_d_p2)

                    ; #48453: origin
                    (not (at_d_p2))

                    ; #50046: <==negation-removal== 48453 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p2_p3
        :precondition (and (Pd_not_blocked_p3)
                           (succ_p2_p3)
                           (checked_p3)
                           (at_d_p2)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #50046: <==commonly_known== 48453 (neg)
                    (not_at_d_p2)

                    ; #66735: origin
                    (at_d_p3)

                    ; #48453: origin
                    (not (at_d_p2))

                    ; #68806: <==negation-removal== 66735 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p2_p4
        :precondition (and (Pd_not_blocked_p4)
                           (succ_p2_p4)
                           (Bd_not_blocked_p4)
                           (at_d_p2)
                           (checked_p4))
        :effect (and
                    ; #50046: <==commonly_known== 48453 (neg)
                    (not_at_d_p2)

                    ; #62183: origin
                    (at_d_p4)

                    ; #40848: <==negation-removal== 62183 (pos)
                    (not (not_at_d_p4))

                    ; #48453: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p5
        :precondition (and (checked_p5)
                           (Bd_not_blocked_p5)
                           (at_d_p2)
                           (Pd_not_blocked_p5)
                           (succ_p2_p5))
        :effect (and
                    ; #15772: origin
                    (at_d_p5)

                    ; #50046: <==commonly_known== 48453 (neg)
                    (not_at_d_p2)

                    ; #48453: origin
                    (not (at_d_p2))

                    ; #77132: <==negation-removal== 15772 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p2_p6
        :precondition (and (Bd_not_blocked_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p2)
                           (succ_p2_p6))
        :effect (and
                    ; #50046: <==commonly_known== 48453 (neg)
                    (not_at_d_p2)

                    ; #79916: origin
                    (at_d_p6)

                    ; #31852: <==negation-removal== 79916 (pos)
                    (not (not_at_d_p6))

                    ; #48453: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p7
        :precondition (and (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (at_d_p2)
                           (succ_p2_p7))
        :effect (and
                    ; #35119: origin
                    (at_d_p7)

                    ; #50046: <==commonly_known== 48453 (neg)
                    (not_at_d_p2)

                    ; #48453: origin
                    (not (at_d_p2))

                    ; #80545: <==negation-removal== 35119 (pos)
                    (not (not_at_d_p7))))

    (:action move_d_p2_p8
        :precondition (and (Pd_not_blocked_p8)
                           (succ_p2_p8)
                           (checked_p8)
                           (Bd_not_blocked_p8)
                           (at_d_p2))
        :effect (and
                    ; #50046: <==commonly_known== 48453 (neg)
                    (not_at_d_p2)

                    ; #79375: origin
                    (at_d_p8)

                    ; #16757: <==negation-removal== 79375 (pos)
                    (not (not_at_d_p8))

                    ; #48453: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p9
        :precondition (and (checked_p9)
                           (at_d_p2)
                           (succ_p2_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #50046: <==commonly_known== 48453 (neg)
                    (not_at_d_p2)

                    ; #54676: origin
                    (at_d_p9)

                    ; #11352: <==negation-removal== 54676 (pos)
                    (not (not_at_d_p9))

                    ; #48453: origin
                    (not (at_d_p2))))

    (:action move_d_p3_p0011
        :precondition (and (succ_p3_p0011)
                           (Bd_not_blocked_p0011)
                           (checked_p0011)
                           (Pd_not_blocked_p0011)
                           (at_d_p3))
        :effect (and
                    ; #68806: <==commonly_known== 66735 (neg)
                    (not_at_d_p3)

                    ; #76307: origin
                    (at_d_p0011)

                    ; #39227: <==negation-removal== 76307 (pos)
                    (not (not_at_d_p0011))

                    ; #66735: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p012
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (succ_p3_p012)
                           (Pd_not_blocked_p012)
                           (at_d_p3))
        :effect (and
                    ; #68262: origin
                    (at_d_p012)

                    ; #68806: <==commonly_known== 66735 (neg)
                    (not_at_d_p3)

                    ; #66735: origin
                    (not (at_d_p3))

                    ; #73250: <==negation-removal== 68262 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p3_p1
        :precondition (and (checked_p1)
                           (Pd_not_blocked_p1)
                           (succ_p3_p1)
                           (Bd_not_blocked_p1)
                           (at_d_p3))
        :effect (and
                    ; #20413: origin
                    (at_d_p1)

                    ; #68806: <==commonly_known== 66735 (neg)
                    (not_at_d_p3)

                    ; #38504: <==negation-removal== 20413 (pos)
                    (not (not_at_d_p1))

                    ; #66735: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p10
        :precondition (and (checked_p10)
                           (Bd_not_blocked_p10)
                           (succ_p3_p10)
                           (Pd_not_blocked_p10)
                           (at_d_p3))
        :effect (and
                    ; #68806: <==commonly_known== 66735 (neg)
                    (not_at_d_p3)

                    ; #99582: origin
                    (at_d_p10)

                    ; #40906: <==negation-removal== 99582 (pos)
                    (not (not_at_d_p10))

                    ; #66735: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p2
        :precondition (and (succ_p3_p2)
                           (checked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p3)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #48453: origin
                    (at_d_p2)

                    ; #68806: <==commonly_known== 66735 (neg)
                    (not_at_d_p3)

                    ; #50046: <==negation-removal== 48453 (pos)
                    (not (not_at_d_p2))

                    ; #66735: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p3
        :precondition (and (succ_p3_p3)
                           (Pd_not_blocked_p3)
                           (Bd_not_blocked_p3)
                           (checked_p3)
                           (at_d_p3))
        :effect (and
                    ; #66735: origin
                    (at_d_p3)

                    ; #68806: <==commonly_known== 66735 (neg)
                    (not_at_d_p3)

                    ; #66735: origin
                    (not (at_d_p3))

                    ; #68806: <==negation-removal== 66735 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p3_p4
        :precondition (and (Pd_not_blocked_p4)
                           (Bd_not_blocked_p4)
                           (at_d_p3)
                           (succ_p3_p4)
                           (checked_p4))
        :effect (and
                    ; #62183: origin
                    (at_d_p4)

                    ; #68806: <==commonly_known== 66735 (neg)
                    (not_at_d_p3)

                    ; #40848: <==negation-removal== 62183 (pos)
                    (not (not_at_d_p4))

                    ; #66735: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p5
        :precondition (and (at_d_p3)
                           (checked_p5)
                           (succ_p3_p5)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #15772: origin
                    (at_d_p5)

                    ; #68806: <==commonly_known== 66735 (neg)
                    (not_at_d_p3)

                    ; #66735: origin
                    (not (at_d_p3))

                    ; #77132: <==negation-removal== 15772 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p3_p6
        :precondition (and (Bd_not_blocked_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (succ_p3_p6)
                           (at_d_p3))
        :effect (and
                    ; #68806: <==commonly_known== 66735 (neg)
                    (not_at_d_p3)

                    ; #79916: origin
                    (at_d_p6)

                    ; #31852: <==negation-removal== 79916 (pos)
                    (not (not_at_d_p6))

                    ; #66735: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p7
        :precondition (and (Bd_not_blocked_p7)
                           (succ_p3_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (at_d_p3))
        :effect (and
                    ; #35119: origin
                    (at_d_p7)

                    ; #68806: <==commonly_known== 66735 (neg)
                    (not_at_d_p3)

                    ; #66735: origin
                    (not (at_d_p3))

                    ; #80545: <==negation-removal== 35119 (pos)
                    (not (not_at_d_p7))))

    (:action move_d_p3_p8
        :precondition (and (Pd_not_blocked_p8)
                           (checked_p8)
                           (Bd_not_blocked_p8)
                           (at_d_p3)
                           (succ_p3_p8))
        :effect (and
                    ; #68806: <==commonly_known== 66735 (neg)
                    (not_at_d_p3)

                    ; #79375: origin
                    (at_d_p8)

                    ; #16757: <==negation-removal== 79375 (pos)
                    (not (not_at_d_p8))

                    ; #66735: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p9
        :precondition (and (checked_p9)
                           (succ_p3_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p3)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #54676: origin
                    (at_d_p9)

                    ; #68806: <==commonly_known== 66735 (neg)
                    (not_at_d_p3)

                    ; #11352: <==negation-removal== 54676 (pos)
                    (not (not_at_d_p9))

                    ; #66735: origin
                    (not (at_d_p3))))

    (:action move_d_p4_p0011
        :precondition (and (succ_p4_p0011)
                           (Bd_not_blocked_p0011)
                           (checked_p0011)
                           (at_d_p4)
                           (Pd_not_blocked_p0011))
        :effect (and
                    ; #40848: <==commonly_known== 62183 (neg)
                    (not_at_d_p4)

                    ; #76307: origin
                    (at_d_p0011)

                    ; #39227: <==negation-removal== 76307 (pos)
                    (not (not_at_d_p0011))

                    ; #62183: origin
                    (not (at_d_p4))))

    (:action move_d_p4_p012
        :precondition (and (checked_p012)
                           (at_d_p4)
                           (Bd_not_blocked_p012)
                           (succ_p4_p012)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #40848: <==commonly_known== 62183 (neg)
                    (not_at_d_p4)

                    ; #68262: origin
                    (at_d_p012)

                    ; #62183: origin
                    (not (at_d_p4))

                    ; #73250: <==negation-removal== 68262 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p4_p1
        :precondition (and (succ_p4_p1)
                           (checked_p1)
                           (Pd_not_blocked_p1)
                           (Bd_not_blocked_p1)
                           (at_d_p4))
        :effect (and
                    ; #20413: origin
                    (at_d_p1)

                    ; #40848: <==commonly_known== 62183 (neg)
                    (not_at_d_p4)

                    ; #38504: <==negation-removal== 20413 (pos)
                    (not (not_at_d_p1))

                    ; #62183: origin
                    (not (at_d_p4))))

    (:action move_d_p4_p10
        :precondition (and (checked_p10)
                           (succ_p4_p10)
                           (Bd_not_blocked_p10)
                           (at_d_p4)
                           (Pd_not_blocked_p10))
        :effect (and
                    ; #40848: <==commonly_known== 62183 (neg)
                    (not_at_d_p4)

                    ; #99582: origin
                    (at_d_p10)

                    ; #40906: <==negation-removal== 99582 (pos)
                    (not (not_at_d_p10))

                    ; #62183: origin
                    (not (at_d_p4))))

    (:action move_d_p4_p2
        :precondition (and (checked_p2)
                           (succ_p4_p2)
                           (at_d_p4)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #40848: <==commonly_known== 62183 (neg)
                    (not_at_d_p4)

                    ; #48453: origin
                    (at_d_p2)

                    ; #50046: <==negation-removal== 48453 (pos)
                    (not (not_at_d_p2))

                    ; #62183: origin
                    (not (at_d_p4))))

    (:action move_d_p4_p3
        :precondition (and (Pd_not_blocked_p3)
                           (checked_p3)
                           (succ_p4_p3)
                           (at_d_p4)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #40848: <==commonly_known== 62183 (neg)
                    (not_at_d_p4)

                    ; #66735: origin
                    (at_d_p3)

                    ; #62183: origin
                    (not (at_d_p4))

                    ; #68806: <==negation-removal== 66735 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p4_p4
        :precondition (and (Pd_not_blocked_p4)
                           (succ_p4_p4)
                           (at_d_p4)
                           (Bd_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #40848: <==commonly_known== 62183 (neg)
                    (not_at_d_p4)

                    ; #62183: origin
                    (at_d_p4)

                    ; #40848: <==negation-removal== 62183 (pos)
                    (not (not_at_d_p4))

                    ; #62183: origin
                    (not (at_d_p4))))

    (:action move_d_p4_p5
        :precondition (and (checked_p5)
                           (at_d_p4)
                           (succ_p4_p5)
                           (Pd_not_blocked_p5)
                           (Bd_not_blocked_p5))
        :effect (and
                    ; #15772: origin
                    (at_d_p5)

                    ; #40848: <==commonly_known== 62183 (neg)
                    (not_at_d_p4)

                    ; #62183: origin
                    (not (at_d_p4))

                    ; #77132: <==negation-removal== 15772 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p4_p6
        :precondition (and (succ_p4_p6)
                           (Bd_not_blocked_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p4))
        :effect (and
                    ; #40848: <==commonly_known== 62183 (neg)
                    (not_at_d_p4)

                    ; #79916: origin
                    (at_d_p6)

                    ; #31852: <==negation-removal== 79916 (pos)
                    (not (not_at_d_p6))

                    ; #62183: origin
                    (not (at_d_p4))))

    (:action move_d_p4_p7
        :precondition (and (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (at_d_p4)
                           (succ_p4_p7))
        :effect (and
                    ; #35119: origin
                    (at_d_p7)

                    ; #40848: <==commonly_known== 62183 (neg)
                    (not_at_d_p4)

                    ; #62183: origin
                    (not (at_d_p4))

                    ; #80545: <==negation-removal== 35119 (pos)
                    (not (not_at_d_p7))))

    (:action move_d_p4_p8
        :precondition (and (succ_p4_p8)
                           (Pd_not_blocked_p8)
                           (checked_p8)
                           (at_d_p4)
                           (Bd_not_blocked_p8))
        :effect (and
                    ; #40848: <==commonly_known== 62183 (neg)
                    (not_at_d_p4)

                    ; #79375: origin
                    (at_d_p8)

                    ; #16757: <==negation-removal== 79375 (pos)
                    (not (not_at_d_p8))

                    ; #62183: origin
                    (not (at_d_p4))))

    (:action move_d_p4_p9
        :precondition (and (checked_p9)
                           (succ_p4_p9)
                           (at_d_p4)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #40848: <==commonly_known== 62183 (neg)
                    (not_at_d_p4)

                    ; #54676: origin
                    (at_d_p9)

                    ; #11352: <==negation-removal== 54676 (pos)
                    (not (not_at_d_p9))

                    ; #62183: origin
                    (not (at_d_p4))))

    (:action move_d_p5_p0011
        :precondition (and (Bd_not_blocked_p0011)
                           (succ_p5_p0011)
                           (checked_p0011)
                           (Pd_not_blocked_p0011)
                           (at_d_p5))
        :effect (and
                    ; #76307: origin
                    (at_d_p0011)

                    ; #77132: <==commonly_known== 15772 (neg)
                    (not_at_d_p5)

                    ; #15772: origin
                    (not (at_d_p5))

                    ; #39227: <==negation-removal== 76307 (pos)
                    (not (not_at_d_p0011))))

    (:action move_d_p5_p012
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (succ_p5_p012)
                           (Pd_not_blocked_p012)
                           (at_d_p5))
        :effect (and
                    ; #68262: origin
                    (at_d_p012)

                    ; #77132: <==commonly_known== 15772 (neg)
                    (not_at_d_p5)

                    ; #15772: origin
                    (not (at_d_p5))

                    ; #73250: <==negation-removal== 68262 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p5_p1
        :precondition (and (checked_p1)
                           (Pd_not_blocked_p1)
                           (succ_p5_p1)
                           (Bd_not_blocked_p1)
                           (at_d_p5))
        :effect (and
                    ; #20413: origin
                    (at_d_p1)

                    ; #77132: <==commonly_known== 15772 (neg)
                    (not_at_d_p5)

                    ; #15772: origin
                    (not (at_d_p5))

                    ; #38504: <==negation-removal== 20413 (pos)
                    (not (not_at_d_p1))))

    (:action move_d_p5_p10
        :precondition (and (checked_p10)
                           (Bd_not_blocked_p10)
                           (Pd_not_blocked_p10)
                           (at_d_p5)
                           (succ_p5_p10))
        :effect (and
                    ; #77132: <==commonly_known== 15772 (neg)
                    (not_at_d_p5)

                    ; #99582: origin
                    (at_d_p10)

                    ; #15772: origin
                    (not (at_d_p5))

                    ; #40906: <==negation-removal== 99582 (pos)
                    (not (not_at_d_p10))))

    (:action move_d_p5_p2
        :precondition (and (checked_p2)
                           (succ_p5_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p5)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #48453: origin
                    (at_d_p2)

                    ; #77132: <==commonly_known== 15772 (neg)
                    (not_at_d_p5)

                    ; #15772: origin
                    (not (at_d_p5))

                    ; #50046: <==negation-removal== 48453 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p5_p3
        :precondition (and (succ_p5_p3)
                           (Pd_not_blocked_p3)
                           (Bd_not_blocked_p3)
                           (checked_p3)
                           (at_d_p5))
        :effect (and
                    ; #66735: origin
                    (at_d_p3)

                    ; #77132: <==commonly_known== 15772 (neg)
                    (not_at_d_p5)

                    ; #15772: origin
                    (not (at_d_p5))

                    ; #68806: <==negation-removal== 66735 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p5_p4
        :precondition (and (Pd_not_blocked_p4)
                           (succ_p5_p4)
                           (Bd_not_blocked_p4)
                           (at_d_p5)
                           (checked_p4))
        :effect (and
                    ; #62183: origin
                    (at_d_p4)

                    ; #77132: <==commonly_known== 15772 (neg)
                    (not_at_d_p5)

                    ; #15772: origin
                    (not (at_d_p5))

                    ; #40848: <==negation-removal== 62183 (pos)
                    (not (not_at_d_p4))))

    (:action move_d_p5_p5
        :precondition (and (checked_p5)
                           (succ_p5_p5)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (at_d_p5))
        :effect (and
                    ; #15772: origin
                    (at_d_p5)

                    ; #77132: <==commonly_known== 15772 (neg)
                    (not_at_d_p5)

                    ; #15772: origin
                    (not (at_d_p5))

                    ; #77132: <==negation-removal== 15772 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p5_p6
        :precondition (and (Bd_not_blocked_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (succ_p5_p6)
                           (at_d_p5))
        :effect (and
                    ; #77132: <==commonly_known== 15772 (neg)
                    (not_at_d_p5)

                    ; #79916: origin
                    (at_d_p6)

                    ; #15772: origin
                    (not (at_d_p5))

                    ; #31852: <==negation-removal== 79916 (pos)
                    (not (not_at_d_p6))))

    (:action move_d_p5_p7
        :precondition (and (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (succ_p5_p7)
                           (at_d_p5))
        :effect (and
                    ; #35119: origin
                    (at_d_p7)

                    ; #77132: <==commonly_known== 15772 (neg)
                    (not_at_d_p5)

                    ; #15772: origin
                    (not (at_d_p5))

                    ; #80545: <==negation-removal== 35119 (pos)
                    (not (not_at_d_p7))))

    (:action move_d_p5_p8
        :precondition (and (succ_p5_p8)
                           (Pd_not_blocked_p8)
                           (checked_p8)
                           (Bd_not_blocked_p8)
                           (at_d_p5))
        :effect (and
                    ; #77132: <==commonly_known== 15772 (neg)
                    (not_at_d_p5)

                    ; #79375: origin
                    (at_d_p8)

                    ; #15772: origin
                    (not (at_d_p5))

                    ; #16757: <==negation-removal== 79375 (pos)
                    (not (not_at_d_p8))))

    (:action move_d_p5_p9
        :precondition (and (checked_p9)
                           (succ_p5_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p5)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #54676: origin
                    (at_d_p9)

                    ; #77132: <==commonly_known== 15772 (neg)
                    (not_at_d_p5)

                    ; #11352: <==negation-removal== 54676 (pos)
                    (not (not_at_d_p9))

                    ; #15772: origin
                    (not (at_d_p5))))

    (:action move_d_p6_p0011
        :precondition (and (Bd_not_blocked_p0011)
                           (at_d_p6)
                           (succ_p6_p0011)
                           (checked_p0011)
                           (Pd_not_blocked_p0011))
        :effect (and
                    ; #31852: <==commonly_known== 79916 (neg)
                    (not_at_d_p6)

                    ; #76307: origin
                    (at_d_p0011)

                    ; #39227: <==negation-removal== 76307 (pos)
                    (not (not_at_d_p0011))

                    ; #79916: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p012
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p6)
                           (Pd_not_blocked_p012)
                           (succ_p6_p012))
        :effect (and
                    ; #31852: <==commonly_known== 79916 (neg)
                    (not_at_d_p6)

                    ; #68262: origin
                    (at_d_p012)

                    ; #73250: <==negation-removal== 68262 (pos)
                    (not (not_at_d_p012))

                    ; #79916: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p1
        :precondition (and (succ_p6_p1)
                           (checked_p1)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1)
                           (at_d_p6))
        :effect (and
                    ; #20413: origin
                    (at_d_p1)

                    ; #31852: <==commonly_known== 79916 (neg)
                    (not_at_d_p6)

                    ; #38504: <==negation-removal== 20413 (pos)
                    (not (not_at_d_p1))

                    ; #79916: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p10
        :precondition (and (checked_p10)
                           (at_d_p6)
                           (Bd_not_blocked_p10)
                           (Pd_not_blocked_p10)
                           (succ_p6_p10))
        :effect (and
                    ; #31852: <==commonly_known== 79916 (neg)
                    (not_at_d_p6)

                    ; #99582: origin
                    (at_d_p10)

                    ; #40906: <==negation-removal== 99582 (pos)
                    (not (not_at_d_p10))

                    ; #79916: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p2
        :precondition (and (succ_p6_p2)
                           (checked_p2)
                           (at_d_p6)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #31852: <==commonly_known== 79916 (neg)
                    (not_at_d_p6)

                    ; #48453: origin
                    (at_d_p2)

                    ; #50046: <==negation-removal== 48453 (pos)
                    (not (not_at_d_p2))

                    ; #79916: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p3
        :precondition (and (Pd_not_blocked_p3)
                           (checked_p3)
                           (at_d_p6)
                           (Bd_not_blocked_p3)
                           (succ_p6_p3))
        :effect (and
                    ; #31852: <==commonly_known== 79916 (neg)
                    (not_at_d_p6)

                    ; #66735: origin
                    (at_d_p3)

                    ; #68806: <==negation-removal== 66735 (pos)
                    (not (not_at_d_p3))

                    ; #79916: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p4
        :precondition (and (Pd_not_blocked_p4)
                           (succ_p6_p4)
                           (at_d_p6)
                           (Bd_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #31852: <==commonly_known== 79916 (neg)
                    (not_at_d_p6)

                    ; #62183: origin
                    (at_d_p4)

                    ; #40848: <==negation-removal== 62183 (pos)
                    (not (not_at_d_p4))

                    ; #79916: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p5
        :precondition (and (succ_p6_p5)
                           (checked_p5)
                           (at_d_p6)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #15772: origin
                    (at_d_p5)

                    ; #31852: <==commonly_known== 79916 (neg)
                    (not_at_d_p6)

                    ; #77132: <==negation-removal== 15772 (pos)
                    (not (not_at_d_p5))

                    ; #79916: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p6
        :precondition (and (Bd_not_blocked_p6)
                           (succ_p6_p6)
                           (Pd_not_blocked_p6)
                           (checked_p6)
                           (at_d_p6))
        :effect (and
                    ; #31852: <==commonly_known== 79916 (neg)
                    (not_at_d_p6)

                    ; #79916: origin
                    (at_d_p6)

                    ; #31852: <==negation-removal== 79916 (pos)
                    (not (not_at_d_p6))

                    ; #79916: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p7
        :precondition (and (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (at_d_p6)
                           (succ_p6_p7))
        :effect (and
                    ; #31852: <==commonly_known== 79916 (neg)
                    (not_at_d_p6)

                    ; #35119: origin
                    (at_d_p7)

                    ; #79916: origin
                    (not (at_d_p6))

                    ; #80545: <==negation-removal== 35119 (pos)
                    (not (not_at_d_p7))))

    (:action move_d_p6_p8
        :precondition (and (Pd_not_blocked_p8)
                           (checked_p8)
                           (at_d_p6)
                           (Bd_not_blocked_p8)
                           (succ_p6_p8))
        :effect (and
                    ; #31852: <==commonly_known== 79916 (neg)
                    (not_at_d_p6)

                    ; #79375: origin
                    (at_d_p8)

                    ; #16757: <==negation-removal== 79375 (pos)
                    (not (not_at_d_p8))

                    ; #79916: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p9
        :precondition (and (checked_p9)
                           (succ_p6_p9)
                           (at_d_p6)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #31852: <==commonly_known== 79916 (neg)
                    (not_at_d_p6)

                    ; #54676: origin
                    (at_d_p9)

                    ; #11352: <==negation-removal== 54676 (pos)
                    (not (not_at_d_p9))

                    ; #79916: origin
                    (not (at_d_p6))))

    (:action move_d_p7_p0011
        :precondition (and (Bd_not_blocked_p0011)
                           (checked_p0011)
                           (Pd_not_blocked_p0011)
                           (succ_p7_p0011)
                           (at_d_p7))
        :effect (and
                    ; #76307: origin
                    (at_d_p0011)

                    ; #80545: <==commonly_known== 35119 (neg)
                    (not_at_d_p7)

                    ; #35119: origin
                    (not (at_d_p7))

                    ; #39227: <==negation-removal== 76307 (pos)
                    (not (not_at_d_p0011))))

    (:action move_d_p7_p012
        :precondition (and (checked_p012)
                           (succ_p7_p012)
                           (Bd_not_blocked_p012)
                           (Pd_not_blocked_p012)
                           (at_d_p7))
        :effect (and
                    ; #68262: origin
                    (at_d_p012)

                    ; #80545: <==commonly_known== 35119 (neg)
                    (not_at_d_p7)

                    ; #35119: origin
                    (not (at_d_p7))

                    ; #73250: <==negation-removal== 68262 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p7_p1
        :precondition (and (checked_p1)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1)
                           (succ_p7_p1)
                           (at_d_p7))
        :effect (and
                    ; #20413: origin
                    (at_d_p1)

                    ; #80545: <==commonly_known== 35119 (neg)
                    (not_at_d_p7)

                    ; #35119: origin
                    (not (at_d_p7))

                    ; #38504: <==negation-removal== 20413 (pos)
                    (not (not_at_d_p1))))

    (:action move_d_p7_p10
        :precondition (and (checked_p10)
                           (succ_p7_p10)
                           (Bd_not_blocked_p10)
                           (Pd_not_blocked_p10)
                           (at_d_p7))
        :effect (and
                    ; #80545: <==commonly_known== 35119 (neg)
                    (not_at_d_p7)

                    ; #99582: origin
                    (at_d_p10)

                    ; #35119: origin
                    (not (at_d_p7))

                    ; #40906: <==negation-removal== 99582 (pos)
                    (not (not_at_d_p10))))

    (:action move_d_p7_p2
        :precondition (and (checked_p2)
                           (succ_p7_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p7)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #48453: origin
                    (at_d_p2)

                    ; #80545: <==commonly_known== 35119 (neg)
                    (not_at_d_p7)

                    ; #35119: origin
                    (not (at_d_p7))

                    ; #50046: <==negation-removal== 48453 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p7_p3
        :precondition (and (Pd_not_blocked_p3)
                           (checked_p3)
                           (succ_p7_p3)
                           (Bd_not_blocked_p3)
                           (at_d_p7))
        :effect (and
                    ; #66735: origin
                    (at_d_p3)

                    ; #80545: <==commonly_known== 35119 (neg)
                    (not_at_d_p7)

                    ; #35119: origin
                    (not (at_d_p7))

                    ; #68806: <==negation-removal== 66735 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p7_p4
        :precondition (and (Pd_not_blocked_p4)
                           (succ_p7_p4)
                           (Bd_not_blocked_p4)
                           (at_d_p7)
                           (checked_p4))
        :effect (and
                    ; #62183: origin
                    (at_d_p4)

                    ; #80545: <==commonly_known== 35119 (neg)
                    (not_at_d_p7)

                    ; #35119: origin
                    (not (at_d_p7))

                    ; #40848: <==negation-removal== 62183 (pos)
                    (not (not_at_d_p4))))

    (:action move_d_p7_p5
        :precondition (and (checked_p5)
                           (succ_p7_p5)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (at_d_p7))
        :effect (and
                    ; #15772: origin
                    (at_d_p5)

                    ; #80545: <==commonly_known== 35119 (neg)
                    (not_at_d_p7)

                    ; #35119: origin
                    (not (at_d_p7))

                    ; #77132: <==negation-removal== 15772 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p7_p6
        :precondition (and (succ_p7_p6)
                           (Bd_not_blocked_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p7))
        :effect (and
                    ; #79916: origin
                    (at_d_p6)

                    ; #80545: <==commonly_known== 35119 (neg)
                    (not_at_d_p7)

                    ; #31852: <==negation-removal== 79916 (pos)
                    (not (not_at_d_p6))

                    ; #35119: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p7
        :precondition (and (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (succ_p7_p7)
                           (at_d_p7))
        :effect (and
                    ; #35119: origin
                    (at_d_p7)

                    ; #80545: <==commonly_known== 35119 (neg)
                    (not_at_d_p7)

                    ; #35119: origin
                    (not (at_d_p7))

                    ; #80545: <==negation-removal== 35119 (pos)
                    (not (not_at_d_p7))))

    (:action move_d_p7_p8
        :precondition (and (Pd_not_blocked_p8)
                           (checked_p8)
                           (succ_p7_p8)
                           (at_d_p7)
                           (Bd_not_blocked_p8))
        :effect (and
                    ; #79375: origin
                    (at_d_p8)

                    ; #80545: <==commonly_known== 35119 (neg)
                    (not_at_d_p7)

                    ; #16757: <==negation-removal== 79375 (pos)
                    (not (not_at_d_p8))

                    ; #35119: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p9
        :precondition (and (checked_p9)
                           (succ_p7_p9)
                           (at_d_p7)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #54676: origin
                    (at_d_p9)

                    ; #80545: <==commonly_known== 35119 (neg)
                    (not_at_d_p7)

                    ; #11352: <==negation-removal== 54676 (pos)
                    (not (not_at_d_p9))

                    ; #35119: origin
                    (not (at_d_p7))))

    (:action move_d_p8_p0011
        :precondition (and (succ_p8_p0011)
                           (at_d_p8)
                           (Bd_not_blocked_p0011)
                           (checked_p0011)
                           (Pd_not_blocked_p0011))
        :effect (and
                    ; #16757: <==commonly_known== 79375 (neg)
                    (not_at_d_p8)

                    ; #76307: origin
                    (at_d_p0011)

                    ; #39227: <==negation-removal== 76307 (pos)
                    (not (not_at_d_p0011))

                    ; #79375: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p012
        :precondition (and (checked_p012)
                           (at_d_p8)
                           (Bd_not_blocked_p012)
                           (succ_p8_p012)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #16757: <==commonly_known== 79375 (neg)
                    (not_at_d_p8)

                    ; #68262: origin
                    (at_d_p012)

                    ; #73250: <==negation-removal== 68262 (pos)
                    (not (not_at_d_p012))

                    ; #79375: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p1
        :precondition (and (succ_p8_p1)
                           (checked_p1)
                           (at_d_p8)
                           (Pd_not_blocked_p1)
                           (Bd_not_blocked_p1))
        :effect (and
                    ; #16757: <==commonly_known== 79375 (neg)
                    (not_at_d_p8)

                    ; #20413: origin
                    (at_d_p1)

                    ; #38504: <==negation-removal== 20413 (pos)
                    (not (not_at_d_p1))

                    ; #79375: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p10
        :precondition (and (checked_p10)
                           (at_d_p8)
                           (succ_p8_p10)
                           (Bd_not_blocked_p10)
                           (Pd_not_blocked_p10))
        :effect (and
                    ; #16757: <==commonly_known== 79375 (neg)
                    (not_at_d_p8)

                    ; #99582: origin
                    (at_d_p10)

                    ; #40906: <==negation-removal== 99582 (pos)
                    (not (not_at_d_p10))

                    ; #79375: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p2
        :precondition (and (at_d_p8)
                           (checked_p2)
                           (Bd_not_blocked_p2)
                           (succ_p8_p2)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #16757: <==commonly_known== 79375 (neg)
                    (not_at_d_p8)

                    ; #48453: origin
                    (at_d_p2)

                    ; #50046: <==negation-removal== 48453 (pos)
                    (not (not_at_d_p2))

                    ; #79375: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p3
        :precondition (and (Pd_not_blocked_p3)
                           (at_d_p8)
                           (checked_p3)
                           (succ_p8_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #16757: <==commonly_known== 79375 (neg)
                    (not_at_d_p8)

                    ; #66735: origin
                    (at_d_p3)

                    ; #68806: <==negation-removal== 66735 (pos)
                    (not (not_at_d_p3))

                    ; #79375: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p4
        :precondition (and (Pd_not_blocked_p4)
                           (succ_p8_p4)
                           (at_d_p8)
                           (Bd_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #16757: <==commonly_known== 79375 (neg)
                    (not_at_d_p8)

                    ; #62183: origin
                    (at_d_p4)

                    ; #40848: <==negation-removal== 62183 (pos)
                    (not (not_at_d_p4))

                    ; #79375: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p5
        :precondition (and (at_d_p8)
                           (checked_p5)
                           (succ_p8_p5)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #15772: origin
                    (at_d_p5)

                    ; #16757: <==commonly_known== 79375 (neg)
                    (not_at_d_p8)

                    ; #77132: <==negation-removal== 15772 (pos)
                    (not (not_at_d_p5))

                    ; #79375: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p6
        :precondition (and (Bd_not_blocked_p6)
                           (at_d_p8)
                           (Pd_not_blocked_p6)
                           (checked_p6)
                           (succ_p8_p6))
        :effect (and
                    ; #16757: <==commonly_known== 79375 (neg)
                    (not_at_d_p8)

                    ; #79916: origin
                    (at_d_p6)

                    ; #31852: <==negation-removal== 79916 (pos)
                    (not (not_at_d_p6))

                    ; #79375: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p7
        :precondition (and (Bd_not_blocked_p7)
                           (succ_p8_p7)
                           (at_d_p8)
                           (Pd_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #16757: <==commonly_known== 79375 (neg)
                    (not_at_d_p8)

                    ; #35119: origin
                    (at_d_p7)

                    ; #79375: origin
                    (not (at_d_p8))

                    ; #80545: <==negation-removal== 35119 (pos)
                    (not (not_at_d_p7))))

    (:action move_d_p8_p8
        :precondition (and (at_d_p8)
                           (Pd_not_blocked_p8)
                           (checked_p8)
                           (succ_p8_p8)
                           (Bd_not_blocked_p8))
        :effect (and
                    ; #16757: <==commonly_known== 79375 (neg)
                    (not_at_d_p8)

                    ; #79375: origin
                    (at_d_p8)

                    ; #16757: <==negation-removal== 79375 (pos)
                    (not (not_at_d_p8))

                    ; #79375: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p9
        :precondition (and (checked_p9)
                           (at_d_p8)
                           (succ_p8_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #16757: <==commonly_known== 79375 (neg)
                    (not_at_d_p8)

                    ; #54676: origin
                    (at_d_p9)

                    ; #11352: <==negation-removal== 54676 (pos)
                    (not (not_at_d_p9))

                    ; #79375: origin
                    (not (at_d_p8))))

    (:action move_d_p9_p0011
        :precondition (and (succ_p9_p0011)
                           (Bd_not_blocked_p0011)
                           (at_d_p9)
                           (checked_p0011)
                           (Pd_not_blocked_p0011))
        :effect (and
                    ; #11352: <==commonly_known== 54676 (neg)
                    (not_at_d_p9)

                    ; #76307: origin
                    (at_d_p0011)

                    ; #39227: <==negation-removal== 76307 (pos)
                    (not (not_at_d_p0011))

                    ; #54676: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p012
        :precondition (and (checked_p012)
                           (succ_p9_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p9)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #11352: <==commonly_known== 54676 (neg)
                    (not_at_d_p9)

                    ; #68262: origin
                    (at_d_p012)

                    ; #54676: origin
                    (not (at_d_p9))

                    ; #73250: <==negation-removal== 68262 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p9_p1
        :precondition (and (checked_p1)
                           (Pd_not_blocked_p1)
                           (at_d_p9)
                           (Bd_not_blocked_p1)
                           (succ_p9_p1))
        :effect (and
                    ; #11352: <==commonly_known== 54676 (neg)
                    (not_at_d_p9)

                    ; #20413: origin
                    (at_d_p1)

                    ; #38504: <==negation-removal== 20413 (pos)
                    (not (not_at_d_p1))

                    ; #54676: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p10
        :precondition (and (checked_p10)
                           (succ_p9_p10)
                           (at_d_p9)
                           (Bd_not_blocked_p10)
                           (Pd_not_blocked_p10))
        :effect (and
                    ; #11352: <==commonly_known== 54676 (neg)
                    (not_at_d_p9)

                    ; #99582: origin
                    (at_d_p10)

                    ; #40906: <==negation-removal== 99582 (pos)
                    (not (not_at_d_p10))

                    ; #54676: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p2
        :precondition (and (checked_p2)
                           (succ_p9_p2)
                           (at_d_p9)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #11352: <==commonly_known== 54676 (neg)
                    (not_at_d_p9)

                    ; #48453: origin
                    (at_d_p2)

                    ; #50046: <==negation-removal== 48453 (pos)
                    (not (not_at_d_p2))

                    ; #54676: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p3
        :precondition (and (Pd_not_blocked_p3)
                           (checked_p3)
                           (at_d_p9)
                           (succ_p9_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #11352: <==commonly_known== 54676 (neg)
                    (not_at_d_p9)

                    ; #66735: origin
                    (at_d_p3)

                    ; #54676: origin
                    (not (at_d_p9))

                    ; #68806: <==negation-removal== 66735 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p9_p4
        :precondition (and (Pd_not_blocked_p4)
                           (succ_p9_p4)
                           (at_d_p9)
                           (Bd_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #11352: <==commonly_known== 54676 (neg)
                    (not_at_d_p9)

                    ; #62183: origin
                    (at_d_p4)

                    ; #40848: <==negation-removal== 62183 (pos)
                    (not (not_at_d_p4))

                    ; #54676: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p5
        :precondition (and (checked_p5)
                           (at_d_p9)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (succ_p9_p5))
        :effect (and
                    ; #11352: <==commonly_known== 54676 (neg)
                    (not_at_d_p9)

                    ; #15772: origin
                    (at_d_p5)

                    ; #54676: origin
                    (not (at_d_p9))

                    ; #77132: <==negation-removal== 15772 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p9_p6
        :precondition (and (succ_p9_p6)
                           (Bd_not_blocked_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p9))
        :effect (and
                    ; #11352: <==commonly_known== 54676 (neg)
                    (not_at_d_p9)

                    ; #79916: origin
                    (at_d_p6)

                    ; #31852: <==negation-removal== 79916 (pos)
                    (not (not_at_d_p6))

                    ; #54676: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p7
        :precondition (and (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (succ_p9_p7)
                           (at_d_p9))
        :effect (and
                    ; #11352: <==commonly_known== 54676 (neg)
                    (not_at_d_p9)

                    ; #35119: origin
                    (at_d_p7)

                    ; #54676: origin
                    (not (at_d_p9))

                    ; #80545: <==negation-removal== 35119 (pos)
                    (not (not_at_d_p7))))

    (:action move_d_p9_p8
        :precondition (and (Pd_not_blocked_p8)
                           (checked_p8)
                           (at_d_p9)
                           (Bd_not_blocked_p8)
                           (succ_p9_p8))
        :effect (and
                    ; #11352: <==commonly_known== 54676 (neg)
                    (not_at_d_p9)

                    ; #79375: origin
                    (at_d_p8)

                    ; #16757: <==negation-removal== 79375 (pos)
                    (not (not_at_d_p8))

                    ; #54676: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p9
        :precondition (and (checked_p9)
                           (succ_p9_p9)
                           (at_d_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #11352: <==commonly_known== 54676 (neg)
                    (not_at_d_p9)

                    ; #54676: origin
                    (at_d_p9)

                    ; #11352: <==negation-removal== 54676 (pos)
                    (not (not_at_d_p9))

                    ; #54676: origin
                    (not (at_d_p9))))

    (:action sensecells_a_p0011_p0011
        :precondition (and (at_a_p0011)
                           (succ_p0011_p0011))
        :effect (and
                    ; #14996: <==closure== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #24856: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #32188: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #56162: <==closure== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #17970: <==uncertain_firing== 24856 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #24626: <==unclosure== 17970 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #29587: <==negation-removal== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #34041: <==negation-removal== 56162 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #85434: <==negation-removal== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #87136: <==negation-removal== 14996 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))))

    (:action sensecells_a_p0011_p012
        :precondition (and (succ_p0011_p012)
                           (at_a_p0011))
        :effect (and
                    ; #10744: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #58708: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #63531: <==closure== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #81515: <==closure== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13895: <==negation-removal== 63531 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #37571: <==negation-removal== 81515 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #45365: <==negation-removal== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #45894: <==unclosure== 84408 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #67470: <==negation-removal== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #84408: <==uncertain_firing== 10744 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p0011_p1
        :precondition (and (at_a_p0011)
                           (succ_p0011_p1))
        :effect (and
                    ; #17044: <==closure== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #26955: <==closure== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #44035: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #63110: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #18777: <==negation-removal== 26955 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #38421: <==unclosure== 96394 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #47970: <==negation-removal== 17044 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #50174: <==negation-removal== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #54656: <==negation-removal== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #96394: <==uncertain_firing== 63110 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p0011_p10
        :precondition (and (succ_p0011_p10)
                           (at_a_p0011))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #41834: <==closure== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #44800: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #64495: <==closure== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #69715: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20169: <==uncertain_firing== 44800 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #42862: <==negation-removal== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #44793: <==unclosure== 20169 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #54197: <==negation-removal== 41834 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #67382: <==negation-removal== 64495 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #75080: <==negation-removal== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))))

    (:action sensecells_a_p0011_p2
        :precondition (and (succ_p0011_p2)
                           (at_a_p0011))
        :effect (and
                    ; #40258: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #47990: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #51814: <==closure== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #73948: <==closure== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #26938: <==uncertain_firing== 40258 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #27335: <==negation-removal== 73948 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #44618: <==negation-removal== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #53916: <==negation-removal== 51814 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #56819: <==negation-removal== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #57834: <==unclosure== 26938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p0011_p3
        :precondition (and (at_a_p0011)
                           (succ_p0011_p3))
        :effect (and
                    ; #18796: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #39682: <==closure== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #46147: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #66492: <==closure== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #47789: <==negation-removal== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #55640: <==unclosure== 66236 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #66236: <==uncertain_firing== 46147 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #71476: <==negation-removal== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #81830: <==negation-removal== 66492 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #90670: <==negation-removal== 39682 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))))

    (:action sensecells_a_p0011_p4
        :precondition (and (succ_p0011_p4)
                           (at_a_p0011))
        :effect (and
                    ; #15758: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #42289: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #51911: <==closure== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #84700: <==closure== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #10342: <==negation-removal== 51911 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #13940: <==negation-removal== 84700 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #32311: <==negation-removal== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #67132: <==negation-removal== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #76002: <==uncertain_firing== 42289 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #80254: <==unclosure== 76002 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p0011_p5
        :precondition (and (succ_p0011_p5)
                           (at_a_p0011))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #29825: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #55782: <==closure== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #67983: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #80377: <==closure== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #37608: <==negation-removal== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #43407: <==uncertain_firing== 67983 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #51415: <==negation-removal== 80377 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #85079: <==negation-removal== 55782 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #88361: <==unclosure== 43407 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #89462: <==negation-removal== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))))

    (:action sensecells_a_p0011_p6
        :precondition (and (at_a_p0011)
                           (succ_p0011_p6))
        :effect (and
                    ; #40043: <==closure== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #47491: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #67251: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #83005: <==closure== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #23195: <==unclosure== 96113 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #37136: <==negation-removal== 83005 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #38004: <==negation-removal== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #56569: <==negation-removal== 40043 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #84609: <==negation-removal== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))

                    ; #96113: <==uncertain_firing== 67251 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p0011_p7
        :precondition (and (at_a_p0011)
                           (succ_p0011_p7))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #28700: <==closure== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #29123: <==closure== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #40466: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #53092: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #15440: <==uncertain_firing== 40466 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #20356: <==negation-removal== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56189: <==negation-removal== 29123 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #63211: <==negation-removal== 28700 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #73644: <==unclosure== 15440 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #87592: <==negation-removal== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p0011_p8
        :precondition (and (succ_p0011_p8)
                           (at_a_p0011))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #47358: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #55321: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #70171: <==closure== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #82086: <==closure== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #18680: <==negation-removal== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #19017: <==negation-removal== 82086 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #27382: <==unclosure== 62026 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #62026: <==uncertain_firing== 55321 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #70901: <==negation-removal== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #71995: <==negation-removal== 70171 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p0011_p9
        :precondition (and (succ_p0011_p9)
                           (at_a_p0011))
        :effect (and
                    ; #18890: <==closure== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #59111: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #82974: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #86804: <==closure== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #36447: <==negation-removal== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #39780: <==negation-removal== 86804 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #52945: <==negation-removal== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #69431: <==unclosure== 83838 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #79033: <==negation-removal== 18890 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #83838: <==uncertain_firing== 82974 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p012_p0011
        :precondition (and (at_a_p012)
                           (succ_p012_p0011))
        :effect (and
                    ; #14996: <==closure== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #24856: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #32188: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #56162: <==closure== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #17970: <==uncertain_firing== 24856 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #24626: <==unclosure== 17970 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #29587: <==negation-removal== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #34041: <==negation-removal== 56162 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #85434: <==negation-removal== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #87136: <==negation-removal== 14996 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))))

    (:action sensecells_a_p012_p012
        :precondition (and (succ_p012_p012)
                           (at_a_p012))
        :effect (and
                    ; #10744: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #58708: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #63531: <==closure== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #81515: <==closure== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13895: <==negation-removal== 63531 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #37571: <==negation-removal== 81515 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #45365: <==negation-removal== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #45894: <==unclosure== 84408 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #67470: <==negation-removal== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #84408: <==uncertain_firing== 10744 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p012_p1
        :precondition (and (at_a_p012)
                           (succ_p012_p1))
        :effect (and
                    ; #17044: <==closure== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #26955: <==closure== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #44035: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #63110: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #18777: <==negation-removal== 26955 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #38421: <==unclosure== 96394 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #47970: <==negation-removal== 17044 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #50174: <==negation-removal== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #54656: <==negation-removal== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #96394: <==uncertain_firing== 63110 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p012_p10
        :precondition (and (succ_p012_p10)
                           (at_a_p012))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #41834: <==closure== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #44800: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #64495: <==closure== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #69715: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20169: <==uncertain_firing== 44800 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #42862: <==negation-removal== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #44793: <==unclosure== 20169 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #54197: <==negation-removal== 41834 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #67382: <==negation-removal== 64495 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #75080: <==negation-removal== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))))

    (:action sensecells_a_p012_p2
        :precondition (and (succ_p012_p2)
                           (at_a_p012))
        :effect (and
                    ; #40258: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #47990: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #51814: <==closure== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #73948: <==closure== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #26938: <==uncertain_firing== 40258 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #27335: <==negation-removal== 73948 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #44618: <==negation-removal== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #53916: <==negation-removal== 51814 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #56819: <==negation-removal== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #57834: <==unclosure== 26938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p012_p3
        :precondition (and (at_a_p012)
                           (succ_p012_p3))
        :effect (and
                    ; #18796: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #39682: <==closure== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #46147: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #66492: <==closure== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #47789: <==negation-removal== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #55640: <==unclosure== 66236 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #66236: <==uncertain_firing== 46147 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #71476: <==negation-removal== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #81830: <==negation-removal== 66492 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #90670: <==negation-removal== 39682 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))))

    (:action sensecells_a_p012_p4
        :precondition (and (succ_p012_p4)
                           (at_a_p012))
        :effect (and
                    ; #15758: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #42289: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #51911: <==closure== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #84700: <==closure== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #10342: <==negation-removal== 51911 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #13940: <==negation-removal== 84700 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #32311: <==negation-removal== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #67132: <==negation-removal== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #76002: <==uncertain_firing== 42289 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #80254: <==unclosure== 76002 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p012_p5
        :precondition (and (succ_p012_p5)
                           (at_a_p012))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #29825: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #55782: <==closure== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #67983: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #80377: <==closure== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #37608: <==negation-removal== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #43407: <==uncertain_firing== 67983 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #51415: <==negation-removal== 80377 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #85079: <==negation-removal== 55782 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #88361: <==unclosure== 43407 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #89462: <==negation-removal== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))))

    (:action sensecells_a_p012_p6
        :precondition (and (at_a_p012)
                           (succ_p012_p6))
        :effect (and
                    ; #40043: <==closure== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #47491: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #67251: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #83005: <==closure== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #23195: <==unclosure== 96113 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #37136: <==negation-removal== 83005 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #38004: <==negation-removal== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #56569: <==negation-removal== 40043 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #84609: <==negation-removal== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))

                    ; #96113: <==uncertain_firing== 67251 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p012_p7
        :precondition (and (at_a_p012)
                           (succ_p012_p7))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #28700: <==closure== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #29123: <==closure== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #40466: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #53092: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #15440: <==uncertain_firing== 40466 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #20356: <==negation-removal== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56189: <==negation-removal== 29123 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #63211: <==negation-removal== 28700 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #73644: <==unclosure== 15440 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #87592: <==negation-removal== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p012_p8
        :precondition (and (succ_p012_p8)
                           (at_a_p012))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #47358: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #55321: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #70171: <==closure== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #82086: <==closure== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #18680: <==negation-removal== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #19017: <==negation-removal== 82086 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #27382: <==unclosure== 62026 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #62026: <==uncertain_firing== 55321 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #70901: <==negation-removal== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #71995: <==negation-removal== 70171 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p012_p9
        :precondition (and (succ_p012_p9)
                           (at_a_p012))
        :effect (and
                    ; #18890: <==closure== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #59111: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #82974: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #86804: <==closure== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #36447: <==negation-removal== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #39780: <==negation-removal== 86804 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #52945: <==negation-removal== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #69431: <==unclosure== 83838 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #79033: <==negation-removal== 18890 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #83838: <==uncertain_firing== 82974 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p10_p0011
        :precondition (and (at_a_p10)
                           (succ_p10_p0011))
        :effect (and
                    ; #14996: <==closure== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #24856: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #32188: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #56162: <==closure== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #17970: <==uncertain_firing== 24856 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #24626: <==unclosure== 17970 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #29587: <==negation-removal== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #34041: <==negation-removal== 56162 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #85434: <==negation-removal== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #87136: <==negation-removal== 14996 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))))

    (:action sensecells_a_p10_p012
        :precondition (and (at_a_p10)
                           (succ_p10_p012))
        :effect (and
                    ; #10744: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #58708: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #63531: <==closure== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #81515: <==closure== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13895: <==negation-removal== 63531 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #37571: <==negation-removal== 81515 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #45365: <==negation-removal== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #45894: <==unclosure== 84408 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #67470: <==negation-removal== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #84408: <==uncertain_firing== 10744 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p10_p1
        :precondition (and (at_a_p10)
                           (succ_p10_p1))
        :effect (and
                    ; #17044: <==closure== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #26955: <==closure== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #44035: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #63110: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #18777: <==negation-removal== 26955 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #38421: <==unclosure== 96394 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #47970: <==negation-removal== 17044 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #50174: <==negation-removal== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #54656: <==negation-removal== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #96394: <==uncertain_firing== 63110 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p10_p10
        :precondition (and (at_a_p10)
                           (succ_p10_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #41834: <==closure== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #44800: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #64495: <==closure== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #69715: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20169: <==uncertain_firing== 44800 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #42862: <==negation-removal== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #44793: <==unclosure== 20169 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #54197: <==negation-removal== 41834 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #67382: <==negation-removal== 64495 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #75080: <==negation-removal== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))))

    (:action sensecells_a_p10_p2
        :precondition (and (succ_p10_p2)
                           (at_a_p10))
        :effect (and
                    ; #40258: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #47990: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #51814: <==closure== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #73948: <==closure== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #26938: <==uncertain_firing== 40258 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #27335: <==negation-removal== 73948 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #44618: <==negation-removal== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #53916: <==negation-removal== 51814 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #56819: <==negation-removal== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #57834: <==unclosure== 26938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p10_p3
        :precondition (and (succ_p10_p3)
                           (at_a_p10))
        :effect (and
                    ; #18796: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #39682: <==closure== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #46147: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #66492: <==closure== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #47789: <==negation-removal== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #55640: <==unclosure== 66236 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #66236: <==uncertain_firing== 46147 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #71476: <==negation-removal== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #81830: <==negation-removal== 66492 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #90670: <==negation-removal== 39682 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))))

    (:action sensecells_a_p10_p4
        :precondition (and (at_a_p10)
                           (succ_p10_p4))
        :effect (and
                    ; #15758: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #42289: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #51911: <==closure== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #84700: <==closure== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #10342: <==negation-removal== 51911 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #13940: <==negation-removal== 84700 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #32311: <==negation-removal== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #67132: <==negation-removal== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #76002: <==uncertain_firing== 42289 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #80254: <==unclosure== 76002 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p10_p5
        :precondition (and (at_a_p10)
                           (succ_p10_p5))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #29825: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #55782: <==closure== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #67983: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #80377: <==closure== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #37608: <==negation-removal== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #43407: <==uncertain_firing== 67983 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #51415: <==negation-removal== 80377 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #85079: <==negation-removal== 55782 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #88361: <==unclosure== 43407 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #89462: <==negation-removal== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))))

    (:action sensecells_a_p10_p6
        :precondition (and (at_a_p10)
                           (succ_p10_p6))
        :effect (and
                    ; #40043: <==closure== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #47491: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #67251: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #83005: <==closure== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #23195: <==unclosure== 96113 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #37136: <==negation-removal== 83005 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #38004: <==negation-removal== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #56569: <==negation-removal== 40043 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #84609: <==negation-removal== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))

                    ; #96113: <==uncertain_firing== 67251 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p10_p7
        :precondition (and (at_a_p10)
                           (succ_p10_p7))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #28700: <==closure== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #29123: <==closure== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #40466: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #53092: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #15440: <==uncertain_firing== 40466 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #20356: <==negation-removal== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56189: <==negation-removal== 29123 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #63211: <==negation-removal== 28700 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #73644: <==unclosure== 15440 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #87592: <==negation-removal== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p10_p8
        :precondition (and (succ_p10_p8)
                           (at_a_p10))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #47358: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #55321: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #70171: <==closure== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #82086: <==closure== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #18680: <==negation-removal== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #19017: <==negation-removal== 82086 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #27382: <==unclosure== 62026 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #62026: <==uncertain_firing== 55321 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #70901: <==negation-removal== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #71995: <==negation-removal== 70171 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p10_p9
        :precondition (and (at_a_p10)
                           (succ_p10_p9))
        :effect (and
                    ; #18890: <==closure== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #59111: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #82974: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #86804: <==closure== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #36447: <==negation-removal== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #39780: <==negation-removal== 86804 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #52945: <==negation-removal== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #69431: <==unclosure== 83838 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #79033: <==negation-removal== 18890 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #83838: <==uncertain_firing== 82974 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p1_p0011
        :precondition (and (at_a_p1)
                           (succ_p1_p0011))
        :effect (and
                    ; #14996: <==closure== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #24856: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #32188: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #56162: <==closure== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #17970: <==uncertain_firing== 24856 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #24626: <==unclosure== 17970 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #29587: <==negation-removal== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #34041: <==negation-removal== 56162 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #85434: <==negation-removal== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #87136: <==negation-removal== 14996 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))))

    (:action sensecells_a_p1_p012
        :precondition (and (succ_p1_p012)
                           (at_a_p1))
        :effect (and
                    ; #10744: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #58708: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #63531: <==closure== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #81515: <==closure== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13895: <==negation-removal== 63531 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #37571: <==negation-removal== 81515 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #45365: <==negation-removal== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #45894: <==unclosure== 84408 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #67470: <==negation-removal== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #84408: <==uncertain_firing== 10744 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p1_p1
        :precondition (and (succ_p1_p1)
                           (at_a_p1))
        :effect (and
                    ; #17044: <==closure== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #26955: <==closure== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #44035: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #63110: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #18777: <==negation-removal== 26955 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #38421: <==unclosure== 96394 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #47970: <==negation-removal== 17044 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #50174: <==negation-removal== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #54656: <==negation-removal== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #96394: <==uncertain_firing== 63110 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p1_p10
        :precondition (and (succ_p1_p10)
                           (at_a_p1))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #41834: <==closure== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #44800: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #64495: <==closure== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #69715: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20169: <==uncertain_firing== 44800 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #42862: <==negation-removal== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #44793: <==unclosure== 20169 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #54197: <==negation-removal== 41834 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #67382: <==negation-removal== 64495 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #75080: <==negation-removal== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))))

    (:action sensecells_a_p1_p2
        :precondition (and (at_a_p1)
                           (succ_p1_p2))
        :effect (and
                    ; #40258: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #47990: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #51814: <==closure== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #73948: <==closure== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #26938: <==uncertain_firing== 40258 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #27335: <==negation-removal== 73948 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #44618: <==negation-removal== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #53916: <==negation-removal== 51814 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #56819: <==negation-removal== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #57834: <==unclosure== 26938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p1_p3
        :precondition (and (succ_p1_p3)
                           (at_a_p1))
        :effect (and
                    ; #18796: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #39682: <==closure== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #46147: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #66492: <==closure== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #47789: <==negation-removal== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #55640: <==unclosure== 66236 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #66236: <==uncertain_firing== 46147 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #71476: <==negation-removal== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #81830: <==negation-removal== 66492 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #90670: <==negation-removal== 39682 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))))

    (:action sensecells_a_p1_p4
        :precondition (and (succ_p1_p4)
                           (at_a_p1))
        :effect (and
                    ; #15758: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #42289: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #51911: <==closure== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #84700: <==closure== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #10342: <==negation-removal== 51911 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #13940: <==negation-removal== 84700 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #32311: <==negation-removal== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #67132: <==negation-removal== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #76002: <==uncertain_firing== 42289 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #80254: <==unclosure== 76002 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p1_p5
        :precondition (and (succ_p1_p5)
                           (at_a_p1))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #29825: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #55782: <==closure== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #67983: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #80377: <==closure== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #37608: <==negation-removal== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #43407: <==uncertain_firing== 67983 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #51415: <==negation-removal== 80377 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #85079: <==negation-removal== 55782 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #88361: <==unclosure== 43407 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #89462: <==negation-removal== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))))

    (:action sensecells_a_p1_p6
        :precondition (and (succ_p1_p6)
                           (at_a_p1))
        :effect (and
                    ; #40043: <==closure== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #47491: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #67251: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #83005: <==closure== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #23195: <==unclosure== 96113 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #37136: <==negation-removal== 83005 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #38004: <==negation-removal== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #56569: <==negation-removal== 40043 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #84609: <==negation-removal== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))

                    ; #96113: <==uncertain_firing== 67251 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p1_p7
        :precondition (and (succ_p1_p7)
                           (at_a_p1))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #28700: <==closure== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #29123: <==closure== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #40466: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #53092: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #15440: <==uncertain_firing== 40466 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #20356: <==negation-removal== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56189: <==negation-removal== 29123 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #63211: <==negation-removal== 28700 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #73644: <==unclosure== 15440 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #87592: <==negation-removal== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p1_p8
        :precondition (and (succ_p1_p8)
                           (at_a_p1))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #47358: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #55321: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #70171: <==closure== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #82086: <==closure== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #18680: <==negation-removal== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #19017: <==negation-removal== 82086 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #27382: <==unclosure== 62026 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #62026: <==uncertain_firing== 55321 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #70901: <==negation-removal== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #71995: <==negation-removal== 70171 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p1_p9
        :precondition (and (at_a_p1)
                           (succ_p1_p9))
        :effect (and
                    ; #18890: <==closure== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #59111: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #82974: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #86804: <==closure== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #36447: <==negation-removal== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #39780: <==negation-removal== 86804 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #52945: <==negation-removal== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #69431: <==unclosure== 83838 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #79033: <==negation-removal== 18890 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #83838: <==uncertain_firing== 82974 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p2_p0011
        :precondition (and (succ_p2_p0011)
                           (at_a_p2))
        :effect (and
                    ; #14996: <==closure== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #24856: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #32188: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #56162: <==closure== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #17970: <==uncertain_firing== 24856 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #24626: <==unclosure== 17970 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #29587: <==negation-removal== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #34041: <==negation-removal== 56162 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #85434: <==negation-removal== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #87136: <==negation-removal== 14996 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))))

    (:action sensecells_a_p2_p012
        :precondition (and (succ_p2_p012)
                           (at_a_p2))
        :effect (and
                    ; #10744: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #58708: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #63531: <==closure== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #81515: <==closure== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13895: <==negation-removal== 63531 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #37571: <==negation-removal== 81515 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #45365: <==negation-removal== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #45894: <==unclosure== 84408 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #67470: <==negation-removal== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #84408: <==uncertain_firing== 10744 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p2_p1
        :precondition (and (succ_p2_p1)
                           (at_a_p2))
        :effect (and
                    ; #17044: <==closure== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #26955: <==closure== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #44035: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #63110: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #18777: <==negation-removal== 26955 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #38421: <==unclosure== 96394 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #47970: <==negation-removal== 17044 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #50174: <==negation-removal== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #54656: <==negation-removal== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #96394: <==uncertain_firing== 63110 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p2_p10
        :precondition (and (succ_p2_p10)
                           (at_a_p2))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #41834: <==closure== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #44800: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #64495: <==closure== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #69715: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20169: <==uncertain_firing== 44800 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #42862: <==negation-removal== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #44793: <==unclosure== 20169 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #54197: <==negation-removal== 41834 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #67382: <==negation-removal== 64495 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #75080: <==negation-removal== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))))

    (:action sensecells_a_p2_p2
        :precondition (and (succ_p2_p2)
                           (at_a_p2))
        :effect (and
                    ; #40258: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #47990: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #51814: <==closure== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #73948: <==closure== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #26938: <==uncertain_firing== 40258 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #27335: <==negation-removal== 73948 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #44618: <==negation-removal== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #53916: <==negation-removal== 51814 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #56819: <==negation-removal== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #57834: <==unclosure== 26938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p2_p3
        :precondition (and (succ_p2_p3)
                           (at_a_p2))
        :effect (and
                    ; #18796: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #39682: <==closure== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #46147: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #66492: <==closure== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #47789: <==negation-removal== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #55640: <==unclosure== 66236 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #66236: <==uncertain_firing== 46147 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #71476: <==negation-removal== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #81830: <==negation-removal== 66492 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #90670: <==negation-removal== 39682 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))))

    (:action sensecells_a_p2_p4
        :precondition (and (succ_p2_p4)
                           (at_a_p2))
        :effect (and
                    ; #15758: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #42289: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #51911: <==closure== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #84700: <==closure== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #10342: <==negation-removal== 51911 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #13940: <==negation-removal== 84700 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #32311: <==negation-removal== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #67132: <==negation-removal== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #76002: <==uncertain_firing== 42289 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #80254: <==unclosure== 76002 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p2_p5
        :precondition (and (succ_p2_p5)
                           (at_a_p2))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #29825: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #55782: <==closure== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #67983: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #80377: <==closure== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #37608: <==negation-removal== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #43407: <==uncertain_firing== 67983 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #51415: <==negation-removal== 80377 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #85079: <==negation-removal== 55782 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #88361: <==unclosure== 43407 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #89462: <==negation-removal== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))))

    (:action sensecells_a_p2_p6
        :precondition (and (succ_p2_p6)
                           (at_a_p2))
        :effect (and
                    ; #40043: <==closure== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #47491: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #67251: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #83005: <==closure== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #23195: <==unclosure== 96113 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #37136: <==negation-removal== 83005 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #38004: <==negation-removal== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #56569: <==negation-removal== 40043 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #84609: <==negation-removal== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))

                    ; #96113: <==uncertain_firing== 67251 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p2_p7
        :precondition (and (succ_p2_p7)
                           (at_a_p2))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #28700: <==closure== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #29123: <==closure== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #40466: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #53092: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #15440: <==uncertain_firing== 40466 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #20356: <==negation-removal== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56189: <==negation-removal== 29123 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #63211: <==negation-removal== 28700 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #73644: <==unclosure== 15440 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #87592: <==negation-removal== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p2_p8
        :precondition (and (succ_p2_p8)
                           (at_a_p2))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #47358: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #55321: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #70171: <==closure== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #82086: <==closure== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #18680: <==negation-removal== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #19017: <==negation-removal== 82086 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #27382: <==unclosure== 62026 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #62026: <==uncertain_firing== 55321 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #70901: <==negation-removal== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #71995: <==negation-removal== 70171 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p2_p9
        :precondition (and (succ_p2_p9)
                           (at_a_p2))
        :effect (and
                    ; #18890: <==closure== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #59111: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #82974: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #86804: <==closure== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #36447: <==negation-removal== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #39780: <==negation-removal== 86804 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #52945: <==negation-removal== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #69431: <==unclosure== 83838 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #79033: <==negation-removal== 18890 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #83838: <==uncertain_firing== 82974 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p3_p0011
        :precondition (and (at_a_p3)
                           (succ_p3_p0011))
        :effect (and
                    ; #14996: <==closure== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #24856: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #32188: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #56162: <==closure== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #17970: <==uncertain_firing== 24856 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #24626: <==unclosure== 17970 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #29587: <==negation-removal== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #34041: <==negation-removal== 56162 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #85434: <==negation-removal== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #87136: <==negation-removal== 14996 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))))

    (:action sensecells_a_p3_p012
        :precondition (and (at_a_p3)
                           (succ_p3_p012))
        :effect (and
                    ; #10744: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #58708: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #63531: <==closure== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #81515: <==closure== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13895: <==negation-removal== 63531 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #37571: <==negation-removal== 81515 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #45365: <==negation-removal== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #45894: <==unclosure== 84408 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #67470: <==negation-removal== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #84408: <==uncertain_firing== 10744 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p3_p1
        :precondition (and (at_a_p3)
                           (succ_p3_p1))
        :effect (and
                    ; #17044: <==closure== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #26955: <==closure== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #44035: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #63110: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #18777: <==negation-removal== 26955 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #38421: <==unclosure== 96394 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #47970: <==negation-removal== 17044 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #50174: <==negation-removal== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #54656: <==negation-removal== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #96394: <==uncertain_firing== 63110 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p3_p10
        :precondition (and (at_a_p3)
                           (succ_p3_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #41834: <==closure== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #44800: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #64495: <==closure== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #69715: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20169: <==uncertain_firing== 44800 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #42862: <==negation-removal== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #44793: <==unclosure== 20169 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #54197: <==negation-removal== 41834 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #67382: <==negation-removal== 64495 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #75080: <==negation-removal== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))))

    (:action sensecells_a_p3_p2
        :precondition (and (at_a_p3)
                           (succ_p3_p2))
        :effect (and
                    ; #40258: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #47990: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #51814: <==closure== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #73948: <==closure== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #26938: <==uncertain_firing== 40258 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #27335: <==negation-removal== 73948 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #44618: <==negation-removal== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #53916: <==negation-removal== 51814 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #56819: <==negation-removal== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #57834: <==unclosure== 26938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p3_p3
        :precondition (and (at_a_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #18796: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #39682: <==closure== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #46147: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #66492: <==closure== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #47789: <==negation-removal== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #55640: <==unclosure== 66236 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #66236: <==uncertain_firing== 46147 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #71476: <==negation-removal== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #81830: <==negation-removal== 66492 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #90670: <==negation-removal== 39682 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))))

    (:action sensecells_a_p3_p4
        :precondition (and (at_a_p3)
                           (succ_p3_p4))
        :effect (and
                    ; #15758: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #42289: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #51911: <==closure== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #84700: <==closure== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #10342: <==negation-removal== 51911 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #13940: <==negation-removal== 84700 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #32311: <==negation-removal== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #67132: <==negation-removal== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #76002: <==uncertain_firing== 42289 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #80254: <==unclosure== 76002 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p3_p5
        :precondition (and (at_a_p3)
                           (succ_p3_p5))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #29825: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #55782: <==closure== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #67983: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #80377: <==closure== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #37608: <==negation-removal== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #43407: <==uncertain_firing== 67983 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #51415: <==negation-removal== 80377 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #85079: <==negation-removal== 55782 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #88361: <==unclosure== 43407 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #89462: <==negation-removal== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))))

    (:action sensecells_a_p3_p6
        :precondition (and (at_a_p3)
                           (succ_p3_p6))
        :effect (and
                    ; #40043: <==closure== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #47491: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #67251: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #83005: <==closure== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #23195: <==unclosure== 96113 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #37136: <==negation-removal== 83005 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #38004: <==negation-removal== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #56569: <==negation-removal== 40043 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #84609: <==negation-removal== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))

                    ; #96113: <==uncertain_firing== 67251 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p3_p7
        :precondition (and (at_a_p3)
                           (succ_p3_p7))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #28700: <==closure== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #29123: <==closure== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #40466: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #53092: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #15440: <==uncertain_firing== 40466 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #20356: <==negation-removal== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56189: <==negation-removal== 29123 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #63211: <==negation-removal== 28700 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #73644: <==unclosure== 15440 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #87592: <==negation-removal== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p3_p8
        :precondition (and (at_a_p3)
                           (succ_p3_p8))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #47358: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #55321: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #70171: <==closure== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #82086: <==closure== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #18680: <==negation-removal== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #19017: <==negation-removal== 82086 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #27382: <==unclosure== 62026 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #62026: <==uncertain_firing== 55321 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #70901: <==negation-removal== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #71995: <==negation-removal== 70171 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p3_p9
        :precondition (and (at_a_p3)
                           (succ_p3_p9))
        :effect (and
                    ; #18890: <==closure== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #59111: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #82974: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #86804: <==closure== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #36447: <==negation-removal== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #39780: <==negation-removal== 86804 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #52945: <==negation-removal== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #69431: <==unclosure== 83838 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #79033: <==negation-removal== 18890 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #83838: <==uncertain_firing== 82974 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p4_p0011
        :precondition (and (at_a_p4)
                           (succ_p4_p0011))
        :effect (and
                    ; #14996: <==closure== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #24856: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #32188: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #56162: <==closure== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #17970: <==uncertain_firing== 24856 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #24626: <==unclosure== 17970 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #29587: <==negation-removal== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #34041: <==negation-removal== 56162 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #85434: <==negation-removal== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #87136: <==negation-removal== 14996 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))))

    (:action sensecells_a_p4_p012
        :precondition (and (at_a_p4)
                           (succ_p4_p012))
        :effect (and
                    ; #10744: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #58708: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #63531: <==closure== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #81515: <==closure== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13895: <==negation-removal== 63531 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #37571: <==negation-removal== 81515 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #45365: <==negation-removal== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #45894: <==unclosure== 84408 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #67470: <==negation-removal== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #84408: <==uncertain_firing== 10744 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p4_p1
        :precondition (and (at_a_p4)
                           (succ_p4_p1))
        :effect (and
                    ; #17044: <==closure== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #26955: <==closure== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #44035: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #63110: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #18777: <==negation-removal== 26955 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #38421: <==unclosure== 96394 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #47970: <==negation-removal== 17044 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #50174: <==negation-removal== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #54656: <==negation-removal== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #96394: <==uncertain_firing== 63110 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p4_p10
        :precondition (and (at_a_p4)
                           (succ_p4_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #41834: <==closure== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #44800: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #64495: <==closure== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #69715: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20169: <==uncertain_firing== 44800 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #42862: <==negation-removal== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #44793: <==unclosure== 20169 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #54197: <==negation-removal== 41834 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #67382: <==negation-removal== 64495 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #75080: <==negation-removal== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))))

    (:action sensecells_a_p4_p2
        :precondition (and (at_a_p4)
                           (succ_p4_p2))
        :effect (and
                    ; #40258: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #47990: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #51814: <==closure== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #73948: <==closure== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #26938: <==uncertain_firing== 40258 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #27335: <==negation-removal== 73948 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #44618: <==negation-removal== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #53916: <==negation-removal== 51814 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #56819: <==negation-removal== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #57834: <==unclosure== 26938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p4_p3
        :precondition (and (at_a_p4)
                           (succ_p4_p3))
        :effect (and
                    ; #18796: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #39682: <==closure== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #46147: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #66492: <==closure== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #47789: <==negation-removal== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #55640: <==unclosure== 66236 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #66236: <==uncertain_firing== 46147 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #71476: <==negation-removal== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #81830: <==negation-removal== 66492 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #90670: <==negation-removal== 39682 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))))

    (:action sensecells_a_p4_p4
        :precondition (and (at_a_p4)
                           (succ_p4_p4))
        :effect (and
                    ; #15758: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #42289: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #51911: <==closure== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #84700: <==closure== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #10342: <==negation-removal== 51911 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #13940: <==negation-removal== 84700 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #32311: <==negation-removal== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #67132: <==negation-removal== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #76002: <==uncertain_firing== 42289 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #80254: <==unclosure== 76002 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p4_p5
        :precondition (and (at_a_p4)
                           (succ_p4_p5))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #29825: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #55782: <==closure== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #67983: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #80377: <==closure== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #37608: <==negation-removal== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #43407: <==uncertain_firing== 67983 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #51415: <==negation-removal== 80377 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #85079: <==negation-removal== 55782 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #88361: <==unclosure== 43407 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #89462: <==negation-removal== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))))

    (:action sensecells_a_p4_p6
        :precondition (and (at_a_p4)
                           (succ_p4_p6))
        :effect (and
                    ; #40043: <==closure== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #47491: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #67251: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #83005: <==closure== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #23195: <==unclosure== 96113 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #37136: <==negation-removal== 83005 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #38004: <==negation-removal== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #56569: <==negation-removal== 40043 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #84609: <==negation-removal== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))

                    ; #96113: <==uncertain_firing== 67251 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p4_p7
        :precondition (and (at_a_p4)
                           (succ_p4_p7))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #28700: <==closure== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #29123: <==closure== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #40466: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #53092: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #15440: <==uncertain_firing== 40466 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #20356: <==negation-removal== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56189: <==negation-removal== 29123 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #63211: <==negation-removal== 28700 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #73644: <==unclosure== 15440 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #87592: <==negation-removal== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p4_p8
        :precondition (and (at_a_p4)
                           (succ_p4_p8))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #47358: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #55321: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #70171: <==closure== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #82086: <==closure== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #18680: <==negation-removal== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #19017: <==negation-removal== 82086 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #27382: <==unclosure== 62026 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #62026: <==uncertain_firing== 55321 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #70901: <==negation-removal== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #71995: <==negation-removal== 70171 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p4_p9
        :precondition (and (at_a_p4)
                           (succ_p4_p9))
        :effect (and
                    ; #18890: <==closure== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #59111: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #82974: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #86804: <==closure== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #36447: <==negation-removal== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #39780: <==negation-removal== 86804 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #52945: <==negation-removal== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #69431: <==unclosure== 83838 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #79033: <==negation-removal== 18890 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #83838: <==uncertain_firing== 82974 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p5_p0011
        :precondition (and (succ_p5_p0011)
                           (at_a_p5))
        :effect (and
                    ; #14996: <==closure== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #24856: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #32188: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #56162: <==closure== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #17970: <==uncertain_firing== 24856 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #24626: <==unclosure== 17970 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #29587: <==negation-removal== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #34041: <==negation-removal== 56162 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #85434: <==negation-removal== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #87136: <==negation-removal== 14996 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))))

    (:action sensecells_a_p5_p012
        :precondition (and (at_a_p5)
                           (succ_p5_p012))
        :effect (and
                    ; #10744: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #58708: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #63531: <==closure== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #81515: <==closure== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13895: <==negation-removal== 63531 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #37571: <==negation-removal== 81515 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #45365: <==negation-removal== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #45894: <==unclosure== 84408 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #67470: <==negation-removal== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #84408: <==uncertain_firing== 10744 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p5_p1
        :precondition (and (at_a_p5)
                           (succ_p5_p1))
        :effect (and
                    ; #17044: <==closure== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #26955: <==closure== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #44035: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #63110: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #18777: <==negation-removal== 26955 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #38421: <==unclosure== 96394 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #47970: <==negation-removal== 17044 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #50174: <==negation-removal== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #54656: <==negation-removal== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #96394: <==uncertain_firing== 63110 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p5_p10
        :precondition (and (at_a_p5)
                           (succ_p5_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #41834: <==closure== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #44800: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #64495: <==closure== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #69715: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20169: <==uncertain_firing== 44800 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #42862: <==negation-removal== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #44793: <==unclosure== 20169 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #54197: <==negation-removal== 41834 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #67382: <==negation-removal== 64495 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #75080: <==negation-removal== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))))

    (:action sensecells_a_p5_p2
        :precondition (and (at_a_p5)
                           (succ_p5_p2))
        :effect (and
                    ; #40258: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #47990: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #51814: <==closure== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #73948: <==closure== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #26938: <==uncertain_firing== 40258 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #27335: <==negation-removal== 73948 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #44618: <==negation-removal== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #53916: <==negation-removal== 51814 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #56819: <==negation-removal== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #57834: <==unclosure== 26938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p5_p3
        :precondition (and (succ_p5_p3)
                           (at_a_p5))
        :effect (and
                    ; #18796: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #39682: <==closure== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #46147: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #66492: <==closure== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #47789: <==negation-removal== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #55640: <==unclosure== 66236 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #66236: <==uncertain_firing== 46147 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #71476: <==negation-removal== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #81830: <==negation-removal== 66492 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #90670: <==negation-removal== 39682 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))))

    (:action sensecells_a_p5_p4
        :precondition (and (at_a_p5)
                           (succ_p5_p4))
        :effect (and
                    ; #15758: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #42289: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #51911: <==closure== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #84700: <==closure== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #10342: <==negation-removal== 51911 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #13940: <==negation-removal== 84700 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #32311: <==negation-removal== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #67132: <==negation-removal== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #76002: <==uncertain_firing== 42289 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #80254: <==unclosure== 76002 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p5_p5
        :precondition (and (at_a_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #29825: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #55782: <==closure== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #67983: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #80377: <==closure== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #37608: <==negation-removal== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #43407: <==uncertain_firing== 67983 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #51415: <==negation-removal== 80377 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #85079: <==negation-removal== 55782 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #88361: <==unclosure== 43407 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #89462: <==negation-removal== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))))

    (:action sensecells_a_p5_p6
        :precondition (and (at_a_p5)
                           (succ_p5_p6))
        :effect (and
                    ; #40043: <==closure== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #47491: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #67251: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #83005: <==closure== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #23195: <==unclosure== 96113 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #37136: <==negation-removal== 83005 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #38004: <==negation-removal== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #56569: <==negation-removal== 40043 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #84609: <==negation-removal== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))

                    ; #96113: <==uncertain_firing== 67251 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p5_p7
        :precondition (and (at_a_p5)
                           (succ_p5_p7))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #28700: <==closure== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #29123: <==closure== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #40466: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #53092: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #15440: <==uncertain_firing== 40466 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #20356: <==negation-removal== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56189: <==negation-removal== 29123 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #63211: <==negation-removal== 28700 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #73644: <==unclosure== 15440 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #87592: <==negation-removal== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p5_p8
        :precondition (and (at_a_p5)
                           (succ_p5_p8))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #47358: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #55321: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #70171: <==closure== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #82086: <==closure== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #18680: <==negation-removal== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #19017: <==negation-removal== 82086 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #27382: <==unclosure== 62026 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #62026: <==uncertain_firing== 55321 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #70901: <==negation-removal== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #71995: <==negation-removal== 70171 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p5_p9
        :precondition (and (at_a_p5)
                           (succ_p5_p9))
        :effect (and
                    ; #18890: <==closure== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #59111: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #82974: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #86804: <==closure== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #36447: <==negation-removal== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #39780: <==negation-removal== 86804 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #52945: <==negation-removal== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #69431: <==unclosure== 83838 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #79033: <==negation-removal== 18890 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #83838: <==uncertain_firing== 82974 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p6_p0011
        :precondition (and (succ_p6_p0011)
                           (at_a_p6))
        :effect (and
                    ; #14996: <==closure== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #24856: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #32188: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #56162: <==closure== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #17970: <==uncertain_firing== 24856 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #24626: <==unclosure== 17970 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #29587: <==negation-removal== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #34041: <==negation-removal== 56162 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #85434: <==negation-removal== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #87136: <==negation-removal== 14996 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))))

    (:action sensecells_a_p6_p012
        :precondition (and (succ_p6_p012)
                           (at_a_p6))
        :effect (and
                    ; #10744: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #58708: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #63531: <==closure== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #81515: <==closure== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13895: <==negation-removal== 63531 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #37571: <==negation-removal== 81515 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #45365: <==negation-removal== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #45894: <==unclosure== 84408 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #67470: <==negation-removal== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #84408: <==uncertain_firing== 10744 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p6_p1
        :precondition (and (succ_p6_p1)
                           (at_a_p6))
        :effect (and
                    ; #17044: <==closure== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #26955: <==closure== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #44035: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #63110: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #18777: <==negation-removal== 26955 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #38421: <==unclosure== 96394 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #47970: <==negation-removal== 17044 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #50174: <==negation-removal== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #54656: <==negation-removal== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #96394: <==uncertain_firing== 63110 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p6_p10
        :precondition (and (succ_p6_p10)
                           (at_a_p6))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #41834: <==closure== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #44800: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #64495: <==closure== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #69715: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20169: <==uncertain_firing== 44800 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #42862: <==negation-removal== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #44793: <==unclosure== 20169 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #54197: <==negation-removal== 41834 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #67382: <==negation-removal== 64495 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #75080: <==negation-removal== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))))

    (:action sensecells_a_p6_p2
        :precondition (and (succ_p6_p2)
                           (at_a_p6))
        :effect (and
                    ; #40258: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #47990: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #51814: <==closure== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #73948: <==closure== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #26938: <==uncertain_firing== 40258 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #27335: <==negation-removal== 73948 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #44618: <==negation-removal== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #53916: <==negation-removal== 51814 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #56819: <==negation-removal== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #57834: <==unclosure== 26938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p6_p3
        :precondition (and (succ_p6_p3)
                           (at_a_p6))
        :effect (and
                    ; #18796: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #39682: <==closure== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #46147: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #66492: <==closure== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #47789: <==negation-removal== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #55640: <==unclosure== 66236 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #66236: <==uncertain_firing== 46147 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #71476: <==negation-removal== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #81830: <==negation-removal== 66492 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #90670: <==negation-removal== 39682 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))))

    (:action sensecells_a_p6_p4
        :precondition (and (succ_p6_p4)
                           (at_a_p6))
        :effect (and
                    ; #15758: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #42289: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #51911: <==closure== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #84700: <==closure== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #10342: <==negation-removal== 51911 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #13940: <==negation-removal== 84700 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #32311: <==negation-removal== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #67132: <==negation-removal== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #76002: <==uncertain_firing== 42289 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #80254: <==unclosure== 76002 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p6_p5
        :precondition (and (succ_p6_p5)
                           (at_a_p6))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #29825: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #55782: <==closure== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #67983: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #80377: <==closure== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #37608: <==negation-removal== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #43407: <==uncertain_firing== 67983 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #51415: <==negation-removal== 80377 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #85079: <==negation-removal== 55782 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #88361: <==unclosure== 43407 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #89462: <==negation-removal== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))))

    (:action sensecells_a_p6_p6
        :precondition (and (succ_p6_p6)
                           (at_a_p6))
        :effect (and
                    ; #40043: <==closure== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #47491: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #67251: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #83005: <==closure== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #23195: <==unclosure== 96113 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #37136: <==negation-removal== 83005 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #38004: <==negation-removal== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #56569: <==negation-removal== 40043 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #84609: <==negation-removal== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))

                    ; #96113: <==uncertain_firing== 67251 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p6_p7
        :precondition (and (succ_p6_p7)
                           (at_a_p6))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #28700: <==closure== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #29123: <==closure== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #40466: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #53092: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #15440: <==uncertain_firing== 40466 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #20356: <==negation-removal== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56189: <==negation-removal== 29123 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #63211: <==negation-removal== 28700 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #73644: <==unclosure== 15440 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #87592: <==negation-removal== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p6_p8
        :precondition (and (succ_p6_p8)
                           (at_a_p6))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #47358: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #55321: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #70171: <==closure== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #82086: <==closure== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #18680: <==negation-removal== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #19017: <==negation-removal== 82086 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #27382: <==unclosure== 62026 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #62026: <==uncertain_firing== 55321 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #70901: <==negation-removal== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #71995: <==negation-removal== 70171 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p6_p9
        :precondition (and (succ_p6_p9)
                           (at_a_p6))
        :effect (and
                    ; #18890: <==closure== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #59111: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #82974: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #86804: <==closure== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #36447: <==negation-removal== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #39780: <==negation-removal== 86804 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #52945: <==negation-removal== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #69431: <==unclosure== 83838 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #79033: <==negation-removal== 18890 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #83838: <==uncertain_firing== 82974 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p7_p0011
        :precondition (and (at_a_p7)
                           (succ_p7_p0011))
        :effect (and
                    ; #14996: <==closure== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #24856: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #32188: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #56162: <==closure== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #17970: <==uncertain_firing== 24856 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #24626: <==unclosure== 17970 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #29587: <==negation-removal== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #34041: <==negation-removal== 56162 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #85434: <==negation-removal== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #87136: <==negation-removal== 14996 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))))

    (:action sensecells_a_p7_p012
        :precondition (and (succ_p7_p012)
                           (at_a_p7))
        :effect (and
                    ; #10744: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #58708: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #63531: <==closure== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #81515: <==closure== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13895: <==negation-removal== 63531 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #37571: <==negation-removal== 81515 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #45365: <==negation-removal== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #45894: <==unclosure== 84408 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #67470: <==negation-removal== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #84408: <==uncertain_firing== 10744 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p7_p1
        :precondition (and (succ_p7_p1)
                           (at_a_p7))
        :effect (and
                    ; #17044: <==closure== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #26955: <==closure== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #44035: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #63110: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #18777: <==negation-removal== 26955 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #38421: <==unclosure== 96394 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #47970: <==negation-removal== 17044 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #50174: <==negation-removal== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #54656: <==negation-removal== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #96394: <==uncertain_firing== 63110 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p7_p10
        :precondition (and (succ_p7_p10)
                           (at_a_p7))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #41834: <==closure== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #44800: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #64495: <==closure== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #69715: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20169: <==uncertain_firing== 44800 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #42862: <==negation-removal== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #44793: <==unclosure== 20169 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #54197: <==negation-removal== 41834 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #67382: <==negation-removal== 64495 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #75080: <==negation-removal== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))))

    (:action sensecells_a_p7_p2
        :precondition (and (succ_p7_p2)
                           (at_a_p7))
        :effect (and
                    ; #40258: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #47990: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #51814: <==closure== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #73948: <==closure== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #26938: <==uncertain_firing== 40258 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #27335: <==negation-removal== 73948 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #44618: <==negation-removal== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #53916: <==negation-removal== 51814 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #56819: <==negation-removal== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #57834: <==unclosure== 26938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p7_p3
        :precondition (and (at_a_p7)
                           (succ_p7_p3))
        :effect (and
                    ; #18796: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #39682: <==closure== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #46147: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #66492: <==closure== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #47789: <==negation-removal== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #55640: <==unclosure== 66236 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #66236: <==uncertain_firing== 46147 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #71476: <==negation-removal== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #81830: <==negation-removal== 66492 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #90670: <==negation-removal== 39682 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))))

    (:action sensecells_a_p7_p4
        :precondition (and (succ_p7_p4)
                           (at_a_p7))
        :effect (and
                    ; #15758: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #42289: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #51911: <==closure== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #84700: <==closure== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #10342: <==negation-removal== 51911 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #13940: <==negation-removal== 84700 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #32311: <==negation-removal== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #67132: <==negation-removal== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #76002: <==uncertain_firing== 42289 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #80254: <==unclosure== 76002 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p7_p5
        :precondition (and (at_a_p7)
                           (succ_p7_p5))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #29825: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #55782: <==closure== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #67983: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #80377: <==closure== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #37608: <==negation-removal== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #43407: <==uncertain_firing== 67983 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #51415: <==negation-removal== 80377 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #85079: <==negation-removal== 55782 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #88361: <==unclosure== 43407 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #89462: <==negation-removal== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))))

    (:action sensecells_a_p7_p6
        :precondition (and (succ_p7_p6)
                           (at_a_p7))
        :effect (and
                    ; #40043: <==closure== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #47491: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #67251: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #83005: <==closure== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #23195: <==unclosure== 96113 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #37136: <==negation-removal== 83005 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #38004: <==negation-removal== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #56569: <==negation-removal== 40043 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #84609: <==negation-removal== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))

                    ; #96113: <==uncertain_firing== 67251 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p7_p7
        :precondition (and (succ_p7_p7)
                           (at_a_p7))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #28700: <==closure== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #29123: <==closure== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #40466: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #53092: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #15440: <==uncertain_firing== 40466 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #20356: <==negation-removal== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56189: <==negation-removal== 29123 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #63211: <==negation-removal== 28700 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #73644: <==unclosure== 15440 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #87592: <==negation-removal== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p7_p8
        :precondition (and (at_a_p7)
                           (succ_p7_p8))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #47358: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #55321: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #70171: <==closure== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #82086: <==closure== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #18680: <==negation-removal== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #19017: <==negation-removal== 82086 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #27382: <==unclosure== 62026 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #62026: <==uncertain_firing== 55321 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #70901: <==negation-removal== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #71995: <==negation-removal== 70171 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p7_p9
        :precondition (and (succ_p7_p9)
                           (at_a_p7))
        :effect (and
                    ; #18890: <==closure== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #59111: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #82974: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #86804: <==closure== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #36447: <==negation-removal== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #39780: <==negation-removal== 86804 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #52945: <==negation-removal== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #69431: <==unclosure== 83838 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #79033: <==negation-removal== 18890 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #83838: <==uncertain_firing== 82974 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p8_p0011
        :precondition (and (succ_p8_p0011)
                           (at_a_p8))
        :effect (and
                    ; #14996: <==closure== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #24856: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #32188: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #56162: <==closure== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #17970: <==uncertain_firing== 24856 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #24626: <==unclosure== 17970 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #29587: <==negation-removal== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #34041: <==negation-removal== 56162 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #85434: <==negation-removal== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #87136: <==negation-removal== 14996 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))))

    (:action sensecells_a_p8_p012
        :precondition (and (succ_p8_p012)
                           (at_a_p8))
        :effect (and
                    ; #10744: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #58708: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #63531: <==closure== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #81515: <==closure== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13895: <==negation-removal== 63531 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #37571: <==negation-removal== 81515 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #45365: <==negation-removal== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #45894: <==unclosure== 84408 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #67470: <==negation-removal== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #84408: <==uncertain_firing== 10744 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p8_p1
        :precondition (and (succ_p8_p1)
                           (at_a_p8))
        :effect (and
                    ; #17044: <==closure== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #26955: <==closure== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #44035: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #63110: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #18777: <==negation-removal== 26955 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #38421: <==unclosure== 96394 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #47970: <==negation-removal== 17044 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #50174: <==negation-removal== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #54656: <==negation-removal== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #96394: <==uncertain_firing== 63110 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p8_p10
        :precondition (and (succ_p8_p10)
                           (at_a_p8))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #41834: <==closure== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #44800: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #64495: <==closure== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #69715: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20169: <==uncertain_firing== 44800 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #42862: <==negation-removal== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #44793: <==unclosure== 20169 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #54197: <==negation-removal== 41834 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #67382: <==negation-removal== 64495 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #75080: <==negation-removal== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))))

    (:action sensecells_a_p8_p2
        :precondition (and (at_a_p8)
                           (succ_p8_p2))
        :effect (and
                    ; #40258: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #47990: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #51814: <==closure== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #73948: <==closure== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #26938: <==uncertain_firing== 40258 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #27335: <==negation-removal== 73948 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #44618: <==negation-removal== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #53916: <==negation-removal== 51814 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #56819: <==negation-removal== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #57834: <==unclosure== 26938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p8_p3
        :precondition (and (succ_p8_p3)
                           (at_a_p8))
        :effect (and
                    ; #18796: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #39682: <==closure== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #46147: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #66492: <==closure== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #47789: <==negation-removal== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #55640: <==unclosure== 66236 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #66236: <==uncertain_firing== 46147 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #71476: <==negation-removal== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #81830: <==negation-removal== 66492 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #90670: <==negation-removal== 39682 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))))

    (:action sensecells_a_p8_p4
        :precondition (and (succ_p8_p4)
                           (at_a_p8))
        :effect (and
                    ; #15758: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #42289: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #51911: <==closure== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #84700: <==closure== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #10342: <==negation-removal== 51911 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #13940: <==negation-removal== 84700 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #32311: <==negation-removal== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #67132: <==negation-removal== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #76002: <==uncertain_firing== 42289 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #80254: <==unclosure== 76002 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p8_p5
        :precondition (and (succ_p8_p5)
                           (at_a_p8))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #29825: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #55782: <==closure== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #67983: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #80377: <==closure== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #37608: <==negation-removal== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #43407: <==uncertain_firing== 67983 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #51415: <==negation-removal== 80377 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #85079: <==negation-removal== 55782 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #88361: <==unclosure== 43407 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #89462: <==negation-removal== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))))

    (:action sensecells_a_p8_p6
        :precondition (and (at_a_p8)
                           (succ_p8_p6))
        :effect (and
                    ; #40043: <==closure== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #47491: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #67251: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #83005: <==closure== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #23195: <==unclosure== 96113 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #37136: <==negation-removal== 83005 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #38004: <==negation-removal== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #56569: <==negation-removal== 40043 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #84609: <==negation-removal== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))

                    ; #96113: <==uncertain_firing== 67251 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p8_p7
        :precondition (and (succ_p8_p7)
                           (at_a_p8))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #28700: <==closure== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #29123: <==closure== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #40466: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #53092: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #15440: <==uncertain_firing== 40466 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #20356: <==negation-removal== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56189: <==negation-removal== 29123 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #63211: <==negation-removal== 28700 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #73644: <==unclosure== 15440 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #87592: <==negation-removal== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p8_p8
        :precondition (and (succ_p8_p8)
                           (at_a_p8))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #47358: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #55321: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #70171: <==closure== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #82086: <==closure== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #18680: <==negation-removal== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #19017: <==negation-removal== 82086 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #27382: <==unclosure== 62026 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #62026: <==uncertain_firing== 55321 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #70901: <==negation-removal== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #71995: <==negation-removal== 70171 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p8_p9
        :precondition (and (succ_p8_p9)
                           (at_a_p8))
        :effect (and
                    ; #18890: <==closure== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #59111: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #82974: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #86804: <==closure== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #36447: <==negation-removal== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #39780: <==negation-removal== 86804 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #52945: <==negation-removal== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #69431: <==unclosure== 83838 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #79033: <==negation-removal== 18890 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #83838: <==uncertain_firing== 82974 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p9_p0011
        :precondition (and (succ_p9_p0011)
                           (at_a_p9))
        :effect (and
                    ; #14996: <==closure== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #24856: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #32188: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #56162: <==closure== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #17970: <==uncertain_firing== 24856 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #24626: <==unclosure== 17970 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #29587: <==negation-removal== 32188 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #34041: <==negation-removal== 56162 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #85434: <==negation-removal== 24856 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #87136: <==negation-removal== 14996 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))))

    (:action sensecells_a_p9_p012
        :precondition (and (succ_p9_p012)
                           (at_a_p9))
        :effect (and
                    ; #10744: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #58708: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #63531: <==closure== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #81515: <==closure== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13895: <==negation-removal== 63531 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #37571: <==negation-removal== 81515 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #45365: <==negation-removal== 10744 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #45894: <==unclosure== 84408 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #67470: <==negation-removal== 58708 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #84408: <==uncertain_firing== 10744 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p9_p1
        :precondition (and (at_a_p9)
                           (succ_p9_p1))
        :effect (and
                    ; #17044: <==closure== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #26955: <==closure== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #44035: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #63110: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #18777: <==negation-removal== 26955 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #38421: <==unclosure== 96394 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #47970: <==negation-removal== 17044 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #50174: <==negation-removal== 44035 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #54656: <==negation-removal== 63110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #96394: <==uncertain_firing== 63110 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p9_p10
        :precondition (and (at_a_p9)
                           (succ_p9_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #41834: <==closure== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #44800: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #64495: <==closure== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #69715: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20169: <==uncertain_firing== 44800 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #42862: <==negation-removal== 44800 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #44793: <==unclosure== 20169 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #54197: <==negation-removal== 41834 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #67382: <==negation-removal== 64495 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #75080: <==negation-removal== 69715 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))))

    (:action sensecells_a_p9_p2
        :precondition (and (succ_p9_p2)
                           (at_a_p9))
        :effect (and
                    ; #40258: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #47990: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #51814: <==closure== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #73948: <==closure== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #26938: <==uncertain_firing== 40258 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #27335: <==negation-removal== 73948 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #44618: <==negation-removal== 40258 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #53916: <==negation-removal== 51814 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #56819: <==negation-removal== 47990 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #57834: <==unclosure== 26938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p9_p3
        :precondition (and (succ_p9_p3)
                           (at_a_p9))
        :effect (and
                    ; #18796: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #39682: <==closure== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #46147: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #66492: <==closure== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #47789: <==negation-removal== 46147 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #55640: <==unclosure== 66236 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #66236: <==uncertain_firing== 46147 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #71476: <==negation-removal== 18796 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #81830: <==negation-removal== 66492 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #90670: <==negation-removal== 39682 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))))

    (:action sensecells_a_p9_p4
        :precondition (and (at_a_p9)
                           (succ_p9_p4))
        :effect (and
                    ; #15758: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #42289: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #51911: <==closure== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #84700: <==closure== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #10342: <==negation-removal== 51911 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #13940: <==negation-removal== 84700 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #32311: <==negation-removal== 15758 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #67132: <==negation-removal== 42289 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #76002: <==uncertain_firing== 42289 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #80254: <==unclosure== 76002 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p9_p5
        :precondition (and (at_a_p9)
                           (succ_p9_p5))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #29825: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #55782: <==closure== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #67983: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #80377: <==closure== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #37608: <==negation-removal== 29825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #43407: <==uncertain_firing== 67983 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #51415: <==negation-removal== 80377 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #85079: <==negation-removal== 55782 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #88361: <==unclosure== 43407 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #89462: <==negation-removal== 67983 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))))

    (:action sensecells_a_p9_p6
        :precondition (and (succ_p9_p6)
                           (at_a_p9))
        :effect (and
                    ; #40043: <==closure== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #47491: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #67251: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #83005: <==closure== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #23195: <==unclosure== 96113 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #37136: <==negation-removal== 83005 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #38004: <==negation-removal== 47491 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #56569: <==negation-removal== 40043 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #84609: <==negation-removal== 67251 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))

                    ; #96113: <==uncertain_firing== 67251 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p9_p7
        :precondition (and (at_a_p9)
                           (succ_p9_p7))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #28700: <==closure== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #29123: <==closure== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #40466: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #53092: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #15440: <==uncertain_firing== 40466 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #20356: <==negation-removal== 40466 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56189: <==negation-removal== 29123 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #63211: <==negation-removal== 28700 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #73644: <==unclosure== 15440 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #87592: <==negation-removal== 53092 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p9_p8
        :precondition (and (succ_p9_p8)
                           (at_a_p9))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #47358: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #55321: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #70171: <==closure== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #82086: <==closure== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #18680: <==negation-removal== 47358 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #19017: <==negation-removal== 82086 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #27382: <==unclosure== 62026 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #62026: <==uncertain_firing== 55321 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #70901: <==negation-removal== 55321 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #71995: <==negation-removal== 70171 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p9_p9
        :precondition (and (at_a_p9)
                           (succ_p9_p9))
        :effect (and
                    ; #18890: <==closure== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #59111: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #82974: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #86804: <==closure== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #36447: <==negation-removal== 82974 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #39780: <==negation-removal== 86804 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #52945: <==negation-removal== 59111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #69431: <==unclosure== 83838 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #79033: <==negation-removal== 18890 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #83838: <==uncertain_firing== 82974 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_b_p0011_p0011
        :precondition (and (at_b_p0011)
                           (succ_p0011_p0011))
        :effect (and
                    ; #13579: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #49290: <==closure== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #80838: <==closure== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #88815: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #14435: <==negation-removal== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #29310: <==negation-removal== 49290 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #55487: <==uncertain_firing== 88815 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #62695: <==negation-removal== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #80796: <==negation-removal== 80838 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #87653: <==unclosure== 55487 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p0011_p012
        :precondition (and (at_b_p0011)
                           (succ_p0011_p012))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #44241: <==closure== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #71237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #76225: <==closure== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87420: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13855: <==negation-removal== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #19801: <==negation-removal== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #54578: <==unclosure== 71956 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #59015: <==negation-removal== 76225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #71956: <==uncertain_firing== 71237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #85735: <==negation-removal== 44241 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))))

    (:action sensecells_b_p0011_p1
        :precondition (and (at_b_p0011)
                           (succ_p0011_p1))
        :effect (and
                    ; #57471: <==closure== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #59782: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #60676: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #67231: <==closure== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #13251: <==negation-removal== 67231 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19237: <==negation-removal== 57471 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #19447: <==negation-removal== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #21607: <==negation-removal== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #45728: <==unclosure== 92188 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #92188: <==uncertain_firing== 60676 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p0011_p10
        :precondition (and (at_b_p0011)
                           (succ_p0011_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #12478: <==closure== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #44889: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #57181: <==closure== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #68217: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #18927: <==negation-removal== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #32916: <==unclosure== 84600 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37966: <==negation-removal== 57181 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #76264: <==negation-removal== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79841: <==negation-removal== 12478 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84600: <==uncertain_firing== 44889 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))))

    (:action sensecells_b_p0011_p2
        :precondition (and (at_b_p0011)
                           (succ_p0011_p2))
        :effect (and
                    ; #17672: <==closure== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #30351: <==closure== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #58423: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #88868: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #13594: <==negation-removal== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #49385: <==negation-removal== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #61854: <==unclosure== 79685 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #72798: <==negation-removal== 30351 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #79685: <==uncertain_firing== 88868 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #85629: <==negation-removal== 17672 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p0011_p3
        :precondition (and (at_b_p0011)
                           (succ_p0011_p3))
        :effect (and
                    ; #16525: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #35032: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #69451: <==closure== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #87979: <==closure== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #29354: <==negation-removal== 87979 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #36792: <==negation-removal== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #59851: <==negation-removal== 69451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #62660: <==unclosure== 76018 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #63210: <==negation-removal== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #76018: <==uncertain_firing== 16525 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p0011_p4
        :precondition (and (at_b_p0011)
                           (succ_p0011_p4))
        :effect (and
                    ; #16189: <==closure== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #33760: <==closure== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #77716: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #83322: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #11615: <==negation-removal== 16189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18929: <==unclosure== 34025 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #34025: <==uncertain_firing== 83322 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #54201: <==negation-removal== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #69274: <==negation-removal== 33760 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #82011: <==negation-removal== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))))

    (:action sensecells_b_p0011_p5
        :precondition (and (at_b_p0011)
                           (succ_p0011_p5))
        :effect (and
                    ; #13935: <==closure== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #30295: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #44907: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64771: <==closure== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #22493: <==negation-removal== 64771 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #22776: <==uncertain_firing== 30295 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #36435: <==unclosure== 22776 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #39246: <==negation-removal== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #62570: <==negation-removal== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #87462: <==negation-removal== 13935 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))))

    (:action sensecells_b_p0011_p6
        :precondition (and (at_b_p0011)
                           (succ_p0011_p6))
        :effect (and
                    ; #18661: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #24247: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #30673: <==closure== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #47806: <==closure== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #10281: <==negation-removal== 30673 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #19828: <==negation-removal== 47806 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #22170: <==negation-removal== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #41718: <==uncertain_firing== 24247 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #62824: <==unclosure== 41718 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #78372: <==negation-removal== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_b_p0011_p7
        :precondition (and (at_b_p0011)
                           (succ_p0011_p7))
        :effect (and
                    ; #10291: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #54934: <==closure== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #88227: <==closure== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #90145: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #12248: <==unclosure== 70246 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #36010: <==negation-removal== 54934 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #43507: <==negation-removal== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #70246: <==uncertain_firing== 10291 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #77275: <==negation-removal== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #80604: <==negation-removal== 88227 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p0011_p8
        :precondition (and (at_b_p0011)
                           (succ_p0011_p8))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #53035: <==closure== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #70096: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #74844: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #83038: <==closure== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #10691: <==negation-removal== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #26384: <==unclosure== 34853 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #28488: <==negation-removal== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #34853: <==uncertain_firing== 74844 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #35974: <==negation-removal== 83038 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #98791: <==negation-removal== 53035 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p0011_p9
        :precondition (and (at_b_p0011)
                           (succ_p0011_p9))
        :effect (and
                    ; #14079: <==closure== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #46811: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #87166: <==closure== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #88003: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #41125: <==unclosure== 78716 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #48768: <==negation-removal== 87166 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #56398: <==negation-removal== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66655: <==negation-removal== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #78716: <==uncertain_firing== 46811 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #86043: <==negation-removal== 14079 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_b_p012_p0011
        :precondition (and (succ_p012_p0011)
                           (at_b_p012))
        :effect (and
                    ; #13579: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #49290: <==closure== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #80838: <==closure== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #88815: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #14435: <==negation-removal== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #29310: <==negation-removal== 49290 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #55487: <==uncertain_firing== 88815 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #62695: <==negation-removal== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #80796: <==negation-removal== 80838 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #87653: <==unclosure== 55487 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p012_p012
        :precondition (and (succ_p012_p012)
                           (at_b_p012))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #44241: <==closure== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #71237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #76225: <==closure== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87420: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13855: <==negation-removal== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #19801: <==negation-removal== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #54578: <==unclosure== 71956 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #59015: <==negation-removal== 76225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #71956: <==uncertain_firing== 71237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #85735: <==negation-removal== 44241 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))))

    (:action sensecells_b_p012_p1
        :precondition (and (succ_p012_p1)
                           (at_b_p012))
        :effect (and
                    ; #57471: <==closure== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #59782: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #60676: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #67231: <==closure== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #13251: <==negation-removal== 67231 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19237: <==negation-removal== 57471 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #19447: <==negation-removal== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #21607: <==negation-removal== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #45728: <==unclosure== 92188 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #92188: <==uncertain_firing== 60676 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p012_p10
        :precondition (and (succ_p012_p10)
                           (at_b_p012))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #12478: <==closure== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #44889: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #57181: <==closure== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #68217: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #18927: <==negation-removal== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #32916: <==unclosure== 84600 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37966: <==negation-removal== 57181 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #76264: <==negation-removal== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79841: <==negation-removal== 12478 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84600: <==uncertain_firing== 44889 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))))

    (:action sensecells_b_p012_p2
        :precondition (and (succ_p012_p2)
                           (at_b_p012))
        :effect (and
                    ; #17672: <==closure== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #30351: <==closure== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #58423: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #88868: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #13594: <==negation-removal== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #49385: <==negation-removal== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #61854: <==unclosure== 79685 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #72798: <==negation-removal== 30351 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #79685: <==uncertain_firing== 88868 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #85629: <==negation-removal== 17672 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p012_p3
        :precondition (and (succ_p012_p3)
                           (at_b_p012))
        :effect (and
                    ; #16525: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #35032: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #69451: <==closure== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #87979: <==closure== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #29354: <==negation-removal== 87979 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #36792: <==negation-removal== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #59851: <==negation-removal== 69451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #62660: <==unclosure== 76018 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #63210: <==negation-removal== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #76018: <==uncertain_firing== 16525 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p012_p4
        :precondition (and (succ_p012_p4)
                           (at_b_p012))
        :effect (and
                    ; #16189: <==closure== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #33760: <==closure== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #77716: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #83322: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #11615: <==negation-removal== 16189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18929: <==unclosure== 34025 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #34025: <==uncertain_firing== 83322 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #54201: <==negation-removal== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #69274: <==negation-removal== 33760 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #82011: <==negation-removal== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))))

    (:action sensecells_b_p012_p5
        :precondition (and (succ_p012_p5)
                           (at_b_p012))
        :effect (and
                    ; #13935: <==closure== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #30295: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #44907: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64771: <==closure== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #22493: <==negation-removal== 64771 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #22776: <==uncertain_firing== 30295 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #36435: <==unclosure== 22776 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #39246: <==negation-removal== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #62570: <==negation-removal== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #87462: <==negation-removal== 13935 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))))

    (:action sensecells_b_p012_p6
        :precondition (and (succ_p012_p6)
                           (at_b_p012))
        :effect (and
                    ; #18661: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #24247: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #30673: <==closure== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #47806: <==closure== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #10281: <==negation-removal== 30673 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #19828: <==negation-removal== 47806 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #22170: <==negation-removal== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #41718: <==uncertain_firing== 24247 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #62824: <==unclosure== 41718 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #78372: <==negation-removal== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_b_p012_p7
        :precondition (and (succ_p012_p7)
                           (at_b_p012))
        :effect (and
                    ; #10291: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #54934: <==closure== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #88227: <==closure== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #90145: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #12248: <==unclosure== 70246 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #36010: <==negation-removal== 54934 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #43507: <==negation-removal== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #70246: <==uncertain_firing== 10291 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #77275: <==negation-removal== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #80604: <==negation-removal== 88227 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p012_p8
        :precondition (and (succ_p012_p8)
                           (at_b_p012))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #53035: <==closure== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #70096: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #74844: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #83038: <==closure== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #10691: <==negation-removal== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #26384: <==unclosure== 34853 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #28488: <==negation-removal== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #34853: <==uncertain_firing== 74844 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #35974: <==negation-removal== 83038 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #98791: <==negation-removal== 53035 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p012_p9
        :precondition (and (succ_p012_p9)
                           (at_b_p012))
        :effect (and
                    ; #14079: <==closure== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #46811: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #87166: <==closure== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #88003: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #41125: <==unclosure== 78716 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #48768: <==negation-removal== 87166 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #56398: <==negation-removal== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66655: <==negation-removal== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #78716: <==uncertain_firing== 46811 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #86043: <==negation-removal== 14079 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_b_p10_p0011
        :precondition (and (succ_p10_p0011)
                           (at_b_p10))
        :effect (and
                    ; #13579: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #49290: <==closure== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #80838: <==closure== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #88815: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #14435: <==negation-removal== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #29310: <==negation-removal== 49290 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #55487: <==uncertain_firing== 88815 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #62695: <==negation-removal== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #80796: <==negation-removal== 80838 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #87653: <==unclosure== 55487 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p10_p012
        :precondition (and (succ_p10_p012)
                           (at_b_p10))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #44241: <==closure== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #71237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #76225: <==closure== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87420: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13855: <==negation-removal== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #19801: <==negation-removal== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #54578: <==unclosure== 71956 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #59015: <==negation-removal== 76225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #71956: <==uncertain_firing== 71237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #85735: <==negation-removal== 44241 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))))

    (:action sensecells_b_p10_p1
        :precondition (and (at_b_p10)
                           (succ_p10_p1))
        :effect (and
                    ; #57471: <==closure== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #59782: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #60676: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #67231: <==closure== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #13251: <==negation-removal== 67231 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19237: <==negation-removal== 57471 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #19447: <==negation-removal== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #21607: <==negation-removal== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #45728: <==unclosure== 92188 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #92188: <==uncertain_firing== 60676 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p10_p10
        :precondition (and (succ_p10_p10)
                           (at_b_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #12478: <==closure== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #44889: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #57181: <==closure== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #68217: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #18927: <==negation-removal== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #32916: <==unclosure== 84600 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37966: <==negation-removal== 57181 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #76264: <==negation-removal== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79841: <==negation-removal== 12478 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84600: <==uncertain_firing== 44889 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))))

    (:action sensecells_b_p10_p2
        :precondition (and (succ_p10_p2)
                           (at_b_p10))
        :effect (and
                    ; #17672: <==closure== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #30351: <==closure== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #58423: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #88868: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #13594: <==negation-removal== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #49385: <==negation-removal== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #61854: <==unclosure== 79685 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #72798: <==negation-removal== 30351 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #79685: <==uncertain_firing== 88868 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #85629: <==negation-removal== 17672 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p10_p3
        :precondition (and (succ_p10_p3)
                           (at_b_p10))
        :effect (and
                    ; #16525: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #35032: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #69451: <==closure== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #87979: <==closure== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #29354: <==negation-removal== 87979 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #36792: <==negation-removal== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #59851: <==negation-removal== 69451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #62660: <==unclosure== 76018 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #63210: <==negation-removal== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #76018: <==uncertain_firing== 16525 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p10_p4
        :precondition (and (at_b_p10)
                           (succ_p10_p4))
        :effect (and
                    ; #16189: <==closure== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #33760: <==closure== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #77716: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #83322: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #11615: <==negation-removal== 16189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18929: <==unclosure== 34025 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #34025: <==uncertain_firing== 83322 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #54201: <==negation-removal== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #69274: <==negation-removal== 33760 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #82011: <==negation-removal== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))))

    (:action sensecells_b_p10_p5
        :precondition (and (succ_p10_p5)
                           (at_b_p10))
        :effect (and
                    ; #13935: <==closure== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #30295: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #44907: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64771: <==closure== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #22493: <==negation-removal== 64771 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #22776: <==uncertain_firing== 30295 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #36435: <==unclosure== 22776 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #39246: <==negation-removal== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #62570: <==negation-removal== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #87462: <==negation-removal== 13935 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))))

    (:action sensecells_b_p10_p6
        :precondition (and (at_b_p10)
                           (succ_p10_p6))
        :effect (and
                    ; #18661: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #24247: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #30673: <==closure== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #47806: <==closure== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #10281: <==negation-removal== 30673 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #19828: <==negation-removal== 47806 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #22170: <==negation-removal== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #41718: <==uncertain_firing== 24247 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #62824: <==unclosure== 41718 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #78372: <==negation-removal== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_b_p10_p7
        :precondition (and (succ_p10_p7)
                           (at_b_p10))
        :effect (and
                    ; #10291: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #54934: <==closure== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #88227: <==closure== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #90145: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #12248: <==unclosure== 70246 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #36010: <==negation-removal== 54934 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #43507: <==negation-removal== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #70246: <==uncertain_firing== 10291 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #77275: <==negation-removal== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #80604: <==negation-removal== 88227 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p10_p8
        :precondition (and (succ_p10_p8)
                           (at_b_p10))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #53035: <==closure== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #70096: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #74844: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #83038: <==closure== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #10691: <==negation-removal== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #26384: <==unclosure== 34853 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #28488: <==negation-removal== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #34853: <==uncertain_firing== 74844 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #35974: <==negation-removal== 83038 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #98791: <==negation-removal== 53035 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p10_p9
        :precondition (and (succ_p10_p9)
                           (at_b_p10))
        :effect (and
                    ; #14079: <==closure== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #46811: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #87166: <==closure== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #88003: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #41125: <==unclosure== 78716 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #48768: <==negation-removal== 87166 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #56398: <==negation-removal== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66655: <==negation-removal== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #78716: <==uncertain_firing== 46811 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #86043: <==negation-removal== 14079 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_b_p1_p0011
        :precondition (and (at_b_p1)
                           (succ_p1_p0011))
        :effect (and
                    ; #13579: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #49290: <==closure== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #80838: <==closure== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #88815: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #14435: <==negation-removal== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #29310: <==negation-removal== 49290 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #55487: <==uncertain_firing== 88815 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #62695: <==negation-removal== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #80796: <==negation-removal== 80838 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #87653: <==unclosure== 55487 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p1_p012
        :precondition (and (succ_p1_p012)
                           (at_b_p1))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #44241: <==closure== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #71237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #76225: <==closure== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87420: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13855: <==negation-removal== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #19801: <==negation-removal== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #54578: <==unclosure== 71956 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #59015: <==negation-removal== 76225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #71956: <==uncertain_firing== 71237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #85735: <==negation-removal== 44241 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))))

    (:action sensecells_b_p1_p1
        :precondition (and (succ_p1_p1)
                           (at_b_p1))
        :effect (and
                    ; #57471: <==closure== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #59782: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #60676: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #67231: <==closure== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #13251: <==negation-removal== 67231 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19237: <==negation-removal== 57471 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #19447: <==negation-removal== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #21607: <==negation-removal== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #45728: <==unclosure== 92188 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #92188: <==uncertain_firing== 60676 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p1_p10
        :precondition (and (succ_p1_p10)
                           (at_b_p1))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #12478: <==closure== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #44889: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #57181: <==closure== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #68217: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #18927: <==negation-removal== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #32916: <==unclosure== 84600 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37966: <==negation-removal== 57181 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #76264: <==negation-removal== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79841: <==negation-removal== 12478 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84600: <==uncertain_firing== 44889 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))))

    (:action sensecells_b_p1_p2
        :precondition (and (at_b_p1)
                           (succ_p1_p2))
        :effect (and
                    ; #17672: <==closure== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #30351: <==closure== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #58423: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #88868: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #13594: <==negation-removal== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #49385: <==negation-removal== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #61854: <==unclosure== 79685 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #72798: <==negation-removal== 30351 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #79685: <==uncertain_firing== 88868 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #85629: <==negation-removal== 17672 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p1_p3
        :precondition (and (succ_p1_p3)
                           (at_b_p1))
        :effect (and
                    ; #16525: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #35032: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #69451: <==closure== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #87979: <==closure== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #29354: <==negation-removal== 87979 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #36792: <==negation-removal== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #59851: <==negation-removal== 69451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #62660: <==unclosure== 76018 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #63210: <==negation-removal== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #76018: <==uncertain_firing== 16525 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p1_p4
        :precondition (and (succ_p1_p4)
                           (at_b_p1))
        :effect (and
                    ; #16189: <==closure== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #33760: <==closure== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #77716: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #83322: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #11615: <==negation-removal== 16189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18929: <==unclosure== 34025 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #34025: <==uncertain_firing== 83322 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #54201: <==negation-removal== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #69274: <==negation-removal== 33760 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #82011: <==negation-removal== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))))

    (:action sensecells_b_p1_p5
        :precondition (and (succ_p1_p5)
                           (at_b_p1))
        :effect (and
                    ; #13935: <==closure== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #30295: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #44907: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64771: <==closure== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #22493: <==negation-removal== 64771 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #22776: <==uncertain_firing== 30295 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #36435: <==unclosure== 22776 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #39246: <==negation-removal== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #62570: <==negation-removal== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #87462: <==negation-removal== 13935 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))))

    (:action sensecells_b_p1_p6
        :precondition (and (succ_p1_p6)
                           (at_b_p1))
        :effect (and
                    ; #18661: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #24247: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #30673: <==closure== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #47806: <==closure== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #10281: <==negation-removal== 30673 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #19828: <==negation-removal== 47806 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #22170: <==negation-removal== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #41718: <==uncertain_firing== 24247 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #62824: <==unclosure== 41718 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #78372: <==negation-removal== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_b_p1_p7
        :precondition (and (succ_p1_p7)
                           (at_b_p1))
        :effect (and
                    ; #10291: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #54934: <==closure== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #88227: <==closure== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #90145: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #12248: <==unclosure== 70246 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #36010: <==negation-removal== 54934 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #43507: <==negation-removal== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #70246: <==uncertain_firing== 10291 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #77275: <==negation-removal== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #80604: <==negation-removal== 88227 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p1_p8
        :precondition (and (succ_p1_p8)
                           (at_b_p1))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #53035: <==closure== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #70096: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #74844: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #83038: <==closure== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #10691: <==negation-removal== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #26384: <==unclosure== 34853 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #28488: <==negation-removal== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #34853: <==uncertain_firing== 74844 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #35974: <==negation-removal== 83038 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #98791: <==negation-removal== 53035 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p1_p9
        :precondition (and (at_b_p1)
                           (succ_p1_p9))
        :effect (and
                    ; #14079: <==closure== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #46811: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #87166: <==closure== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #88003: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #41125: <==unclosure== 78716 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #48768: <==negation-removal== 87166 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #56398: <==negation-removal== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66655: <==negation-removal== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #78716: <==uncertain_firing== 46811 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #86043: <==negation-removal== 14079 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_b_p2_p0011
        :precondition (and (succ_p2_p0011)
                           (at_b_p2))
        :effect (and
                    ; #13579: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #49290: <==closure== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #80838: <==closure== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #88815: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #14435: <==negation-removal== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #29310: <==negation-removal== 49290 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #55487: <==uncertain_firing== 88815 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #62695: <==negation-removal== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #80796: <==negation-removal== 80838 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #87653: <==unclosure== 55487 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p2_p012
        :precondition (and (succ_p2_p012)
                           (at_b_p2))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #44241: <==closure== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #71237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #76225: <==closure== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87420: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13855: <==negation-removal== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #19801: <==negation-removal== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #54578: <==unclosure== 71956 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #59015: <==negation-removal== 76225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #71956: <==uncertain_firing== 71237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #85735: <==negation-removal== 44241 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))))

    (:action sensecells_b_p2_p1
        :precondition (and (succ_p2_p1)
                           (at_b_p2))
        :effect (and
                    ; #57471: <==closure== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #59782: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #60676: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #67231: <==closure== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #13251: <==negation-removal== 67231 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19237: <==negation-removal== 57471 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #19447: <==negation-removal== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #21607: <==negation-removal== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #45728: <==unclosure== 92188 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #92188: <==uncertain_firing== 60676 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p2_p10
        :precondition (and (at_b_p2)
                           (succ_p2_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #12478: <==closure== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #44889: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #57181: <==closure== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #68217: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #18927: <==negation-removal== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #32916: <==unclosure== 84600 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37966: <==negation-removal== 57181 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #76264: <==negation-removal== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79841: <==negation-removal== 12478 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84600: <==uncertain_firing== 44889 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))))

    (:action sensecells_b_p2_p2
        :precondition (and (at_b_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #17672: <==closure== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #30351: <==closure== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #58423: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #88868: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #13594: <==negation-removal== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #49385: <==negation-removal== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #61854: <==unclosure== 79685 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #72798: <==negation-removal== 30351 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #79685: <==uncertain_firing== 88868 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #85629: <==negation-removal== 17672 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p2_p3
        :precondition (and (at_b_p2)
                           (succ_p2_p3))
        :effect (and
                    ; #16525: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #35032: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #69451: <==closure== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #87979: <==closure== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #29354: <==negation-removal== 87979 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #36792: <==negation-removal== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #59851: <==negation-removal== 69451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #62660: <==unclosure== 76018 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #63210: <==negation-removal== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #76018: <==uncertain_firing== 16525 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p2_p4
        :precondition (and (succ_p2_p4)
                           (at_b_p2))
        :effect (and
                    ; #16189: <==closure== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #33760: <==closure== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #77716: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #83322: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #11615: <==negation-removal== 16189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18929: <==unclosure== 34025 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #34025: <==uncertain_firing== 83322 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #54201: <==negation-removal== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #69274: <==negation-removal== 33760 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #82011: <==negation-removal== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))))

    (:action sensecells_b_p2_p5
        :precondition (and (at_b_p2)
                           (succ_p2_p5))
        :effect (and
                    ; #13935: <==closure== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #30295: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #44907: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64771: <==closure== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #22493: <==negation-removal== 64771 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #22776: <==uncertain_firing== 30295 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #36435: <==unclosure== 22776 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #39246: <==negation-removal== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #62570: <==negation-removal== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #87462: <==negation-removal== 13935 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))))

    (:action sensecells_b_p2_p6
        :precondition (and (at_b_p2)
                           (succ_p2_p6))
        :effect (and
                    ; #18661: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #24247: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #30673: <==closure== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #47806: <==closure== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #10281: <==negation-removal== 30673 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #19828: <==negation-removal== 47806 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #22170: <==negation-removal== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #41718: <==uncertain_firing== 24247 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #62824: <==unclosure== 41718 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #78372: <==negation-removal== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_b_p2_p7
        :precondition (and (at_b_p2)
                           (succ_p2_p7))
        :effect (and
                    ; #10291: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #54934: <==closure== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #88227: <==closure== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #90145: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #12248: <==unclosure== 70246 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #36010: <==negation-removal== 54934 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #43507: <==negation-removal== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #70246: <==uncertain_firing== 10291 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #77275: <==negation-removal== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #80604: <==negation-removal== 88227 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p2_p8
        :precondition (and (at_b_p2)
                           (succ_p2_p8))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #53035: <==closure== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #70096: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #74844: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #83038: <==closure== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #10691: <==negation-removal== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #26384: <==unclosure== 34853 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #28488: <==negation-removal== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #34853: <==uncertain_firing== 74844 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #35974: <==negation-removal== 83038 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #98791: <==negation-removal== 53035 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p2_p9
        :precondition (and (succ_p2_p9)
                           (at_b_p2))
        :effect (and
                    ; #14079: <==closure== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #46811: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #87166: <==closure== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #88003: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #41125: <==unclosure== 78716 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #48768: <==negation-removal== 87166 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #56398: <==negation-removal== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66655: <==negation-removal== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #78716: <==uncertain_firing== 46811 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #86043: <==negation-removal== 14079 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_b_p3_p0011
        :precondition (and (succ_p3_p0011)
                           (at_b_p3))
        :effect (and
                    ; #13579: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #49290: <==closure== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #80838: <==closure== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #88815: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #14435: <==negation-removal== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #29310: <==negation-removal== 49290 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #55487: <==uncertain_firing== 88815 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #62695: <==negation-removal== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #80796: <==negation-removal== 80838 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #87653: <==unclosure== 55487 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p3_p012
        :precondition (and (at_b_p3)
                           (succ_p3_p012))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #44241: <==closure== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #71237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #76225: <==closure== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87420: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13855: <==negation-removal== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #19801: <==negation-removal== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #54578: <==unclosure== 71956 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #59015: <==negation-removal== 76225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #71956: <==uncertain_firing== 71237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #85735: <==negation-removal== 44241 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))))

    (:action sensecells_b_p3_p1
        :precondition (and (at_b_p3)
                           (succ_p3_p1))
        :effect (and
                    ; #57471: <==closure== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #59782: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #60676: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #67231: <==closure== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #13251: <==negation-removal== 67231 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19237: <==negation-removal== 57471 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #19447: <==negation-removal== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #21607: <==negation-removal== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #45728: <==unclosure== 92188 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #92188: <==uncertain_firing== 60676 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p3_p10
        :precondition (and (at_b_p3)
                           (succ_p3_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #12478: <==closure== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #44889: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #57181: <==closure== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #68217: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #18927: <==negation-removal== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #32916: <==unclosure== 84600 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37966: <==negation-removal== 57181 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #76264: <==negation-removal== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79841: <==negation-removal== 12478 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84600: <==uncertain_firing== 44889 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))))

    (:action sensecells_b_p3_p2
        :precondition (and (at_b_p3)
                           (succ_p3_p2))
        :effect (and
                    ; #17672: <==closure== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #30351: <==closure== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #58423: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #88868: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #13594: <==negation-removal== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #49385: <==negation-removal== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #61854: <==unclosure== 79685 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #72798: <==negation-removal== 30351 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #79685: <==uncertain_firing== 88868 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #85629: <==negation-removal== 17672 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p3_p3
        :precondition (and (succ_p3_p3)
                           (at_b_p3))
        :effect (and
                    ; #16525: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #35032: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #69451: <==closure== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #87979: <==closure== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #29354: <==negation-removal== 87979 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #36792: <==negation-removal== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #59851: <==negation-removal== 69451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #62660: <==unclosure== 76018 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #63210: <==negation-removal== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #76018: <==uncertain_firing== 16525 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p3_p4
        :precondition (and (at_b_p3)
                           (succ_p3_p4))
        :effect (and
                    ; #16189: <==closure== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #33760: <==closure== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #77716: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #83322: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #11615: <==negation-removal== 16189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18929: <==unclosure== 34025 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #34025: <==uncertain_firing== 83322 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #54201: <==negation-removal== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #69274: <==negation-removal== 33760 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #82011: <==negation-removal== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))))

    (:action sensecells_b_p3_p5
        :precondition (and (succ_p3_p5)
                           (at_b_p3))
        :effect (and
                    ; #13935: <==closure== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #30295: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #44907: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64771: <==closure== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #22493: <==negation-removal== 64771 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #22776: <==uncertain_firing== 30295 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #36435: <==unclosure== 22776 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #39246: <==negation-removal== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #62570: <==negation-removal== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #87462: <==negation-removal== 13935 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))))

    (:action sensecells_b_p3_p6
        :precondition (and (at_b_p3)
                           (succ_p3_p6))
        :effect (and
                    ; #18661: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #24247: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #30673: <==closure== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #47806: <==closure== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #10281: <==negation-removal== 30673 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #19828: <==negation-removal== 47806 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #22170: <==negation-removal== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #41718: <==uncertain_firing== 24247 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #62824: <==unclosure== 41718 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #78372: <==negation-removal== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_b_p3_p7
        :precondition (and (succ_p3_p7)
                           (at_b_p3))
        :effect (and
                    ; #10291: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #54934: <==closure== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #88227: <==closure== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #90145: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #12248: <==unclosure== 70246 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #36010: <==negation-removal== 54934 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #43507: <==negation-removal== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #70246: <==uncertain_firing== 10291 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #77275: <==negation-removal== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #80604: <==negation-removal== 88227 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p3_p8
        :precondition (and (at_b_p3)
                           (succ_p3_p8))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #53035: <==closure== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #70096: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #74844: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #83038: <==closure== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #10691: <==negation-removal== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #26384: <==unclosure== 34853 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #28488: <==negation-removal== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #34853: <==uncertain_firing== 74844 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #35974: <==negation-removal== 83038 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #98791: <==negation-removal== 53035 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p3_p9
        :precondition (and (at_b_p3)
                           (succ_p3_p9))
        :effect (and
                    ; #14079: <==closure== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #46811: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #87166: <==closure== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #88003: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #41125: <==unclosure== 78716 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #48768: <==negation-removal== 87166 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #56398: <==negation-removal== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66655: <==negation-removal== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #78716: <==uncertain_firing== 46811 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #86043: <==negation-removal== 14079 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_b_p4_p0011
        :precondition (and (succ_p4_p0011)
                           (at_b_p4))
        :effect (and
                    ; #13579: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #49290: <==closure== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #80838: <==closure== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #88815: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #14435: <==negation-removal== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #29310: <==negation-removal== 49290 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #55487: <==uncertain_firing== 88815 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #62695: <==negation-removal== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #80796: <==negation-removal== 80838 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #87653: <==unclosure== 55487 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p4_p012
        :precondition (and (succ_p4_p012)
                           (at_b_p4))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #44241: <==closure== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #71237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #76225: <==closure== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87420: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13855: <==negation-removal== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #19801: <==negation-removal== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #54578: <==unclosure== 71956 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #59015: <==negation-removal== 76225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #71956: <==uncertain_firing== 71237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #85735: <==negation-removal== 44241 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))))

    (:action sensecells_b_p4_p1
        :precondition (and (succ_p4_p1)
                           (at_b_p4))
        :effect (and
                    ; #57471: <==closure== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #59782: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #60676: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #67231: <==closure== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #13251: <==negation-removal== 67231 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19237: <==negation-removal== 57471 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #19447: <==negation-removal== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #21607: <==negation-removal== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #45728: <==unclosure== 92188 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #92188: <==uncertain_firing== 60676 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p4_p10
        :precondition (and (succ_p4_p10)
                           (at_b_p4))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #12478: <==closure== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #44889: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #57181: <==closure== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #68217: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #18927: <==negation-removal== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #32916: <==unclosure== 84600 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37966: <==negation-removal== 57181 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #76264: <==negation-removal== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79841: <==negation-removal== 12478 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84600: <==uncertain_firing== 44889 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))))

    (:action sensecells_b_p4_p2
        :precondition (and (succ_p4_p2)
                           (at_b_p4))
        :effect (and
                    ; #17672: <==closure== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #30351: <==closure== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #58423: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #88868: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #13594: <==negation-removal== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #49385: <==negation-removal== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #61854: <==unclosure== 79685 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #72798: <==negation-removal== 30351 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #79685: <==uncertain_firing== 88868 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #85629: <==negation-removal== 17672 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p4_p3
        :precondition (and (succ_p4_p3)
                           (at_b_p4))
        :effect (and
                    ; #16525: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #35032: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #69451: <==closure== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #87979: <==closure== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #29354: <==negation-removal== 87979 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #36792: <==negation-removal== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #59851: <==negation-removal== 69451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #62660: <==unclosure== 76018 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #63210: <==negation-removal== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #76018: <==uncertain_firing== 16525 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p4_p4
        :precondition (and (succ_p4_p4)
                           (at_b_p4))
        :effect (and
                    ; #16189: <==closure== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #33760: <==closure== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #77716: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #83322: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #11615: <==negation-removal== 16189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18929: <==unclosure== 34025 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #34025: <==uncertain_firing== 83322 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #54201: <==negation-removal== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #69274: <==negation-removal== 33760 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #82011: <==negation-removal== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))))

    (:action sensecells_b_p4_p5
        :precondition (and (succ_p4_p5)
                           (at_b_p4))
        :effect (and
                    ; #13935: <==closure== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #30295: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #44907: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64771: <==closure== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #22493: <==negation-removal== 64771 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #22776: <==uncertain_firing== 30295 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #36435: <==unclosure== 22776 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #39246: <==negation-removal== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #62570: <==negation-removal== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #87462: <==negation-removal== 13935 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))))

    (:action sensecells_b_p4_p6
        :precondition (and (succ_p4_p6)
                           (at_b_p4))
        :effect (and
                    ; #18661: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #24247: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #30673: <==closure== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #47806: <==closure== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #10281: <==negation-removal== 30673 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #19828: <==negation-removal== 47806 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #22170: <==negation-removal== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #41718: <==uncertain_firing== 24247 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #62824: <==unclosure== 41718 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #78372: <==negation-removal== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_b_p4_p7
        :precondition (and (succ_p4_p7)
                           (at_b_p4))
        :effect (and
                    ; #10291: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #54934: <==closure== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #88227: <==closure== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #90145: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #12248: <==unclosure== 70246 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #36010: <==negation-removal== 54934 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #43507: <==negation-removal== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #70246: <==uncertain_firing== 10291 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #77275: <==negation-removal== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #80604: <==negation-removal== 88227 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p4_p8
        :precondition (and (succ_p4_p8)
                           (at_b_p4))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #53035: <==closure== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #70096: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #74844: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #83038: <==closure== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #10691: <==negation-removal== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #26384: <==unclosure== 34853 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #28488: <==negation-removal== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #34853: <==uncertain_firing== 74844 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #35974: <==negation-removal== 83038 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #98791: <==negation-removal== 53035 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p4_p9
        :precondition (and (succ_p4_p9)
                           (at_b_p4))
        :effect (and
                    ; #14079: <==closure== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #46811: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #87166: <==closure== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #88003: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #41125: <==unclosure== 78716 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #48768: <==negation-removal== 87166 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #56398: <==negation-removal== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66655: <==negation-removal== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #78716: <==uncertain_firing== 46811 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #86043: <==negation-removal== 14079 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_b_p5_p0011
        :precondition (and (succ_p5_p0011)
                           (at_b_p5))
        :effect (and
                    ; #13579: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #49290: <==closure== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #80838: <==closure== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #88815: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #14435: <==negation-removal== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #29310: <==negation-removal== 49290 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #55487: <==uncertain_firing== 88815 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #62695: <==negation-removal== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #80796: <==negation-removal== 80838 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #87653: <==unclosure== 55487 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p5_p012
        :precondition (and (at_b_p5)
                           (succ_p5_p012))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #44241: <==closure== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #71237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #76225: <==closure== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87420: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13855: <==negation-removal== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #19801: <==negation-removal== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #54578: <==unclosure== 71956 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #59015: <==negation-removal== 76225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #71956: <==uncertain_firing== 71237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #85735: <==negation-removal== 44241 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))))

    (:action sensecells_b_p5_p1
        :precondition (and (at_b_p5)
                           (succ_p5_p1))
        :effect (and
                    ; #57471: <==closure== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #59782: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #60676: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #67231: <==closure== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #13251: <==negation-removal== 67231 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19237: <==negation-removal== 57471 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #19447: <==negation-removal== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #21607: <==negation-removal== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #45728: <==unclosure== 92188 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #92188: <==uncertain_firing== 60676 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p5_p10
        :precondition (and (at_b_p5)
                           (succ_p5_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #12478: <==closure== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #44889: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #57181: <==closure== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #68217: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #18927: <==negation-removal== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #32916: <==unclosure== 84600 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37966: <==negation-removal== 57181 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #76264: <==negation-removal== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79841: <==negation-removal== 12478 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84600: <==uncertain_firing== 44889 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))))

    (:action sensecells_b_p5_p2
        :precondition (and (succ_p5_p2)
                           (at_b_p5))
        :effect (and
                    ; #17672: <==closure== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #30351: <==closure== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #58423: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #88868: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #13594: <==negation-removal== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #49385: <==negation-removal== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #61854: <==unclosure== 79685 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #72798: <==negation-removal== 30351 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #79685: <==uncertain_firing== 88868 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #85629: <==negation-removal== 17672 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p5_p3
        :precondition (and (succ_p5_p3)
                           (at_b_p5))
        :effect (and
                    ; #16525: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #35032: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #69451: <==closure== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #87979: <==closure== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #29354: <==negation-removal== 87979 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #36792: <==negation-removal== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #59851: <==negation-removal== 69451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #62660: <==unclosure== 76018 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #63210: <==negation-removal== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #76018: <==uncertain_firing== 16525 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p5_p4
        :precondition (and (succ_p5_p4)
                           (at_b_p5))
        :effect (and
                    ; #16189: <==closure== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #33760: <==closure== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #77716: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #83322: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #11615: <==negation-removal== 16189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18929: <==unclosure== 34025 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #34025: <==uncertain_firing== 83322 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #54201: <==negation-removal== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #69274: <==negation-removal== 33760 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #82011: <==negation-removal== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))))

    (:action sensecells_b_p5_p5
        :precondition (and (succ_p5_p5)
                           (at_b_p5))
        :effect (and
                    ; #13935: <==closure== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #30295: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #44907: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64771: <==closure== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #22493: <==negation-removal== 64771 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #22776: <==uncertain_firing== 30295 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #36435: <==unclosure== 22776 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #39246: <==negation-removal== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #62570: <==negation-removal== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #87462: <==negation-removal== 13935 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))))

    (:action sensecells_b_p5_p6
        :precondition (and (succ_p5_p6)
                           (at_b_p5))
        :effect (and
                    ; #18661: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #24247: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #30673: <==closure== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #47806: <==closure== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #10281: <==negation-removal== 30673 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #19828: <==negation-removal== 47806 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #22170: <==negation-removal== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #41718: <==uncertain_firing== 24247 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #62824: <==unclosure== 41718 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #78372: <==negation-removal== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_b_p5_p7
        :precondition (and (succ_p5_p7)
                           (at_b_p5))
        :effect (and
                    ; #10291: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #54934: <==closure== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #88227: <==closure== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #90145: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #12248: <==unclosure== 70246 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #36010: <==negation-removal== 54934 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #43507: <==negation-removal== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #70246: <==uncertain_firing== 10291 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #77275: <==negation-removal== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #80604: <==negation-removal== 88227 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p5_p8
        :precondition (and (succ_p5_p8)
                           (at_b_p5))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #53035: <==closure== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #70096: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #74844: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #83038: <==closure== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #10691: <==negation-removal== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #26384: <==unclosure== 34853 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #28488: <==negation-removal== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #34853: <==uncertain_firing== 74844 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #35974: <==negation-removal== 83038 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #98791: <==negation-removal== 53035 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p5_p9
        :precondition (and (succ_p5_p9)
                           (at_b_p5))
        :effect (and
                    ; #14079: <==closure== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #46811: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #87166: <==closure== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #88003: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #41125: <==unclosure== 78716 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #48768: <==negation-removal== 87166 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #56398: <==negation-removal== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66655: <==negation-removal== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #78716: <==uncertain_firing== 46811 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #86043: <==negation-removal== 14079 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_b_p6_p0011
        :precondition (and (at_b_p6)
                           (succ_p6_p0011))
        :effect (and
                    ; #13579: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #49290: <==closure== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #80838: <==closure== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #88815: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #14435: <==negation-removal== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #29310: <==negation-removal== 49290 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #55487: <==uncertain_firing== 88815 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #62695: <==negation-removal== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #80796: <==negation-removal== 80838 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #87653: <==unclosure== 55487 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p6_p012
        :precondition (and (at_b_p6)
                           (succ_p6_p012))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #44241: <==closure== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #71237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #76225: <==closure== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87420: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13855: <==negation-removal== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #19801: <==negation-removal== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #54578: <==unclosure== 71956 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #59015: <==negation-removal== 76225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #71956: <==uncertain_firing== 71237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #85735: <==negation-removal== 44241 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))))

    (:action sensecells_b_p6_p1
        :precondition (and (at_b_p6)
                           (succ_p6_p1))
        :effect (and
                    ; #57471: <==closure== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #59782: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #60676: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #67231: <==closure== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #13251: <==negation-removal== 67231 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19237: <==negation-removal== 57471 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #19447: <==negation-removal== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #21607: <==negation-removal== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #45728: <==unclosure== 92188 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #92188: <==uncertain_firing== 60676 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p6_p10
        :precondition (and (at_b_p6)
                           (succ_p6_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #12478: <==closure== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #44889: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #57181: <==closure== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #68217: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #18927: <==negation-removal== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #32916: <==unclosure== 84600 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37966: <==negation-removal== 57181 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #76264: <==negation-removal== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79841: <==negation-removal== 12478 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84600: <==uncertain_firing== 44889 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))))

    (:action sensecells_b_p6_p2
        :precondition (and (at_b_p6)
                           (succ_p6_p2))
        :effect (and
                    ; #17672: <==closure== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #30351: <==closure== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #58423: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #88868: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #13594: <==negation-removal== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #49385: <==negation-removal== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #61854: <==unclosure== 79685 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #72798: <==negation-removal== 30351 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #79685: <==uncertain_firing== 88868 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #85629: <==negation-removal== 17672 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p6_p3
        :precondition (and (at_b_p6)
                           (succ_p6_p3))
        :effect (and
                    ; #16525: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #35032: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #69451: <==closure== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #87979: <==closure== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #29354: <==negation-removal== 87979 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #36792: <==negation-removal== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #59851: <==negation-removal== 69451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #62660: <==unclosure== 76018 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #63210: <==negation-removal== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #76018: <==uncertain_firing== 16525 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p6_p4
        :precondition (and (at_b_p6)
                           (succ_p6_p4))
        :effect (and
                    ; #16189: <==closure== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #33760: <==closure== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #77716: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #83322: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #11615: <==negation-removal== 16189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18929: <==unclosure== 34025 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #34025: <==uncertain_firing== 83322 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #54201: <==negation-removal== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #69274: <==negation-removal== 33760 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #82011: <==negation-removal== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))))

    (:action sensecells_b_p6_p5
        :precondition (and (at_b_p6)
                           (succ_p6_p5))
        :effect (and
                    ; #13935: <==closure== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #30295: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #44907: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64771: <==closure== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #22493: <==negation-removal== 64771 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #22776: <==uncertain_firing== 30295 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #36435: <==unclosure== 22776 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #39246: <==negation-removal== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #62570: <==negation-removal== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #87462: <==negation-removal== 13935 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))))

    (:action sensecells_b_p6_p6
        :precondition (and (at_b_p6)
                           (succ_p6_p6))
        :effect (and
                    ; #18661: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #24247: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #30673: <==closure== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #47806: <==closure== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #10281: <==negation-removal== 30673 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #19828: <==negation-removal== 47806 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #22170: <==negation-removal== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #41718: <==uncertain_firing== 24247 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #62824: <==unclosure== 41718 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #78372: <==negation-removal== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_b_p6_p7
        :precondition (and (at_b_p6)
                           (succ_p6_p7))
        :effect (and
                    ; #10291: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #54934: <==closure== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #88227: <==closure== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #90145: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #12248: <==unclosure== 70246 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #36010: <==negation-removal== 54934 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #43507: <==negation-removal== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #70246: <==uncertain_firing== 10291 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #77275: <==negation-removal== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #80604: <==negation-removal== 88227 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p6_p8
        :precondition (and (at_b_p6)
                           (succ_p6_p8))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #53035: <==closure== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #70096: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #74844: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #83038: <==closure== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #10691: <==negation-removal== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #26384: <==unclosure== 34853 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #28488: <==negation-removal== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #34853: <==uncertain_firing== 74844 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #35974: <==negation-removal== 83038 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #98791: <==negation-removal== 53035 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p6_p9
        :precondition (and (at_b_p6)
                           (succ_p6_p9))
        :effect (and
                    ; #14079: <==closure== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #46811: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #87166: <==closure== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #88003: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #41125: <==unclosure== 78716 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #48768: <==negation-removal== 87166 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #56398: <==negation-removal== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66655: <==negation-removal== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #78716: <==uncertain_firing== 46811 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #86043: <==negation-removal== 14079 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_b_p7_p0011
        :precondition (and (succ_p7_p0011)
                           (at_b_p7))
        :effect (and
                    ; #13579: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #49290: <==closure== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #80838: <==closure== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #88815: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #14435: <==negation-removal== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #29310: <==negation-removal== 49290 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #55487: <==uncertain_firing== 88815 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #62695: <==negation-removal== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #80796: <==negation-removal== 80838 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #87653: <==unclosure== 55487 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p7_p012
        :precondition (and (succ_p7_p012)
                           (at_b_p7))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #44241: <==closure== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #71237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #76225: <==closure== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87420: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13855: <==negation-removal== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #19801: <==negation-removal== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #54578: <==unclosure== 71956 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #59015: <==negation-removal== 76225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #71956: <==uncertain_firing== 71237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #85735: <==negation-removal== 44241 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))))

    (:action sensecells_b_p7_p1
        :precondition (and (succ_p7_p1)
                           (at_b_p7))
        :effect (and
                    ; #57471: <==closure== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #59782: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #60676: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #67231: <==closure== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #13251: <==negation-removal== 67231 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19237: <==negation-removal== 57471 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #19447: <==negation-removal== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #21607: <==negation-removal== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #45728: <==unclosure== 92188 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #92188: <==uncertain_firing== 60676 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p7_p10
        :precondition (and (succ_p7_p10)
                           (at_b_p7))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #12478: <==closure== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #44889: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #57181: <==closure== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #68217: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #18927: <==negation-removal== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #32916: <==unclosure== 84600 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37966: <==negation-removal== 57181 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #76264: <==negation-removal== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79841: <==negation-removal== 12478 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84600: <==uncertain_firing== 44889 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))))

    (:action sensecells_b_p7_p2
        :precondition (and (succ_p7_p2)
                           (at_b_p7))
        :effect (and
                    ; #17672: <==closure== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #30351: <==closure== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #58423: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #88868: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #13594: <==negation-removal== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #49385: <==negation-removal== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #61854: <==unclosure== 79685 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #72798: <==negation-removal== 30351 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #79685: <==uncertain_firing== 88868 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #85629: <==negation-removal== 17672 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p7_p3
        :precondition (and (at_b_p7)
                           (succ_p7_p3))
        :effect (and
                    ; #16525: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #35032: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #69451: <==closure== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #87979: <==closure== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #29354: <==negation-removal== 87979 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #36792: <==negation-removal== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #59851: <==negation-removal== 69451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #62660: <==unclosure== 76018 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #63210: <==negation-removal== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #76018: <==uncertain_firing== 16525 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p7_p4
        :precondition (and (succ_p7_p4)
                           (at_b_p7))
        :effect (and
                    ; #16189: <==closure== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #33760: <==closure== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #77716: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #83322: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #11615: <==negation-removal== 16189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18929: <==unclosure== 34025 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #34025: <==uncertain_firing== 83322 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #54201: <==negation-removal== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #69274: <==negation-removal== 33760 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #82011: <==negation-removal== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))))

    (:action sensecells_b_p7_p5
        :precondition (and (at_b_p7)
                           (succ_p7_p5))
        :effect (and
                    ; #13935: <==closure== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #30295: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #44907: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64771: <==closure== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #22493: <==negation-removal== 64771 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #22776: <==uncertain_firing== 30295 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #36435: <==unclosure== 22776 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #39246: <==negation-removal== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #62570: <==negation-removal== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #87462: <==negation-removal== 13935 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))))

    (:action sensecells_b_p7_p6
        :precondition (and (succ_p7_p6)
                           (at_b_p7))
        :effect (and
                    ; #18661: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #24247: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #30673: <==closure== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #47806: <==closure== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #10281: <==negation-removal== 30673 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #19828: <==negation-removal== 47806 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #22170: <==negation-removal== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #41718: <==uncertain_firing== 24247 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #62824: <==unclosure== 41718 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #78372: <==negation-removal== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_b_p7_p7
        :precondition (and (succ_p7_p7)
                           (at_b_p7))
        :effect (and
                    ; #10291: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #54934: <==closure== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #88227: <==closure== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #90145: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #12248: <==unclosure== 70246 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #36010: <==negation-removal== 54934 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #43507: <==negation-removal== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #70246: <==uncertain_firing== 10291 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #77275: <==negation-removal== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #80604: <==negation-removal== 88227 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p7_p8
        :precondition (and (succ_p7_p8)
                           (at_b_p7))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #53035: <==closure== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #70096: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #74844: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #83038: <==closure== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #10691: <==negation-removal== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #26384: <==unclosure== 34853 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #28488: <==negation-removal== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #34853: <==uncertain_firing== 74844 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #35974: <==negation-removal== 83038 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #98791: <==negation-removal== 53035 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p7_p9
        :precondition (and (succ_p7_p9)
                           (at_b_p7))
        :effect (and
                    ; #14079: <==closure== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #46811: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #87166: <==closure== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #88003: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #41125: <==unclosure== 78716 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #48768: <==negation-removal== 87166 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #56398: <==negation-removal== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66655: <==negation-removal== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #78716: <==uncertain_firing== 46811 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #86043: <==negation-removal== 14079 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_b_p8_p0011
        :precondition (and (succ_p8_p0011)
                           (at_b_p8))
        :effect (and
                    ; #13579: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #49290: <==closure== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #80838: <==closure== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #88815: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #14435: <==negation-removal== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #29310: <==negation-removal== 49290 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #55487: <==uncertain_firing== 88815 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #62695: <==negation-removal== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #80796: <==negation-removal== 80838 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #87653: <==unclosure== 55487 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p8_p012
        :precondition (and (succ_p8_p012)
                           (at_b_p8))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #44241: <==closure== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #71237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #76225: <==closure== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87420: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13855: <==negation-removal== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #19801: <==negation-removal== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #54578: <==unclosure== 71956 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #59015: <==negation-removal== 76225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #71956: <==uncertain_firing== 71237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #85735: <==negation-removal== 44241 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))))

    (:action sensecells_b_p8_p1
        :precondition (and (succ_p8_p1)
                           (at_b_p8))
        :effect (and
                    ; #57471: <==closure== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #59782: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #60676: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #67231: <==closure== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #13251: <==negation-removal== 67231 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19237: <==negation-removal== 57471 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #19447: <==negation-removal== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #21607: <==negation-removal== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #45728: <==unclosure== 92188 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #92188: <==uncertain_firing== 60676 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p8_p10
        :precondition (and (succ_p8_p10)
                           (at_b_p8))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #12478: <==closure== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #44889: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #57181: <==closure== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #68217: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #18927: <==negation-removal== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #32916: <==unclosure== 84600 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37966: <==negation-removal== 57181 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #76264: <==negation-removal== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79841: <==negation-removal== 12478 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84600: <==uncertain_firing== 44889 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))))

    (:action sensecells_b_p8_p2
        :precondition (and (at_b_p8)
                           (succ_p8_p2))
        :effect (and
                    ; #17672: <==closure== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #30351: <==closure== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #58423: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #88868: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #13594: <==negation-removal== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #49385: <==negation-removal== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #61854: <==unclosure== 79685 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #72798: <==negation-removal== 30351 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #79685: <==uncertain_firing== 88868 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #85629: <==negation-removal== 17672 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p8_p3
        :precondition (and (succ_p8_p3)
                           (at_b_p8))
        :effect (and
                    ; #16525: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #35032: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #69451: <==closure== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #87979: <==closure== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #29354: <==negation-removal== 87979 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #36792: <==negation-removal== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #59851: <==negation-removal== 69451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #62660: <==unclosure== 76018 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #63210: <==negation-removal== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #76018: <==uncertain_firing== 16525 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p8_p4
        :precondition (and (succ_p8_p4)
                           (at_b_p8))
        :effect (and
                    ; #16189: <==closure== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #33760: <==closure== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #77716: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #83322: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #11615: <==negation-removal== 16189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18929: <==unclosure== 34025 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #34025: <==uncertain_firing== 83322 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #54201: <==negation-removal== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #69274: <==negation-removal== 33760 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #82011: <==negation-removal== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))))

    (:action sensecells_b_p8_p5
        :precondition (and (succ_p8_p5)
                           (at_b_p8))
        :effect (and
                    ; #13935: <==closure== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #30295: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #44907: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64771: <==closure== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #22493: <==negation-removal== 64771 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #22776: <==uncertain_firing== 30295 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #36435: <==unclosure== 22776 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #39246: <==negation-removal== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #62570: <==negation-removal== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #87462: <==negation-removal== 13935 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))))

    (:action sensecells_b_p8_p6
        :precondition (and (at_b_p8)
                           (succ_p8_p6))
        :effect (and
                    ; #18661: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #24247: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #30673: <==closure== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #47806: <==closure== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #10281: <==negation-removal== 30673 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #19828: <==negation-removal== 47806 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #22170: <==negation-removal== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #41718: <==uncertain_firing== 24247 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #62824: <==unclosure== 41718 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #78372: <==negation-removal== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_b_p8_p7
        :precondition (and (succ_p8_p7)
                           (at_b_p8))
        :effect (and
                    ; #10291: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #54934: <==closure== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #88227: <==closure== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #90145: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #12248: <==unclosure== 70246 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #36010: <==negation-removal== 54934 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #43507: <==negation-removal== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #70246: <==uncertain_firing== 10291 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #77275: <==negation-removal== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #80604: <==negation-removal== 88227 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p8_p8
        :precondition (and (succ_p8_p8)
                           (at_b_p8))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #53035: <==closure== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #70096: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #74844: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #83038: <==closure== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #10691: <==negation-removal== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #26384: <==unclosure== 34853 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #28488: <==negation-removal== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #34853: <==uncertain_firing== 74844 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #35974: <==negation-removal== 83038 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #98791: <==negation-removal== 53035 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p8_p9
        :precondition (and (succ_p8_p9)
                           (at_b_p8))
        :effect (and
                    ; #14079: <==closure== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #46811: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #87166: <==closure== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #88003: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #41125: <==unclosure== 78716 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #48768: <==negation-removal== 87166 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #56398: <==negation-removal== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66655: <==negation-removal== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #78716: <==uncertain_firing== 46811 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #86043: <==negation-removal== 14079 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_b_p9_p0011
        :precondition (and (at_b_p9)
                           (succ_p9_p0011))
        :effect (and
                    ; #13579: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #49290: <==closure== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #80838: <==closure== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #88815: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #14435: <==negation-removal== 13579 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #29310: <==negation-removal== 49290 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #55487: <==uncertain_firing== 88815 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #62695: <==negation-removal== 88815 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #80796: <==negation-removal== 80838 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #87653: <==unclosure== 55487 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p9_p012
        :precondition (and (succ_p9_p012)
                           (at_b_p9))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #44241: <==closure== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #71237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #76225: <==closure== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87420: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #13855: <==negation-removal== 87420 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #19801: <==negation-removal== 71237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #54578: <==unclosure== 71956 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #59015: <==negation-removal== 76225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #71956: <==uncertain_firing== 71237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #85735: <==negation-removal== 44241 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))))

    (:action sensecells_b_p9_p1
        :precondition (and (at_b_p9)
                           (succ_p9_p1))
        :effect (and
                    ; #57471: <==closure== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #59782: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #60676: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #67231: <==closure== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #13251: <==negation-removal== 67231 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19237: <==negation-removal== 57471 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #19447: <==negation-removal== 60676 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #21607: <==negation-removal== 59782 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #45728: <==unclosure== 92188 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #92188: <==uncertain_firing== 60676 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p9_p10
        :precondition (and (at_b_p9)
                           (succ_p9_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #12478: <==closure== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #44889: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #57181: <==closure== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #68217: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #18927: <==negation-removal== 44889 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #32916: <==unclosure== 84600 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37966: <==negation-removal== 57181 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #76264: <==negation-removal== 68217 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79841: <==negation-removal== 12478 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84600: <==uncertain_firing== 44889 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))))

    (:action sensecells_b_p9_p2
        :precondition (and (at_b_p9)
                           (succ_p9_p2))
        :effect (and
                    ; #17672: <==closure== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #30351: <==closure== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #58423: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #88868: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #13594: <==negation-removal== 58423 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #49385: <==negation-removal== 88868 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #61854: <==unclosure== 79685 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #72798: <==negation-removal== 30351 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #79685: <==uncertain_firing== 88868 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #85629: <==negation-removal== 17672 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p9_p3
        :precondition (and (succ_p9_p3)
                           (at_b_p9))
        :effect (and
                    ; #16525: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #35032: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #69451: <==closure== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #87979: <==closure== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #29354: <==negation-removal== 87979 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #36792: <==negation-removal== 35032 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #59851: <==negation-removal== 69451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #62660: <==unclosure== 76018 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #63210: <==negation-removal== 16525 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #76018: <==uncertain_firing== 16525 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p9_p4
        :precondition (and (at_b_p9)
                           (succ_p9_p4))
        :effect (and
                    ; #16189: <==closure== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #33760: <==closure== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #77716: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #83322: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #11615: <==negation-removal== 16189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18929: <==unclosure== 34025 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #34025: <==uncertain_firing== 83322 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #54201: <==negation-removal== 83322 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #69274: <==negation-removal== 33760 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #82011: <==negation-removal== 77716 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))))

    (:action sensecells_b_p9_p5
        :precondition (and (at_b_p9)
                           (succ_p9_p5))
        :effect (and
                    ; #13935: <==closure== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #30295: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #44907: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64771: <==closure== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #22493: <==negation-removal== 64771 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #22776: <==uncertain_firing== 30295 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #36435: <==unclosure== 22776 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #39246: <==negation-removal== 30295 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #62570: <==negation-removal== 44907 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #87462: <==negation-removal== 13935 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))))

    (:action sensecells_b_p9_p6
        :precondition (and (succ_p9_p6)
                           (at_b_p9))
        :effect (and
                    ; #18661: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #24247: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #30673: <==closure== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #47806: <==closure== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #10281: <==negation-removal== 30673 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #19828: <==negation-removal== 47806 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #22170: <==negation-removal== 18661 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #41718: <==uncertain_firing== 24247 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #62824: <==unclosure== 41718 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #78372: <==negation-removal== 24247 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_b_p9_p7
        :precondition (and (at_b_p9)
                           (succ_p9_p7))
        :effect (and
                    ; #10291: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #54934: <==closure== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #88227: <==closure== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #90145: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #12248: <==unclosure== 70246 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #36010: <==negation-removal== 54934 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #43507: <==negation-removal== 10291 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #70246: <==uncertain_firing== 10291 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #77275: <==negation-removal== 90145 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #80604: <==negation-removal== 88227 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p9_p8
        :precondition (and (at_b_p9)
                           (succ_p9_p8))
        :effect (and
                    ; #29806: origin
                    (checked_p8)

                    ; #53035: <==closure== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #70096: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #74844: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #83038: <==closure== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #10691: <==negation-removal== 74844 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #26384: <==unclosure== 34853 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #28488: <==negation-removal== 70096 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #34853: <==uncertain_firing== 74844 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #35974: <==negation-removal== 83038 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #98791: <==negation-removal== 53035 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p9_p9
        :precondition (and (at_b_p9)
                           (succ_p9_p9))
        :effect (and
                    ; #14079: <==closure== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #46811: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #87166: <==closure== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #88003: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #41125: <==unclosure== 78716 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #48768: <==negation-removal== 87166 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #56398: <==negation-removal== 46811 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66655: <==negation-removal== 88003 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #78716: <==uncertain_firing== 46811 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #86043: <==negation-removal== 14079 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_c_p0011_p0011
        :precondition (and (at_c_p0011)
                           (succ_p0011_p0011))
        :effect (and
                    ; #17731: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #22587: <==closure== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #51743: <==closure== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #63881: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #25286: <==unclosure== 78306 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #31730: <==negation-removal== 22587 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #50269: <==negation-removal== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #78306: <==uncertain_firing== 63881 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #85269: <==negation-removal== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #90746: <==negation-removal== 51743 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p0011_p012
        :precondition (and (at_c_p0011)
                           (succ_p0011_p012))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #45448: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #68313: <==closure== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #90256: <==closure== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #92023: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #12383: <==unclosure== 60327 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #26586: <==negation-removal== 90256 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #38166: <==negation-removal== 68313 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #49458: <==negation-removal== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #60327: <==uncertain_firing== 45448 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #82633: <==negation-removal== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p0011_p1
        :precondition (and (at_c_p0011)
                           (succ_p0011_p1))
        :effect (and
                    ; #25345: <==closure== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #28154: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #76899: <==closure== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #86891: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #21171: <==negation-removal== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #53358: <==negation-removal== 76899 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #56820: <==negation-removal== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #75169: <==unclosure== 90120 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #90120: <==uncertain_firing== 86891 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #91416: <==negation-removal== 25345 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p0011_p10
        :precondition (and (at_c_p0011)
                           (succ_p0011_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #29047: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #41615: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #63713: <==closure== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #90784: <==closure== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #45435: <==uncertain_firing== 41615 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #54711: <==negation-removal== 63713 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #59234: <==negation-removal== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #68501: <==negation-removal== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #73408: <==negation-removal== 90784 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #86987: <==unclosure== 45435 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p0011_p2
        :precondition (and (at_c_p0011)
                           (succ_p0011_p2))
        :effect (and
                    ; #48856: origin
                    (checked_p2)

                    ; #50585: <==closure== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #60470: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #84047: <==closure== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #85750: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #16095: <==unclosure== 41881 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #23835: <==negation-removal== 50585 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #25567: <==negation-removal== 84047 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #41881: <==uncertain_firing== 85750 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #52638: <==negation-removal== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #71591: <==negation-removal== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p0011_p3
        :precondition (and (at_c_p0011)
                           (succ_p0011_p3))
        :effect (and
                    ; #34823: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #39605: <==closure== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #49722: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #92035: <==closure== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #39474: <==negation-removal== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #53268: <==uncertain_firing== 34823 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #53907: <==unclosure== 53268 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #64212: <==negation-removal== 39605 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #69965: <==negation-removal== 92035 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #72067: <==negation-removal== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p0011_p4
        :precondition (and (at_c_p0011)
                           (succ_p0011_p4))
        :effect (and
                    ; #10821: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #54719: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #77578: <==closure== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88044: <==closure== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #23765: <==negation-removal== 88044 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #32960: <==negation-removal== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #35636: <==negation-removal== 77578 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #44338: <==unclosure== 53052 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #53052: <==uncertain_firing== 10821 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #64448: <==negation-removal== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))))

    (:action sensecells_c_p0011_p5
        :precondition (and (at_c_p0011)
                           (succ_p0011_p5))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #19368: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #58250: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #71608: <==closure== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #90397: <==closure== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22029: <==uncertain_firing== 19368 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #50351: <==negation-removal== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #56016: <==unclosure== 22029 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #56229: <==negation-removal== 90397 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #74529: <==negation-removal== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #76831: <==negation-removal== 71608 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p0011_p6
        :precondition (and (at_c_p0011)
                           (succ_p0011_p6))
        :effect (and
                    ; #13143: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #48156: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #57568: <==closure== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #89501: <==closure== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #46470: <==negation-removal== 89501 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #48611: <==uncertain_firing== 13143 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #66243: <==negation-removal== 57568 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #71329: <==negation-removal== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #85792: <==negation-removal== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #88380: <==unclosure== 48611 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_c_p0011_p7
        :precondition (and (at_c_p0011)
                           (succ_p0011_p7))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #38368: <==closure== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #42605: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #71707: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #88368: <==closure== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #42273: <==unclosure== 58560 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #58249: <==negation-removal== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #58560: <==uncertain_firing== 71707 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #64313: <==negation-removal== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #66828: <==negation-removal== 38368 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #67202: <==negation-removal== 88368 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p0011_p8
        :precondition (and (at_c_p0011)
                           (succ_p0011_p8))
        :effect (and
                    ; #14880: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #54773: <==closure== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #65781: <==closure== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #84038: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #10891: <==negation-removal== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #18567: <==uncertain_firing== 84038 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #25349: <==unclosure== 18567 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #40436: <==negation-removal== 54773 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #57254: <==negation-removal== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #79903: <==negation-removal== 65781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p0011_p9
        :precondition (and (at_c_p0011)
                           (succ_p0011_p9))
        :effect (and
                    ; #11123: <==closure== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #29121: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #32492: <==closure== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #39462: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #16417: <==negation-removal== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #16453: <==negation-removal== 32492 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #23407: <==negation-removal== 11123 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #27301: <==uncertain_firing== 39462 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #50587: <==unclosure== 27301 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #80038: <==negation-removal== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))))

    (:action sensecells_c_p012_p0011
        :precondition (and (at_c_p012)
                           (succ_p012_p0011))
        :effect (and
                    ; #17731: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #22587: <==closure== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #51743: <==closure== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #63881: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #25286: <==unclosure== 78306 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #31730: <==negation-removal== 22587 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #50269: <==negation-removal== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #78306: <==uncertain_firing== 63881 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #85269: <==negation-removal== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #90746: <==negation-removal== 51743 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p012_p012
        :precondition (and (succ_p012_p012)
                           (at_c_p012))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #45448: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #68313: <==closure== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #90256: <==closure== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #92023: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #12383: <==unclosure== 60327 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #26586: <==negation-removal== 90256 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #38166: <==negation-removal== 68313 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #49458: <==negation-removal== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #60327: <==uncertain_firing== 45448 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #82633: <==negation-removal== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p012_p1
        :precondition (and (at_c_p012)
                           (succ_p012_p1))
        :effect (and
                    ; #25345: <==closure== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #28154: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #76899: <==closure== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #86891: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #21171: <==negation-removal== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #53358: <==negation-removal== 76899 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #56820: <==negation-removal== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #75169: <==unclosure== 90120 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #90120: <==uncertain_firing== 86891 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #91416: <==negation-removal== 25345 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p012_p10
        :precondition (and (succ_p012_p10)
                           (at_c_p012))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #29047: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #41615: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #63713: <==closure== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #90784: <==closure== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #45435: <==uncertain_firing== 41615 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #54711: <==negation-removal== 63713 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #59234: <==negation-removal== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #68501: <==negation-removal== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #73408: <==negation-removal== 90784 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #86987: <==unclosure== 45435 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p012_p2
        :precondition (and (succ_p012_p2)
                           (at_c_p012))
        :effect (and
                    ; #48856: origin
                    (checked_p2)

                    ; #50585: <==closure== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #60470: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #84047: <==closure== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #85750: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #16095: <==unclosure== 41881 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #23835: <==negation-removal== 50585 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #25567: <==negation-removal== 84047 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #41881: <==uncertain_firing== 85750 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #52638: <==negation-removal== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #71591: <==negation-removal== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p012_p3
        :precondition (and (at_c_p012)
                           (succ_p012_p3))
        :effect (and
                    ; #34823: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #39605: <==closure== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #49722: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #92035: <==closure== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #39474: <==negation-removal== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #53268: <==uncertain_firing== 34823 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #53907: <==unclosure== 53268 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #64212: <==negation-removal== 39605 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #69965: <==negation-removal== 92035 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #72067: <==negation-removal== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p012_p4
        :precondition (and (succ_p012_p4)
                           (at_c_p012))
        :effect (and
                    ; #10821: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #54719: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #77578: <==closure== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88044: <==closure== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #23765: <==negation-removal== 88044 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #32960: <==negation-removal== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #35636: <==negation-removal== 77578 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #44338: <==unclosure== 53052 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #53052: <==uncertain_firing== 10821 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #64448: <==negation-removal== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))))

    (:action sensecells_c_p012_p5
        :precondition (and (succ_p012_p5)
                           (at_c_p012))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #19368: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #58250: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #71608: <==closure== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #90397: <==closure== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22029: <==uncertain_firing== 19368 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #50351: <==negation-removal== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #56016: <==unclosure== 22029 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #56229: <==negation-removal== 90397 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #74529: <==negation-removal== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #76831: <==negation-removal== 71608 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p012_p6
        :precondition (and (at_c_p012)
                           (succ_p012_p6))
        :effect (and
                    ; #13143: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #48156: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #57568: <==closure== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #89501: <==closure== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #46470: <==negation-removal== 89501 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #48611: <==uncertain_firing== 13143 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #66243: <==negation-removal== 57568 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #71329: <==negation-removal== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #85792: <==negation-removal== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #88380: <==unclosure== 48611 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_c_p012_p7
        :precondition (and (at_c_p012)
                           (succ_p012_p7))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #38368: <==closure== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #42605: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #71707: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #88368: <==closure== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #42273: <==unclosure== 58560 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #58249: <==negation-removal== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #58560: <==uncertain_firing== 71707 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #64313: <==negation-removal== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #66828: <==negation-removal== 38368 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #67202: <==negation-removal== 88368 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p012_p8
        :precondition (and (succ_p012_p8)
                           (at_c_p012))
        :effect (and
                    ; #14880: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #54773: <==closure== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #65781: <==closure== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #84038: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #10891: <==negation-removal== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #18567: <==uncertain_firing== 84038 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #25349: <==unclosure== 18567 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #40436: <==negation-removal== 54773 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #57254: <==negation-removal== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #79903: <==negation-removal== 65781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p012_p9
        :precondition (and (succ_p012_p9)
                           (at_c_p012))
        :effect (and
                    ; #11123: <==closure== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #29121: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #32492: <==closure== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #39462: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #16417: <==negation-removal== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #16453: <==negation-removal== 32492 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #23407: <==negation-removal== 11123 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #27301: <==uncertain_firing== 39462 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #50587: <==unclosure== 27301 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #80038: <==negation-removal== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))))

    (:action sensecells_c_p10_p0011
        :precondition (and (at_c_p10)
                           (succ_p10_p0011))
        :effect (and
                    ; #17731: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #22587: <==closure== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #51743: <==closure== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #63881: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #25286: <==unclosure== 78306 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #31730: <==negation-removal== 22587 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #50269: <==negation-removal== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #78306: <==uncertain_firing== 63881 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #85269: <==negation-removal== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #90746: <==negation-removal== 51743 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p10_p012
        :precondition (and (at_c_p10)
                           (succ_p10_p012))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #45448: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #68313: <==closure== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #90256: <==closure== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #92023: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #12383: <==unclosure== 60327 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #26586: <==negation-removal== 90256 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #38166: <==negation-removal== 68313 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #49458: <==negation-removal== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #60327: <==uncertain_firing== 45448 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #82633: <==negation-removal== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p10_p1
        :precondition (and (at_c_p10)
                           (succ_p10_p1))
        :effect (and
                    ; #25345: <==closure== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #28154: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #76899: <==closure== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #86891: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #21171: <==negation-removal== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #53358: <==negation-removal== 76899 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #56820: <==negation-removal== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #75169: <==unclosure== 90120 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #90120: <==uncertain_firing== 86891 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #91416: <==negation-removal== 25345 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p10_p10
        :precondition (and (at_c_p10)
                           (succ_p10_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #29047: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #41615: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #63713: <==closure== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #90784: <==closure== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #45435: <==uncertain_firing== 41615 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #54711: <==negation-removal== 63713 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #59234: <==negation-removal== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #68501: <==negation-removal== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #73408: <==negation-removal== 90784 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #86987: <==unclosure== 45435 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p10_p2
        :precondition (and (succ_p10_p2)
                           (at_c_p10))
        :effect (and
                    ; #48856: origin
                    (checked_p2)

                    ; #50585: <==closure== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #60470: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #84047: <==closure== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #85750: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #16095: <==unclosure== 41881 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #23835: <==negation-removal== 50585 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #25567: <==negation-removal== 84047 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #41881: <==uncertain_firing== 85750 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #52638: <==negation-removal== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #71591: <==negation-removal== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p10_p3
        :precondition (and (at_c_p10)
                           (succ_p10_p3))
        :effect (and
                    ; #34823: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #39605: <==closure== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #49722: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #92035: <==closure== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #39474: <==negation-removal== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #53268: <==uncertain_firing== 34823 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #53907: <==unclosure== 53268 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #64212: <==negation-removal== 39605 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #69965: <==negation-removal== 92035 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #72067: <==negation-removal== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p10_p4
        :precondition (and (at_c_p10)
                           (succ_p10_p4))
        :effect (and
                    ; #10821: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #54719: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #77578: <==closure== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88044: <==closure== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #23765: <==negation-removal== 88044 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #32960: <==negation-removal== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #35636: <==negation-removal== 77578 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #44338: <==unclosure== 53052 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #53052: <==uncertain_firing== 10821 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #64448: <==negation-removal== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))))

    (:action sensecells_c_p10_p5
        :precondition (and (at_c_p10)
                           (succ_p10_p5))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #19368: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #58250: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #71608: <==closure== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #90397: <==closure== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22029: <==uncertain_firing== 19368 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #50351: <==negation-removal== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #56016: <==unclosure== 22029 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #56229: <==negation-removal== 90397 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #74529: <==negation-removal== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #76831: <==negation-removal== 71608 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p10_p6
        :precondition (and (at_c_p10)
                           (succ_p10_p6))
        :effect (and
                    ; #13143: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #48156: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #57568: <==closure== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #89501: <==closure== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #46470: <==negation-removal== 89501 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #48611: <==uncertain_firing== 13143 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #66243: <==negation-removal== 57568 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #71329: <==negation-removal== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #85792: <==negation-removal== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #88380: <==unclosure== 48611 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_c_p10_p7
        :precondition (and (at_c_p10)
                           (succ_p10_p7))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #38368: <==closure== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #42605: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #71707: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #88368: <==closure== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #42273: <==unclosure== 58560 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #58249: <==negation-removal== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #58560: <==uncertain_firing== 71707 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #64313: <==negation-removal== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #66828: <==negation-removal== 38368 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #67202: <==negation-removal== 88368 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p10_p8
        :precondition (and (at_c_p10)
                           (succ_p10_p8))
        :effect (and
                    ; #14880: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #54773: <==closure== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #65781: <==closure== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #84038: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #10891: <==negation-removal== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #18567: <==uncertain_firing== 84038 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #25349: <==unclosure== 18567 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #40436: <==negation-removal== 54773 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #57254: <==negation-removal== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #79903: <==negation-removal== 65781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p10_p9
        :precondition (and (at_c_p10)
                           (succ_p10_p9))
        :effect (and
                    ; #11123: <==closure== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #29121: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #32492: <==closure== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #39462: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #16417: <==negation-removal== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #16453: <==negation-removal== 32492 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #23407: <==negation-removal== 11123 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #27301: <==uncertain_firing== 39462 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #50587: <==unclosure== 27301 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #80038: <==negation-removal== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))))

    (:action sensecells_c_p1_p0011
        :precondition (and (at_c_p1)
                           (succ_p1_p0011))
        :effect (and
                    ; #17731: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #22587: <==closure== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #51743: <==closure== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #63881: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #25286: <==unclosure== 78306 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #31730: <==negation-removal== 22587 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #50269: <==negation-removal== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #78306: <==uncertain_firing== 63881 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #85269: <==negation-removal== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #90746: <==negation-removal== 51743 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p1_p012
        :precondition (and (succ_p1_p012)
                           (at_c_p1))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #45448: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #68313: <==closure== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #90256: <==closure== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #92023: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #12383: <==unclosure== 60327 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #26586: <==negation-removal== 90256 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #38166: <==negation-removal== 68313 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #49458: <==negation-removal== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #60327: <==uncertain_firing== 45448 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #82633: <==negation-removal== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p1_p1
        :precondition (and (at_c_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #25345: <==closure== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #28154: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #76899: <==closure== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #86891: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #21171: <==negation-removal== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #53358: <==negation-removal== 76899 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #56820: <==negation-removal== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #75169: <==unclosure== 90120 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #90120: <==uncertain_firing== 86891 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #91416: <==negation-removal== 25345 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p1_p10
        :precondition (and (succ_p1_p10)
                           (at_c_p1))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #29047: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #41615: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #63713: <==closure== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #90784: <==closure== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #45435: <==uncertain_firing== 41615 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #54711: <==negation-removal== 63713 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #59234: <==negation-removal== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #68501: <==negation-removal== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #73408: <==negation-removal== 90784 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #86987: <==unclosure== 45435 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p1_p2
        :precondition (and (at_c_p1)
                           (succ_p1_p2))
        :effect (and
                    ; #48856: origin
                    (checked_p2)

                    ; #50585: <==closure== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #60470: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #84047: <==closure== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #85750: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #16095: <==unclosure== 41881 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #23835: <==negation-removal== 50585 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #25567: <==negation-removal== 84047 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #41881: <==uncertain_firing== 85750 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #52638: <==negation-removal== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #71591: <==negation-removal== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p1_p3
        :precondition (and (succ_p1_p3)
                           (at_c_p1))
        :effect (and
                    ; #34823: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #39605: <==closure== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #49722: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #92035: <==closure== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #39474: <==negation-removal== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #53268: <==uncertain_firing== 34823 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #53907: <==unclosure== 53268 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #64212: <==negation-removal== 39605 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #69965: <==negation-removal== 92035 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #72067: <==negation-removal== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p1_p4
        :precondition (and (succ_p1_p4)
                           (at_c_p1))
        :effect (and
                    ; #10821: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #54719: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #77578: <==closure== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88044: <==closure== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #23765: <==negation-removal== 88044 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #32960: <==negation-removal== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #35636: <==negation-removal== 77578 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #44338: <==unclosure== 53052 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #53052: <==uncertain_firing== 10821 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #64448: <==negation-removal== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))))

    (:action sensecells_c_p1_p5
        :precondition (and (succ_p1_p5)
                           (at_c_p1))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #19368: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #58250: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #71608: <==closure== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #90397: <==closure== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22029: <==uncertain_firing== 19368 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #50351: <==negation-removal== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #56016: <==unclosure== 22029 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #56229: <==negation-removal== 90397 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #74529: <==negation-removal== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #76831: <==negation-removal== 71608 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p1_p6
        :precondition (and (succ_p1_p6)
                           (at_c_p1))
        :effect (and
                    ; #13143: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #48156: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #57568: <==closure== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #89501: <==closure== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #46470: <==negation-removal== 89501 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #48611: <==uncertain_firing== 13143 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #66243: <==negation-removal== 57568 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #71329: <==negation-removal== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #85792: <==negation-removal== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #88380: <==unclosure== 48611 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_c_p1_p7
        :precondition (and (succ_p1_p7)
                           (at_c_p1))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #38368: <==closure== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #42605: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #71707: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #88368: <==closure== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #42273: <==unclosure== 58560 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #58249: <==negation-removal== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #58560: <==uncertain_firing== 71707 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #64313: <==negation-removal== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #66828: <==negation-removal== 38368 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #67202: <==negation-removal== 88368 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p1_p8
        :precondition (and (at_c_p1)
                           (succ_p1_p8))
        :effect (and
                    ; #14880: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #54773: <==closure== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #65781: <==closure== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #84038: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #10891: <==negation-removal== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #18567: <==uncertain_firing== 84038 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #25349: <==unclosure== 18567 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #40436: <==negation-removal== 54773 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #57254: <==negation-removal== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #79903: <==negation-removal== 65781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p1_p9
        :precondition (and (at_c_p1)
                           (succ_p1_p9))
        :effect (and
                    ; #11123: <==closure== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #29121: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #32492: <==closure== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #39462: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #16417: <==negation-removal== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #16453: <==negation-removal== 32492 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #23407: <==negation-removal== 11123 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #27301: <==uncertain_firing== 39462 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #50587: <==unclosure== 27301 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #80038: <==negation-removal== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))))

    (:action sensecells_c_p2_p0011
        :precondition (and (succ_p2_p0011)
                           (at_c_p2))
        :effect (and
                    ; #17731: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #22587: <==closure== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #51743: <==closure== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #63881: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #25286: <==unclosure== 78306 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #31730: <==negation-removal== 22587 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #50269: <==negation-removal== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #78306: <==uncertain_firing== 63881 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #85269: <==negation-removal== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #90746: <==negation-removal== 51743 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p2_p012
        :precondition (and (succ_p2_p012)
                           (at_c_p2))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #45448: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #68313: <==closure== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #90256: <==closure== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #92023: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #12383: <==unclosure== 60327 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #26586: <==negation-removal== 90256 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #38166: <==negation-removal== 68313 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #49458: <==negation-removal== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #60327: <==uncertain_firing== 45448 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #82633: <==negation-removal== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p2_p1
        :precondition (and (succ_p2_p1)
                           (at_c_p2))
        :effect (and
                    ; #25345: <==closure== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #28154: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #76899: <==closure== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #86891: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #21171: <==negation-removal== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #53358: <==negation-removal== 76899 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #56820: <==negation-removal== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #75169: <==unclosure== 90120 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #90120: <==uncertain_firing== 86891 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #91416: <==negation-removal== 25345 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p2_p10
        :precondition (and (at_c_p2)
                           (succ_p2_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #29047: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #41615: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #63713: <==closure== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #90784: <==closure== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #45435: <==uncertain_firing== 41615 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #54711: <==negation-removal== 63713 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #59234: <==negation-removal== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #68501: <==negation-removal== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #73408: <==negation-removal== 90784 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #86987: <==unclosure== 45435 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p2_p2
        :precondition (and (at_c_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #48856: origin
                    (checked_p2)

                    ; #50585: <==closure== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #60470: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #84047: <==closure== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #85750: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #16095: <==unclosure== 41881 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #23835: <==negation-removal== 50585 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #25567: <==negation-removal== 84047 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #41881: <==uncertain_firing== 85750 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #52638: <==negation-removal== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #71591: <==negation-removal== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p2_p3
        :precondition (and (at_c_p2)
                           (succ_p2_p3))
        :effect (and
                    ; #34823: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #39605: <==closure== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #49722: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #92035: <==closure== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #39474: <==negation-removal== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #53268: <==uncertain_firing== 34823 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #53907: <==unclosure== 53268 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #64212: <==negation-removal== 39605 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #69965: <==negation-removal== 92035 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #72067: <==negation-removal== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p2_p4
        :precondition (and (succ_p2_p4)
                           (at_c_p2))
        :effect (and
                    ; #10821: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #54719: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #77578: <==closure== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88044: <==closure== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #23765: <==negation-removal== 88044 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #32960: <==negation-removal== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #35636: <==negation-removal== 77578 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #44338: <==unclosure== 53052 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #53052: <==uncertain_firing== 10821 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #64448: <==negation-removal== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))))

    (:action sensecells_c_p2_p5
        :precondition (and (at_c_p2)
                           (succ_p2_p5))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #19368: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #58250: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #71608: <==closure== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #90397: <==closure== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22029: <==uncertain_firing== 19368 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #50351: <==negation-removal== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #56016: <==unclosure== 22029 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #56229: <==negation-removal== 90397 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #74529: <==negation-removal== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #76831: <==negation-removal== 71608 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p2_p6
        :precondition (and (at_c_p2)
                           (succ_p2_p6))
        :effect (and
                    ; #13143: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #48156: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #57568: <==closure== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #89501: <==closure== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #46470: <==negation-removal== 89501 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #48611: <==uncertain_firing== 13143 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #66243: <==negation-removal== 57568 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #71329: <==negation-removal== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #85792: <==negation-removal== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #88380: <==unclosure== 48611 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_c_p2_p7
        :precondition (and (at_c_p2)
                           (succ_p2_p7))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #38368: <==closure== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #42605: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #71707: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #88368: <==closure== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #42273: <==unclosure== 58560 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #58249: <==negation-removal== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #58560: <==uncertain_firing== 71707 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #64313: <==negation-removal== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #66828: <==negation-removal== 38368 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #67202: <==negation-removal== 88368 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p2_p8
        :precondition (and (at_c_p2)
                           (succ_p2_p8))
        :effect (and
                    ; #14880: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #54773: <==closure== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #65781: <==closure== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #84038: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #10891: <==negation-removal== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #18567: <==uncertain_firing== 84038 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #25349: <==unclosure== 18567 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #40436: <==negation-removal== 54773 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #57254: <==negation-removal== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #79903: <==negation-removal== 65781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p2_p9
        :precondition (and (succ_p2_p9)
                           (at_c_p2))
        :effect (and
                    ; #11123: <==closure== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #29121: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #32492: <==closure== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #39462: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #16417: <==negation-removal== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #16453: <==negation-removal== 32492 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #23407: <==negation-removal== 11123 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #27301: <==uncertain_firing== 39462 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #50587: <==unclosure== 27301 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #80038: <==negation-removal== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))))

    (:action sensecells_c_p3_p0011
        :precondition (and (succ_p3_p0011)
                           (at_c_p3))
        :effect (and
                    ; #17731: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #22587: <==closure== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #51743: <==closure== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #63881: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #25286: <==unclosure== 78306 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #31730: <==negation-removal== 22587 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #50269: <==negation-removal== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #78306: <==uncertain_firing== 63881 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #85269: <==negation-removal== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #90746: <==negation-removal== 51743 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p3_p012
        :precondition (and (succ_p3_p012)
                           (at_c_p3))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #45448: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #68313: <==closure== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #90256: <==closure== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #92023: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #12383: <==unclosure== 60327 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #26586: <==negation-removal== 90256 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #38166: <==negation-removal== 68313 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #49458: <==negation-removal== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #60327: <==uncertain_firing== 45448 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #82633: <==negation-removal== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p3_p1
        :precondition (and (at_c_p3)
                           (succ_p3_p1))
        :effect (and
                    ; #25345: <==closure== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #28154: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #76899: <==closure== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #86891: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #21171: <==negation-removal== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #53358: <==negation-removal== 76899 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #56820: <==negation-removal== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #75169: <==unclosure== 90120 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #90120: <==uncertain_firing== 86891 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #91416: <==negation-removal== 25345 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p3_p10
        :precondition (and (succ_p3_p10)
                           (at_c_p3))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #29047: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #41615: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #63713: <==closure== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #90784: <==closure== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #45435: <==uncertain_firing== 41615 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #54711: <==negation-removal== 63713 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #59234: <==negation-removal== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #68501: <==negation-removal== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #73408: <==negation-removal== 90784 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #86987: <==unclosure== 45435 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p3_p2
        :precondition (and (succ_p3_p2)
                           (at_c_p3))
        :effect (and
                    ; #48856: origin
                    (checked_p2)

                    ; #50585: <==closure== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #60470: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #84047: <==closure== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #85750: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #16095: <==unclosure== 41881 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #23835: <==negation-removal== 50585 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #25567: <==negation-removal== 84047 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #41881: <==uncertain_firing== 85750 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #52638: <==negation-removal== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #71591: <==negation-removal== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p3_p3
        :precondition (and (succ_p3_p3)
                           (at_c_p3))
        :effect (and
                    ; #34823: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #39605: <==closure== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #49722: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #92035: <==closure== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #39474: <==negation-removal== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #53268: <==uncertain_firing== 34823 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #53907: <==unclosure== 53268 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #64212: <==negation-removal== 39605 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #69965: <==negation-removal== 92035 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #72067: <==negation-removal== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p3_p4
        :precondition (and (at_c_p3)
                           (succ_p3_p4))
        :effect (and
                    ; #10821: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #54719: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #77578: <==closure== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88044: <==closure== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #23765: <==negation-removal== 88044 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #32960: <==negation-removal== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #35636: <==negation-removal== 77578 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #44338: <==unclosure== 53052 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #53052: <==uncertain_firing== 10821 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #64448: <==negation-removal== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))))

    (:action sensecells_c_p3_p5
        :precondition (and (succ_p3_p5)
                           (at_c_p3))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #19368: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #58250: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #71608: <==closure== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #90397: <==closure== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22029: <==uncertain_firing== 19368 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #50351: <==negation-removal== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #56016: <==unclosure== 22029 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #56229: <==negation-removal== 90397 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #74529: <==negation-removal== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #76831: <==negation-removal== 71608 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p3_p6
        :precondition (and (succ_p3_p6)
                           (at_c_p3))
        :effect (and
                    ; #13143: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #48156: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #57568: <==closure== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #89501: <==closure== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #46470: <==negation-removal== 89501 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #48611: <==uncertain_firing== 13143 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #66243: <==negation-removal== 57568 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #71329: <==negation-removal== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #85792: <==negation-removal== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #88380: <==unclosure== 48611 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_c_p3_p7
        :precondition (and (succ_p3_p7)
                           (at_c_p3))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #38368: <==closure== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #42605: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #71707: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #88368: <==closure== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #42273: <==unclosure== 58560 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #58249: <==negation-removal== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #58560: <==uncertain_firing== 71707 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #64313: <==negation-removal== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #66828: <==negation-removal== 38368 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #67202: <==negation-removal== 88368 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p3_p8
        :precondition (and (at_c_p3)
                           (succ_p3_p8))
        :effect (and
                    ; #14880: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #54773: <==closure== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #65781: <==closure== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #84038: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #10891: <==negation-removal== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #18567: <==uncertain_firing== 84038 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #25349: <==unclosure== 18567 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #40436: <==negation-removal== 54773 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #57254: <==negation-removal== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #79903: <==negation-removal== 65781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p3_p9
        :precondition (and (succ_p3_p9)
                           (at_c_p3))
        :effect (and
                    ; #11123: <==closure== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #29121: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #32492: <==closure== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #39462: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #16417: <==negation-removal== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #16453: <==negation-removal== 32492 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #23407: <==negation-removal== 11123 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #27301: <==uncertain_firing== 39462 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #50587: <==unclosure== 27301 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #80038: <==negation-removal== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))))

    (:action sensecells_c_p4_p0011
        :precondition (and (at_c_p4)
                           (succ_p4_p0011))
        :effect (and
                    ; #17731: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #22587: <==closure== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #51743: <==closure== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #63881: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #25286: <==unclosure== 78306 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #31730: <==negation-removal== 22587 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #50269: <==negation-removal== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #78306: <==uncertain_firing== 63881 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #85269: <==negation-removal== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #90746: <==negation-removal== 51743 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p4_p012
        :precondition (and (at_c_p4)
                           (succ_p4_p012))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #45448: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #68313: <==closure== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #90256: <==closure== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #92023: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #12383: <==unclosure== 60327 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #26586: <==negation-removal== 90256 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #38166: <==negation-removal== 68313 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #49458: <==negation-removal== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #60327: <==uncertain_firing== 45448 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #82633: <==negation-removal== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p4_p1
        :precondition (and (succ_p4_p1)
                           (at_c_p4))
        :effect (and
                    ; #25345: <==closure== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #28154: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #76899: <==closure== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #86891: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #21171: <==negation-removal== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #53358: <==negation-removal== 76899 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #56820: <==negation-removal== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #75169: <==unclosure== 90120 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #90120: <==uncertain_firing== 86891 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #91416: <==negation-removal== 25345 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p4_p10
        :precondition (and (at_c_p4)
                           (succ_p4_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #29047: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #41615: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #63713: <==closure== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #90784: <==closure== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #45435: <==uncertain_firing== 41615 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #54711: <==negation-removal== 63713 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #59234: <==negation-removal== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #68501: <==negation-removal== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #73408: <==negation-removal== 90784 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #86987: <==unclosure== 45435 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p4_p2
        :precondition (and (succ_p4_p2)
                           (at_c_p4))
        :effect (and
                    ; #48856: origin
                    (checked_p2)

                    ; #50585: <==closure== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #60470: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #84047: <==closure== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #85750: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #16095: <==unclosure== 41881 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #23835: <==negation-removal== 50585 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #25567: <==negation-removal== 84047 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #41881: <==uncertain_firing== 85750 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #52638: <==negation-removal== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #71591: <==negation-removal== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p4_p3
        :precondition (and (succ_p4_p3)
                           (at_c_p4))
        :effect (and
                    ; #34823: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #39605: <==closure== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #49722: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #92035: <==closure== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #39474: <==negation-removal== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #53268: <==uncertain_firing== 34823 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #53907: <==unclosure== 53268 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #64212: <==negation-removal== 39605 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #69965: <==negation-removal== 92035 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #72067: <==negation-removal== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p4_p4
        :precondition (and (succ_p4_p4)
                           (at_c_p4))
        :effect (and
                    ; #10821: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #54719: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #77578: <==closure== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88044: <==closure== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #23765: <==negation-removal== 88044 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #32960: <==negation-removal== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #35636: <==negation-removal== 77578 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #44338: <==unclosure== 53052 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #53052: <==uncertain_firing== 10821 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #64448: <==negation-removal== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))))

    (:action sensecells_c_p4_p5
        :precondition (and (at_c_p4)
                           (succ_p4_p5))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #19368: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #58250: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #71608: <==closure== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #90397: <==closure== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22029: <==uncertain_firing== 19368 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #50351: <==negation-removal== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #56016: <==unclosure== 22029 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #56229: <==negation-removal== 90397 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #74529: <==negation-removal== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #76831: <==negation-removal== 71608 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p4_p6
        :precondition (and (succ_p4_p6)
                           (at_c_p4))
        :effect (and
                    ; #13143: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #48156: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #57568: <==closure== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #89501: <==closure== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #46470: <==negation-removal== 89501 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #48611: <==uncertain_firing== 13143 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #66243: <==negation-removal== 57568 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #71329: <==negation-removal== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #85792: <==negation-removal== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #88380: <==unclosure== 48611 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_c_p4_p7
        :precondition (and (at_c_p4)
                           (succ_p4_p7))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #38368: <==closure== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #42605: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #71707: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #88368: <==closure== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #42273: <==unclosure== 58560 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #58249: <==negation-removal== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #58560: <==uncertain_firing== 71707 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #64313: <==negation-removal== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #66828: <==negation-removal== 38368 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #67202: <==negation-removal== 88368 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p4_p8
        :precondition (and (succ_p4_p8)
                           (at_c_p4))
        :effect (and
                    ; #14880: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #54773: <==closure== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #65781: <==closure== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #84038: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #10891: <==negation-removal== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #18567: <==uncertain_firing== 84038 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #25349: <==unclosure== 18567 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #40436: <==negation-removal== 54773 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #57254: <==negation-removal== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #79903: <==negation-removal== 65781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p4_p9
        :precondition (and (at_c_p4)
                           (succ_p4_p9))
        :effect (and
                    ; #11123: <==closure== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #29121: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #32492: <==closure== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #39462: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #16417: <==negation-removal== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #16453: <==negation-removal== 32492 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #23407: <==negation-removal== 11123 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #27301: <==uncertain_firing== 39462 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #50587: <==unclosure== 27301 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #80038: <==negation-removal== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))))

    (:action sensecells_c_p5_p0011
        :precondition (and (succ_p5_p0011)
                           (at_c_p5))
        :effect (and
                    ; #17731: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #22587: <==closure== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #51743: <==closure== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #63881: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #25286: <==unclosure== 78306 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #31730: <==negation-removal== 22587 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #50269: <==negation-removal== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #78306: <==uncertain_firing== 63881 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #85269: <==negation-removal== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #90746: <==negation-removal== 51743 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p5_p012
        :precondition (and (at_c_p5)
                           (succ_p5_p012))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #45448: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #68313: <==closure== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #90256: <==closure== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #92023: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #12383: <==unclosure== 60327 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #26586: <==negation-removal== 90256 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #38166: <==negation-removal== 68313 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #49458: <==negation-removal== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #60327: <==uncertain_firing== 45448 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #82633: <==negation-removal== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p5_p1
        :precondition (and (at_c_p5)
                           (succ_p5_p1))
        :effect (and
                    ; #25345: <==closure== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #28154: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #76899: <==closure== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #86891: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #21171: <==negation-removal== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #53358: <==negation-removal== 76899 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #56820: <==negation-removal== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #75169: <==unclosure== 90120 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #90120: <==uncertain_firing== 86891 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #91416: <==negation-removal== 25345 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p5_p10
        :precondition (and (at_c_p5)
                           (succ_p5_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #29047: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #41615: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #63713: <==closure== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #90784: <==closure== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #45435: <==uncertain_firing== 41615 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #54711: <==negation-removal== 63713 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #59234: <==negation-removal== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #68501: <==negation-removal== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #73408: <==negation-removal== 90784 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #86987: <==unclosure== 45435 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p5_p2
        :precondition (and (succ_p5_p2)
                           (at_c_p5))
        :effect (and
                    ; #48856: origin
                    (checked_p2)

                    ; #50585: <==closure== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #60470: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #84047: <==closure== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #85750: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #16095: <==unclosure== 41881 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #23835: <==negation-removal== 50585 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #25567: <==negation-removal== 84047 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #41881: <==uncertain_firing== 85750 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #52638: <==negation-removal== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #71591: <==negation-removal== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p5_p3
        :precondition (and (succ_p5_p3)
                           (at_c_p5))
        :effect (and
                    ; #34823: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #39605: <==closure== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #49722: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #92035: <==closure== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #39474: <==negation-removal== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #53268: <==uncertain_firing== 34823 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #53907: <==unclosure== 53268 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #64212: <==negation-removal== 39605 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #69965: <==negation-removal== 92035 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #72067: <==negation-removal== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p5_p4
        :precondition (and (succ_p5_p4)
                           (at_c_p5))
        :effect (and
                    ; #10821: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #54719: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #77578: <==closure== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88044: <==closure== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #23765: <==negation-removal== 88044 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #32960: <==negation-removal== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #35636: <==negation-removal== 77578 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #44338: <==unclosure== 53052 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #53052: <==uncertain_firing== 10821 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #64448: <==negation-removal== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))))

    (:action sensecells_c_p5_p5
        :precondition (and (succ_p5_p5)
                           (at_c_p5))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #19368: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #58250: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #71608: <==closure== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #90397: <==closure== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22029: <==uncertain_firing== 19368 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #50351: <==negation-removal== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #56016: <==unclosure== 22029 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #56229: <==negation-removal== 90397 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #74529: <==negation-removal== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #76831: <==negation-removal== 71608 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p5_p6
        :precondition (and (succ_p5_p6)
                           (at_c_p5))
        :effect (and
                    ; #13143: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #48156: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #57568: <==closure== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #89501: <==closure== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #46470: <==negation-removal== 89501 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #48611: <==uncertain_firing== 13143 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #66243: <==negation-removal== 57568 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #71329: <==negation-removal== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #85792: <==negation-removal== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #88380: <==unclosure== 48611 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_c_p5_p7
        :precondition (and (succ_p5_p7)
                           (at_c_p5))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #38368: <==closure== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #42605: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #71707: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #88368: <==closure== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #42273: <==unclosure== 58560 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #58249: <==negation-removal== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #58560: <==uncertain_firing== 71707 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #64313: <==negation-removal== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #66828: <==negation-removal== 38368 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #67202: <==negation-removal== 88368 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p5_p8
        :precondition (and (succ_p5_p8)
                           (at_c_p5))
        :effect (and
                    ; #14880: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #54773: <==closure== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #65781: <==closure== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #84038: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #10891: <==negation-removal== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #18567: <==uncertain_firing== 84038 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #25349: <==unclosure== 18567 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #40436: <==negation-removal== 54773 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #57254: <==negation-removal== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #79903: <==negation-removal== 65781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p5_p9
        :precondition (and (succ_p5_p9)
                           (at_c_p5))
        :effect (and
                    ; #11123: <==closure== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #29121: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #32492: <==closure== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #39462: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #16417: <==negation-removal== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #16453: <==negation-removal== 32492 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #23407: <==negation-removal== 11123 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #27301: <==uncertain_firing== 39462 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #50587: <==unclosure== 27301 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #80038: <==negation-removal== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))))

    (:action sensecells_c_p6_p0011
        :precondition (and (at_c_p6)
                           (succ_p6_p0011))
        :effect (and
                    ; #17731: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #22587: <==closure== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #51743: <==closure== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #63881: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #25286: <==unclosure== 78306 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #31730: <==negation-removal== 22587 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #50269: <==negation-removal== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #78306: <==uncertain_firing== 63881 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #85269: <==negation-removal== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #90746: <==negation-removal== 51743 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p6_p012
        :precondition (and (at_c_p6)
                           (succ_p6_p012))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #45448: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #68313: <==closure== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #90256: <==closure== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #92023: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #12383: <==unclosure== 60327 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #26586: <==negation-removal== 90256 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #38166: <==negation-removal== 68313 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #49458: <==negation-removal== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #60327: <==uncertain_firing== 45448 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #82633: <==negation-removal== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p6_p1
        :precondition (and (at_c_p6)
                           (succ_p6_p1))
        :effect (and
                    ; #25345: <==closure== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #28154: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #76899: <==closure== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #86891: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #21171: <==negation-removal== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #53358: <==negation-removal== 76899 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #56820: <==negation-removal== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #75169: <==unclosure== 90120 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #90120: <==uncertain_firing== 86891 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #91416: <==negation-removal== 25345 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p6_p10
        :precondition (and (at_c_p6)
                           (succ_p6_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #29047: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #41615: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #63713: <==closure== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #90784: <==closure== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #45435: <==uncertain_firing== 41615 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #54711: <==negation-removal== 63713 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #59234: <==negation-removal== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #68501: <==negation-removal== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #73408: <==negation-removal== 90784 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #86987: <==unclosure== 45435 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p6_p2
        :precondition (and (at_c_p6)
                           (succ_p6_p2))
        :effect (and
                    ; #48856: origin
                    (checked_p2)

                    ; #50585: <==closure== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #60470: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #84047: <==closure== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #85750: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #16095: <==unclosure== 41881 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #23835: <==negation-removal== 50585 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #25567: <==negation-removal== 84047 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #41881: <==uncertain_firing== 85750 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #52638: <==negation-removal== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #71591: <==negation-removal== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p6_p3
        :precondition (and (at_c_p6)
                           (succ_p6_p3))
        :effect (and
                    ; #34823: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #39605: <==closure== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #49722: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #92035: <==closure== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #39474: <==negation-removal== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #53268: <==uncertain_firing== 34823 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #53907: <==unclosure== 53268 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #64212: <==negation-removal== 39605 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #69965: <==negation-removal== 92035 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #72067: <==negation-removal== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p6_p4
        :precondition (and (at_c_p6)
                           (succ_p6_p4))
        :effect (and
                    ; #10821: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #54719: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #77578: <==closure== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88044: <==closure== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #23765: <==negation-removal== 88044 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #32960: <==negation-removal== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #35636: <==negation-removal== 77578 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #44338: <==unclosure== 53052 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #53052: <==uncertain_firing== 10821 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #64448: <==negation-removal== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))))

    (:action sensecells_c_p6_p5
        :precondition (and (at_c_p6)
                           (succ_p6_p5))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #19368: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #58250: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #71608: <==closure== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #90397: <==closure== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22029: <==uncertain_firing== 19368 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #50351: <==negation-removal== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #56016: <==unclosure== 22029 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #56229: <==negation-removal== 90397 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #74529: <==negation-removal== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #76831: <==negation-removal== 71608 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p6_p6
        :precondition (and (at_c_p6)
                           (succ_p6_p6))
        :effect (and
                    ; #13143: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #48156: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #57568: <==closure== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #89501: <==closure== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #46470: <==negation-removal== 89501 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #48611: <==uncertain_firing== 13143 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #66243: <==negation-removal== 57568 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #71329: <==negation-removal== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #85792: <==negation-removal== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #88380: <==unclosure== 48611 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_c_p6_p7
        :precondition (and (at_c_p6)
                           (succ_p6_p7))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #38368: <==closure== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #42605: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #71707: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #88368: <==closure== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #42273: <==unclosure== 58560 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #58249: <==negation-removal== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #58560: <==uncertain_firing== 71707 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #64313: <==negation-removal== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #66828: <==negation-removal== 38368 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #67202: <==negation-removal== 88368 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p6_p8
        :precondition (and (at_c_p6)
                           (succ_p6_p8))
        :effect (and
                    ; #14880: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #54773: <==closure== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #65781: <==closure== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #84038: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #10891: <==negation-removal== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #18567: <==uncertain_firing== 84038 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #25349: <==unclosure== 18567 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #40436: <==negation-removal== 54773 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #57254: <==negation-removal== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #79903: <==negation-removal== 65781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p6_p9
        :precondition (and (at_c_p6)
                           (succ_p6_p9))
        :effect (and
                    ; #11123: <==closure== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #29121: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #32492: <==closure== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #39462: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #16417: <==negation-removal== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #16453: <==negation-removal== 32492 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #23407: <==negation-removal== 11123 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #27301: <==uncertain_firing== 39462 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #50587: <==unclosure== 27301 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #80038: <==negation-removal== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))))

    (:action sensecells_c_p7_p0011
        :precondition (and (at_c_p7)
                           (succ_p7_p0011))
        :effect (and
                    ; #17731: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #22587: <==closure== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #51743: <==closure== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #63881: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #25286: <==unclosure== 78306 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #31730: <==negation-removal== 22587 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #50269: <==negation-removal== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #78306: <==uncertain_firing== 63881 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #85269: <==negation-removal== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #90746: <==negation-removal== 51743 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p7_p012
        :precondition (and (at_c_p7)
                           (succ_p7_p012))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #45448: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #68313: <==closure== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #90256: <==closure== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #92023: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #12383: <==unclosure== 60327 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #26586: <==negation-removal== 90256 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #38166: <==negation-removal== 68313 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #49458: <==negation-removal== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #60327: <==uncertain_firing== 45448 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #82633: <==negation-removal== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p7_p1
        :precondition (and (succ_p7_p1)
                           (at_c_p7))
        :effect (and
                    ; #25345: <==closure== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #28154: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #76899: <==closure== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #86891: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #21171: <==negation-removal== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #53358: <==negation-removal== 76899 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #56820: <==negation-removal== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #75169: <==unclosure== 90120 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #90120: <==uncertain_firing== 86891 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #91416: <==negation-removal== 25345 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p7_p10
        :precondition (and (at_c_p7)
                           (succ_p7_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #29047: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #41615: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #63713: <==closure== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #90784: <==closure== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #45435: <==uncertain_firing== 41615 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #54711: <==negation-removal== 63713 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #59234: <==negation-removal== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #68501: <==negation-removal== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #73408: <==negation-removal== 90784 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #86987: <==unclosure== 45435 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p7_p2
        :precondition (and (at_c_p7)
                           (succ_p7_p2))
        :effect (and
                    ; #48856: origin
                    (checked_p2)

                    ; #50585: <==closure== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #60470: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #84047: <==closure== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #85750: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #16095: <==unclosure== 41881 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #23835: <==negation-removal== 50585 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #25567: <==negation-removal== 84047 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #41881: <==uncertain_firing== 85750 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #52638: <==negation-removal== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #71591: <==negation-removal== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p7_p3
        :precondition (and (at_c_p7)
                           (succ_p7_p3))
        :effect (and
                    ; #34823: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #39605: <==closure== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #49722: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #92035: <==closure== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #39474: <==negation-removal== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #53268: <==uncertain_firing== 34823 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #53907: <==unclosure== 53268 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #64212: <==negation-removal== 39605 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #69965: <==negation-removal== 92035 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #72067: <==negation-removal== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p7_p4
        :precondition (and (succ_p7_p4)
                           (at_c_p7))
        :effect (and
                    ; #10821: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #54719: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #77578: <==closure== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88044: <==closure== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #23765: <==negation-removal== 88044 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #32960: <==negation-removal== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #35636: <==negation-removal== 77578 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #44338: <==unclosure== 53052 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #53052: <==uncertain_firing== 10821 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #64448: <==negation-removal== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))))

    (:action sensecells_c_p7_p5
        :precondition (and (at_c_p7)
                           (succ_p7_p5))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #19368: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #58250: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #71608: <==closure== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #90397: <==closure== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22029: <==uncertain_firing== 19368 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #50351: <==negation-removal== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #56016: <==unclosure== 22029 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #56229: <==negation-removal== 90397 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #74529: <==negation-removal== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #76831: <==negation-removal== 71608 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p7_p6
        :precondition (and (at_c_p7)
                           (succ_p7_p6))
        :effect (and
                    ; #13143: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #48156: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #57568: <==closure== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #89501: <==closure== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #46470: <==negation-removal== 89501 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #48611: <==uncertain_firing== 13143 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #66243: <==negation-removal== 57568 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #71329: <==negation-removal== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #85792: <==negation-removal== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #88380: <==unclosure== 48611 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_c_p7_p7
        :precondition (and (at_c_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #38368: <==closure== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #42605: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #71707: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #88368: <==closure== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #42273: <==unclosure== 58560 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #58249: <==negation-removal== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #58560: <==uncertain_firing== 71707 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #64313: <==negation-removal== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #66828: <==negation-removal== 38368 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #67202: <==negation-removal== 88368 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p7_p8
        :precondition (and (at_c_p7)
                           (succ_p7_p8))
        :effect (and
                    ; #14880: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #54773: <==closure== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #65781: <==closure== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #84038: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #10891: <==negation-removal== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #18567: <==uncertain_firing== 84038 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #25349: <==unclosure== 18567 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #40436: <==negation-removal== 54773 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #57254: <==negation-removal== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #79903: <==negation-removal== 65781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p7_p9
        :precondition (and (at_c_p7)
                           (succ_p7_p9))
        :effect (and
                    ; #11123: <==closure== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #29121: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #32492: <==closure== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #39462: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #16417: <==negation-removal== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #16453: <==negation-removal== 32492 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #23407: <==negation-removal== 11123 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #27301: <==uncertain_firing== 39462 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #50587: <==unclosure== 27301 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #80038: <==negation-removal== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))))

    (:action sensecells_c_p8_p0011
        :precondition (and (succ_p8_p0011)
                           (at_c_p8))
        :effect (and
                    ; #17731: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #22587: <==closure== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #51743: <==closure== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #63881: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #25286: <==unclosure== 78306 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #31730: <==negation-removal== 22587 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #50269: <==negation-removal== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #78306: <==uncertain_firing== 63881 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #85269: <==negation-removal== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #90746: <==negation-removal== 51743 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p8_p012
        :precondition (and (succ_p8_p012)
                           (at_c_p8))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #45448: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #68313: <==closure== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #90256: <==closure== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #92023: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #12383: <==unclosure== 60327 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #26586: <==negation-removal== 90256 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #38166: <==negation-removal== 68313 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #49458: <==negation-removal== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #60327: <==uncertain_firing== 45448 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #82633: <==negation-removal== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p8_p1
        :precondition (and (at_c_p8)
                           (succ_p8_p1))
        :effect (and
                    ; #25345: <==closure== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #28154: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #76899: <==closure== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #86891: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #21171: <==negation-removal== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #53358: <==negation-removal== 76899 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #56820: <==negation-removal== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #75169: <==unclosure== 90120 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #90120: <==uncertain_firing== 86891 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #91416: <==negation-removal== 25345 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p8_p10
        :precondition (and (at_c_p8)
                           (succ_p8_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #29047: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #41615: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #63713: <==closure== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #90784: <==closure== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #45435: <==uncertain_firing== 41615 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #54711: <==negation-removal== 63713 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #59234: <==negation-removal== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #68501: <==negation-removal== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #73408: <==negation-removal== 90784 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #86987: <==unclosure== 45435 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p8_p2
        :precondition (and (at_c_p8)
                           (succ_p8_p2))
        :effect (and
                    ; #48856: origin
                    (checked_p2)

                    ; #50585: <==closure== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #60470: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #84047: <==closure== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #85750: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #16095: <==unclosure== 41881 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #23835: <==negation-removal== 50585 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #25567: <==negation-removal== 84047 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #41881: <==uncertain_firing== 85750 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #52638: <==negation-removal== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #71591: <==negation-removal== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p8_p3
        :precondition (and (succ_p8_p3)
                           (at_c_p8))
        :effect (and
                    ; #34823: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #39605: <==closure== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #49722: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #92035: <==closure== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #39474: <==negation-removal== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #53268: <==uncertain_firing== 34823 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #53907: <==unclosure== 53268 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #64212: <==negation-removal== 39605 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #69965: <==negation-removal== 92035 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #72067: <==negation-removal== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p8_p4
        :precondition (and (at_c_p8)
                           (succ_p8_p4))
        :effect (and
                    ; #10821: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #54719: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #77578: <==closure== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88044: <==closure== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #23765: <==negation-removal== 88044 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #32960: <==negation-removal== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #35636: <==negation-removal== 77578 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #44338: <==unclosure== 53052 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #53052: <==uncertain_firing== 10821 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #64448: <==negation-removal== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))))

    (:action sensecells_c_p8_p5
        :precondition (and (at_c_p8)
                           (succ_p8_p5))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #19368: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #58250: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #71608: <==closure== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #90397: <==closure== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22029: <==uncertain_firing== 19368 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #50351: <==negation-removal== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #56016: <==unclosure== 22029 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #56229: <==negation-removal== 90397 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #74529: <==negation-removal== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #76831: <==negation-removal== 71608 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p8_p6
        :precondition (and (at_c_p8)
                           (succ_p8_p6))
        :effect (and
                    ; #13143: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #48156: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #57568: <==closure== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #89501: <==closure== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #46470: <==negation-removal== 89501 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #48611: <==uncertain_firing== 13143 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #66243: <==negation-removal== 57568 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #71329: <==negation-removal== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #85792: <==negation-removal== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #88380: <==unclosure== 48611 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_c_p8_p7
        :precondition (and (at_c_p8)
                           (succ_p8_p7))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #38368: <==closure== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #42605: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #71707: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #88368: <==closure== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #42273: <==unclosure== 58560 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #58249: <==negation-removal== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #58560: <==uncertain_firing== 71707 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #64313: <==negation-removal== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #66828: <==negation-removal== 38368 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #67202: <==negation-removal== 88368 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p8_p8
        :precondition (and (at_c_p8)
                           (succ_p8_p8))
        :effect (and
                    ; #14880: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #54773: <==closure== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #65781: <==closure== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #84038: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #10891: <==negation-removal== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #18567: <==uncertain_firing== 84038 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #25349: <==unclosure== 18567 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #40436: <==negation-removal== 54773 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #57254: <==negation-removal== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #79903: <==negation-removal== 65781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p8_p9
        :precondition (and (succ_p8_p9)
                           (at_c_p8))
        :effect (and
                    ; #11123: <==closure== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #29121: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #32492: <==closure== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #39462: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #16417: <==negation-removal== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #16453: <==negation-removal== 32492 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #23407: <==negation-removal== 11123 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #27301: <==uncertain_firing== 39462 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #50587: <==unclosure== 27301 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #80038: <==negation-removal== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))))

    (:action sensecells_c_p9_p0011
        :precondition (and (succ_p9_p0011)
                           (at_c_p9))
        :effect (and
                    ; #17731: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #22587: <==closure== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #51743: <==closure== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #63881: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #25286: <==unclosure== 78306 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #31730: <==negation-removal== 22587 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #50269: <==negation-removal== 17731 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #78306: <==uncertain_firing== 63881 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #85269: <==negation-removal== 63881 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #90746: <==negation-removal== 51743 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p9_p012
        :precondition (and (succ_p9_p012)
                           (at_c_p9))
        :effect (and
                    ; #37112: origin
                    (checked_p012)

                    ; #45448: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #68313: <==closure== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #90256: <==closure== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #92023: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #12383: <==unclosure== 60327 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #26586: <==negation-removal== 90256 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #38166: <==negation-removal== 68313 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #49458: <==negation-removal== 92023 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #60327: <==uncertain_firing== 45448 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #82633: <==negation-removal== 45448 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p9_p1
        :precondition (and (succ_p9_p1)
                           (at_c_p9))
        :effect (and
                    ; #25345: <==closure== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #28154: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #76899: <==closure== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #86891: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #21171: <==negation-removal== 28154 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #53358: <==negation-removal== 76899 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #56820: <==negation-removal== 86891 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #75169: <==unclosure== 90120 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #90120: <==uncertain_firing== 86891 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #91416: <==negation-removal== 25345 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p9_p10
        :precondition (and (at_c_p9)
                           (succ_p9_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #29047: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #41615: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #63713: <==closure== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #90784: <==closure== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #45435: <==uncertain_firing== 41615 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #54711: <==negation-removal== 63713 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #59234: <==negation-removal== 29047 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #68501: <==negation-removal== 41615 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #73408: <==negation-removal== 90784 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #86987: <==unclosure== 45435 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p9_p2
        :precondition (and (succ_p9_p2)
                           (at_c_p9))
        :effect (and
                    ; #48856: origin
                    (checked_p2)

                    ; #50585: <==closure== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #60470: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #84047: <==closure== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #85750: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #16095: <==unclosure== 41881 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #23835: <==negation-removal== 50585 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #25567: <==negation-removal== 84047 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #41881: <==uncertain_firing== 85750 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #52638: <==negation-removal== 60470 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #71591: <==negation-removal== 85750 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p9_p3
        :precondition (and (succ_p9_p3)
                           (at_c_p9))
        :effect (and
                    ; #34823: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #39605: <==closure== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #49722: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #92035: <==closure== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #39474: <==negation-removal== 49722 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #53268: <==uncertain_firing== 34823 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #53907: <==unclosure== 53268 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #64212: <==negation-removal== 39605 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #69965: <==negation-removal== 92035 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #72067: <==negation-removal== 34823 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p9_p4
        :precondition (and (at_c_p9)
                           (succ_p9_p4))
        :effect (and
                    ; #10821: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #26263: origin
                    (checked_p4)

                    ; #54719: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #77578: <==closure== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88044: <==closure== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #23765: <==negation-removal== 88044 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #32960: <==negation-removal== 54719 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #35636: <==negation-removal== 77578 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #44338: <==unclosure== 53052 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #53052: <==uncertain_firing== 10821 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #64448: <==negation-removal== 10821 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))))

    (:action sensecells_c_p9_p5
        :precondition (and (at_c_p9)
                           (succ_p9_p5))
        :effect (and
                    ; #17138: origin
                    (checked_p5)

                    ; #19368: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #58250: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #71608: <==closure== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #90397: <==closure== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22029: <==uncertain_firing== 19368 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #50351: <==negation-removal== 58250 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #56016: <==unclosure== 22029 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #56229: <==negation-removal== 90397 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #74529: <==negation-removal== 19368 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #76831: <==negation-removal== 71608 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p9_p6
        :precondition (and (succ_p9_p6)
                           (at_c_p9))
        :effect (and
                    ; #13143: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #48156: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #57568: <==closure== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #89501: <==closure== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #46470: <==negation-removal== 89501 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #48611: <==uncertain_firing== 13143 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #66243: <==negation-removal== 57568 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #71329: <==negation-removal== 48156 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #85792: <==negation-removal== 13143 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #88380: <==unclosure== 48611 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_c_p9_p7
        :precondition (and (succ_p9_p7)
                           (at_c_p9))
        :effect (and
                    ; #13291: origin
                    (checked_p7)

                    ; #38368: <==closure== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #42605: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #71707: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #88368: <==closure== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #42273: <==unclosure== 58560 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #58249: <==negation-removal== 71707 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #58560: <==uncertain_firing== 71707 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #64313: <==negation-removal== 42605 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #66828: <==negation-removal== 38368 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #67202: <==negation-removal== 88368 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p9_p8
        :precondition (and (succ_p9_p8)
                           (at_c_p9))
        :effect (and
                    ; #14880: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #54773: <==closure== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #65781: <==closure== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #84038: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #10891: <==negation-removal== 14880 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #18567: <==uncertain_firing== 84038 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #25349: <==unclosure== 18567 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #40436: <==negation-removal== 54773 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #57254: <==negation-removal== 84038 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))

                    ; #79903: <==negation-removal== 65781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p9_p9
        :precondition (and (succ_p9_p9)
                           (at_c_p9))
        :effect (and
                    ; #11123: <==closure== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #29121: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #32492: <==closure== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #39462: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #16417: <==negation-removal== 29121 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #16453: <==negation-removal== 32492 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #23407: <==negation-removal== 11123 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #27301: <==uncertain_firing== 39462 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #50587: <==unclosure== 27301 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #80038: <==negation-removal== 39462 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))))

    (:action sensecells_d_p0011_p0011
        :precondition (and (at_d_p0011)
                           (succ_p0011_p0011))
        :effect (and
                    ; #55195: <==closure== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #63093: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #69704: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #85189: <==closure== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #15036: <==unclosure== 86465 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #26295: <==negation-removal== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #33118: <==negation-removal== 55195 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #50612: <==negation-removal== 85189 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #86465: <==uncertain_firing== 63093 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #92855: <==negation-removal== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p0011_p012
        :precondition (and (succ_p0011_p012)
                           (at_d_p0011))
        :effect (and
                    ; #21299: <==closure== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #22000: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #37467: <==closure== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #87535: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #21782: <==negation-removal== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #37361: <==negation-removal== 37467 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #57869: <==uncertain_firing== 22000 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #74127: <==negation-removal== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #89390: <==negation-removal== 21299 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #91501: <==unclosure== 57869 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p0011_p1
        :precondition (and (at_d_p0011)
                           (succ_p0011_p1))
        :effect (and
                    ; #19399: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #57420: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #66895: <==closure== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #73988: <==closure== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #10465: <==negation-removal== 66895 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #13267: <==uncertain_firing== 57420 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #22162: <==negation-removal== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #76446: <==negation-removal== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #80020: <==unclosure== 13267 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #86699: <==negation-removal== 73988 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p0011_p10
        :precondition (and (succ_p0011_p10)
                           (at_d_p0011))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #16313: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #20395: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #51524: <==closure== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #52314: <==closure== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #51643: <==negation-removal== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #53027: <==negation-removal== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #53184: <==unclosure== 84464 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84464: <==uncertain_firing== 16313 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #89058: <==negation-removal== 52314 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #89184: <==negation-removal== 51524 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))))

    (:action sensecells_d_p0011_p2
        :precondition (and (succ_p0011_p2)
                           (at_d_p0011))
        :effect (and
                    ; #30102: <==closure== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #30762: <==closure== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #49728: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #57026: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #18596: <==unclosure== 65133 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #25861: <==negation-removal== 30762 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #37733: <==negation-removal== 30102 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #65133: <==uncertain_firing== 57026 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #71970: <==negation-removal== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #89478: <==negation-removal== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p0011_p3
        :precondition (and (at_d_p0011)
                           (succ_p0011_p3))
        :effect (and
                    ; #42789: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #82355: <==closure== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #83832: <==closure== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #95518: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #18015: <==negation-removal== 82355 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #36732: <==negation-removal== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #50533: <==negation-removal== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #52513: <==unclosure== 61051 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #61051: <==uncertain_firing== 42789 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #77259: <==negation-removal== 83832 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))))

    (:action sensecells_d_p0011_p4
        :precondition (and (succ_p0011_p4)
                           (at_d_p0011))
        :effect (and
                    ; #26263: origin
                    (checked_p4)

                    ; #42300: <==closure== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #61211: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #86771: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #90017: <==closure== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18742: <==negation-removal== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #34522: <==negation-removal== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #36339: <==uncertain_firing== 86771 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #62680: <==unclosure== 36339 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #65979: <==negation-removal== 42300 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #84201: <==negation-removal== 90017 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))))

    (:action sensecells_d_p0011_p5
        :precondition (and (succ_p0011_p5)
                           (at_d_p0011))
        :effect (and
                    ; #12991: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #19580: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #59024: <==closure== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63789: <==closure== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #17665: <==negation-removal== 63789 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #29806: <==unclosure== 47961 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #47961: <==uncertain_firing== 12991 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #50455: <==negation-removal== 59024 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #55301: <==negation-removal== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #81983: <==negation-removal== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))))

    (:action sensecells_d_p0011_p6
        :precondition (and (at_d_p0011)
                           (succ_p0011_p6))
        :effect (and
                    ; #20924: <==closure== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #36164: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #82075: <==closure== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #89657: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #17277: <==negation-removal== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #21479: <==negation-removal== 20924 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #48838: <==negation-removal== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #58267: <==uncertain_firing== 89657 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #65665: <==negation-removal== 82075 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #85066: <==unclosure== 58267 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_d_p0011_p7
        :precondition (and (at_d_p0011)
                           (succ_p0011_p7))
        :effect (and
                    ; #10198: <==closure== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #46079: <==closure== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73691: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #82613: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56380: <==unclosure== 56556 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #56556: <==uncertain_firing== 73691 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #57358: <==negation-removal== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #73904: <==negation-removal== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #76669: <==negation-removal== 46079 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #89363: <==negation-removal== 10198 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p0011_p8
        :precondition (and (succ_p0011_p8)
                           (at_d_p0011))
        :effect (and
                    ; #16055: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #29596: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #60818: <==closure== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #67665: <==closure== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #12829: <==negation-removal== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #14252: <==unclosure== 34894 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #25840: <==negation-removal== 60818 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #33509: <==negation-removal== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))

                    ; #34894: <==uncertain_firing== 29596 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #61073: <==negation-removal== 67665 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))))

    (:action sensecells_d_p0011_p9
        :precondition (and (succ_p0011_p9)
                           (at_d_p0011))
        :effect (and
                    ; #61442: <==closure== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #61573: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #84388: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #86425: <==closure== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #27814: <==negation-removal== 61442 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #32263: <==uncertain_firing== 84388 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #44414: <==negation-removal== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #47316: <==negation-removal== 86425 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #51781: <==unclosure== 32263 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66563: <==negation-removal== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p012_p0011
        :precondition (and (succ_p012_p0011)
                           (at_d_p012))
        :effect (and
                    ; #55195: <==closure== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #63093: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #69704: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #85189: <==closure== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #15036: <==unclosure== 86465 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #26295: <==negation-removal== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #33118: <==negation-removal== 55195 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #50612: <==negation-removal== 85189 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #86465: <==uncertain_firing== 63093 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #92855: <==negation-removal== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p012_p012
        :precondition (and (succ_p012_p012)
                           (at_d_p012))
        :effect (and
                    ; #21299: <==closure== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #22000: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #37467: <==closure== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #87535: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #21782: <==negation-removal== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #37361: <==negation-removal== 37467 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #57869: <==uncertain_firing== 22000 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #74127: <==negation-removal== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #89390: <==negation-removal== 21299 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #91501: <==unclosure== 57869 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p012_p1
        :precondition (and (succ_p012_p1)
                           (at_d_p012))
        :effect (and
                    ; #19399: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #57420: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #66895: <==closure== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #73988: <==closure== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #10465: <==negation-removal== 66895 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #13267: <==uncertain_firing== 57420 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #22162: <==negation-removal== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #76446: <==negation-removal== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #80020: <==unclosure== 13267 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #86699: <==negation-removal== 73988 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p012_p10
        :precondition (and (succ_p012_p10)
                           (at_d_p012))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #16313: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #20395: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #51524: <==closure== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #52314: <==closure== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #51643: <==negation-removal== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #53027: <==negation-removal== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #53184: <==unclosure== 84464 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84464: <==uncertain_firing== 16313 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #89058: <==negation-removal== 52314 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #89184: <==negation-removal== 51524 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))))

    (:action sensecells_d_p012_p2
        :precondition (and (succ_p012_p2)
                           (at_d_p012))
        :effect (and
                    ; #30102: <==closure== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #30762: <==closure== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #49728: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #57026: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #18596: <==unclosure== 65133 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #25861: <==negation-removal== 30762 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #37733: <==negation-removal== 30102 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #65133: <==uncertain_firing== 57026 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #71970: <==negation-removal== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #89478: <==negation-removal== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p012_p3
        :precondition (and (succ_p012_p3)
                           (at_d_p012))
        :effect (and
                    ; #42789: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #82355: <==closure== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #83832: <==closure== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #95518: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #18015: <==negation-removal== 82355 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #36732: <==negation-removal== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #50533: <==negation-removal== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #52513: <==unclosure== 61051 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #61051: <==uncertain_firing== 42789 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #77259: <==negation-removal== 83832 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))))

    (:action sensecells_d_p012_p4
        :precondition (and (succ_p012_p4)
                           (at_d_p012))
        :effect (and
                    ; #26263: origin
                    (checked_p4)

                    ; #42300: <==closure== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #61211: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #86771: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #90017: <==closure== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18742: <==negation-removal== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #34522: <==negation-removal== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #36339: <==uncertain_firing== 86771 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #62680: <==unclosure== 36339 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #65979: <==negation-removal== 42300 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #84201: <==negation-removal== 90017 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))))

    (:action sensecells_d_p012_p5
        :precondition (and (succ_p012_p5)
                           (at_d_p012))
        :effect (and
                    ; #12991: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #19580: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #59024: <==closure== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63789: <==closure== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #17665: <==negation-removal== 63789 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #29806: <==unclosure== 47961 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #47961: <==uncertain_firing== 12991 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #50455: <==negation-removal== 59024 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #55301: <==negation-removal== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #81983: <==negation-removal== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))))

    (:action sensecells_d_p012_p6
        :precondition (and (succ_p012_p6)
                           (at_d_p012))
        :effect (and
                    ; #20924: <==closure== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #36164: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #82075: <==closure== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #89657: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #17277: <==negation-removal== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #21479: <==negation-removal== 20924 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #48838: <==negation-removal== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #58267: <==uncertain_firing== 89657 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #65665: <==negation-removal== 82075 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #85066: <==unclosure== 58267 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_d_p012_p7
        :precondition (and (succ_p012_p7)
                           (at_d_p012))
        :effect (and
                    ; #10198: <==closure== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #46079: <==closure== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73691: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #82613: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56380: <==unclosure== 56556 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #56556: <==uncertain_firing== 73691 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #57358: <==negation-removal== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #73904: <==negation-removal== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #76669: <==negation-removal== 46079 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #89363: <==negation-removal== 10198 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p012_p8
        :precondition (and (succ_p012_p8)
                           (at_d_p012))
        :effect (and
                    ; #16055: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #29596: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #60818: <==closure== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #67665: <==closure== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #12829: <==negation-removal== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #14252: <==unclosure== 34894 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #25840: <==negation-removal== 60818 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #33509: <==negation-removal== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))

                    ; #34894: <==uncertain_firing== 29596 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #61073: <==negation-removal== 67665 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))))

    (:action sensecells_d_p012_p9
        :precondition (and (succ_p012_p9)
                           (at_d_p012))
        :effect (and
                    ; #61442: <==closure== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #61573: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #84388: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #86425: <==closure== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #27814: <==negation-removal== 61442 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #32263: <==uncertain_firing== 84388 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #44414: <==negation-removal== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #47316: <==negation-removal== 86425 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #51781: <==unclosure== 32263 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66563: <==negation-removal== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p10_p0011
        :precondition (and (succ_p10_p0011)
                           (at_d_p10))
        :effect (and
                    ; #55195: <==closure== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #63093: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #69704: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #85189: <==closure== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #15036: <==unclosure== 86465 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #26295: <==negation-removal== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #33118: <==negation-removal== 55195 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #50612: <==negation-removal== 85189 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #86465: <==uncertain_firing== 63093 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #92855: <==negation-removal== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p10_p012
        :precondition (and (succ_p10_p012)
                           (at_d_p10))
        :effect (and
                    ; #21299: <==closure== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #22000: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #37467: <==closure== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #87535: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #21782: <==negation-removal== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #37361: <==negation-removal== 37467 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #57869: <==uncertain_firing== 22000 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #74127: <==negation-removal== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #89390: <==negation-removal== 21299 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #91501: <==unclosure== 57869 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p10_p1
        :precondition (and (at_d_p10)
                           (succ_p10_p1))
        :effect (and
                    ; #19399: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #57420: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #66895: <==closure== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #73988: <==closure== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #10465: <==negation-removal== 66895 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #13267: <==uncertain_firing== 57420 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #22162: <==negation-removal== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #76446: <==negation-removal== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #80020: <==unclosure== 13267 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #86699: <==negation-removal== 73988 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p10_p10
        :precondition (and (succ_p10_p10)
                           (at_d_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #16313: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #20395: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #51524: <==closure== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #52314: <==closure== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #51643: <==negation-removal== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #53027: <==negation-removal== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #53184: <==unclosure== 84464 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84464: <==uncertain_firing== 16313 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #89058: <==negation-removal== 52314 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #89184: <==negation-removal== 51524 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))))

    (:action sensecells_d_p10_p2
        :precondition (and (succ_p10_p2)
                           (at_d_p10))
        :effect (and
                    ; #30102: <==closure== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #30762: <==closure== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #49728: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #57026: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #18596: <==unclosure== 65133 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #25861: <==negation-removal== 30762 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #37733: <==negation-removal== 30102 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #65133: <==uncertain_firing== 57026 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #71970: <==negation-removal== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #89478: <==negation-removal== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p10_p3
        :precondition (and (succ_p10_p3)
                           (at_d_p10))
        :effect (and
                    ; #42789: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #82355: <==closure== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #83832: <==closure== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #95518: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #18015: <==negation-removal== 82355 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #36732: <==negation-removal== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #50533: <==negation-removal== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #52513: <==unclosure== 61051 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #61051: <==uncertain_firing== 42789 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #77259: <==negation-removal== 83832 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))))

    (:action sensecells_d_p10_p4
        :precondition (and (succ_p10_p4)
                           (at_d_p10))
        :effect (and
                    ; #26263: origin
                    (checked_p4)

                    ; #42300: <==closure== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #61211: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #86771: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #90017: <==closure== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18742: <==negation-removal== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #34522: <==negation-removal== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #36339: <==uncertain_firing== 86771 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #62680: <==unclosure== 36339 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #65979: <==negation-removal== 42300 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #84201: <==negation-removal== 90017 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))))

    (:action sensecells_d_p10_p5
        :precondition (and (succ_p10_p5)
                           (at_d_p10))
        :effect (and
                    ; #12991: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #19580: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #59024: <==closure== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63789: <==closure== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #17665: <==negation-removal== 63789 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #29806: <==unclosure== 47961 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #47961: <==uncertain_firing== 12991 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #50455: <==negation-removal== 59024 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #55301: <==negation-removal== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #81983: <==negation-removal== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))))

    (:action sensecells_d_p10_p6
        :precondition (and (at_d_p10)
                           (succ_p10_p6))
        :effect (and
                    ; #20924: <==closure== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #36164: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #82075: <==closure== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #89657: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #17277: <==negation-removal== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #21479: <==negation-removal== 20924 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #48838: <==negation-removal== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #58267: <==uncertain_firing== 89657 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #65665: <==negation-removal== 82075 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #85066: <==unclosure== 58267 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_d_p10_p7
        :precondition (and (succ_p10_p7)
                           (at_d_p10))
        :effect (and
                    ; #10198: <==closure== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #46079: <==closure== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73691: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #82613: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56380: <==unclosure== 56556 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #56556: <==uncertain_firing== 73691 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #57358: <==negation-removal== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #73904: <==negation-removal== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #76669: <==negation-removal== 46079 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #89363: <==negation-removal== 10198 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p10_p8
        :precondition (and (succ_p10_p8)
                           (at_d_p10))
        :effect (and
                    ; #16055: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #29596: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #60818: <==closure== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #67665: <==closure== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #12829: <==negation-removal== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #14252: <==unclosure== 34894 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #25840: <==negation-removal== 60818 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #33509: <==negation-removal== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))

                    ; #34894: <==uncertain_firing== 29596 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #61073: <==negation-removal== 67665 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))))

    (:action sensecells_d_p10_p9
        :precondition (and (succ_p10_p9)
                           (at_d_p10))
        :effect (and
                    ; #61442: <==closure== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #61573: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #84388: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #86425: <==closure== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #27814: <==negation-removal== 61442 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #32263: <==uncertain_firing== 84388 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #44414: <==negation-removal== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #47316: <==negation-removal== 86425 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #51781: <==unclosure== 32263 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66563: <==negation-removal== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p1_p0011
        :precondition (and (at_d_p1)
                           (succ_p1_p0011))
        :effect (and
                    ; #55195: <==closure== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #63093: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #69704: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #85189: <==closure== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #15036: <==unclosure== 86465 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #26295: <==negation-removal== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #33118: <==negation-removal== 55195 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #50612: <==negation-removal== 85189 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #86465: <==uncertain_firing== 63093 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #92855: <==negation-removal== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p1_p012
        :precondition (and (succ_p1_p012)
                           (at_d_p1))
        :effect (and
                    ; #21299: <==closure== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #22000: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #37467: <==closure== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #87535: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #21782: <==negation-removal== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #37361: <==negation-removal== 37467 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #57869: <==uncertain_firing== 22000 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #74127: <==negation-removal== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #89390: <==negation-removal== 21299 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #91501: <==unclosure== 57869 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p1_p1
        :precondition (and (succ_p1_p1)
                           (at_d_p1))
        :effect (and
                    ; #19399: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #57420: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #66895: <==closure== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #73988: <==closure== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #10465: <==negation-removal== 66895 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #13267: <==uncertain_firing== 57420 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #22162: <==negation-removal== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #76446: <==negation-removal== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #80020: <==unclosure== 13267 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #86699: <==negation-removal== 73988 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p1_p10
        :precondition (and (succ_p1_p10)
                           (at_d_p1))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #16313: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #20395: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #51524: <==closure== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #52314: <==closure== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #51643: <==negation-removal== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #53027: <==negation-removal== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #53184: <==unclosure== 84464 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84464: <==uncertain_firing== 16313 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #89058: <==negation-removal== 52314 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #89184: <==negation-removal== 51524 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))))

    (:action sensecells_d_p1_p2
        :precondition (and (at_d_p1)
                           (succ_p1_p2))
        :effect (and
                    ; #30102: <==closure== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #30762: <==closure== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #49728: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #57026: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #18596: <==unclosure== 65133 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #25861: <==negation-removal== 30762 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #37733: <==negation-removal== 30102 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #65133: <==uncertain_firing== 57026 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #71970: <==negation-removal== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #89478: <==negation-removal== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p1_p3
        :precondition (and (succ_p1_p3)
                           (at_d_p1))
        :effect (and
                    ; #42789: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #82355: <==closure== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #83832: <==closure== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #95518: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #18015: <==negation-removal== 82355 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #36732: <==negation-removal== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #50533: <==negation-removal== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #52513: <==unclosure== 61051 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #61051: <==uncertain_firing== 42789 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #77259: <==negation-removal== 83832 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))))

    (:action sensecells_d_p1_p4
        :precondition (and (succ_p1_p4)
                           (at_d_p1))
        :effect (and
                    ; #26263: origin
                    (checked_p4)

                    ; #42300: <==closure== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #61211: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #86771: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #90017: <==closure== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18742: <==negation-removal== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #34522: <==negation-removal== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #36339: <==uncertain_firing== 86771 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #62680: <==unclosure== 36339 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #65979: <==negation-removal== 42300 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #84201: <==negation-removal== 90017 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))))

    (:action sensecells_d_p1_p5
        :precondition (and (succ_p1_p5)
                           (at_d_p1))
        :effect (and
                    ; #12991: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #19580: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #59024: <==closure== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63789: <==closure== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #17665: <==negation-removal== 63789 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #29806: <==unclosure== 47961 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #47961: <==uncertain_firing== 12991 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #50455: <==negation-removal== 59024 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #55301: <==negation-removal== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #81983: <==negation-removal== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))))

    (:action sensecells_d_p1_p6
        :precondition (and (succ_p1_p6)
                           (at_d_p1))
        :effect (and
                    ; #20924: <==closure== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #36164: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #82075: <==closure== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #89657: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #17277: <==negation-removal== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #21479: <==negation-removal== 20924 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #48838: <==negation-removal== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #58267: <==uncertain_firing== 89657 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #65665: <==negation-removal== 82075 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #85066: <==unclosure== 58267 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_d_p1_p7
        :precondition (and (succ_p1_p7)
                           (at_d_p1))
        :effect (and
                    ; #10198: <==closure== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #46079: <==closure== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73691: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #82613: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56380: <==unclosure== 56556 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #56556: <==uncertain_firing== 73691 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #57358: <==negation-removal== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #73904: <==negation-removal== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #76669: <==negation-removal== 46079 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #89363: <==negation-removal== 10198 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p1_p8
        :precondition (and (succ_p1_p8)
                           (at_d_p1))
        :effect (and
                    ; #16055: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #29596: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #60818: <==closure== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #67665: <==closure== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #12829: <==negation-removal== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #14252: <==unclosure== 34894 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #25840: <==negation-removal== 60818 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #33509: <==negation-removal== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))

                    ; #34894: <==uncertain_firing== 29596 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #61073: <==negation-removal== 67665 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))))

    (:action sensecells_d_p1_p9
        :precondition (and (at_d_p1)
                           (succ_p1_p9))
        :effect (and
                    ; #61442: <==closure== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #61573: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #84388: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #86425: <==closure== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #27814: <==negation-removal== 61442 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #32263: <==uncertain_firing== 84388 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #44414: <==negation-removal== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #47316: <==negation-removal== 86425 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #51781: <==unclosure== 32263 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66563: <==negation-removal== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p2_p0011
        :precondition (and (succ_p2_p0011)
                           (at_d_p2))
        :effect (and
                    ; #55195: <==closure== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #63093: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #69704: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #85189: <==closure== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #15036: <==unclosure== 86465 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #26295: <==negation-removal== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #33118: <==negation-removal== 55195 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #50612: <==negation-removal== 85189 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #86465: <==uncertain_firing== 63093 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #92855: <==negation-removal== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p2_p012
        :precondition (and (succ_p2_p012)
                           (at_d_p2))
        :effect (and
                    ; #21299: <==closure== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #22000: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #37467: <==closure== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #87535: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #21782: <==negation-removal== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #37361: <==negation-removal== 37467 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #57869: <==uncertain_firing== 22000 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #74127: <==negation-removal== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #89390: <==negation-removal== 21299 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #91501: <==unclosure== 57869 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p2_p1
        :precondition (and (succ_p2_p1)
                           (at_d_p2))
        :effect (and
                    ; #19399: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #57420: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #66895: <==closure== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #73988: <==closure== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #10465: <==negation-removal== 66895 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #13267: <==uncertain_firing== 57420 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #22162: <==negation-removal== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #76446: <==negation-removal== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #80020: <==unclosure== 13267 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #86699: <==negation-removal== 73988 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p2_p10
        :precondition (and (at_d_p2)
                           (succ_p2_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #16313: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #20395: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #51524: <==closure== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #52314: <==closure== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #51643: <==negation-removal== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #53027: <==negation-removal== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #53184: <==unclosure== 84464 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84464: <==uncertain_firing== 16313 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #89058: <==negation-removal== 52314 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #89184: <==negation-removal== 51524 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))))

    (:action sensecells_d_p2_p2
        :precondition (and (at_d_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #30102: <==closure== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #30762: <==closure== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #49728: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #57026: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #18596: <==unclosure== 65133 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #25861: <==negation-removal== 30762 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #37733: <==negation-removal== 30102 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #65133: <==uncertain_firing== 57026 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #71970: <==negation-removal== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #89478: <==negation-removal== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p2_p3
        :precondition (and (at_d_p2)
                           (succ_p2_p3))
        :effect (and
                    ; #42789: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #82355: <==closure== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #83832: <==closure== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #95518: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #18015: <==negation-removal== 82355 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #36732: <==negation-removal== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #50533: <==negation-removal== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #52513: <==unclosure== 61051 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #61051: <==uncertain_firing== 42789 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #77259: <==negation-removal== 83832 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))))

    (:action sensecells_d_p2_p4
        :precondition (and (succ_p2_p4)
                           (at_d_p2))
        :effect (and
                    ; #26263: origin
                    (checked_p4)

                    ; #42300: <==closure== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #61211: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #86771: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #90017: <==closure== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18742: <==negation-removal== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #34522: <==negation-removal== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #36339: <==uncertain_firing== 86771 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #62680: <==unclosure== 36339 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #65979: <==negation-removal== 42300 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #84201: <==negation-removal== 90017 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))))

    (:action sensecells_d_p2_p5
        :precondition (and (at_d_p2)
                           (succ_p2_p5))
        :effect (and
                    ; #12991: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #19580: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #59024: <==closure== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63789: <==closure== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #17665: <==negation-removal== 63789 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #29806: <==unclosure== 47961 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #47961: <==uncertain_firing== 12991 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #50455: <==negation-removal== 59024 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #55301: <==negation-removal== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #81983: <==negation-removal== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))))

    (:action sensecells_d_p2_p6
        :precondition (and (at_d_p2)
                           (succ_p2_p6))
        :effect (and
                    ; #20924: <==closure== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #36164: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #82075: <==closure== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #89657: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #17277: <==negation-removal== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #21479: <==negation-removal== 20924 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #48838: <==negation-removal== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #58267: <==uncertain_firing== 89657 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #65665: <==negation-removal== 82075 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #85066: <==unclosure== 58267 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_d_p2_p7
        :precondition (and (at_d_p2)
                           (succ_p2_p7))
        :effect (and
                    ; #10198: <==closure== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #46079: <==closure== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73691: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #82613: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56380: <==unclosure== 56556 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #56556: <==uncertain_firing== 73691 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #57358: <==negation-removal== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #73904: <==negation-removal== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #76669: <==negation-removal== 46079 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #89363: <==negation-removal== 10198 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p2_p8
        :precondition (and (at_d_p2)
                           (succ_p2_p8))
        :effect (and
                    ; #16055: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #29596: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #60818: <==closure== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #67665: <==closure== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #12829: <==negation-removal== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #14252: <==unclosure== 34894 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #25840: <==negation-removal== 60818 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #33509: <==negation-removal== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))

                    ; #34894: <==uncertain_firing== 29596 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #61073: <==negation-removal== 67665 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))))

    (:action sensecells_d_p2_p9
        :precondition (and (succ_p2_p9)
                           (at_d_p2))
        :effect (and
                    ; #61442: <==closure== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #61573: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #84388: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #86425: <==closure== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #27814: <==negation-removal== 61442 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #32263: <==uncertain_firing== 84388 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #44414: <==negation-removal== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #47316: <==negation-removal== 86425 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #51781: <==unclosure== 32263 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66563: <==negation-removal== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p3_p0011
        :precondition (and (succ_p3_p0011)
                           (at_d_p3))
        :effect (and
                    ; #55195: <==closure== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #63093: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #69704: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #85189: <==closure== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #15036: <==unclosure== 86465 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #26295: <==negation-removal== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #33118: <==negation-removal== 55195 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #50612: <==negation-removal== 85189 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #86465: <==uncertain_firing== 63093 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #92855: <==negation-removal== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p3_p012
        :precondition (and (at_d_p3)
                           (succ_p3_p012))
        :effect (and
                    ; #21299: <==closure== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #22000: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #37467: <==closure== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #87535: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #21782: <==negation-removal== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #37361: <==negation-removal== 37467 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #57869: <==uncertain_firing== 22000 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #74127: <==negation-removal== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #89390: <==negation-removal== 21299 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #91501: <==unclosure== 57869 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p3_p1
        :precondition (and (at_d_p3)
                           (succ_p3_p1))
        :effect (and
                    ; #19399: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #57420: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #66895: <==closure== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #73988: <==closure== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #10465: <==negation-removal== 66895 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #13267: <==uncertain_firing== 57420 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #22162: <==negation-removal== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #76446: <==negation-removal== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #80020: <==unclosure== 13267 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #86699: <==negation-removal== 73988 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p3_p10
        :precondition (and (succ_p3_p10)
                           (at_d_p3))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #16313: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #20395: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #51524: <==closure== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #52314: <==closure== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #51643: <==negation-removal== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #53027: <==negation-removal== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #53184: <==unclosure== 84464 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84464: <==uncertain_firing== 16313 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #89058: <==negation-removal== 52314 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #89184: <==negation-removal== 51524 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))))

    (:action sensecells_d_p3_p2
        :precondition (and (succ_p3_p2)
                           (at_d_p3))
        :effect (and
                    ; #30102: <==closure== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #30762: <==closure== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #49728: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #57026: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #18596: <==unclosure== 65133 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #25861: <==negation-removal== 30762 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #37733: <==negation-removal== 30102 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #65133: <==uncertain_firing== 57026 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #71970: <==negation-removal== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #89478: <==negation-removal== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p3_p3
        :precondition (and (succ_p3_p3)
                           (at_d_p3))
        :effect (and
                    ; #42789: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #82355: <==closure== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #83832: <==closure== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #95518: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #18015: <==negation-removal== 82355 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #36732: <==negation-removal== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #50533: <==negation-removal== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #52513: <==unclosure== 61051 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #61051: <==uncertain_firing== 42789 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #77259: <==negation-removal== 83832 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))))

    (:action sensecells_d_p3_p4
        :precondition (and (at_d_p3)
                           (succ_p3_p4))
        :effect (and
                    ; #26263: origin
                    (checked_p4)

                    ; #42300: <==closure== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #61211: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #86771: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #90017: <==closure== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18742: <==negation-removal== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #34522: <==negation-removal== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #36339: <==uncertain_firing== 86771 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #62680: <==unclosure== 36339 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #65979: <==negation-removal== 42300 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #84201: <==negation-removal== 90017 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))))

    (:action sensecells_d_p3_p5
        :precondition (and (succ_p3_p5)
                           (at_d_p3))
        :effect (and
                    ; #12991: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #19580: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #59024: <==closure== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63789: <==closure== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #17665: <==negation-removal== 63789 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #29806: <==unclosure== 47961 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #47961: <==uncertain_firing== 12991 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #50455: <==negation-removal== 59024 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #55301: <==negation-removal== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #81983: <==negation-removal== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))))

    (:action sensecells_d_p3_p6
        :precondition (and (succ_p3_p6)
                           (at_d_p3))
        :effect (and
                    ; #20924: <==closure== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #36164: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #82075: <==closure== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #89657: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #17277: <==negation-removal== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #21479: <==negation-removal== 20924 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #48838: <==negation-removal== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #58267: <==uncertain_firing== 89657 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #65665: <==negation-removal== 82075 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #85066: <==unclosure== 58267 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_d_p3_p7
        :precondition (and (succ_p3_p7)
                           (at_d_p3))
        :effect (and
                    ; #10198: <==closure== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #46079: <==closure== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73691: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #82613: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56380: <==unclosure== 56556 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #56556: <==uncertain_firing== 73691 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #57358: <==negation-removal== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #73904: <==negation-removal== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #76669: <==negation-removal== 46079 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #89363: <==negation-removal== 10198 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p3_p8
        :precondition (and (at_d_p3)
                           (succ_p3_p8))
        :effect (and
                    ; #16055: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #29596: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #60818: <==closure== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #67665: <==closure== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #12829: <==negation-removal== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #14252: <==unclosure== 34894 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #25840: <==negation-removal== 60818 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #33509: <==negation-removal== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))

                    ; #34894: <==uncertain_firing== 29596 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #61073: <==negation-removal== 67665 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))))

    (:action sensecells_d_p3_p9
        :precondition (and (at_d_p3)
                           (succ_p3_p9))
        :effect (and
                    ; #61442: <==closure== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #61573: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #84388: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #86425: <==closure== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #27814: <==negation-removal== 61442 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #32263: <==uncertain_firing== 84388 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #44414: <==negation-removal== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #47316: <==negation-removal== 86425 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #51781: <==unclosure== 32263 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66563: <==negation-removal== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p4_p0011
        :precondition (and (at_d_p4)
                           (succ_p4_p0011))
        :effect (and
                    ; #55195: <==closure== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #63093: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #69704: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #85189: <==closure== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #15036: <==unclosure== 86465 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #26295: <==negation-removal== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #33118: <==negation-removal== 55195 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #50612: <==negation-removal== 85189 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #86465: <==uncertain_firing== 63093 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #92855: <==negation-removal== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p4_p012
        :precondition (and (at_d_p4)
                           (succ_p4_p012))
        :effect (and
                    ; #21299: <==closure== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #22000: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #37467: <==closure== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #87535: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #21782: <==negation-removal== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #37361: <==negation-removal== 37467 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #57869: <==uncertain_firing== 22000 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #74127: <==negation-removal== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #89390: <==negation-removal== 21299 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #91501: <==unclosure== 57869 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p4_p1
        :precondition (and (succ_p4_p1)
                           (at_d_p4))
        :effect (and
                    ; #19399: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #57420: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #66895: <==closure== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #73988: <==closure== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #10465: <==negation-removal== 66895 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #13267: <==uncertain_firing== 57420 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #22162: <==negation-removal== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #76446: <==negation-removal== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #80020: <==unclosure== 13267 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #86699: <==negation-removal== 73988 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p4_p10
        :precondition (and (at_d_p4)
                           (succ_p4_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #16313: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #20395: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #51524: <==closure== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #52314: <==closure== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #51643: <==negation-removal== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #53027: <==negation-removal== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #53184: <==unclosure== 84464 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84464: <==uncertain_firing== 16313 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #89058: <==negation-removal== 52314 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #89184: <==negation-removal== 51524 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))))

    (:action sensecells_d_p4_p2
        :precondition (and (at_d_p4)
                           (succ_p4_p2))
        :effect (and
                    ; #30102: <==closure== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #30762: <==closure== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #49728: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #57026: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #18596: <==unclosure== 65133 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #25861: <==negation-removal== 30762 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #37733: <==negation-removal== 30102 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #65133: <==uncertain_firing== 57026 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #71970: <==negation-removal== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #89478: <==negation-removal== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p4_p3
        :precondition (and (succ_p4_p3)
                           (at_d_p4))
        :effect (and
                    ; #42789: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #82355: <==closure== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #83832: <==closure== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #95518: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #18015: <==negation-removal== 82355 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #36732: <==negation-removal== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #50533: <==negation-removal== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #52513: <==unclosure== 61051 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #61051: <==uncertain_firing== 42789 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #77259: <==negation-removal== 83832 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))))

    (:action sensecells_d_p4_p4
        :precondition (and (succ_p4_p4)
                           (at_d_p4))
        :effect (and
                    ; #26263: origin
                    (checked_p4)

                    ; #42300: <==closure== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #61211: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #86771: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #90017: <==closure== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18742: <==negation-removal== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #34522: <==negation-removal== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #36339: <==uncertain_firing== 86771 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #62680: <==unclosure== 36339 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #65979: <==negation-removal== 42300 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #84201: <==negation-removal== 90017 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))))

    (:action sensecells_d_p4_p5
        :precondition (and (at_d_p4)
                           (succ_p4_p5))
        :effect (and
                    ; #12991: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #19580: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #59024: <==closure== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63789: <==closure== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #17665: <==negation-removal== 63789 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #29806: <==unclosure== 47961 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #47961: <==uncertain_firing== 12991 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #50455: <==negation-removal== 59024 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #55301: <==negation-removal== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #81983: <==negation-removal== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))))

    (:action sensecells_d_p4_p6
        :precondition (and (at_d_p4)
                           (succ_p4_p6))
        :effect (and
                    ; #20924: <==closure== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #36164: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #82075: <==closure== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #89657: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #17277: <==negation-removal== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #21479: <==negation-removal== 20924 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #48838: <==negation-removal== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #58267: <==uncertain_firing== 89657 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #65665: <==negation-removal== 82075 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #85066: <==unclosure== 58267 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_d_p4_p7
        :precondition (and (at_d_p4)
                           (succ_p4_p7))
        :effect (and
                    ; #10198: <==closure== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #46079: <==closure== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73691: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #82613: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56380: <==unclosure== 56556 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #56556: <==uncertain_firing== 73691 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #57358: <==negation-removal== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #73904: <==negation-removal== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #76669: <==negation-removal== 46079 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #89363: <==negation-removal== 10198 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p4_p8
        :precondition (and (succ_p4_p8)
                           (at_d_p4))
        :effect (and
                    ; #16055: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #29596: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #60818: <==closure== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #67665: <==closure== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #12829: <==negation-removal== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #14252: <==unclosure== 34894 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #25840: <==negation-removal== 60818 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #33509: <==negation-removal== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))

                    ; #34894: <==uncertain_firing== 29596 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #61073: <==negation-removal== 67665 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))))

    (:action sensecells_d_p4_p9
        :precondition (and (at_d_p4)
                           (succ_p4_p9))
        :effect (and
                    ; #61442: <==closure== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #61573: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #84388: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #86425: <==closure== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #27814: <==negation-removal== 61442 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #32263: <==uncertain_firing== 84388 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #44414: <==negation-removal== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #47316: <==negation-removal== 86425 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #51781: <==unclosure== 32263 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66563: <==negation-removal== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p5_p0011
        :precondition (and (succ_p5_p0011)
                           (at_d_p5))
        :effect (and
                    ; #55195: <==closure== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #63093: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #69704: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #85189: <==closure== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #15036: <==unclosure== 86465 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #26295: <==negation-removal== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #33118: <==negation-removal== 55195 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #50612: <==negation-removal== 85189 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #86465: <==uncertain_firing== 63093 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #92855: <==negation-removal== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p5_p012
        :precondition (and (at_d_p5)
                           (succ_p5_p012))
        :effect (and
                    ; #21299: <==closure== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #22000: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #37467: <==closure== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #87535: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #21782: <==negation-removal== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #37361: <==negation-removal== 37467 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #57869: <==uncertain_firing== 22000 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #74127: <==negation-removal== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #89390: <==negation-removal== 21299 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #91501: <==unclosure== 57869 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p5_p1
        :precondition (and (at_d_p5)
                           (succ_p5_p1))
        :effect (and
                    ; #19399: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #57420: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #66895: <==closure== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #73988: <==closure== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #10465: <==negation-removal== 66895 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #13267: <==uncertain_firing== 57420 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #22162: <==negation-removal== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #76446: <==negation-removal== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #80020: <==unclosure== 13267 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #86699: <==negation-removal== 73988 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p5_p10
        :precondition (and (at_d_p5)
                           (succ_p5_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #16313: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #20395: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #51524: <==closure== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #52314: <==closure== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #51643: <==negation-removal== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #53027: <==negation-removal== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #53184: <==unclosure== 84464 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84464: <==uncertain_firing== 16313 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #89058: <==negation-removal== 52314 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #89184: <==negation-removal== 51524 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))))

    (:action sensecells_d_p5_p2
        :precondition (and (succ_p5_p2)
                           (at_d_p5))
        :effect (and
                    ; #30102: <==closure== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #30762: <==closure== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #49728: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #57026: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #18596: <==unclosure== 65133 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #25861: <==negation-removal== 30762 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #37733: <==negation-removal== 30102 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #65133: <==uncertain_firing== 57026 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #71970: <==negation-removal== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #89478: <==negation-removal== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p5_p3
        :precondition (and (succ_p5_p3)
                           (at_d_p5))
        :effect (and
                    ; #42789: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #82355: <==closure== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #83832: <==closure== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #95518: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #18015: <==negation-removal== 82355 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #36732: <==negation-removal== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #50533: <==negation-removal== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #52513: <==unclosure== 61051 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #61051: <==uncertain_firing== 42789 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #77259: <==negation-removal== 83832 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))))

    (:action sensecells_d_p5_p4
        :precondition (and (succ_p5_p4)
                           (at_d_p5))
        :effect (and
                    ; #26263: origin
                    (checked_p4)

                    ; #42300: <==closure== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #61211: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #86771: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #90017: <==closure== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18742: <==negation-removal== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #34522: <==negation-removal== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #36339: <==uncertain_firing== 86771 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #62680: <==unclosure== 36339 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #65979: <==negation-removal== 42300 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #84201: <==negation-removal== 90017 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))))

    (:action sensecells_d_p5_p5
        :precondition (and (succ_p5_p5)
                           (at_d_p5))
        :effect (and
                    ; #12991: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #19580: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #59024: <==closure== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63789: <==closure== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #17665: <==negation-removal== 63789 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #29806: <==unclosure== 47961 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #47961: <==uncertain_firing== 12991 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #50455: <==negation-removal== 59024 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #55301: <==negation-removal== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #81983: <==negation-removal== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))))

    (:action sensecells_d_p5_p6
        :precondition (and (succ_p5_p6)
                           (at_d_p5))
        :effect (and
                    ; #20924: <==closure== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #36164: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #82075: <==closure== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #89657: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #17277: <==negation-removal== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #21479: <==negation-removal== 20924 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #48838: <==negation-removal== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #58267: <==uncertain_firing== 89657 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #65665: <==negation-removal== 82075 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #85066: <==unclosure== 58267 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_d_p5_p7
        :precondition (and (at_d_p5)
                           (succ_p5_p7))
        :effect (and
                    ; #10198: <==closure== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #46079: <==closure== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73691: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #82613: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56380: <==unclosure== 56556 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #56556: <==uncertain_firing== 73691 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #57358: <==negation-removal== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #73904: <==negation-removal== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #76669: <==negation-removal== 46079 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #89363: <==negation-removal== 10198 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p5_p8
        :precondition (and (succ_p5_p8)
                           (at_d_p5))
        :effect (and
                    ; #16055: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #29596: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #60818: <==closure== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #67665: <==closure== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #12829: <==negation-removal== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #14252: <==unclosure== 34894 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #25840: <==negation-removal== 60818 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #33509: <==negation-removal== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))

                    ; #34894: <==uncertain_firing== 29596 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #61073: <==negation-removal== 67665 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))))

    (:action sensecells_d_p5_p9
        :precondition (and (succ_p5_p9)
                           (at_d_p5))
        :effect (and
                    ; #61442: <==closure== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #61573: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #84388: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #86425: <==closure== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #27814: <==negation-removal== 61442 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #32263: <==uncertain_firing== 84388 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #44414: <==negation-removal== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #47316: <==negation-removal== 86425 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #51781: <==unclosure== 32263 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66563: <==negation-removal== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p6_p0011
        :precondition (and (at_d_p6)
                           (succ_p6_p0011))
        :effect (and
                    ; #55195: <==closure== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #63093: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #69704: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #85189: <==closure== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #15036: <==unclosure== 86465 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #26295: <==negation-removal== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #33118: <==negation-removal== 55195 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #50612: <==negation-removal== 85189 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #86465: <==uncertain_firing== 63093 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #92855: <==negation-removal== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p6_p012
        :precondition (and (at_d_p6)
                           (succ_p6_p012))
        :effect (and
                    ; #21299: <==closure== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #22000: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #37467: <==closure== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #87535: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #21782: <==negation-removal== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #37361: <==negation-removal== 37467 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #57869: <==uncertain_firing== 22000 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #74127: <==negation-removal== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #89390: <==negation-removal== 21299 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #91501: <==unclosure== 57869 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p6_p1
        :precondition (and (succ_p6_p1)
                           (at_d_p6))
        :effect (and
                    ; #19399: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #57420: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #66895: <==closure== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #73988: <==closure== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #10465: <==negation-removal== 66895 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #13267: <==uncertain_firing== 57420 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #22162: <==negation-removal== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #76446: <==negation-removal== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #80020: <==unclosure== 13267 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #86699: <==negation-removal== 73988 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p6_p10
        :precondition (and (at_d_p6)
                           (succ_p6_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #16313: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #20395: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #51524: <==closure== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #52314: <==closure== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #51643: <==negation-removal== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #53027: <==negation-removal== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #53184: <==unclosure== 84464 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84464: <==uncertain_firing== 16313 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #89058: <==negation-removal== 52314 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #89184: <==negation-removal== 51524 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))))

    (:action sensecells_d_p6_p2
        :precondition (and (at_d_p6)
                           (succ_p6_p2))
        :effect (and
                    ; #30102: <==closure== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #30762: <==closure== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #49728: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #57026: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #18596: <==unclosure== 65133 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #25861: <==negation-removal== 30762 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #37733: <==negation-removal== 30102 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #65133: <==uncertain_firing== 57026 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #71970: <==negation-removal== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #89478: <==negation-removal== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p6_p3
        :precondition (and (at_d_p6)
                           (succ_p6_p3))
        :effect (and
                    ; #42789: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #82355: <==closure== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #83832: <==closure== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #95518: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #18015: <==negation-removal== 82355 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #36732: <==negation-removal== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #50533: <==negation-removal== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #52513: <==unclosure== 61051 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #61051: <==uncertain_firing== 42789 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #77259: <==negation-removal== 83832 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))))

    (:action sensecells_d_p6_p4
        :precondition (and (at_d_p6)
                           (succ_p6_p4))
        :effect (and
                    ; #26263: origin
                    (checked_p4)

                    ; #42300: <==closure== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #61211: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #86771: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #90017: <==closure== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18742: <==negation-removal== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #34522: <==negation-removal== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #36339: <==uncertain_firing== 86771 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #62680: <==unclosure== 36339 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #65979: <==negation-removal== 42300 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #84201: <==negation-removal== 90017 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))))

    (:action sensecells_d_p6_p5
        :precondition (and (at_d_p6)
                           (succ_p6_p5))
        :effect (and
                    ; #12991: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #19580: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #59024: <==closure== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63789: <==closure== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #17665: <==negation-removal== 63789 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #29806: <==unclosure== 47961 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #47961: <==uncertain_firing== 12991 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #50455: <==negation-removal== 59024 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #55301: <==negation-removal== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #81983: <==negation-removal== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))))

    (:action sensecells_d_p6_p6
        :precondition (and (at_d_p6)
                           (succ_p6_p6))
        :effect (and
                    ; #20924: <==closure== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #36164: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #82075: <==closure== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #89657: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #17277: <==negation-removal== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #21479: <==negation-removal== 20924 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #48838: <==negation-removal== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #58267: <==uncertain_firing== 89657 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #65665: <==negation-removal== 82075 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #85066: <==unclosure== 58267 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_d_p6_p7
        :precondition (and (at_d_p6)
                           (succ_p6_p7))
        :effect (and
                    ; #10198: <==closure== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #46079: <==closure== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73691: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #82613: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56380: <==unclosure== 56556 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #56556: <==uncertain_firing== 73691 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #57358: <==negation-removal== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #73904: <==negation-removal== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #76669: <==negation-removal== 46079 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #89363: <==negation-removal== 10198 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p6_p8
        :precondition (and (at_d_p6)
                           (succ_p6_p8))
        :effect (and
                    ; #16055: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #29596: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #60818: <==closure== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #67665: <==closure== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #12829: <==negation-removal== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #14252: <==unclosure== 34894 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #25840: <==negation-removal== 60818 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #33509: <==negation-removal== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))

                    ; #34894: <==uncertain_firing== 29596 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #61073: <==negation-removal== 67665 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))))

    (:action sensecells_d_p6_p9
        :precondition (and (at_d_p6)
                           (succ_p6_p9))
        :effect (and
                    ; #61442: <==closure== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #61573: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #84388: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #86425: <==closure== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #27814: <==negation-removal== 61442 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #32263: <==uncertain_firing== 84388 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #44414: <==negation-removal== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #47316: <==negation-removal== 86425 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #51781: <==unclosure== 32263 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66563: <==negation-removal== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p7_p0011
        :precondition (and (succ_p7_p0011)
                           (at_d_p7))
        :effect (and
                    ; #55195: <==closure== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #63093: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #69704: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #85189: <==closure== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #15036: <==unclosure== 86465 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #26295: <==negation-removal== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #33118: <==negation-removal== 55195 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #50612: <==negation-removal== 85189 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #86465: <==uncertain_firing== 63093 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #92855: <==negation-removal== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p7_p012
        :precondition (and (succ_p7_p012)
                           (at_d_p7))
        :effect (and
                    ; #21299: <==closure== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #22000: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #37467: <==closure== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #87535: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #21782: <==negation-removal== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #37361: <==negation-removal== 37467 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #57869: <==uncertain_firing== 22000 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #74127: <==negation-removal== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #89390: <==negation-removal== 21299 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #91501: <==unclosure== 57869 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p7_p1
        :precondition (and (succ_p7_p1)
                           (at_d_p7))
        :effect (and
                    ; #19399: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #57420: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #66895: <==closure== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #73988: <==closure== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #10465: <==negation-removal== 66895 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #13267: <==uncertain_firing== 57420 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #22162: <==negation-removal== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #76446: <==negation-removal== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #80020: <==unclosure== 13267 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #86699: <==negation-removal== 73988 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p7_p10
        :precondition (and (succ_p7_p10)
                           (at_d_p7))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #16313: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #20395: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #51524: <==closure== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #52314: <==closure== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #51643: <==negation-removal== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #53027: <==negation-removal== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #53184: <==unclosure== 84464 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84464: <==uncertain_firing== 16313 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #89058: <==negation-removal== 52314 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #89184: <==negation-removal== 51524 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))))

    (:action sensecells_d_p7_p2
        :precondition (and (succ_p7_p2)
                           (at_d_p7))
        :effect (and
                    ; #30102: <==closure== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #30762: <==closure== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #49728: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #57026: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #18596: <==unclosure== 65133 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #25861: <==negation-removal== 30762 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #37733: <==negation-removal== 30102 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #65133: <==uncertain_firing== 57026 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #71970: <==negation-removal== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #89478: <==negation-removal== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p7_p3
        :precondition (and (succ_p7_p3)
                           (at_d_p7))
        :effect (and
                    ; #42789: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #82355: <==closure== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #83832: <==closure== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #95518: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #18015: <==negation-removal== 82355 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #36732: <==negation-removal== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #50533: <==negation-removal== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #52513: <==unclosure== 61051 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #61051: <==uncertain_firing== 42789 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #77259: <==negation-removal== 83832 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))))

    (:action sensecells_d_p7_p4
        :precondition (and (succ_p7_p4)
                           (at_d_p7))
        :effect (and
                    ; #26263: origin
                    (checked_p4)

                    ; #42300: <==closure== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #61211: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #86771: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #90017: <==closure== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18742: <==negation-removal== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #34522: <==negation-removal== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #36339: <==uncertain_firing== 86771 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #62680: <==unclosure== 36339 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #65979: <==negation-removal== 42300 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #84201: <==negation-removal== 90017 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))))

    (:action sensecells_d_p7_p5
        :precondition (and (succ_p7_p5)
                           (at_d_p7))
        :effect (and
                    ; #12991: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #19580: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #59024: <==closure== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63789: <==closure== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #17665: <==negation-removal== 63789 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #29806: <==unclosure== 47961 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #47961: <==uncertain_firing== 12991 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #50455: <==negation-removal== 59024 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #55301: <==negation-removal== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #81983: <==negation-removal== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))))

    (:action sensecells_d_p7_p6
        :precondition (and (succ_p7_p6)
                           (at_d_p7))
        :effect (and
                    ; #20924: <==closure== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #36164: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #82075: <==closure== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #89657: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #17277: <==negation-removal== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #21479: <==negation-removal== 20924 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #48838: <==negation-removal== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #58267: <==uncertain_firing== 89657 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #65665: <==negation-removal== 82075 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #85066: <==unclosure== 58267 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_d_p7_p7
        :precondition (and (succ_p7_p7)
                           (at_d_p7))
        :effect (and
                    ; #10198: <==closure== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #46079: <==closure== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73691: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #82613: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56380: <==unclosure== 56556 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #56556: <==uncertain_firing== 73691 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #57358: <==negation-removal== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #73904: <==negation-removal== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #76669: <==negation-removal== 46079 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #89363: <==negation-removal== 10198 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p7_p8
        :precondition (and (succ_p7_p8)
                           (at_d_p7))
        :effect (and
                    ; #16055: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #29596: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #60818: <==closure== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #67665: <==closure== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #12829: <==negation-removal== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #14252: <==unclosure== 34894 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #25840: <==negation-removal== 60818 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #33509: <==negation-removal== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))

                    ; #34894: <==uncertain_firing== 29596 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #61073: <==negation-removal== 67665 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))))

    (:action sensecells_d_p7_p9
        :precondition (and (succ_p7_p9)
                           (at_d_p7))
        :effect (and
                    ; #61442: <==closure== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #61573: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #84388: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #86425: <==closure== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #27814: <==negation-removal== 61442 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #32263: <==uncertain_firing== 84388 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #44414: <==negation-removal== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #47316: <==negation-removal== 86425 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #51781: <==unclosure== 32263 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66563: <==negation-removal== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p8_p0011
        :precondition (and (succ_p8_p0011)
                           (at_d_p8))
        :effect (and
                    ; #55195: <==closure== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #63093: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #69704: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #85189: <==closure== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #15036: <==unclosure== 86465 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #26295: <==negation-removal== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #33118: <==negation-removal== 55195 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #50612: <==negation-removal== 85189 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #86465: <==uncertain_firing== 63093 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #92855: <==negation-removal== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p8_p012
        :precondition (and (succ_p8_p012)
                           (at_d_p8))
        :effect (and
                    ; #21299: <==closure== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #22000: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #37467: <==closure== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #87535: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #21782: <==negation-removal== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #37361: <==negation-removal== 37467 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #57869: <==uncertain_firing== 22000 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #74127: <==negation-removal== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #89390: <==negation-removal== 21299 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #91501: <==unclosure== 57869 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p8_p1
        :precondition (and (succ_p8_p1)
                           (at_d_p8))
        :effect (and
                    ; #19399: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #57420: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #66895: <==closure== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #73988: <==closure== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #10465: <==negation-removal== 66895 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #13267: <==uncertain_firing== 57420 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #22162: <==negation-removal== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #76446: <==negation-removal== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #80020: <==unclosure== 13267 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #86699: <==negation-removal== 73988 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p8_p10
        :precondition (and (at_d_p8)
                           (succ_p8_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #16313: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #20395: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #51524: <==closure== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #52314: <==closure== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #51643: <==negation-removal== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #53027: <==negation-removal== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #53184: <==unclosure== 84464 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84464: <==uncertain_firing== 16313 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #89058: <==negation-removal== 52314 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #89184: <==negation-removal== 51524 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))))

    (:action sensecells_d_p8_p2
        :precondition (and (at_d_p8)
                           (succ_p8_p2))
        :effect (and
                    ; #30102: <==closure== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #30762: <==closure== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #49728: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #57026: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #18596: <==unclosure== 65133 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #25861: <==negation-removal== 30762 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #37733: <==negation-removal== 30102 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #65133: <==uncertain_firing== 57026 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #71970: <==negation-removal== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #89478: <==negation-removal== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p8_p3
        :precondition (and (succ_p8_p3)
                           (at_d_p8))
        :effect (and
                    ; #42789: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #82355: <==closure== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #83832: <==closure== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #95518: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #18015: <==negation-removal== 82355 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #36732: <==negation-removal== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #50533: <==negation-removal== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #52513: <==unclosure== 61051 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #61051: <==uncertain_firing== 42789 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #77259: <==negation-removal== 83832 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))))

    (:action sensecells_d_p8_p4
        :precondition (and (succ_p8_p4)
                           (at_d_p8))
        :effect (and
                    ; #26263: origin
                    (checked_p4)

                    ; #42300: <==closure== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #61211: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #86771: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #90017: <==closure== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18742: <==negation-removal== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #34522: <==negation-removal== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #36339: <==uncertain_firing== 86771 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #62680: <==unclosure== 36339 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #65979: <==negation-removal== 42300 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #84201: <==negation-removal== 90017 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))))

    (:action sensecells_d_p8_p5
        :precondition (and (succ_p8_p5)
                           (at_d_p8))
        :effect (and
                    ; #12991: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #19580: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #59024: <==closure== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63789: <==closure== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #17665: <==negation-removal== 63789 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #29806: <==unclosure== 47961 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #47961: <==uncertain_firing== 12991 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #50455: <==negation-removal== 59024 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #55301: <==negation-removal== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #81983: <==negation-removal== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))))

    (:action sensecells_d_p8_p6
        :precondition (and (at_d_p8)
                           (succ_p8_p6))
        :effect (and
                    ; #20924: <==closure== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #36164: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #82075: <==closure== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #89657: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #17277: <==negation-removal== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #21479: <==negation-removal== 20924 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #48838: <==negation-removal== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #58267: <==uncertain_firing== 89657 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #65665: <==negation-removal== 82075 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #85066: <==unclosure== 58267 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_d_p8_p7
        :precondition (and (succ_p8_p7)
                           (at_d_p8))
        :effect (and
                    ; #10198: <==closure== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #46079: <==closure== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73691: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #82613: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56380: <==unclosure== 56556 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #56556: <==uncertain_firing== 73691 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #57358: <==negation-removal== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #73904: <==negation-removal== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #76669: <==negation-removal== 46079 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #89363: <==negation-removal== 10198 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p8_p8
        :precondition (and (succ_p8_p8)
                           (at_d_p8))
        :effect (and
                    ; #16055: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #29596: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #60818: <==closure== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #67665: <==closure== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #12829: <==negation-removal== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #14252: <==unclosure== 34894 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #25840: <==negation-removal== 60818 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #33509: <==negation-removal== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))

                    ; #34894: <==uncertain_firing== 29596 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #61073: <==negation-removal== 67665 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))))

    (:action sensecells_d_p8_p9
        :precondition (and (succ_p8_p9)
                           (at_d_p8))
        :effect (and
                    ; #61442: <==closure== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #61573: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #84388: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #86425: <==closure== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #27814: <==negation-removal== 61442 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #32263: <==uncertain_firing== 84388 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #44414: <==negation-removal== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #47316: <==negation-removal== 86425 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #51781: <==unclosure== 32263 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66563: <==negation-removal== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p9_p0011
        :precondition (and (at_d_p9)
                           (succ_p9_p0011))
        :effect (and
                    ; #55195: <==closure== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #63093: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #69704: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #72677: origin
                    (checked_p0011)

                    ; #85189: <==closure== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #14688: <==negation-removal== 72677 (pos)
                    (not (not_checked_p0011))

                    ; #15036: <==unclosure== 86465 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #26295: <==negation-removal== 63093 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #33118: <==negation-removal== 55195 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #50612: <==negation-removal== 85189 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #86465: <==uncertain_firing== 63093 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #92855: <==negation-removal== 69704 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p9_p012
        :precondition (and (at_d_p9)
                           (succ_p9_p012))
        :effect (and
                    ; #21299: <==closure== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #22000: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #37112: origin
                    (checked_p012)

                    ; #37467: <==closure== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #87535: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #13066: <==negation-removal== 37112 (pos)
                    (not (not_checked_p012))

                    ; #21782: <==negation-removal== 22000 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #37361: <==negation-removal== 37467 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #57869: <==uncertain_firing== 22000 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #74127: <==negation-removal== 87535 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #89390: <==negation-removal== 21299 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #91501: <==unclosure== 57869 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p9_p1
        :precondition (and (at_d_p9)
                           (succ_p9_p1))
        :effect (and
                    ; #19399: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #57420: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #66895: <==closure== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #73988: <==closure== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #90791: origin
                    (checked_p1)

                    ; #10465: <==negation-removal== 66895 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #13267: <==uncertain_firing== 57420 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #22162: <==negation-removal== 57420 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #74932: <==negation-removal== 90791 (pos)
                    (not (not_checked_p1))

                    ; #76446: <==negation-removal== 19399 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #80020: <==unclosure== 13267 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #86699: <==negation-removal== 73988 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p9_p10
        :precondition (and (at_d_p9)
                           (succ_p9_p10))
        :effect (and
                    ; #11479: origin
                    (checked_p10)

                    ; #16313: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #20395: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #51524: <==closure== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #52314: <==closure== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #51643: <==negation-removal== 20395 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #53027: <==negation-removal== 16313 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #53184: <==unclosure== 84464 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #82185: <==negation-removal== 11479 (pos)
                    (not (not_checked_p10))

                    ; #84464: <==uncertain_firing== 16313 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #89058: <==negation-removal== 52314 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #89184: <==negation-removal== 51524 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))))

    (:action sensecells_d_p9_p2
        :precondition (and (at_d_p9)
                           (succ_p9_p2))
        :effect (and
                    ; #30102: <==closure== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #30762: <==closure== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #48856: origin
                    (checked_p2)

                    ; #49728: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #57026: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #18596: <==unclosure== 65133 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #18627: <==negation-removal== 48856 (pos)
                    (not (not_checked_p2))

                    ; #25861: <==negation-removal== 30762 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #37733: <==negation-removal== 30102 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #65133: <==uncertain_firing== 57026 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #71970: <==negation-removal== 49728 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #89478: <==negation-removal== 57026 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p9_p3
        :precondition (and (at_d_p9)
                           (succ_p9_p3))
        :effect (and
                    ; #42789: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #55980: origin
                    (checked_p3)

                    ; #82355: <==closure== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #83832: <==closure== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #95518: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #18015: <==negation-removal== 82355 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #36732: <==negation-removal== 42789 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #47936: <==negation-removal== 55980 (pos)
                    (not (not_checked_p3))

                    ; #50533: <==negation-removal== 95518 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #52513: <==unclosure== 61051 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #61051: <==uncertain_firing== 42789 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #77259: <==negation-removal== 83832 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))))

    (:action sensecells_d_p9_p4
        :precondition (and (at_d_p9)
                           (succ_p9_p4))
        :effect (and
                    ; #26263: origin
                    (checked_p4)

                    ; #42300: <==closure== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #61211: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #86771: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #90017: <==closure== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #14297: <==negation-removal== 26263 (pos)
                    (not (not_checked_p4))

                    ; #18742: <==negation-removal== 86771 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #34522: <==negation-removal== 61211 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #36339: <==uncertain_firing== 86771 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #62680: <==unclosure== 36339 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #65979: <==negation-removal== 42300 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #84201: <==negation-removal== 90017 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))))

    (:action sensecells_d_p9_p5
        :precondition (and (at_d_p9)
                           (succ_p9_p5))
        :effect (and
                    ; #12991: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #17138: origin
                    (checked_p5)

                    ; #19580: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #59024: <==closure== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63789: <==closure== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #17665: <==negation-removal== 63789 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #29806: <==unclosure== 47961 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #47961: <==uncertain_firing== 12991 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #50455: <==negation-removal== 59024 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #55301: <==negation-removal== 12991 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #59066: <==negation-removal== 17138 (pos)
                    (not (not_checked_p5))

                    ; #81983: <==negation-removal== 19580 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))))

    (:action sensecells_d_p9_p6
        :precondition (and (at_d_p9)
                           (succ_p9_p6))
        :effect (and
                    ; #20924: <==closure== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #36164: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #70384: origin
                    (checked_p6)

                    ; #82075: <==closure== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #89657: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #17277: <==negation-removal== 36164 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #21479: <==negation-removal== 20924 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #48838: <==negation-removal== 89657 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #58267: <==uncertain_firing== 89657 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #65665: <==negation-removal== 82075 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #85066: <==unclosure== 58267 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #91021: <==negation-removal== 70384 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_d_p9_p7
        :precondition (and (at_d_p9)
                           (succ_p9_p7))
        :effect (and
                    ; #10198: <==closure== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #13291: origin
                    (checked_p7)

                    ; #46079: <==closure== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73691: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #82613: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #21379: <==negation-removal== 13291 (pos)
                    (not (not_checked_p7))

                    ; #56380: <==unclosure== 56556 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #56556: <==uncertain_firing== 73691 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #57358: <==negation-removal== 73691 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #73904: <==negation-removal== 82613 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #76669: <==negation-removal== 46079 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #89363: <==negation-removal== 10198 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p9_p8
        :precondition (and (at_d_p9)
                           (succ_p9_p8))
        :effect (and
                    ; #16055: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #29596: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #29806: origin
                    (checked_p8)

                    ; #60818: <==closure== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #67665: <==closure== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #12829: <==negation-removal== 16055 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #14252: <==unclosure== 34894 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #25840: <==negation-removal== 60818 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #33509: <==negation-removal== 29596 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))

                    ; #34894: <==uncertain_firing== 29596 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #61073: <==negation-removal== 67665 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #66392: <==negation-removal== 29806 (pos)
                    (not (not_checked_p8))))

    (:action sensecells_d_p9_p9
        :precondition (and (at_d_p9)
                           (succ_p9_p9))
        :effect (and
                    ; #61442: <==closure== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #61573: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #84388: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #86425: <==closure== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #89304: origin
                    (checked_p9)

                    ; #27814: <==negation-removal== 61442 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #32263: <==uncertain_firing== 84388 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #44414: <==negation-removal== 61573 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #47316: <==negation-removal== 86425 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #51781: <==unclosure== 32263 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #59391: <==negation-removal== 89304 (pos)
                    (not (not_checked_p9))

                    ; #66563: <==negation-removal== 84388 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensesurvivors_a_p0011_s
        :precondition (and (at_a_p0011)
                           (not (obs_p0011)))
        :effect (and
                    ; #59944: <==closure== 83065 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Pa_not_survivorat_s_p0011))

                    ; #63860: <==closure== 88077 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (Pa_survivorat_s_p0011))

                    ; #83065: origin
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Ba_not_survivorat_s_p0011))

                    ; #88077: origin
                    (when (and (hiddensurvivorat_s_p0011))
                          (Ba_survivorat_s_p0011))

                    ; #91130: origin
                    (obs_p0011)

                    ; #11007: <==uncertain_firing== 88077 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Pa_not_survivorat_s_p0011)))

                    ; #15055: <==negation-removal== 91130 (pos)
                    (not (not_obs_p0011))

                    ; #15295: <==negation-removal== 83065 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Pa_survivorat_s_p0011)))

                    ; #19538: <==negation-removal== 63860 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Ba_not_survivorat_s_p0011)))

                    ; #66227: <==negation-removal== 88077 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Pa_not_survivorat_s_p0011)))

                    ; #71485: <==negation-removal== 59944 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Ba_survivorat_s_p0011)))

                    ; #76122: <==unclosure== 11007 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Ba_not_survivorat_s_p0011)))))

    (:action sensesurvivors_a_p012_s
        :precondition (and (at_a_p012)
                           (not (obs_p012)))
        :effect (and
                    ; #47360: origin
                    (obs_p012)

                    ; #72064: <==closure== 85348 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Pa_not_survivorat_s_p012))

                    ; #84907: origin
                    (when (and (hiddensurvivorat_s_p012))
                          (Ba_survivorat_s_p012))

                    ; #85199: <==closure== 84907 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (Pa_survivorat_s_p012))

                    ; #85348: origin
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Ba_not_survivorat_s_p012))

                    ; #16071: <==negation-removal== 85348 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Pa_survivorat_s_p012)))

                    ; #35259: <==negation-removal== 72064 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Ba_survivorat_s_p012)))

                    ; #65729: <==uncertain_firing== 84907 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Pa_not_survivorat_s_p012)))

                    ; #65743: <==unclosure== 65729 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Ba_not_survivorat_s_p012)))

                    ; #69262: <==negation-removal== 84907 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Pa_not_survivorat_s_p012)))

                    ; #73355: <==negation-removal== 47360 (pos)
                    (not (not_obs_p012))

                    ; #75277: <==negation-removal== 85199 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Ba_not_survivorat_s_p012)))))

    (:action sensesurvivors_a_p10_s
        :precondition (and (at_a_p10)
                           (not (obs_p10)))
        :effect (and
                    ; #16197: <==closure== 38323 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Pa_not_survivorat_s_p10))

                    ; #19699: origin
                    (when (and (hiddensurvivorat_s_p10))
                          (Ba_survivorat_s_p10))

                    ; #21007: <==closure== 19699 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (Pa_survivorat_s_p10))

                    ; #38323: origin
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Ba_not_survivorat_s_p10))

                    ; #83638: origin
                    (obs_p10)

                    ; #42534: <==negation-removal== 83638 (pos)
                    (not (not_obs_p10))

                    ; #48736: <==negation-removal== 21007 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Ba_not_survivorat_s_p10)))

                    ; #53728: <==unclosure== 77012 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Ba_not_survivorat_s_p10)))

                    ; #54915: <==negation-removal== 19699 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Pa_not_survivorat_s_p10)))

                    ; #57284: <==negation-removal== 38323 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Pa_survivorat_s_p10)))

                    ; #77012: <==uncertain_firing== 19699 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Pa_not_survivorat_s_p10)))

                    ; #84873: <==negation-removal== 16197 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Ba_survivorat_s_p10)))))

    (:action sensesurvivors_a_p1_s
        :precondition (and (at_a_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #30093: origin
                    (obs_p1)

                    ; #59121: <==closure== 86311 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pa_not_survivorat_s_p1))

                    ; #60678: <==closure== 85178 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pa_survivorat_s_p1))

                    ; #85178: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Ba_survivorat_s_p1))

                    ; #86311: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Ba_not_survivorat_s_p1))

                    ; #12229: <==negation-removal== 60678 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Ba_not_survivorat_s_p1)))

                    ; #42452: <==negation-removal== 85178 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pa_not_survivorat_s_p1)))

                    ; #62140: <==unclosure== 65644 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Ba_not_survivorat_s_p1)))

                    ; #65644: <==uncertain_firing== 85178 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pa_not_survivorat_s_p1)))

                    ; #67304: <==negation-removal== 86311 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pa_survivorat_s_p1)))

                    ; #68427: <==negation-removal== 30093 (pos)
                    (not (not_obs_p1))

                    ; #81709: <==negation-removal== 59121 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Ba_survivorat_s_p1)))))

    (:action sensesurvivors_a_p2_s
        :precondition (and (at_a_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #68569: <==closure== 91924 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pa_survivorat_s_p2))

                    ; #70999: <==closure== 82992 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pa_not_survivorat_s_p2))

                    ; #82992: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Ba_not_survivorat_s_p2))

                    ; #89541: origin
                    (obs_p2)

                    ; #91924: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Ba_survivorat_s_p2))

                    ; #11742: <==negation-removal== 70999 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Ba_survivorat_s_p2)))

                    ; #29682: <==negation-removal== 68569 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Ba_not_survivorat_s_p2)))

                    ; #32145: <==unclosure== 70106 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Ba_not_survivorat_s_p2)))

                    ; #40982: <==negation-removal== 89541 (pos)
                    (not (not_obs_p2))

                    ; #43769: <==negation-removal== 91924 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pa_not_survivorat_s_p2)))

                    ; #70106: <==uncertain_firing== 91924 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pa_not_survivorat_s_p2)))

                    ; #89159: <==negation-removal== 82992 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pa_survivorat_s_p2)))))

    (:action sensesurvivors_a_p3_s
        :precondition (and (at_a_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #13572: origin
                    (obs_p3)

                    ; #14141: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Ba_survivorat_s_p3))

                    ; #31801: <==closure== 88603 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pa_not_survivorat_s_p3))

                    ; #70247: <==closure== 14141 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pa_survivorat_s_p3))

                    ; #88603: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Ba_not_survivorat_s_p3))

                    ; #16155: <==unclosure== 82466 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Ba_not_survivorat_s_p3)))

                    ; #20965: <==negation-removal== 70247 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Ba_not_survivorat_s_p3)))

                    ; #56656: <==negation-removal== 14141 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pa_not_survivorat_s_p3)))

                    ; #74297: <==negation-removal== 88603 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pa_survivorat_s_p3)))

                    ; #78162: <==negation-removal== 13572 (pos)
                    (not (not_obs_p3))

                    ; #82466: <==uncertain_firing== 14141 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pa_not_survivorat_s_p3)))

                    ; #88763: <==negation-removal== 31801 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Ba_survivorat_s_p3)))))

    (:action sensesurvivors_a_p4_s
        :precondition (and (at_a_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #22659: origin
                    (obs_p4)

                    ; #28000: <==closure== 77202 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pa_survivorat_s_p4))

                    ; #35395: <==closure== 89559 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pa_not_survivorat_s_p4))

                    ; #77202: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Ba_survivorat_s_p4))

                    ; #89559: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Ba_not_survivorat_s_p4))

                    ; #54807: <==negation-removal== 22659 (pos)
                    (not (not_obs_p4))

                    ; #69895: <==unclosure== 77907 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Ba_not_survivorat_s_p4)))

                    ; #72903: <==negation-removal== 89559 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pa_survivorat_s_p4)))

                    ; #75551: <==negation-removal== 28000 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Ba_not_survivorat_s_p4)))

                    ; #77907: <==uncertain_firing== 77202 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pa_not_survivorat_s_p4)))

                    ; #82617: <==negation-removal== 35395 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Ba_survivorat_s_p4)))

                    ; #97914: <==negation-removal== 77202 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pa_not_survivorat_s_p4)))))

    (:action sensesurvivors_a_p5_s
        :precondition (and (at_a_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #21009: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Ba_not_survivorat_s_p5))

                    ; #22540: <==closure== 23259 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pa_survivorat_s_p5))

                    ; #23259: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Ba_survivorat_s_p5))

                    ; #48906: <==closure== 21009 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pa_not_survivorat_s_p5))

                    ; #79372: origin
                    (obs_p5)

                    ; #18495: <==uncertain_firing== 23259 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pa_not_survivorat_s_p5)))

                    ; #23653: <==negation-removal== 22540 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Ba_not_survivorat_s_p5)))

                    ; #40728: <==unclosure== 18495 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Ba_not_survivorat_s_p5)))

                    ; #51778: <==negation-removal== 48906 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Ba_survivorat_s_p5)))

                    ; #64886: <==negation-removal== 23259 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pa_not_survivorat_s_p5)))

                    ; #86080: <==negation-removal== 79372 (pos)
                    (not (not_obs_p5))

                    ; #91536: <==negation-removal== 21009 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pa_survivorat_s_p5)))))

    (:action sensesurvivors_a_p6_s
        :precondition (and (at_a_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #22751: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Ba_survivorat_s_p6))

                    ; #25073: <==closure== 29428 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pa_not_survivorat_s_p6))

                    ; #29428: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Ba_not_survivorat_s_p6))

                    ; #30115: <==closure== 22751 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pa_survivorat_s_p6))

                    ; #36909: origin
                    (obs_p6)

                    ; #20337: <==uncertain_firing== 22751 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pa_not_survivorat_s_p6)))

                    ; #25675: <==unclosure== 20337 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Ba_not_survivorat_s_p6)))

                    ; #41620: <==negation-removal== 22751 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pa_not_survivorat_s_p6)))

                    ; #55136: <==negation-removal== 30115 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Ba_not_survivorat_s_p6)))

                    ; #63296: <==negation-removal== 29428 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pa_survivorat_s_p6)))

                    ; #71346: <==negation-removal== 25073 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Ba_survivorat_s_p6)))

                    ; #78662: <==negation-removal== 36909 (pos)
                    (not (not_obs_p6))))

    (:action sensesurvivors_a_p7_s
        :precondition (and (at_a_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #10191: <==closure== 58781 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pa_not_survivorat_s_p7))

                    ; #15698: origin
                    (obs_p7)

                    ; #58781: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Ba_not_survivorat_s_p7))

                    ; #72545: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Ba_survivorat_s_p7))

                    ; #88169: <==closure== 72545 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pa_survivorat_s_p7))

                    ; #25491: <==negation-removal== 15698 (pos)
                    (not (not_obs_p7))

                    ; #26741: <==negation-removal== 88169 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Ba_not_survivorat_s_p7)))

                    ; #30072: <==uncertain_firing== 72545 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pa_not_survivorat_s_p7)))

                    ; #43519: <==negation-removal== 10191 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Ba_survivorat_s_p7)))

                    ; #52336: <==unclosure== 30072 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Ba_not_survivorat_s_p7)))

                    ; #72895: <==negation-removal== 58781 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pa_survivorat_s_p7)))

                    ; #82394: <==negation-removal== 72545 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pa_not_survivorat_s_p7)))))

    (:action sensesurvivors_a_p8_s
        :precondition (and (at_a_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #25404: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Ba_not_survivorat_s_p8))

                    ; #26986: <==closure== 74953 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pa_survivorat_s_p8))

                    ; #28334: <==closure== 25404 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pa_not_survivorat_s_p8))

                    ; #74953: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Ba_survivorat_s_p8))

                    ; #91498: origin
                    (obs_p8)

                    ; #11590: <==negation-removal== 25404 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pa_survivorat_s_p8)))

                    ; #14397: <==negation-removal== 26986 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Ba_not_survivorat_s_p8)))

                    ; #24838: <==uncertain_firing== 74953 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pa_not_survivorat_s_p8)))

                    ; #26442: <==negation-removal== 91498 (pos)
                    (not (not_obs_p8))

                    ; #48092: <==negation-removal== 28334 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Ba_survivorat_s_p8)))

                    ; #68784: <==negation-removal== 74953 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pa_not_survivorat_s_p8)))

                    ; #75655: <==unclosure== 24838 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Ba_not_survivorat_s_p8)))))

    (:action sensesurvivors_a_p9_s
        :precondition (and (at_a_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #16128: <==closure== 65347 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pa_not_survivorat_s_p9))

                    ; #33845: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Ba_survivorat_s_p9))

                    ; #64062: <==closure== 33845 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pa_survivorat_s_p9))

                    ; #64112: origin
                    (obs_p9)

                    ; #65347: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Ba_not_survivorat_s_p9))

                    ; #15884: <==negation-removal== 33845 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pa_not_survivorat_s_p9)))

                    ; #20025: <==negation-removal== 64112 (pos)
                    (not (not_obs_p9))

                    ; #35780: <==negation-removal== 16128 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Ba_survivorat_s_p9)))

                    ; #59316: <==unclosure== 82252 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Ba_not_survivorat_s_p9)))

                    ; #75925: <==negation-removal== 65347 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pa_survivorat_s_p9)))

                    ; #82252: <==uncertain_firing== 33845 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pa_not_survivorat_s_p9)))

                    ; #86247: <==negation-removal== 64062 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Ba_not_survivorat_s_p9)))))

    (:action sensesurvivors_b_p0011_s
        :precondition (and (at_b_p0011)
                           (not (obs_p0011)))
        :effect (and
                    ; #53051: <==closure== 84783 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Pb_not_survivorat_s_p0011))

                    ; #58241: <==closure== 64765 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (Pb_survivorat_s_p0011))

                    ; #64765: origin
                    (when (and (hiddensurvivorat_s_p0011))
                          (Bb_survivorat_s_p0011))

                    ; #84783: origin
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Bb_not_survivorat_s_p0011))

                    ; #91130: origin
                    (obs_p0011)

                    ; #11217: <==negation-removal== 53051 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Bb_survivorat_s_p0011)))

                    ; #15055: <==negation-removal== 91130 (pos)
                    (not (not_obs_p0011))

                    ; #15222: <==negation-removal== 84783 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Pb_survivorat_s_p0011)))

                    ; #34471: <==negation-removal== 58241 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Bb_not_survivorat_s_p0011)))

                    ; #44742: <==unclosure== 96768 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Bb_not_survivorat_s_p0011)))

                    ; #71201: <==negation-removal== 64765 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Pb_not_survivorat_s_p0011)))

                    ; #96768: <==uncertain_firing== 64765 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Pb_not_survivorat_s_p0011)))))

    (:action sensesurvivors_b_p012_s
        :precondition (and (at_b_p012)
                           (not (obs_p012)))
        :effect (and
                    ; #45896: <==closure== 79055 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (Pb_survivorat_s_p012))

                    ; #47360: origin
                    (obs_p012)

                    ; #74202: <==closure== 76297 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Pb_not_survivorat_s_p012))

                    ; #76297: origin
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Bb_not_survivorat_s_p012))

                    ; #79055: origin
                    (when (and (hiddensurvivorat_s_p012))
                          (Bb_survivorat_s_p012))

                    ; #23866: <==negation-removal== 79055 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Pb_not_survivorat_s_p012)))

                    ; #34693: <==uncertain_firing== 79055 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Pb_not_survivorat_s_p012)))

                    ; #50398: <==negation-removal== 45896 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Bb_not_survivorat_s_p012)))

                    ; #65443: <==negation-removal== 76297 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Pb_survivorat_s_p012)))

                    ; #65828: <==negation-removal== 74202 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Bb_survivorat_s_p012)))

                    ; #73355: <==negation-removal== 47360 (pos)
                    (not (not_obs_p012))

                    ; #90580: <==unclosure== 34693 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Bb_not_survivorat_s_p012)))))

    (:action sensesurvivors_b_p10_s
        :precondition (and (at_b_p10)
                           (not (obs_p10)))
        :effect (and
                    ; #42187: <==closure== 61710 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (Pb_survivorat_s_p10))

                    ; #49105: origin
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Bb_not_survivorat_s_p10))

                    ; #59766: <==closure== 49105 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Pb_not_survivorat_s_p10))

                    ; #61710: origin
                    (when (and (hiddensurvivorat_s_p10))
                          (Bb_survivorat_s_p10))

                    ; #83638: origin
                    (obs_p10)

                    ; #22621: <==negation-removal== 42187 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Bb_not_survivorat_s_p10)))

                    ; #27138: <==negation-removal== 61710 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Pb_not_survivorat_s_p10)))

                    ; #30409: <==negation-removal== 59766 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Bb_survivorat_s_p10)))

                    ; #42534: <==negation-removal== 83638 (pos)
                    (not (not_obs_p10))

                    ; #54592: <==negation-removal== 49105 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Pb_survivorat_s_p10)))

                    ; #83935: <==unclosure== 87693 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Bb_not_survivorat_s_p10)))

                    ; #87693: <==uncertain_firing== 61710 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Pb_not_survivorat_s_p10)))))

    (:action sensesurvivors_b_p1_s
        :precondition (and (at_b_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #30093: origin
                    (obs_p1)

                    ; #33351: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Bb_not_survivorat_s_p1))

                    ; #36281: <==closure== 33351 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pb_not_survivorat_s_p1))

                    ; #69197: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Bb_survivorat_s_p1))

                    ; #76283: <==closure== 69197 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pb_survivorat_s_p1))

                    ; #39515: <==negation-removal== 36281 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Bb_survivorat_s_p1)))

                    ; #46326: <==uncertain_firing== 69197 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pb_not_survivorat_s_p1)))

                    ; #63321: <==negation-removal== 33351 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pb_survivorat_s_p1)))

                    ; #66261: <==unclosure== 46326 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Bb_not_survivorat_s_p1)))

                    ; #67815: <==negation-removal== 76283 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Bb_not_survivorat_s_p1)))

                    ; #68427: <==negation-removal== 30093 (pos)
                    (not (not_obs_p1))

                    ; #89238: <==negation-removal== 69197 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pb_not_survivorat_s_p1)))))

    (:action sensesurvivors_b_p2_s
        :precondition (and (at_b_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #17263: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Bb_survivorat_s_p2))

                    ; #54406: <==closure== 17263 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pb_survivorat_s_p2))

                    ; #66423: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Bb_not_survivorat_s_p2))

                    ; #89541: origin
                    (obs_p2)

                    ; #92580: <==closure== 66423 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pb_not_survivorat_s_p2))

                    ; #15183: <==negation-removal== 17263 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pb_not_survivorat_s_p2)))

                    ; #15875: <==unclosure== 57905 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Bb_not_survivorat_s_p2)))

                    ; #40276: <==negation-removal== 54406 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Bb_not_survivorat_s_p2)))

                    ; #40982: <==negation-removal== 89541 (pos)
                    (not (not_obs_p2))

                    ; #57905: <==uncertain_firing== 17263 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pb_not_survivorat_s_p2)))

                    ; #67430: <==negation-removal== 92580 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Bb_survivorat_s_p2)))

                    ; #80831: <==negation-removal== 66423 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pb_survivorat_s_p2)))))

    (:action sensesurvivors_b_p3_s
        :precondition (and (at_b_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #13572: origin
                    (obs_p3)

                    ; #36443: <==closure== 37556 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pb_survivorat_s_p3))

                    ; #37556: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Bb_survivorat_s_p3))

                    ; #60089: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Bb_not_survivorat_s_p3))

                    ; #94650: <==closure== 60089 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pb_not_survivorat_s_p3))

                    ; #41150: <==unclosure== 77117 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Bb_not_survivorat_s_p3)))

                    ; #60985: <==negation-removal== 60089 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pb_survivorat_s_p3)))

                    ; #77117: <==uncertain_firing== 37556 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pb_not_survivorat_s_p3)))

                    ; #78162: <==negation-removal== 13572 (pos)
                    (not (not_obs_p3))

                    ; #81405: <==negation-removal== 37556 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pb_not_survivorat_s_p3)))

                    ; #81525: <==negation-removal== 94650 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Bb_survivorat_s_p3)))

                    ; #91031: <==negation-removal== 36443 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Bb_not_survivorat_s_p3)))))

    (:action sensesurvivors_b_p4_s
        :precondition (and (at_b_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #22659: origin
                    (obs_p4)

                    ; #28457: <==closure== 73491 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pb_survivorat_s_p4))

                    ; #36025: <==closure== 46091 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pb_not_survivorat_s_p4))

                    ; #46091: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Bb_not_survivorat_s_p4))

                    ; #73491: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Bb_survivorat_s_p4))

                    ; #16913: <==negation-removal== 36025 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Bb_survivorat_s_p4)))

                    ; #19717: <==negation-removal== 73491 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pb_not_survivorat_s_p4)))

                    ; #41188: <==negation-removal== 46091 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pb_survivorat_s_p4)))

                    ; #48535: <==unclosure== 65743 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Bb_not_survivorat_s_p4)))

                    ; #54807: <==negation-removal== 22659 (pos)
                    (not (not_obs_p4))

                    ; #55976: <==negation-removal== 28457 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Bb_not_survivorat_s_p4)))

                    ; #65743: <==uncertain_firing== 73491 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pb_not_survivorat_s_p4)))))

    (:action sensesurvivors_b_p5_s
        :precondition (and (at_b_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #29765: <==closure== 73137 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pb_not_survivorat_s_p5))

                    ; #58677: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Bb_survivorat_s_p5))

                    ; #70601: <==closure== 58677 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pb_survivorat_s_p5))

                    ; #73137: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Bb_not_survivorat_s_p5))

                    ; #79372: origin
                    (obs_p5)

                    ; #11392: <==negation-removal== 73137 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pb_survivorat_s_p5)))

                    ; #20232: <==negation-removal== 58677 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pb_not_survivorat_s_p5)))

                    ; #24491: <==negation-removal== 29765 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Bb_survivorat_s_p5)))

                    ; #46894: <==unclosure== 49263 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Bb_not_survivorat_s_p5)))

                    ; #49263: <==uncertain_firing== 58677 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pb_not_survivorat_s_p5)))

                    ; #53682: <==negation-removal== 70601 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Bb_not_survivorat_s_p5)))

                    ; #86080: <==negation-removal== 79372 (pos)
                    (not (not_obs_p5))))

    (:action sensesurvivors_b_p6_s
        :precondition (and (at_b_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #10431: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Bb_survivorat_s_p6))

                    ; #36909: origin
                    (obs_p6)

                    ; #51924: <==closure== 74138 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pb_not_survivorat_s_p6))

                    ; #59606: <==closure== 10431 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pb_survivorat_s_p6))

                    ; #74138: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Bb_not_survivorat_s_p6))

                    ; #12427: <==negation-removal== 51924 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Bb_survivorat_s_p6)))

                    ; #15162: <==uncertain_firing== 10431 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pb_not_survivorat_s_p6)))

                    ; #31235: <==unclosure== 15162 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Bb_not_survivorat_s_p6)))

                    ; #31505: <==negation-removal== 74138 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pb_survivorat_s_p6)))

                    ; #50859: <==negation-removal== 59606 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Bb_not_survivorat_s_p6)))

                    ; #57764: <==negation-removal== 10431 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pb_not_survivorat_s_p6)))

                    ; #78662: <==negation-removal== 36909 (pos)
                    (not (not_obs_p6))))

    (:action sensesurvivors_b_p7_s
        :precondition (and (at_b_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #15698: origin
                    (obs_p7)

                    ; #15757: <==closure== 20122 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pb_survivorat_s_p7))

                    ; #20122: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Bb_survivorat_s_p7))

                    ; #65887: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Bb_not_survivorat_s_p7))

                    ; #74757: <==closure== 65887 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pb_not_survivorat_s_p7))

                    ; #11697: <==negation-removal== 15757 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Bb_not_survivorat_s_p7)))

                    ; #18693: <==negation-removal== 65887 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pb_survivorat_s_p7)))

                    ; #22672: <==negation-removal== 20122 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pb_not_survivorat_s_p7)))

                    ; #25491: <==negation-removal== 15698 (pos)
                    (not (not_obs_p7))

                    ; #41850: <==uncertain_firing== 20122 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pb_not_survivorat_s_p7)))

                    ; #46303: <==negation-removal== 74757 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Bb_survivorat_s_p7)))

                    ; #88527: <==unclosure== 41850 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Bb_not_survivorat_s_p7)))))

    (:action sensesurvivors_b_p8_s
        :precondition (and (at_b_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #33810: <==closure== 38239 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pb_not_survivorat_s_p8))

                    ; #38239: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Bb_not_survivorat_s_p8))

                    ; #43811: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Bb_survivorat_s_p8))

                    ; #80511: <==closure== 43811 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pb_survivorat_s_p8))

                    ; #91498: origin
                    (obs_p8)

                    ; #14703: <==uncertain_firing== 43811 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pb_not_survivorat_s_p8)))

                    ; #21446: <==negation-removal== 43811 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pb_not_survivorat_s_p8)))

                    ; #26442: <==negation-removal== 91498 (pos)
                    (not (not_obs_p8))

                    ; #61620: <==negation-removal== 38239 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pb_survivorat_s_p8)))

                    ; #64669: <==negation-removal== 80511 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Bb_not_survivorat_s_p8)))

                    ; #70027: <==negation-removal== 33810 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Bb_survivorat_s_p8)))

                    ; #83019: <==unclosure== 14703 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Bb_not_survivorat_s_p8)))))

    (:action sensesurvivors_b_p9_s
        :precondition (and (at_b_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #31878: <==closure== 58098 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pb_not_survivorat_s_p9))

                    ; #58098: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Bb_not_survivorat_s_p9))

                    ; #64112: origin
                    (obs_p9)

                    ; #90873: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Bb_survivorat_s_p9))

                    ; #96736: <==closure== 90873 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pb_survivorat_s_p9))

                    ; #18216: <==negation-removal== 96736 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Bb_not_survivorat_s_p9)))

                    ; #20025: <==negation-removal== 64112 (pos)
                    (not (not_obs_p9))

                    ; #23004: <==unclosure== 47105 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Bb_not_survivorat_s_p9)))

                    ; #26265: <==negation-removal== 90873 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pb_not_survivorat_s_p9)))

                    ; #47105: <==uncertain_firing== 90873 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pb_not_survivorat_s_p9)))

                    ; #54792: <==negation-removal== 31878 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Bb_survivorat_s_p9)))

                    ; #63003: <==negation-removal== 58098 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pb_survivorat_s_p9)))))

    (:action sensesurvivors_c_p0011_s
        :precondition (and (at_c_p0011)
                           (not (obs_p0011)))
        :effect (and
                    ; #14764: <==closure== 50441 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (Pc_survivorat_s_p0011))

                    ; #50441: origin
                    (when (and (hiddensurvivorat_s_p0011))
                          (Bc_survivorat_s_p0011))

                    ; #56013: <==closure== 64800 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Pc_not_survivorat_s_p0011))

                    ; #64800: origin
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Bc_not_survivorat_s_p0011))

                    ; #91130: origin
                    (obs_p0011)

                    ; #15055: <==negation-removal== 91130 (pos)
                    (not (not_obs_p0011))

                    ; #16254: <==negation-removal== 14764 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Bc_not_survivorat_s_p0011)))

                    ; #28675: <==negation-removal== 50441 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Pc_not_survivorat_s_p0011)))

                    ; #48212: <==unclosure== 76823 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Bc_not_survivorat_s_p0011)))

                    ; #52939: <==negation-removal== 56013 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Bc_survivorat_s_p0011)))

                    ; #70549: <==negation-removal== 64800 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Pc_survivorat_s_p0011)))

                    ; #76823: <==uncertain_firing== 50441 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Pc_not_survivorat_s_p0011)))))

    (:action sensesurvivors_c_p012_s
        :precondition (and (at_c_p012)
                           (not (obs_p012)))
        :effect (and
                    ; #14747: <==closure== 43651 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Pc_not_survivorat_s_p012))

                    ; #26805: <==closure== 49260 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (Pc_survivorat_s_p012))

                    ; #43651: origin
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Bc_not_survivorat_s_p012))

                    ; #47360: origin
                    (obs_p012)

                    ; #49260: origin
                    (when (and (hiddensurvivorat_s_p012))
                          (Bc_survivorat_s_p012))

                    ; #21043: <==negation-removal== 43651 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Pc_survivorat_s_p012)))

                    ; #22404: <==negation-removal== 14747 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Bc_survivorat_s_p012)))

                    ; #27180: <==unclosure== 57563 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Bc_not_survivorat_s_p012)))

                    ; #38149: <==negation-removal== 26805 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Bc_not_survivorat_s_p012)))

                    ; #38430: <==negation-removal== 49260 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Pc_not_survivorat_s_p012)))

                    ; #57563: <==uncertain_firing== 49260 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Pc_not_survivorat_s_p012)))

                    ; #73355: <==negation-removal== 47360 (pos)
                    (not (not_obs_p012))))

    (:action sensesurvivors_c_p10_s
        :precondition (and (at_c_p10)
                           (not (obs_p10)))
        :effect (and
                    ; #41652: origin
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Bc_not_survivorat_s_p10))

                    ; #57439: <==closure== 41652 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Pc_not_survivorat_s_p10))

                    ; #74860: origin
                    (when (and (hiddensurvivorat_s_p10))
                          (Bc_survivorat_s_p10))

                    ; #83638: origin
                    (obs_p10)

                    ; #90302: <==closure== 74860 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (Pc_survivorat_s_p10))

                    ; #16619: <==uncertain_firing== 74860 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Pc_not_survivorat_s_p10)))

                    ; #34599: <==negation-removal== 57439 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Bc_survivorat_s_p10)))

                    ; #42534: <==negation-removal== 83638 (pos)
                    (not (not_obs_p10))

                    ; #49499: <==unclosure== 16619 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Bc_not_survivorat_s_p10)))

                    ; #63311: <==negation-removal== 90302 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Bc_not_survivorat_s_p10)))

                    ; #79514: <==negation-removal== 41652 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Pc_survivorat_s_p10)))

                    ; #87632: <==negation-removal== 74860 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Pc_not_survivorat_s_p10)))))

    (:action sensesurvivors_c_p1_s
        :precondition (and (at_c_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #30093: origin
                    (obs_p1)

                    ; #36512: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Bc_not_survivorat_s_p1))

                    ; #51460: <==closure== 36512 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pc_not_survivorat_s_p1))

                    ; #64225: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Bc_survivorat_s_p1))

                    ; #82622: <==closure== 64225 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pc_survivorat_s_p1))

                    ; #16978: <==unclosure== 77619 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Bc_not_survivorat_s_p1)))

                    ; #31446: <==negation-removal== 64225 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pc_not_survivorat_s_p1)))

                    ; #53449: <==negation-removal== 82622 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Bc_not_survivorat_s_p1)))

                    ; #68427: <==negation-removal== 30093 (pos)
                    (not (not_obs_p1))

                    ; #73561: <==negation-removal== 51460 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Bc_survivorat_s_p1)))

                    ; #77619: <==uncertain_firing== 64225 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pc_not_survivorat_s_p1)))

                    ; #78448: <==negation-removal== 36512 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pc_survivorat_s_p1)))))

    (:action sensesurvivors_c_p2_s
        :precondition (and (at_c_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #12379: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Bc_not_survivorat_s_p2))

                    ; #42329: <==closure== 12379 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pc_not_survivorat_s_p2))

                    ; #51626: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Bc_survivorat_s_p2))

                    ; #80129: <==closure== 51626 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pc_survivorat_s_p2))

                    ; #89541: origin
                    (obs_p2)

                    ; #31193: <==uncertain_firing== 51626 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pc_not_survivorat_s_p2)))

                    ; #39086: <==unclosure== 31193 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Bc_not_survivorat_s_p2)))

                    ; #40982: <==negation-removal== 89541 (pos)
                    (not (not_obs_p2))

                    ; #62321: <==negation-removal== 42329 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Bc_survivorat_s_p2)))

                    ; #66744: <==negation-removal== 12379 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pc_survivorat_s_p2)))

                    ; #68473: <==negation-removal== 80129 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Bc_not_survivorat_s_p2)))

                    ; #89216: <==negation-removal== 51626 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pc_not_survivorat_s_p2)))))

    (:action sensesurvivors_c_p3_s
        :precondition (and (at_c_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #13572: origin
                    (obs_p3)

                    ; #18108: <==closure== 44279 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pc_survivorat_s_p3))

                    ; #24374: <==closure== 43306 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pc_not_survivorat_s_p3))

                    ; #43306: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Bc_not_survivorat_s_p3))

                    ; #44279: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Bc_survivorat_s_p3))

                    ; #11585: <==negation-removal== 18108 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Bc_not_survivorat_s_p3)))

                    ; #36901: <==negation-removal== 44279 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pc_not_survivorat_s_p3)))

                    ; #40178: <==negation-removal== 43306 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pc_survivorat_s_p3)))

                    ; #70028: <==negation-removal== 24374 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Bc_survivorat_s_p3)))

                    ; #75313: <==unclosure== 77483 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Bc_not_survivorat_s_p3)))

                    ; #77483: <==uncertain_firing== 44279 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pc_not_survivorat_s_p3)))

                    ; #78162: <==negation-removal== 13572 (pos)
                    (not (not_obs_p3))))

    (:action sensesurvivors_c_p4_s
        :precondition (and (at_c_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #22659: origin
                    (obs_p4)

                    ; #42178: <==closure== 53583 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pc_survivorat_s_p4))

                    ; #42694: <==closure== 66030 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pc_not_survivorat_s_p4))

                    ; #53583: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Bc_survivorat_s_p4))

                    ; #66030: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Bc_not_survivorat_s_p4))

                    ; #23115: <==unclosure== 83850 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Bc_not_survivorat_s_p4)))

                    ; #37039: <==negation-removal== 66030 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pc_survivorat_s_p4)))

                    ; #40151: <==negation-removal== 42178 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Bc_not_survivorat_s_p4)))

                    ; #54807: <==negation-removal== 22659 (pos)
                    (not (not_obs_p4))

                    ; #73070: <==negation-removal== 53583 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pc_not_survivorat_s_p4)))

                    ; #75183: <==negation-removal== 42694 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Bc_survivorat_s_p4)))

                    ; #83850: <==uncertain_firing== 53583 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pc_not_survivorat_s_p4)))))

    (:action sensesurvivors_c_p5_s
        :precondition (and (at_c_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #38387: <==closure== 72210 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pc_survivorat_s_p5))

                    ; #58191: <==closure== 83909 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pc_not_survivorat_s_p5))

                    ; #72210: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Bc_survivorat_s_p5))

                    ; #79372: origin
                    (obs_p5)

                    ; #83909: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Bc_not_survivorat_s_p5))

                    ; #25196: <==negation-removal== 72210 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pc_not_survivorat_s_p5)))

                    ; #25658: <==negation-removal== 38387 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Bc_not_survivorat_s_p5)))

                    ; #34450: <==unclosure== 69309 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Bc_not_survivorat_s_p5)))

                    ; #69309: <==uncertain_firing== 72210 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pc_not_survivorat_s_p5)))

                    ; #82045: <==negation-removal== 58191 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Bc_survivorat_s_p5)))

                    ; #86080: <==negation-removal== 79372 (pos)
                    (not (not_obs_p5))

                    ; #89461: <==negation-removal== 83909 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pc_survivorat_s_p5)))))

    (:action sensesurvivors_c_p6_s
        :precondition (and (at_c_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #36909: origin
                    (obs_p6)

                    ; #39409: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Bc_survivorat_s_p6))

                    ; #43350: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Bc_not_survivorat_s_p6))

                    ; #58935: <==closure== 43350 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pc_not_survivorat_s_p6))

                    ; #59191: <==closure== 39409 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pc_survivorat_s_p6))

                    ; #15098: <==negation-removal== 58935 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Bc_survivorat_s_p6)))

                    ; #20473: <==negation-removal== 43350 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pc_survivorat_s_p6)))

                    ; #32177: <==uncertain_firing== 39409 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pc_not_survivorat_s_p6)))

                    ; #60548: <==negation-removal== 59191 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Bc_not_survivorat_s_p6)))

                    ; #78662: <==negation-removal== 36909 (pos)
                    (not (not_obs_p6))

                    ; #85929: <==unclosure== 32177 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Bc_not_survivorat_s_p6)))

                    ; #90317: <==negation-removal== 39409 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pc_not_survivorat_s_p6)))))

    (:action sensesurvivors_c_p7_s
        :precondition (and (at_c_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #15698: origin
                    (obs_p7)

                    ; #16711: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Bc_not_survivorat_s_p7))

                    ; #21776: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Bc_survivorat_s_p7))

                    ; #49400: <==closure== 16711 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pc_not_survivorat_s_p7))

                    ; #77798: <==closure== 21776 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pc_survivorat_s_p7))

                    ; #12082: <==negation-removal== 49400 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Bc_survivorat_s_p7)))

                    ; #25491: <==negation-removal== 15698 (pos)
                    (not (not_obs_p7))

                    ; #38490: <==negation-removal== 16711 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pc_survivorat_s_p7)))

                    ; #46857: <==uncertain_firing== 21776 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pc_not_survivorat_s_p7)))

                    ; #65703: <==negation-removal== 77798 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Bc_not_survivorat_s_p7)))

                    ; #69620: <==negation-removal== 21776 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pc_not_survivorat_s_p7)))

                    ; #90816: <==unclosure== 46857 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Bc_not_survivorat_s_p7)))))

    (:action sensesurvivors_c_p8_s
        :precondition (and (at_c_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #33972: <==closure== 41933 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pc_not_survivorat_s_p8))

                    ; #41933: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Bc_not_survivorat_s_p8))

                    ; #62633: <==closure== 80269 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pc_survivorat_s_p8))

                    ; #80269: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Bc_survivorat_s_p8))

                    ; #91498: origin
                    (obs_p8)

                    ; #20325: <==negation-removal== 33972 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Bc_survivorat_s_p8)))

                    ; #26442: <==negation-removal== 91498 (pos)
                    (not (not_obs_p8))

                    ; #34015: <==negation-removal== 62633 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Bc_not_survivorat_s_p8)))

                    ; #43655: <==unclosure== 79647 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Bc_not_survivorat_s_p8)))

                    ; #78298: <==negation-removal== 41933 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pc_survivorat_s_p8)))

                    ; #79647: <==uncertain_firing== 80269 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pc_not_survivorat_s_p8)))

                    ; #89946: <==negation-removal== 80269 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pc_not_survivorat_s_p8)))))

    (:action sensesurvivors_c_p9_s
        :precondition (and (at_c_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #44440: <==closure== 62514 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pc_not_survivorat_s_p9))

                    ; #62514: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Bc_not_survivorat_s_p9))

                    ; #64112: origin
                    (obs_p9)

                    ; #70898: <==closure== 89736 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pc_survivorat_s_p9))

                    ; #89736: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Bc_survivorat_s_p9))

                    ; #14017: <==uncertain_firing== 89736 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pc_not_survivorat_s_p9)))

                    ; #19252: <==unclosure== 14017 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Bc_not_survivorat_s_p9)))

                    ; #20025: <==negation-removal== 64112 (pos)
                    (not (not_obs_p9))

                    ; #28374: <==negation-removal== 62514 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pc_survivorat_s_p9)))

                    ; #44507: <==negation-removal== 89736 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pc_not_survivorat_s_p9)))

                    ; #44707: <==negation-removal== 70898 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Bc_not_survivorat_s_p9)))

                    ; #90115: <==negation-removal== 44440 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Bc_survivorat_s_p9)))))

    (:action sensesurvivors_d_p0011_s
        :precondition (and (at_d_p0011)
                           (not (obs_p0011)))
        :effect (and
                    ; #16895: <==closure== 75061 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Pd_not_survivorat_s_p0011))

                    ; #25637: origin
                    (when (and (hiddensurvivorat_s_p0011))
                          (Bd_survivorat_s_p0011))

                    ; #28252: <==closure== 25637 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (Pd_survivorat_s_p0011))

                    ; #75061: origin
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Bd_not_survivorat_s_p0011))

                    ; #91130: origin
                    (obs_p0011)

                    ; #13704: <==uncertain_firing== 25637 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Pd_not_survivorat_s_p0011)))

                    ; #15055: <==negation-removal== 91130 (pos)
                    (not (not_obs_p0011))

                    ; #37798: <==unclosure== 13704 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Bd_not_survivorat_s_p0011)))

                    ; #56334: <==negation-removal== 25637 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Pd_not_survivorat_s_p0011)))

                    ; #73754: <==negation-removal== 28252 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Bd_not_survivorat_s_p0011)))

                    ; #79755: <==negation-removal== 16895 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Bd_survivorat_s_p0011)))

                    ; #88683: <==negation-removal== 75061 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Pd_survivorat_s_p0011)))))

    (:action sensesurvivors_d_p012_s
        :precondition (and (at_d_p012)
                           (not (obs_p012)))
        :effect (and
                    ; #40815: origin
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Bd_not_survivorat_s_p012))

                    ; #47360: origin
                    (obs_p012)

                    ; #58983: <==closure== 40815 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Pd_not_survivorat_s_p012))

                    ; #66997: origin
                    (when (and (hiddensurvivorat_s_p012))
                          (Bd_survivorat_s_p012))

                    ; #70450: <==closure== 66997 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (Pd_survivorat_s_p012))

                    ; #16199: <==negation-removal== 66997 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Pd_not_survivorat_s_p012)))

                    ; #25340: <==negation-removal== 40815 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Pd_survivorat_s_p012)))

                    ; #40346: <==unclosure== 41710 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Bd_not_survivorat_s_p012)))

                    ; #41710: <==uncertain_firing== 66997 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Pd_not_survivorat_s_p012)))

                    ; #52616: <==negation-removal== 70450 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Bd_not_survivorat_s_p012)))

                    ; #55482: <==negation-removal== 58983 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Bd_survivorat_s_p012)))

                    ; #73355: <==negation-removal== 47360 (pos)
                    (not (not_obs_p012))))

    (:action sensesurvivors_d_p10_s
        :precondition (and (at_d_p10)
                           (not (obs_p10)))
        :effect (and
                    ; #37145: origin
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Bd_not_survivorat_s_p10))

                    ; #60808: <==closure== 66271 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (Pd_survivorat_s_p10))

                    ; #66271: origin
                    (when (and (hiddensurvivorat_s_p10))
                          (Bd_survivorat_s_p10))

                    ; #75622: <==closure== 37145 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Pd_not_survivorat_s_p10))

                    ; #83638: origin
                    (obs_p10)

                    ; #13259: <==negation-removal== 37145 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Pd_survivorat_s_p10)))

                    ; #19353: <==uncertain_firing== 66271 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Pd_not_survivorat_s_p10)))

                    ; #33773: <==negation-removal== 60808 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Bd_not_survivorat_s_p10)))

                    ; #38544: <==unclosure== 19353 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Bd_not_survivorat_s_p10)))

                    ; #41597: <==negation-removal== 75622 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Bd_survivorat_s_p10)))

                    ; #42534: <==negation-removal== 83638 (pos)
                    (not (not_obs_p10))

                    ; #67351: <==negation-removal== 66271 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Pd_not_survivorat_s_p10)))))

    (:action sensesurvivors_d_p1_s
        :precondition (and (at_d_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #10205: <==closure== 82926 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pd_not_survivorat_s_p1))

                    ; #25548: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Bd_survivorat_s_p1))

                    ; #30093: origin
                    (obs_p1)

                    ; #61272: <==closure== 25548 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pd_survivorat_s_p1))

                    ; #82926: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Bd_not_survivorat_s_p1))

                    ; #10111: <==uncertain_firing== 25548 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pd_not_survivorat_s_p1)))

                    ; #12359: <==negation-removal== 82926 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pd_survivorat_s_p1)))

                    ; #15979: <==negation-removal== 10205 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Bd_survivorat_s_p1)))

                    ; #39506: <==unclosure== 10111 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Bd_not_survivorat_s_p1)))

                    ; #51853: <==negation-removal== 25548 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pd_not_survivorat_s_p1)))

                    ; #55218: <==negation-removal== 61272 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Bd_not_survivorat_s_p1)))

                    ; #68427: <==negation-removal== 30093 (pos)
                    (not (not_obs_p1))))

    (:action sensesurvivors_d_p2_s
        :precondition (and (at_d_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #11993: <==closure== 67535 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pd_not_survivorat_s_p2))

                    ; #67535: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Bd_not_survivorat_s_p2))

                    ; #72166: <==closure== 76534 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pd_survivorat_s_p2))

                    ; #76534: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Bd_survivorat_s_p2))

                    ; #89541: origin
                    (obs_p2)

                    ; #12052: <==negation-removal== 72166 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Bd_not_survivorat_s_p2)))

                    ; #31283: <==unclosure== 72928 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Bd_not_survivorat_s_p2)))

                    ; #40982: <==negation-removal== 89541 (pos)
                    (not (not_obs_p2))

                    ; #45325: <==negation-removal== 11993 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Bd_survivorat_s_p2)))

                    ; #53822: <==negation-removal== 76534 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pd_not_survivorat_s_p2)))

                    ; #70796: <==negation-removal== 67535 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pd_survivorat_s_p2)))

                    ; #72928: <==uncertain_firing== 76534 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pd_not_survivorat_s_p2)))))

    (:action sensesurvivors_d_p3_s
        :precondition (and (at_d_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #13572: origin
                    (obs_p3)

                    ; #20454: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Bd_not_survivorat_s_p3))

                    ; #28103: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Bd_survivorat_s_p3))

                    ; #73959: <==closure== 28103 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pd_survivorat_s_p3))

                    ; #82374: <==closure== 20454 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pd_not_survivorat_s_p3))

                    ; #11744: <==negation-removal== 73959 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Bd_not_survivorat_s_p3)))

                    ; #18422: <==negation-removal== 20454 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pd_survivorat_s_p3)))

                    ; #36624: <==negation-removal== 28103 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pd_not_survivorat_s_p3)))

                    ; #45097: <==uncertain_firing== 28103 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pd_not_survivorat_s_p3)))

                    ; #76247: <==negation-removal== 82374 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Bd_survivorat_s_p3)))

                    ; #78162: <==negation-removal== 13572 (pos)
                    (not (not_obs_p3))

                    ; #91469: <==unclosure== 45097 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Bd_not_survivorat_s_p3)))))

    (:action sensesurvivors_d_p4_s
        :precondition (and (at_d_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #21657: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Bd_not_survivorat_s_p4))

                    ; #22659: origin
                    (obs_p4)

                    ; #33010: <==closure== 21657 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pd_not_survivorat_s_p4))

                    ; #37446: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Bd_survivorat_s_p4))

                    ; #87693: <==closure== 37446 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pd_survivorat_s_p4))

                    ; #19656: <==unclosure== 60375 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Bd_not_survivorat_s_p4)))

                    ; #33412: <==negation-removal== 33010 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Bd_survivorat_s_p4)))

                    ; #54807: <==negation-removal== 22659 (pos)
                    (not (not_obs_p4))

                    ; #57355: <==negation-removal== 37446 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pd_not_survivorat_s_p4)))

                    ; #58823: <==negation-removal== 21657 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pd_survivorat_s_p4)))

                    ; #60375: <==uncertain_firing== 37446 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pd_not_survivorat_s_p4)))

                    ; #82107: <==negation-removal== 87693 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Bd_not_survivorat_s_p4)))))

    (:action sensesurvivors_d_p5_s
        :precondition (and (at_d_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #10017: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Bd_survivorat_s_p5))

                    ; #56775: <==closure== 10017 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pd_survivorat_s_p5))

                    ; #72250: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Bd_not_survivorat_s_p5))

                    ; #79372: origin
                    (obs_p5)

                    ; #86618: <==closure== 72250 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pd_not_survivorat_s_p5))

                    ; #11679: <==negation-removal== 56775 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Bd_not_survivorat_s_p5)))

                    ; #27357: <==negation-removal== 72250 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pd_survivorat_s_p5)))

                    ; #62729: <==negation-removal== 86618 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Bd_survivorat_s_p5)))

                    ; #64579: <==unclosure== 72268 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Bd_not_survivorat_s_p5)))

                    ; #66261: <==negation-removal== 10017 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pd_not_survivorat_s_p5)))

                    ; #72268: <==uncertain_firing== 10017 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pd_not_survivorat_s_p5)))

                    ; #86080: <==negation-removal== 79372 (pos)
                    (not (not_obs_p5))))

    (:action sensesurvivors_d_p6_s
        :precondition (and (at_d_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #33610: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Bd_not_survivorat_s_p6))

                    ; #36909: origin
                    (obs_p6)

                    ; #71766: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Bd_survivorat_s_p6))

                    ; #77606: <==closure== 33610 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pd_not_survivorat_s_p6))

                    ; #88921: <==closure== 71766 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pd_survivorat_s_p6))

                    ; #20521: <==negation-removal== 71766 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pd_not_survivorat_s_p6)))

                    ; #38824: <==negation-removal== 77606 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Bd_survivorat_s_p6)))

                    ; #68752: <==uncertain_firing== 71766 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pd_not_survivorat_s_p6)))

                    ; #70982: <==negation-removal== 33610 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pd_survivorat_s_p6)))

                    ; #75874: <==negation-removal== 88921 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Bd_not_survivorat_s_p6)))

                    ; #78662: <==negation-removal== 36909 (pos)
                    (not (not_obs_p6))

                    ; #83150: <==unclosure== 68752 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Bd_not_survivorat_s_p6)))))

    (:action sensesurvivors_d_p7_s
        :precondition (and (at_d_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #15698: origin
                    (obs_p7)

                    ; #22005: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Bd_survivorat_s_p7))

                    ; #38311: <==closure== 22005 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pd_survivorat_s_p7))

                    ; #62188: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Bd_not_survivorat_s_p7))

                    ; #76492: <==closure== 62188 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pd_not_survivorat_s_p7))

                    ; #17827: <==negation-removal== 22005 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pd_not_survivorat_s_p7)))

                    ; #21790: <==uncertain_firing== 22005 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pd_not_survivorat_s_p7)))

                    ; #25491: <==negation-removal== 15698 (pos)
                    (not (not_obs_p7))

                    ; #43235: <==unclosure== 21790 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Bd_not_survivorat_s_p7)))

                    ; #63197: <==negation-removal== 62188 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pd_survivorat_s_p7)))

                    ; #75972: <==negation-removal== 38311 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Bd_not_survivorat_s_p7)))

                    ; #81330: <==negation-removal== 76492 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Bd_survivorat_s_p7)))))

    (:action sensesurvivors_d_p8_s
        :precondition (and (at_d_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #52654: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Bd_not_survivorat_s_p8))

                    ; #67165: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Bd_survivorat_s_p8))

                    ; #74025: <==closure== 52654 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pd_not_survivorat_s_p8))

                    ; #88267: <==closure== 67165 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pd_survivorat_s_p8))

                    ; #91498: origin
                    (obs_p8)

                    ; #21533: <==uncertain_firing== 67165 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pd_not_survivorat_s_p8)))

                    ; #26442: <==negation-removal== 91498 (pos)
                    (not (not_obs_p8))

                    ; #34395: <==negation-removal== 52654 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pd_survivorat_s_p8)))

                    ; #39773: <==negation-removal== 67165 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pd_not_survivorat_s_p8)))

                    ; #40878: <==negation-removal== 74025 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Bd_survivorat_s_p8)))

                    ; #76680: <==unclosure== 21533 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Bd_not_survivorat_s_p8)))

                    ; #88206: <==negation-removal== 88267 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Bd_not_survivorat_s_p8)))))

    (:action sensesurvivors_d_p9_s
        :precondition (and (at_d_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #63242: <==closure== 79391 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pd_not_survivorat_s_p9))

                    ; #64112: origin
                    (obs_p9)

                    ; #68263: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Bd_survivorat_s_p9))

                    ; #79391: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Bd_not_survivorat_s_p9))

                    ; #96491: <==closure== 68263 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pd_survivorat_s_p9))

                    ; #20025: <==negation-removal== 64112 (pos)
                    (not (not_obs_p9))

                    ; #38638: <==negation-removal== 68263 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pd_not_survivorat_s_p9)))

                    ; #44091: <==negation-removal== 96491 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Bd_not_survivorat_s_p9)))

                    ; #73533: <==negation-removal== 63242 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Bd_survivorat_s_p9)))

                    ; #74670: <==unclosure== 80185 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Bd_not_survivorat_s_p9)))

                    ; #80185: <==uncertain_firing== 68263 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pd_not_survivorat_s_p9)))

                    ; #86252: <==negation-removal== 79391 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pd_survivorat_s_p9)))))

)