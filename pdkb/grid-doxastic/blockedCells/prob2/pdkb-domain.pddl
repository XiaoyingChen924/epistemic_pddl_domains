(define (domain grid)

    (:requirements :strips :conditional-effects)

    (:predicates
        (not_at_a_p0011)
        (not_at_a_p012)
        (not_at_a_p1)
        (not_at_a_p10)
        (not_at_a_p2)
        (not_at_a_p3)
        (not_at_a_p4)
        (not_at_a_p5)
        (not_at_a_p6)
        (not_at_a_p7)
        (not_at_a_p8)
        (not_at_a_p9)
        (not_at_b_p0011)
        (not_at_b_p012)
        (not_at_b_p1)
        (not_at_b_p10)
        (not_at_b_p2)
        (not_at_b_p3)
        (not_at_b_p4)
        (not_at_b_p5)
        (not_at_b_p6)
        (not_at_b_p7)
        (not_at_b_p8)
        (not_at_b_p9)
        (not_at_c_p0011)
        (not_at_c_p012)
        (not_at_c_p1)
        (not_at_c_p10)
        (not_at_c_p2)
        (not_at_c_p3)
        (not_at_c_p4)
        (not_at_c_p5)
        (not_at_c_p6)
        (not_at_c_p7)
        (not_at_c_p8)
        (not_at_c_p9)
        (not_blocked_p0011)
        (not_blocked_p012)
        (not_blocked_p1)
        (not_blocked_p10)
        (not_blocked_p2)
        (not_blocked_p3)
        (not_blocked_p4)
        (not_blocked_p5)
        (not_blocked_p6)
        (not_blocked_p7)
        (not_blocked_p8)
        (not_blocked_p9)
        (not_checked_p0011)
        (not_checked_p012)
        (not_checked_p1)
        (not_checked_p10)
        (not_checked_p2)
        (not_checked_p3)
        (not_checked_p4)
        (not_checked_p5)
        (not_checked_p6)
        (not_checked_p7)
        (not_checked_p8)
        (not_checked_p9)
        (not_hiddenblockedcell_p0011)
        (not_hiddenblockedcell_p012)
        (not_hiddenblockedcell_p1)
        (not_hiddenblockedcell_p10)
        (not_hiddenblockedcell_p2)
        (not_hiddenblockedcell_p3)
        (not_hiddenblockedcell_p4)
        (not_hiddenblockedcell_p5)
        (not_hiddenblockedcell_p6)
        (not_hiddenblockedcell_p7)
        (not_hiddenblockedcell_p8)
        (not_hiddenblockedcell_p9)
        (not_hiddensurvivorat_s_p0011)
        (not_hiddensurvivorat_s_p012)
        (not_hiddensurvivorat_s_p1)
        (not_hiddensurvivorat_s_p10)
        (not_hiddensurvivorat_s_p2)
        (not_hiddensurvivorat_s_p3)
        (not_hiddensurvivorat_s_p4)
        (not_hiddensurvivorat_s_p5)
        (not_hiddensurvivorat_s_p6)
        (not_hiddensurvivorat_s_p7)
        (not_hiddensurvivorat_s_p8)
        (not_hiddensurvivorat_s_p9)
        (not_msg_p0011)
        (not_msg_p012)
        (not_msg_p1)
        (not_msg_p10)
        (not_msg_p2)
        (not_msg_p3)
        (not_msg_p4)
        (not_msg_p5)
        (not_msg_p6)
        (not_msg_p7)
        (not_msg_p8)
        (not_msg_p9)
        (not_obs_p0011)
        (not_obs_p012)
        (not_obs_p1)
        (not_obs_p10)
        (not_obs_p2)
        (not_obs_p3)
        (not_obs_p4)
        (not_obs_p5)
        (not_obs_p6)
        (not_obs_p7)
        (not_obs_p8)
        (not_obs_p9)
        (not_obss_p0011)
        (not_obss_p012)
        (not_obss_p1)
        (not_obss_p10)
        (not_obss_p2)
        (not_obss_p3)
        (not_obss_p4)
        (not_obss_p5)
        (not_obss_p6)
        (not_obss_p7)
        (not_obss_p8)
        (not_obss_p9)
        (not_succ_p0011_p0011)
        (not_succ_p0011_p012)
        (not_succ_p0011_p1)
        (not_succ_p0011_p10)
        (not_succ_p0011_p2)
        (not_succ_p0011_p3)
        (not_succ_p0011_p4)
        (not_succ_p0011_p5)
        (not_succ_p0011_p6)
        (not_succ_p0011_p7)
        (not_succ_p0011_p8)
        (not_succ_p0011_p9)
        (not_succ_p012_p0011)
        (not_succ_p012_p012)
        (not_succ_p012_p1)
        (not_succ_p012_p10)
        (not_succ_p012_p2)
        (not_succ_p012_p3)
        (not_succ_p012_p4)
        (not_succ_p012_p5)
        (not_succ_p012_p6)
        (not_succ_p012_p7)
        (not_succ_p012_p8)
        (not_succ_p012_p9)
        (not_succ_p10_p0011)
        (not_succ_p10_p012)
        (not_succ_p10_p1)
        (not_succ_p10_p10)
        (not_succ_p10_p2)
        (not_succ_p10_p3)
        (not_succ_p10_p4)
        (not_succ_p10_p5)
        (not_succ_p10_p6)
        (not_succ_p10_p7)
        (not_succ_p10_p8)
        (not_succ_p10_p9)
        (not_succ_p1_p0011)
        (not_succ_p1_p012)
        (not_succ_p1_p1)
        (not_succ_p1_p10)
        (not_succ_p1_p2)
        (not_succ_p1_p3)
        (not_succ_p1_p4)
        (not_succ_p1_p5)
        (not_succ_p1_p6)
        (not_succ_p1_p7)
        (not_succ_p1_p8)
        (not_succ_p1_p9)
        (not_succ_p2_p0011)
        (not_succ_p2_p012)
        (not_succ_p2_p1)
        (not_succ_p2_p10)
        (not_succ_p2_p2)
        (not_succ_p2_p3)
        (not_succ_p2_p4)
        (not_succ_p2_p5)
        (not_succ_p2_p6)
        (not_succ_p2_p7)
        (not_succ_p2_p8)
        (not_succ_p2_p9)
        (not_succ_p3_p0011)
        (not_succ_p3_p012)
        (not_succ_p3_p1)
        (not_succ_p3_p10)
        (not_succ_p3_p2)
        (not_succ_p3_p3)
        (not_succ_p3_p4)
        (not_succ_p3_p5)
        (not_succ_p3_p6)
        (not_succ_p3_p7)
        (not_succ_p3_p8)
        (not_succ_p3_p9)
        (not_succ_p4_p0011)
        (not_succ_p4_p012)
        (not_succ_p4_p1)
        (not_succ_p4_p10)
        (not_succ_p4_p2)
        (not_succ_p4_p3)
        (not_succ_p4_p4)
        (not_succ_p4_p5)
        (not_succ_p4_p6)
        (not_succ_p4_p7)
        (not_succ_p4_p8)
        (not_succ_p4_p9)
        (not_succ_p5_p0011)
        (not_succ_p5_p012)
        (not_succ_p5_p1)
        (not_succ_p5_p10)
        (not_succ_p5_p2)
        (not_succ_p5_p3)
        (not_succ_p5_p4)
        (not_succ_p5_p5)
        (not_succ_p5_p6)
        (not_succ_p5_p7)
        (not_succ_p5_p8)
        (not_succ_p5_p9)
        (not_succ_p6_p0011)
        (not_succ_p6_p012)
        (not_succ_p6_p1)
        (not_succ_p6_p10)
        (not_succ_p6_p2)
        (not_succ_p6_p3)
        (not_succ_p6_p4)
        (not_succ_p6_p5)
        (not_succ_p6_p6)
        (not_succ_p6_p7)
        (not_succ_p6_p8)
        (not_succ_p6_p9)
        (not_succ_p7_p0011)
        (not_succ_p7_p012)
        (not_succ_p7_p1)
        (not_succ_p7_p10)
        (not_succ_p7_p2)
        (not_succ_p7_p3)
        (not_succ_p7_p4)
        (not_succ_p7_p5)
        (not_succ_p7_p6)
        (not_succ_p7_p7)
        (not_succ_p7_p8)
        (not_succ_p7_p9)
        (not_succ_p8_p0011)
        (not_succ_p8_p012)
        (not_succ_p8_p1)
        (not_succ_p8_p10)
        (not_succ_p8_p2)
        (not_succ_p8_p3)
        (not_succ_p8_p4)
        (not_succ_p8_p5)
        (not_succ_p8_p6)
        (not_succ_p8_p7)
        (not_succ_p8_p8)
        (not_succ_p8_p9)
        (not_succ_p9_p0011)
        (not_succ_p9_p012)
        (not_succ_p9_p1)
        (not_succ_p9_p10)
        (not_succ_p9_p2)
        (not_succ_p9_p3)
        (not_succ_p9_p4)
        (not_succ_p9_p5)
        (not_succ_p9_p6)
        (not_succ_p9_p7)
        (not_succ_p9_p8)
        (not_succ_p9_p9)
        (not_survivorat_s_p0011)
        (not_survivorat_s_p012)
        (not_survivorat_s_p1)
        (not_survivorat_s_p10)
        (not_survivorat_s_p2)
        (not_survivorat_s_p3)
        (not_survivorat_s_p4)
        (not_survivorat_s_p5)
        (not_survivorat_s_p6)
        (not_survivorat_s_p7)
        (not_survivorat_s_p8)
        (not_survivorat_s_p9)
        (Ba_not_blocked_p0011)
        (Ba_not_blocked_p012)
        (Ba_not_blocked_p1)
        (Ba_not_blocked_p10)
        (Ba_not_blocked_p2)
        (Ba_not_blocked_p3)
        (Ba_not_blocked_p4)
        (Ba_not_blocked_p5)
        (Ba_not_blocked_p6)
        (Ba_not_blocked_p7)
        (Ba_not_blocked_p8)
        (Ba_not_blocked_p9)
        (Ba_not_hiddenblockedcell_p0011)
        (Ba_not_hiddenblockedcell_p012)
        (Ba_not_hiddenblockedcell_p1)
        (Ba_not_hiddenblockedcell_p10)
        (Ba_not_hiddenblockedcell_p2)
        (Ba_not_hiddenblockedcell_p3)
        (Ba_not_hiddenblockedcell_p4)
        (Ba_not_hiddenblockedcell_p5)
        (Ba_not_hiddenblockedcell_p6)
        (Ba_not_hiddenblockedcell_p7)
        (Ba_not_hiddenblockedcell_p8)
        (Ba_not_hiddenblockedcell_p9)
        (Ba_not_hiddensurvivorat_s_p0011)
        (Ba_not_hiddensurvivorat_s_p012)
        (Ba_not_hiddensurvivorat_s_p1)
        (Ba_not_hiddensurvivorat_s_p10)
        (Ba_not_hiddensurvivorat_s_p2)
        (Ba_not_hiddensurvivorat_s_p3)
        (Ba_not_hiddensurvivorat_s_p4)
        (Ba_not_hiddensurvivorat_s_p5)
        (Ba_not_hiddensurvivorat_s_p6)
        (Ba_not_hiddensurvivorat_s_p7)
        (Ba_not_hiddensurvivorat_s_p8)
        (Ba_not_hiddensurvivorat_s_p9)
        (Ba_not_msg_p0011)
        (Ba_not_msg_p012)
        (Ba_not_msg_p1)
        (Ba_not_msg_p10)
        (Ba_not_msg_p2)
        (Ba_not_msg_p3)
        (Ba_not_msg_p4)
        (Ba_not_msg_p5)
        (Ba_not_msg_p6)
        (Ba_not_msg_p7)
        (Ba_not_msg_p8)
        (Ba_not_msg_p9)
        (Ba_not_obss_p0011)
        (Ba_not_obss_p012)
        (Ba_not_obss_p1)
        (Ba_not_obss_p10)
        (Ba_not_obss_p2)
        (Ba_not_obss_p3)
        (Ba_not_obss_p4)
        (Ba_not_obss_p5)
        (Ba_not_obss_p6)
        (Ba_not_obss_p7)
        (Ba_not_obss_p8)
        (Ba_not_obss_p9)
        (Ba_not_survivorat_s_p0011)
        (Ba_not_survivorat_s_p012)
        (Ba_not_survivorat_s_p1)
        (Ba_not_survivorat_s_p10)
        (Ba_not_survivorat_s_p2)
        (Ba_not_survivorat_s_p3)
        (Ba_not_survivorat_s_p4)
        (Ba_not_survivorat_s_p5)
        (Ba_not_survivorat_s_p6)
        (Ba_not_survivorat_s_p7)
        (Ba_not_survivorat_s_p8)
        (Ba_not_survivorat_s_p9)
        (Ba_blocked_p0011)
        (Ba_blocked_p012)
        (Ba_blocked_p1)
        (Ba_blocked_p10)
        (Ba_blocked_p2)
        (Ba_blocked_p3)
        (Ba_blocked_p4)
        (Ba_blocked_p5)
        (Ba_blocked_p6)
        (Ba_blocked_p7)
        (Ba_blocked_p8)
        (Ba_blocked_p9)
        (Ba_hiddenblockedcell_p0011)
        (Ba_hiddenblockedcell_p012)
        (Ba_hiddenblockedcell_p1)
        (Ba_hiddenblockedcell_p10)
        (Ba_hiddenblockedcell_p2)
        (Ba_hiddenblockedcell_p3)
        (Ba_hiddenblockedcell_p4)
        (Ba_hiddenblockedcell_p5)
        (Ba_hiddenblockedcell_p6)
        (Ba_hiddenblockedcell_p7)
        (Ba_hiddenblockedcell_p8)
        (Ba_hiddenblockedcell_p9)
        (Ba_hiddensurvivorat_s_p0011)
        (Ba_hiddensurvivorat_s_p012)
        (Ba_hiddensurvivorat_s_p1)
        (Ba_hiddensurvivorat_s_p10)
        (Ba_hiddensurvivorat_s_p2)
        (Ba_hiddensurvivorat_s_p3)
        (Ba_hiddensurvivorat_s_p4)
        (Ba_hiddensurvivorat_s_p5)
        (Ba_hiddensurvivorat_s_p6)
        (Ba_hiddensurvivorat_s_p7)
        (Ba_hiddensurvivorat_s_p8)
        (Ba_hiddensurvivorat_s_p9)
        (Ba_msg_p0011)
        (Ba_msg_p012)
        (Ba_msg_p1)
        (Ba_msg_p10)
        (Ba_msg_p2)
        (Ba_msg_p3)
        (Ba_msg_p4)
        (Ba_msg_p5)
        (Ba_msg_p6)
        (Ba_msg_p7)
        (Ba_msg_p8)
        (Ba_msg_p9)
        (Ba_obss_p0011)
        (Ba_obss_p012)
        (Ba_obss_p1)
        (Ba_obss_p10)
        (Ba_obss_p2)
        (Ba_obss_p3)
        (Ba_obss_p4)
        (Ba_obss_p5)
        (Ba_obss_p6)
        (Ba_obss_p7)
        (Ba_obss_p8)
        (Ba_obss_p9)
        (Ba_survivorat_s_p0011)
        (Ba_survivorat_s_p012)
        (Ba_survivorat_s_p1)
        (Ba_survivorat_s_p10)
        (Ba_survivorat_s_p2)
        (Ba_survivorat_s_p3)
        (Ba_survivorat_s_p4)
        (Ba_survivorat_s_p5)
        (Ba_survivorat_s_p6)
        (Ba_survivorat_s_p7)
        (Ba_survivorat_s_p8)
        (Ba_survivorat_s_p9)
        (Bb_not_blocked_p0011)
        (Bb_not_blocked_p012)
        (Bb_not_blocked_p1)
        (Bb_not_blocked_p10)
        (Bb_not_blocked_p2)
        (Bb_not_blocked_p3)
        (Bb_not_blocked_p4)
        (Bb_not_blocked_p5)
        (Bb_not_blocked_p6)
        (Bb_not_blocked_p7)
        (Bb_not_blocked_p8)
        (Bb_not_blocked_p9)
        (Bb_not_hiddenblockedcell_p0011)
        (Bb_not_hiddenblockedcell_p012)
        (Bb_not_hiddenblockedcell_p1)
        (Bb_not_hiddenblockedcell_p10)
        (Bb_not_hiddenblockedcell_p2)
        (Bb_not_hiddenblockedcell_p3)
        (Bb_not_hiddenblockedcell_p4)
        (Bb_not_hiddenblockedcell_p5)
        (Bb_not_hiddenblockedcell_p6)
        (Bb_not_hiddenblockedcell_p7)
        (Bb_not_hiddenblockedcell_p8)
        (Bb_not_hiddenblockedcell_p9)
        (Bb_not_hiddensurvivorat_s_p0011)
        (Bb_not_hiddensurvivorat_s_p012)
        (Bb_not_hiddensurvivorat_s_p1)
        (Bb_not_hiddensurvivorat_s_p10)
        (Bb_not_hiddensurvivorat_s_p2)
        (Bb_not_hiddensurvivorat_s_p3)
        (Bb_not_hiddensurvivorat_s_p4)
        (Bb_not_hiddensurvivorat_s_p5)
        (Bb_not_hiddensurvivorat_s_p6)
        (Bb_not_hiddensurvivorat_s_p7)
        (Bb_not_hiddensurvivorat_s_p8)
        (Bb_not_hiddensurvivorat_s_p9)
        (Bb_not_msg_p0011)
        (Bb_not_msg_p012)
        (Bb_not_msg_p1)
        (Bb_not_msg_p10)
        (Bb_not_msg_p2)
        (Bb_not_msg_p3)
        (Bb_not_msg_p4)
        (Bb_not_msg_p5)
        (Bb_not_msg_p6)
        (Bb_not_msg_p7)
        (Bb_not_msg_p8)
        (Bb_not_msg_p9)
        (Bb_not_obss_p0011)
        (Bb_not_obss_p012)
        (Bb_not_obss_p1)
        (Bb_not_obss_p10)
        (Bb_not_obss_p2)
        (Bb_not_obss_p3)
        (Bb_not_obss_p4)
        (Bb_not_obss_p5)
        (Bb_not_obss_p6)
        (Bb_not_obss_p7)
        (Bb_not_obss_p8)
        (Bb_not_obss_p9)
        (Bb_not_survivorat_s_p0011)
        (Bb_not_survivorat_s_p012)
        (Bb_not_survivorat_s_p1)
        (Bb_not_survivorat_s_p10)
        (Bb_not_survivorat_s_p2)
        (Bb_not_survivorat_s_p3)
        (Bb_not_survivorat_s_p4)
        (Bb_not_survivorat_s_p5)
        (Bb_not_survivorat_s_p6)
        (Bb_not_survivorat_s_p7)
        (Bb_not_survivorat_s_p8)
        (Bb_not_survivorat_s_p9)
        (Bb_blocked_p0011)
        (Bb_blocked_p012)
        (Bb_blocked_p1)
        (Bb_blocked_p10)
        (Bb_blocked_p2)
        (Bb_blocked_p3)
        (Bb_blocked_p4)
        (Bb_blocked_p5)
        (Bb_blocked_p6)
        (Bb_blocked_p7)
        (Bb_blocked_p8)
        (Bb_blocked_p9)
        (Bb_hiddenblockedcell_p0011)
        (Bb_hiddenblockedcell_p012)
        (Bb_hiddenblockedcell_p1)
        (Bb_hiddenblockedcell_p10)
        (Bb_hiddenblockedcell_p2)
        (Bb_hiddenblockedcell_p3)
        (Bb_hiddenblockedcell_p4)
        (Bb_hiddenblockedcell_p5)
        (Bb_hiddenblockedcell_p6)
        (Bb_hiddenblockedcell_p7)
        (Bb_hiddenblockedcell_p8)
        (Bb_hiddenblockedcell_p9)
        (Bb_hiddensurvivorat_s_p0011)
        (Bb_hiddensurvivorat_s_p012)
        (Bb_hiddensurvivorat_s_p1)
        (Bb_hiddensurvivorat_s_p10)
        (Bb_hiddensurvivorat_s_p2)
        (Bb_hiddensurvivorat_s_p3)
        (Bb_hiddensurvivorat_s_p4)
        (Bb_hiddensurvivorat_s_p5)
        (Bb_hiddensurvivorat_s_p6)
        (Bb_hiddensurvivorat_s_p7)
        (Bb_hiddensurvivorat_s_p8)
        (Bb_hiddensurvivorat_s_p9)
        (Bb_msg_p0011)
        (Bb_msg_p012)
        (Bb_msg_p1)
        (Bb_msg_p10)
        (Bb_msg_p2)
        (Bb_msg_p3)
        (Bb_msg_p4)
        (Bb_msg_p5)
        (Bb_msg_p6)
        (Bb_msg_p7)
        (Bb_msg_p8)
        (Bb_msg_p9)
        (Bb_obss_p0011)
        (Bb_obss_p012)
        (Bb_obss_p1)
        (Bb_obss_p10)
        (Bb_obss_p2)
        (Bb_obss_p3)
        (Bb_obss_p4)
        (Bb_obss_p5)
        (Bb_obss_p6)
        (Bb_obss_p7)
        (Bb_obss_p8)
        (Bb_obss_p9)
        (Bb_survivorat_s_p0011)
        (Bb_survivorat_s_p012)
        (Bb_survivorat_s_p1)
        (Bb_survivorat_s_p10)
        (Bb_survivorat_s_p2)
        (Bb_survivorat_s_p3)
        (Bb_survivorat_s_p4)
        (Bb_survivorat_s_p5)
        (Bb_survivorat_s_p6)
        (Bb_survivorat_s_p7)
        (Bb_survivorat_s_p8)
        (Bb_survivorat_s_p9)
        (Bc_not_blocked_p0011)
        (Bc_not_blocked_p012)
        (Bc_not_blocked_p1)
        (Bc_not_blocked_p10)
        (Bc_not_blocked_p2)
        (Bc_not_blocked_p3)
        (Bc_not_blocked_p4)
        (Bc_not_blocked_p5)
        (Bc_not_blocked_p6)
        (Bc_not_blocked_p7)
        (Bc_not_blocked_p8)
        (Bc_not_blocked_p9)
        (Bc_not_hiddenblockedcell_p0011)
        (Bc_not_hiddenblockedcell_p012)
        (Bc_not_hiddenblockedcell_p1)
        (Bc_not_hiddenblockedcell_p10)
        (Bc_not_hiddenblockedcell_p2)
        (Bc_not_hiddenblockedcell_p3)
        (Bc_not_hiddenblockedcell_p4)
        (Bc_not_hiddenblockedcell_p5)
        (Bc_not_hiddenblockedcell_p6)
        (Bc_not_hiddenblockedcell_p7)
        (Bc_not_hiddenblockedcell_p8)
        (Bc_not_hiddenblockedcell_p9)
        (Bc_not_hiddensurvivorat_s_p0011)
        (Bc_not_hiddensurvivorat_s_p012)
        (Bc_not_hiddensurvivorat_s_p1)
        (Bc_not_hiddensurvivorat_s_p10)
        (Bc_not_hiddensurvivorat_s_p2)
        (Bc_not_hiddensurvivorat_s_p3)
        (Bc_not_hiddensurvivorat_s_p4)
        (Bc_not_hiddensurvivorat_s_p5)
        (Bc_not_hiddensurvivorat_s_p6)
        (Bc_not_hiddensurvivorat_s_p7)
        (Bc_not_hiddensurvivorat_s_p8)
        (Bc_not_hiddensurvivorat_s_p9)
        (Bc_not_msg_p0011)
        (Bc_not_msg_p012)
        (Bc_not_msg_p1)
        (Bc_not_msg_p10)
        (Bc_not_msg_p2)
        (Bc_not_msg_p3)
        (Bc_not_msg_p4)
        (Bc_not_msg_p5)
        (Bc_not_msg_p6)
        (Bc_not_msg_p7)
        (Bc_not_msg_p8)
        (Bc_not_msg_p9)
        (Bc_not_obss_p0011)
        (Bc_not_obss_p012)
        (Bc_not_obss_p1)
        (Bc_not_obss_p10)
        (Bc_not_obss_p2)
        (Bc_not_obss_p3)
        (Bc_not_obss_p4)
        (Bc_not_obss_p5)
        (Bc_not_obss_p6)
        (Bc_not_obss_p7)
        (Bc_not_obss_p8)
        (Bc_not_obss_p9)
        (Bc_not_survivorat_s_p0011)
        (Bc_not_survivorat_s_p012)
        (Bc_not_survivorat_s_p1)
        (Bc_not_survivorat_s_p10)
        (Bc_not_survivorat_s_p2)
        (Bc_not_survivorat_s_p3)
        (Bc_not_survivorat_s_p4)
        (Bc_not_survivorat_s_p5)
        (Bc_not_survivorat_s_p6)
        (Bc_not_survivorat_s_p7)
        (Bc_not_survivorat_s_p8)
        (Bc_not_survivorat_s_p9)
        (Bc_blocked_p0011)
        (Bc_blocked_p012)
        (Bc_blocked_p1)
        (Bc_blocked_p10)
        (Bc_blocked_p2)
        (Bc_blocked_p3)
        (Bc_blocked_p4)
        (Bc_blocked_p5)
        (Bc_blocked_p6)
        (Bc_blocked_p7)
        (Bc_blocked_p8)
        (Bc_blocked_p9)
        (Bc_hiddenblockedcell_p0011)
        (Bc_hiddenblockedcell_p012)
        (Bc_hiddenblockedcell_p1)
        (Bc_hiddenblockedcell_p10)
        (Bc_hiddenblockedcell_p2)
        (Bc_hiddenblockedcell_p3)
        (Bc_hiddenblockedcell_p4)
        (Bc_hiddenblockedcell_p5)
        (Bc_hiddenblockedcell_p6)
        (Bc_hiddenblockedcell_p7)
        (Bc_hiddenblockedcell_p8)
        (Bc_hiddenblockedcell_p9)
        (Bc_hiddensurvivorat_s_p0011)
        (Bc_hiddensurvivorat_s_p012)
        (Bc_hiddensurvivorat_s_p1)
        (Bc_hiddensurvivorat_s_p10)
        (Bc_hiddensurvivorat_s_p2)
        (Bc_hiddensurvivorat_s_p3)
        (Bc_hiddensurvivorat_s_p4)
        (Bc_hiddensurvivorat_s_p5)
        (Bc_hiddensurvivorat_s_p6)
        (Bc_hiddensurvivorat_s_p7)
        (Bc_hiddensurvivorat_s_p8)
        (Bc_hiddensurvivorat_s_p9)
        (Bc_msg_p0011)
        (Bc_msg_p012)
        (Bc_msg_p1)
        (Bc_msg_p10)
        (Bc_msg_p2)
        (Bc_msg_p3)
        (Bc_msg_p4)
        (Bc_msg_p5)
        (Bc_msg_p6)
        (Bc_msg_p7)
        (Bc_msg_p8)
        (Bc_msg_p9)
        (Bc_obss_p0011)
        (Bc_obss_p012)
        (Bc_obss_p1)
        (Bc_obss_p10)
        (Bc_obss_p2)
        (Bc_obss_p3)
        (Bc_obss_p4)
        (Bc_obss_p5)
        (Bc_obss_p6)
        (Bc_obss_p7)
        (Bc_obss_p8)
        (Bc_obss_p9)
        (Bc_survivorat_s_p0011)
        (Bc_survivorat_s_p012)
        (Bc_survivorat_s_p1)
        (Bc_survivorat_s_p10)
        (Bc_survivorat_s_p2)
        (Bc_survivorat_s_p3)
        (Bc_survivorat_s_p4)
        (Bc_survivorat_s_p5)
        (Bc_survivorat_s_p6)
        (Bc_survivorat_s_p7)
        (Bc_survivorat_s_p8)
        (Bc_survivorat_s_p9)
        (Pa_not_blocked_p0011)
        (Pa_not_blocked_p012)
        (Pa_not_blocked_p1)
        (Pa_not_blocked_p10)
        (Pa_not_blocked_p2)
        (Pa_not_blocked_p3)
        (Pa_not_blocked_p4)
        (Pa_not_blocked_p5)
        (Pa_not_blocked_p6)
        (Pa_not_blocked_p7)
        (Pa_not_blocked_p8)
        (Pa_not_blocked_p9)
        (Pa_not_hiddenblockedcell_p0011)
        (Pa_not_hiddenblockedcell_p012)
        (Pa_not_hiddenblockedcell_p1)
        (Pa_not_hiddenblockedcell_p10)
        (Pa_not_hiddenblockedcell_p2)
        (Pa_not_hiddenblockedcell_p3)
        (Pa_not_hiddenblockedcell_p4)
        (Pa_not_hiddenblockedcell_p5)
        (Pa_not_hiddenblockedcell_p6)
        (Pa_not_hiddenblockedcell_p7)
        (Pa_not_hiddenblockedcell_p8)
        (Pa_not_hiddenblockedcell_p9)
        (Pa_not_hiddensurvivorat_s_p0011)
        (Pa_not_hiddensurvivorat_s_p012)
        (Pa_not_hiddensurvivorat_s_p1)
        (Pa_not_hiddensurvivorat_s_p10)
        (Pa_not_hiddensurvivorat_s_p2)
        (Pa_not_hiddensurvivorat_s_p3)
        (Pa_not_hiddensurvivorat_s_p4)
        (Pa_not_hiddensurvivorat_s_p5)
        (Pa_not_hiddensurvivorat_s_p6)
        (Pa_not_hiddensurvivorat_s_p7)
        (Pa_not_hiddensurvivorat_s_p8)
        (Pa_not_hiddensurvivorat_s_p9)
        (Pa_not_msg_p0011)
        (Pa_not_msg_p012)
        (Pa_not_msg_p1)
        (Pa_not_msg_p10)
        (Pa_not_msg_p2)
        (Pa_not_msg_p3)
        (Pa_not_msg_p4)
        (Pa_not_msg_p5)
        (Pa_not_msg_p6)
        (Pa_not_msg_p7)
        (Pa_not_msg_p8)
        (Pa_not_msg_p9)
        (Pa_not_obss_p0011)
        (Pa_not_obss_p012)
        (Pa_not_obss_p1)
        (Pa_not_obss_p10)
        (Pa_not_obss_p2)
        (Pa_not_obss_p3)
        (Pa_not_obss_p4)
        (Pa_not_obss_p5)
        (Pa_not_obss_p6)
        (Pa_not_obss_p7)
        (Pa_not_obss_p8)
        (Pa_not_obss_p9)
        (Pa_not_survivorat_s_p0011)
        (Pa_not_survivorat_s_p012)
        (Pa_not_survivorat_s_p1)
        (Pa_not_survivorat_s_p10)
        (Pa_not_survivorat_s_p2)
        (Pa_not_survivorat_s_p3)
        (Pa_not_survivorat_s_p4)
        (Pa_not_survivorat_s_p5)
        (Pa_not_survivorat_s_p6)
        (Pa_not_survivorat_s_p7)
        (Pa_not_survivorat_s_p8)
        (Pa_not_survivorat_s_p9)
        (Pa_blocked_p0011)
        (Pa_blocked_p012)
        (Pa_blocked_p1)
        (Pa_blocked_p10)
        (Pa_blocked_p2)
        (Pa_blocked_p3)
        (Pa_blocked_p4)
        (Pa_blocked_p5)
        (Pa_blocked_p6)
        (Pa_blocked_p7)
        (Pa_blocked_p8)
        (Pa_blocked_p9)
        (Pa_hiddenblockedcell_p0011)
        (Pa_hiddenblockedcell_p012)
        (Pa_hiddenblockedcell_p1)
        (Pa_hiddenblockedcell_p10)
        (Pa_hiddenblockedcell_p2)
        (Pa_hiddenblockedcell_p3)
        (Pa_hiddenblockedcell_p4)
        (Pa_hiddenblockedcell_p5)
        (Pa_hiddenblockedcell_p6)
        (Pa_hiddenblockedcell_p7)
        (Pa_hiddenblockedcell_p8)
        (Pa_hiddenblockedcell_p9)
        (Pa_hiddensurvivorat_s_p0011)
        (Pa_hiddensurvivorat_s_p012)
        (Pa_hiddensurvivorat_s_p1)
        (Pa_hiddensurvivorat_s_p10)
        (Pa_hiddensurvivorat_s_p2)
        (Pa_hiddensurvivorat_s_p3)
        (Pa_hiddensurvivorat_s_p4)
        (Pa_hiddensurvivorat_s_p5)
        (Pa_hiddensurvivorat_s_p6)
        (Pa_hiddensurvivorat_s_p7)
        (Pa_hiddensurvivorat_s_p8)
        (Pa_hiddensurvivorat_s_p9)
        (Pa_msg_p0011)
        (Pa_msg_p012)
        (Pa_msg_p1)
        (Pa_msg_p10)
        (Pa_msg_p2)
        (Pa_msg_p3)
        (Pa_msg_p4)
        (Pa_msg_p5)
        (Pa_msg_p6)
        (Pa_msg_p7)
        (Pa_msg_p8)
        (Pa_msg_p9)
        (Pa_obss_p0011)
        (Pa_obss_p012)
        (Pa_obss_p1)
        (Pa_obss_p10)
        (Pa_obss_p2)
        (Pa_obss_p3)
        (Pa_obss_p4)
        (Pa_obss_p5)
        (Pa_obss_p6)
        (Pa_obss_p7)
        (Pa_obss_p8)
        (Pa_obss_p9)
        (Pa_survivorat_s_p0011)
        (Pa_survivorat_s_p012)
        (Pa_survivorat_s_p1)
        (Pa_survivorat_s_p10)
        (Pa_survivorat_s_p2)
        (Pa_survivorat_s_p3)
        (Pa_survivorat_s_p4)
        (Pa_survivorat_s_p5)
        (Pa_survivorat_s_p6)
        (Pa_survivorat_s_p7)
        (Pa_survivorat_s_p8)
        (Pa_survivorat_s_p9)
        (Pb_not_blocked_p0011)
        (Pb_not_blocked_p012)
        (Pb_not_blocked_p1)
        (Pb_not_blocked_p10)
        (Pb_not_blocked_p2)
        (Pb_not_blocked_p3)
        (Pb_not_blocked_p4)
        (Pb_not_blocked_p5)
        (Pb_not_blocked_p6)
        (Pb_not_blocked_p7)
        (Pb_not_blocked_p8)
        (Pb_not_blocked_p9)
        (Pb_not_hiddenblockedcell_p0011)
        (Pb_not_hiddenblockedcell_p012)
        (Pb_not_hiddenblockedcell_p1)
        (Pb_not_hiddenblockedcell_p10)
        (Pb_not_hiddenblockedcell_p2)
        (Pb_not_hiddenblockedcell_p3)
        (Pb_not_hiddenblockedcell_p4)
        (Pb_not_hiddenblockedcell_p5)
        (Pb_not_hiddenblockedcell_p6)
        (Pb_not_hiddenblockedcell_p7)
        (Pb_not_hiddenblockedcell_p8)
        (Pb_not_hiddenblockedcell_p9)
        (Pb_not_hiddensurvivorat_s_p0011)
        (Pb_not_hiddensurvivorat_s_p012)
        (Pb_not_hiddensurvivorat_s_p1)
        (Pb_not_hiddensurvivorat_s_p10)
        (Pb_not_hiddensurvivorat_s_p2)
        (Pb_not_hiddensurvivorat_s_p3)
        (Pb_not_hiddensurvivorat_s_p4)
        (Pb_not_hiddensurvivorat_s_p5)
        (Pb_not_hiddensurvivorat_s_p6)
        (Pb_not_hiddensurvivorat_s_p7)
        (Pb_not_hiddensurvivorat_s_p8)
        (Pb_not_hiddensurvivorat_s_p9)
        (Pb_not_msg_p0011)
        (Pb_not_msg_p012)
        (Pb_not_msg_p1)
        (Pb_not_msg_p10)
        (Pb_not_msg_p2)
        (Pb_not_msg_p3)
        (Pb_not_msg_p4)
        (Pb_not_msg_p5)
        (Pb_not_msg_p6)
        (Pb_not_msg_p7)
        (Pb_not_msg_p8)
        (Pb_not_msg_p9)
        (Pb_not_obss_p0011)
        (Pb_not_obss_p012)
        (Pb_not_obss_p1)
        (Pb_not_obss_p10)
        (Pb_not_obss_p2)
        (Pb_not_obss_p3)
        (Pb_not_obss_p4)
        (Pb_not_obss_p5)
        (Pb_not_obss_p6)
        (Pb_not_obss_p7)
        (Pb_not_obss_p8)
        (Pb_not_obss_p9)
        (Pb_not_survivorat_s_p0011)
        (Pb_not_survivorat_s_p012)
        (Pb_not_survivorat_s_p1)
        (Pb_not_survivorat_s_p10)
        (Pb_not_survivorat_s_p2)
        (Pb_not_survivorat_s_p3)
        (Pb_not_survivorat_s_p4)
        (Pb_not_survivorat_s_p5)
        (Pb_not_survivorat_s_p6)
        (Pb_not_survivorat_s_p7)
        (Pb_not_survivorat_s_p8)
        (Pb_not_survivorat_s_p9)
        (Pb_blocked_p0011)
        (Pb_blocked_p012)
        (Pb_blocked_p1)
        (Pb_blocked_p10)
        (Pb_blocked_p2)
        (Pb_blocked_p3)
        (Pb_blocked_p4)
        (Pb_blocked_p5)
        (Pb_blocked_p6)
        (Pb_blocked_p7)
        (Pb_blocked_p8)
        (Pb_blocked_p9)
        (Pb_hiddenblockedcell_p0011)
        (Pb_hiddenblockedcell_p012)
        (Pb_hiddenblockedcell_p1)
        (Pb_hiddenblockedcell_p10)
        (Pb_hiddenblockedcell_p2)
        (Pb_hiddenblockedcell_p3)
        (Pb_hiddenblockedcell_p4)
        (Pb_hiddenblockedcell_p5)
        (Pb_hiddenblockedcell_p6)
        (Pb_hiddenblockedcell_p7)
        (Pb_hiddenblockedcell_p8)
        (Pb_hiddenblockedcell_p9)
        (Pb_hiddensurvivorat_s_p0011)
        (Pb_hiddensurvivorat_s_p012)
        (Pb_hiddensurvivorat_s_p1)
        (Pb_hiddensurvivorat_s_p10)
        (Pb_hiddensurvivorat_s_p2)
        (Pb_hiddensurvivorat_s_p3)
        (Pb_hiddensurvivorat_s_p4)
        (Pb_hiddensurvivorat_s_p5)
        (Pb_hiddensurvivorat_s_p6)
        (Pb_hiddensurvivorat_s_p7)
        (Pb_hiddensurvivorat_s_p8)
        (Pb_hiddensurvivorat_s_p9)
        (Pb_msg_p0011)
        (Pb_msg_p012)
        (Pb_msg_p1)
        (Pb_msg_p10)
        (Pb_msg_p2)
        (Pb_msg_p3)
        (Pb_msg_p4)
        (Pb_msg_p5)
        (Pb_msg_p6)
        (Pb_msg_p7)
        (Pb_msg_p8)
        (Pb_msg_p9)
        (Pb_obss_p0011)
        (Pb_obss_p012)
        (Pb_obss_p1)
        (Pb_obss_p10)
        (Pb_obss_p2)
        (Pb_obss_p3)
        (Pb_obss_p4)
        (Pb_obss_p5)
        (Pb_obss_p6)
        (Pb_obss_p7)
        (Pb_obss_p8)
        (Pb_obss_p9)
        (Pb_survivorat_s_p0011)
        (Pb_survivorat_s_p012)
        (Pb_survivorat_s_p1)
        (Pb_survivorat_s_p10)
        (Pb_survivorat_s_p2)
        (Pb_survivorat_s_p3)
        (Pb_survivorat_s_p4)
        (Pb_survivorat_s_p5)
        (Pb_survivorat_s_p6)
        (Pb_survivorat_s_p7)
        (Pb_survivorat_s_p8)
        (Pb_survivorat_s_p9)
        (Pc_not_blocked_p0011)
        (Pc_not_blocked_p012)
        (Pc_not_blocked_p1)
        (Pc_not_blocked_p10)
        (Pc_not_blocked_p2)
        (Pc_not_blocked_p3)
        (Pc_not_blocked_p4)
        (Pc_not_blocked_p5)
        (Pc_not_blocked_p6)
        (Pc_not_blocked_p7)
        (Pc_not_blocked_p8)
        (Pc_not_blocked_p9)
        (Pc_not_hiddenblockedcell_p0011)
        (Pc_not_hiddenblockedcell_p012)
        (Pc_not_hiddenblockedcell_p1)
        (Pc_not_hiddenblockedcell_p10)
        (Pc_not_hiddenblockedcell_p2)
        (Pc_not_hiddenblockedcell_p3)
        (Pc_not_hiddenblockedcell_p4)
        (Pc_not_hiddenblockedcell_p5)
        (Pc_not_hiddenblockedcell_p6)
        (Pc_not_hiddenblockedcell_p7)
        (Pc_not_hiddenblockedcell_p8)
        (Pc_not_hiddenblockedcell_p9)
        (Pc_not_hiddensurvivorat_s_p0011)
        (Pc_not_hiddensurvivorat_s_p012)
        (Pc_not_hiddensurvivorat_s_p1)
        (Pc_not_hiddensurvivorat_s_p10)
        (Pc_not_hiddensurvivorat_s_p2)
        (Pc_not_hiddensurvivorat_s_p3)
        (Pc_not_hiddensurvivorat_s_p4)
        (Pc_not_hiddensurvivorat_s_p5)
        (Pc_not_hiddensurvivorat_s_p6)
        (Pc_not_hiddensurvivorat_s_p7)
        (Pc_not_hiddensurvivorat_s_p8)
        (Pc_not_hiddensurvivorat_s_p9)
        (Pc_not_msg_p0011)
        (Pc_not_msg_p012)
        (Pc_not_msg_p1)
        (Pc_not_msg_p10)
        (Pc_not_msg_p2)
        (Pc_not_msg_p3)
        (Pc_not_msg_p4)
        (Pc_not_msg_p5)
        (Pc_not_msg_p6)
        (Pc_not_msg_p7)
        (Pc_not_msg_p8)
        (Pc_not_msg_p9)
        (Pc_not_obss_p0011)
        (Pc_not_obss_p012)
        (Pc_not_obss_p1)
        (Pc_not_obss_p10)
        (Pc_not_obss_p2)
        (Pc_not_obss_p3)
        (Pc_not_obss_p4)
        (Pc_not_obss_p5)
        (Pc_not_obss_p6)
        (Pc_not_obss_p7)
        (Pc_not_obss_p8)
        (Pc_not_obss_p9)
        (Pc_not_survivorat_s_p0011)
        (Pc_not_survivorat_s_p012)
        (Pc_not_survivorat_s_p1)
        (Pc_not_survivorat_s_p10)
        (Pc_not_survivorat_s_p2)
        (Pc_not_survivorat_s_p3)
        (Pc_not_survivorat_s_p4)
        (Pc_not_survivorat_s_p5)
        (Pc_not_survivorat_s_p6)
        (Pc_not_survivorat_s_p7)
        (Pc_not_survivorat_s_p8)
        (Pc_not_survivorat_s_p9)
        (Pc_blocked_p0011)
        (Pc_blocked_p012)
        (Pc_blocked_p1)
        (Pc_blocked_p10)
        (Pc_blocked_p2)
        (Pc_blocked_p3)
        (Pc_blocked_p4)
        (Pc_blocked_p5)
        (Pc_blocked_p6)
        (Pc_blocked_p7)
        (Pc_blocked_p8)
        (Pc_blocked_p9)
        (Pc_hiddenblockedcell_p0011)
        (Pc_hiddenblockedcell_p012)
        (Pc_hiddenblockedcell_p1)
        (Pc_hiddenblockedcell_p10)
        (Pc_hiddenblockedcell_p2)
        (Pc_hiddenblockedcell_p3)
        (Pc_hiddenblockedcell_p4)
        (Pc_hiddenblockedcell_p5)
        (Pc_hiddenblockedcell_p6)
        (Pc_hiddenblockedcell_p7)
        (Pc_hiddenblockedcell_p8)
        (Pc_hiddenblockedcell_p9)
        (Pc_hiddensurvivorat_s_p0011)
        (Pc_hiddensurvivorat_s_p012)
        (Pc_hiddensurvivorat_s_p1)
        (Pc_hiddensurvivorat_s_p10)
        (Pc_hiddensurvivorat_s_p2)
        (Pc_hiddensurvivorat_s_p3)
        (Pc_hiddensurvivorat_s_p4)
        (Pc_hiddensurvivorat_s_p5)
        (Pc_hiddensurvivorat_s_p6)
        (Pc_hiddensurvivorat_s_p7)
        (Pc_hiddensurvivorat_s_p8)
        (Pc_hiddensurvivorat_s_p9)
        (Pc_msg_p0011)
        (Pc_msg_p012)
        (Pc_msg_p1)
        (Pc_msg_p10)
        (Pc_msg_p2)
        (Pc_msg_p3)
        (Pc_msg_p4)
        (Pc_msg_p5)
        (Pc_msg_p6)
        (Pc_msg_p7)
        (Pc_msg_p8)
        (Pc_msg_p9)
        (Pc_obss_p0011)
        (Pc_obss_p012)
        (Pc_obss_p1)
        (Pc_obss_p10)
        (Pc_obss_p2)
        (Pc_obss_p3)
        (Pc_obss_p4)
        (Pc_obss_p5)
        (Pc_obss_p6)
        (Pc_obss_p7)
        (Pc_obss_p8)
        (Pc_obss_p9)
        (Pc_survivorat_s_p0011)
        (Pc_survivorat_s_p012)
        (Pc_survivorat_s_p1)
        (Pc_survivorat_s_p10)
        (Pc_survivorat_s_p2)
        (Pc_survivorat_s_p3)
        (Pc_survivorat_s_p4)
        (Pc_survivorat_s_p5)
        (Pc_survivorat_s_p6)
        (Pc_survivorat_s_p7)
        (Pc_survivorat_s_p8)
        (Pc_survivorat_s_p9)
        (at_a_p0011)
        (at_a_p012)
        (at_a_p1)
        (at_a_p10)
        (at_a_p2)
        (at_a_p3)
        (at_a_p4)
        (at_a_p5)
        (at_a_p6)
        (at_a_p7)
        (at_a_p8)
        (at_a_p9)
        (at_b_p0011)
        (at_b_p012)
        (at_b_p1)
        (at_b_p10)
        (at_b_p2)
        (at_b_p3)
        (at_b_p4)
        (at_b_p5)
        (at_b_p6)
        (at_b_p7)
        (at_b_p8)
        (at_b_p9)
        (at_c_p0011)
        (at_c_p012)
        (at_c_p1)
        (at_c_p10)
        (at_c_p2)
        (at_c_p3)
        (at_c_p4)
        (at_c_p5)
        (at_c_p6)
        (at_c_p7)
        (at_c_p8)
        (at_c_p9)
        (blocked_p0011)
        (blocked_p012)
        (blocked_p1)
        (blocked_p10)
        (blocked_p2)
        (blocked_p3)
        (blocked_p4)
        (blocked_p5)
        (blocked_p6)
        (blocked_p7)
        (blocked_p8)
        (blocked_p9)
        (checked_p0011)
        (checked_p012)
        (checked_p1)
        (checked_p10)
        (checked_p2)
        (checked_p3)
        (checked_p4)
        (checked_p5)
        (checked_p6)
        (checked_p7)
        (checked_p8)
        (checked_p9)
        (hiddenblockedcell_p0011)
        (hiddenblockedcell_p012)
        (hiddenblockedcell_p1)
        (hiddenblockedcell_p10)
        (hiddenblockedcell_p2)
        (hiddenblockedcell_p3)
        (hiddenblockedcell_p4)
        (hiddenblockedcell_p5)
        (hiddenblockedcell_p6)
        (hiddenblockedcell_p7)
        (hiddenblockedcell_p8)
        (hiddenblockedcell_p9)
        (hiddensurvivorat_s_p0011)
        (hiddensurvivorat_s_p012)
        (hiddensurvivorat_s_p1)
        (hiddensurvivorat_s_p10)
        (hiddensurvivorat_s_p2)
        (hiddensurvivorat_s_p3)
        (hiddensurvivorat_s_p4)
        (hiddensurvivorat_s_p5)
        (hiddensurvivorat_s_p6)
        (hiddensurvivorat_s_p7)
        (hiddensurvivorat_s_p8)
        (hiddensurvivorat_s_p9)
        (msg_p0011)
        (msg_p012)
        (msg_p1)
        (msg_p10)
        (msg_p2)
        (msg_p3)
        (msg_p4)
        (msg_p5)
        (msg_p6)
        (msg_p7)
        (msg_p8)
        (msg_p9)
        (obs_p0011)
        (obs_p012)
        (obs_p1)
        (obs_p10)
        (obs_p2)
        (obs_p3)
        (obs_p4)
        (obs_p5)
        (obs_p6)
        (obs_p7)
        (obs_p8)
        (obs_p9)
        (obss_p0011)
        (obss_p012)
        (obss_p1)
        (obss_p10)
        (obss_p2)
        (obss_p3)
        (obss_p4)
        (obss_p5)
        (obss_p6)
        (obss_p7)
        (obss_p8)
        (obss_p9)
        (succ_p0011_p0011)
        (succ_p0011_p012)
        (succ_p0011_p1)
        (succ_p0011_p10)
        (succ_p0011_p2)
        (succ_p0011_p3)
        (succ_p0011_p4)
        (succ_p0011_p5)
        (succ_p0011_p6)
        (succ_p0011_p7)
        (succ_p0011_p8)
        (succ_p0011_p9)
        (succ_p012_p0011)
        (succ_p012_p012)
        (succ_p012_p1)
        (succ_p012_p10)
        (succ_p012_p2)
        (succ_p012_p3)
        (succ_p012_p4)
        (succ_p012_p5)
        (succ_p012_p6)
        (succ_p012_p7)
        (succ_p012_p8)
        (succ_p012_p9)
        (succ_p10_p0011)
        (succ_p10_p012)
        (succ_p10_p1)
        (succ_p10_p10)
        (succ_p10_p2)
        (succ_p10_p3)
        (succ_p10_p4)
        (succ_p10_p5)
        (succ_p10_p6)
        (succ_p10_p7)
        (succ_p10_p8)
        (succ_p10_p9)
        (succ_p1_p0011)
        (succ_p1_p012)
        (succ_p1_p1)
        (succ_p1_p10)
        (succ_p1_p2)
        (succ_p1_p3)
        (succ_p1_p4)
        (succ_p1_p5)
        (succ_p1_p6)
        (succ_p1_p7)
        (succ_p1_p8)
        (succ_p1_p9)
        (succ_p2_p0011)
        (succ_p2_p012)
        (succ_p2_p1)
        (succ_p2_p10)
        (succ_p2_p2)
        (succ_p2_p3)
        (succ_p2_p4)
        (succ_p2_p5)
        (succ_p2_p6)
        (succ_p2_p7)
        (succ_p2_p8)
        (succ_p2_p9)
        (succ_p3_p0011)
        (succ_p3_p012)
        (succ_p3_p1)
        (succ_p3_p10)
        (succ_p3_p2)
        (succ_p3_p3)
        (succ_p3_p4)
        (succ_p3_p5)
        (succ_p3_p6)
        (succ_p3_p7)
        (succ_p3_p8)
        (succ_p3_p9)
        (succ_p4_p0011)
        (succ_p4_p012)
        (succ_p4_p1)
        (succ_p4_p10)
        (succ_p4_p2)
        (succ_p4_p3)
        (succ_p4_p4)
        (succ_p4_p5)
        (succ_p4_p6)
        (succ_p4_p7)
        (succ_p4_p8)
        (succ_p4_p9)
        (succ_p5_p0011)
        (succ_p5_p012)
        (succ_p5_p1)
        (succ_p5_p10)
        (succ_p5_p2)
        (succ_p5_p3)
        (succ_p5_p4)
        (succ_p5_p5)
        (succ_p5_p6)
        (succ_p5_p7)
        (succ_p5_p8)
        (succ_p5_p9)
        (succ_p6_p0011)
        (succ_p6_p012)
        (succ_p6_p1)
        (succ_p6_p10)
        (succ_p6_p2)
        (succ_p6_p3)
        (succ_p6_p4)
        (succ_p6_p5)
        (succ_p6_p6)
        (succ_p6_p7)
        (succ_p6_p8)
        (succ_p6_p9)
        (succ_p7_p0011)
        (succ_p7_p012)
        (succ_p7_p1)
        (succ_p7_p10)
        (succ_p7_p2)
        (succ_p7_p3)
        (succ_p7_p4)
        (succ_p7_p5)
        (succ_p7_p6)
        (succ_p7_p7)
        (succ_p7_p8)
        (succ_p7_p9)
        (succ_p8_p0011)
        (succ_p8_p012)
        (succ_p8_p1)
        (succ_p8_p10)
        (succ_p8_p2)
        (succ_p8_p3)
        (succ_p8_p4)
        (succ_p8_p5)
        (succ_p8_p6)
        (succ_p8_p7)
        (succ_p8_p8)
        (succ_p8_p9)
        (succ_p9_p0011)
        (succ_p9_p012)
        (succ_p9_p1)
        (succ_p9_p10)
        (succ_p9_p2)
        (succ_p9_p3)
        (succ_p9_p4)
        (succ_p9_p5)
        (succ_p9_p6)
        (succ_p9_p7)
        (succ_p9_p8)
        (succ_p9_p9)
        (survivorat_s_p0011)
        (survivorat_s_p012)
        (survivorat_s_p1)
        (survivorat_s_p10)
        (survivorat_s_p2)
        (survivorat_s_p3)
        (survivorat_s_p4)
        (survivorat_s_p5)
        (survivorat_s_p6)
        (survivorat_s_p7)
        (survivorat_s_p8)
        (survivorat_s_p9)
    )

    (:action badcommsurvivor_p0011_a_s
        :precondition (and (Ba_survivorat_s_p0011)
                           (Pa_survivorat_s_p0011)
                           (at_a_p0011))
        :effect (and
                    ; #15381: origin
                    (msg_p0011)

                    ; #21414: <==closure== 30764 (pos)
                    (when (and (not_at_c_p0011))
                          (Pc_not_survivorat_s_p0011))

                    ; #26351: <==commonly_known== 15381 (pos)
                    (Bc_msg_p0011)

                    ; #30764: origin
                    (when (and (not_at_c_p0011))
                          (Bc_not_survivorat_s_p0011))

                    ; #47741: <==closure== 70725 (pos)
                    (Pb_msg_p0011)

                    ; #52401: <==commonly_known== 15381 (pos)
                    (Ba_msg_p0011)

                    ; #57055: origin
                    (when (and (not_at_b_p0011))
                          (Bb_not_survivorat_s_p0011))

                    ; #57255: origin
                    (when (and (not_at_a_p0011))
                          (Ba_not_survivorat_s_p0011))

                    ; #61840: <==closure== 57255 (pos)
                    (when (and (not_at_a_p0011))
                          (Pa_not_survivorat_s_p0011))

                    ; #70725: <==commonly_known== 15381 (pos)
                    (Bb_msg_p0011)

                    ; #80976: <==closure== 26351 (pos)
                    (Pc_msg_p0011)

                    ; #83434: <==closure== 57055 (pos)
                    (when (and (not_at_b_p0011))
                          (Pb_not_survivorat_s_p0011))

                    ; #90236: <==closure== 52401 (pos)
                    (Pa_msg_p0011)

                    ; #16408: <==negation-removal== 80976 (pos)
                    (not (Bc_not_msg_p0011))

                    ; #16996: <==uncertain_firing== 57255 (pos)
                    (when (and (not (at_a_p0011)))
                          (not (Pa_survivorat_s_p0011)))

                    ; #22408: <==uncertain_firing== 57055 (pos)
                    (when (and (not (at_b_p0011)))
                          (not (Pb_survivorat_s_p0011)))

                    ; #23000: <==unclosure== 30449 (neg)
                    (when (and (not (at_c_p0011)))
                          (not (Bc_survivorat_s_p0011)))

                    ; #29210: <==negation-removal== 83434 (pos)
                    (when (and (not_at_b_p0011))
                          (not (Bb_survivorat_s_p0011)))

                    ; #29829: <==negation-removal== 30764 (pos)
                    (when (and (not_at_c_p0011))
                          (not (Pc_survivorat_s_p0011)))

                    ; #30449: <==uncertain_firing== 30764 (pos)
                    (when (and (not (at_c_p0011)))
                          (not (Pc_survivorat_s_p0011)))

                    ; #43587: <==negation-removal== 52401 (pos)
                    (not (Pa_not_msg_p0011))

                    ; #47222: <==negation-removal== 57055 (pos)
                    (when (and (not_at_b_p0011))
                          (not (Pb_survivorat_s_p0011)))

                    ; #50004: <==negation-removal== 70725 (pos)
                    (not (Pb_not_msg_p0011))

                    ; #50737: <==negation-removal== 15381 (pos)
                    (not (not_msg_p0011))

                    ; #68083: <==unclosure== 22408 (neg)
                    (when (and (not (at_b_p0011)))
                          (not (Bb_survivorat_s_p0011)))

                    ; #74901: <==unclosure== 16996 (neg)
                    (when (and (not (at_a_p0011)))
                          (not (Ba_survivorat_s_p0011)))

                    ; #75812: <==negation-removal== 26351 (pos)
                    (not (Pc_not_msg_p0011))

                    ; #76300: <==negation-removal== 61840 (pos)
                    (when (and (not_at_a_p0011))
                          (not (Ba_survivorat_s_p0011)))

                    ; #78427: <==negation-removal== 57255 (pos)
                    (when (and (not_at_a_p0011))
                          (not (Pa_survivorat_s_p0011)))

                    ; #79406: <==negation-removal== 21414 (pos)
                    (when (and (not_at_c_p0011))
                          (not (Bc_survivorat_s_p0011)))

                    ; #83908: <==negation-removal== 90236 (pos)
                    (not (Ba_not_msg_p0011))

                    ; #89641: <==negation-removal== 47741 (pos)
                    (not (Bb_not_msg_p0011))))

    (:action badcommsurvivor_p0011_b_s
        :precondition (and (Bb_survivorat_s_p0011)
                           (Pb_survivorat_s_p0011)
                           (at_b_p0011))
        :effect (and
                    ; #15381: origin
                    (msg_p0011)

                    ; #21414: <==closure== 30764 (pos)
                    (when (and (not_at_c_p0011))
                          (Pc_not_survivorat_s_p0011))

                    ; #26351: <==commonly_known== 15381 (pos)
                    (Bc_msg_p0011)

                    ; #30764: origin
                    (when (and (not_at_c_p0011))
                          (Bc_not_survivorat_s_p0011))

                    ; #47741: <==closure== 70725 (pos)
                    (Pb_msg_p0011)

                    ; #52401: <==commonly_known== 15381 (pos)
                    (Ba_msg_p0011)

                    ; #57055: origin
                    (when (and (not_at_b_p0011))
                          (Bb_not_survivorat_s_p0011))

                    ; #57255: origin
                    (when (and (not_at_a_p0011))
                          (Ba_not_survivorat_s_p0011))

                    ; #61840: <==closure== 57255 (pos)
                    (when (and (not_at_a_p0011))
                          (Pa_not_survivorat_s_p0011))

                    ; #70725: <==commonly_known== 15381 (pos)
                    (Bb_msg_p0011)

                    ; #80976: <==closure== 26351 (pos)
                    (Pc_msg_p0011)

                    ; #83434: <==closure== 57055 (pos)
                    (when (and (not_at_b_p0011))
                          (Pb_not_survivorat_s_p0011))

                    ; #90236: <==closure== 52401 (pos)
                    (Pa_msg_p0011)

                    ; #16408: <==negation-removal== 80976 (pos)
                    (not (Bc_not_msg_p0011))

                    ; #16996: <==uncertain_firing== 57255 (pos)
                    (when (and (not (at_a_p0011)))
                          (not (Pa_survivorat_s_p0011)))

                    ; #22408: <==uncertain_firing== 57055 (pos)
                    (when (and (not (at_b_p0011)))
                          (not (Pb_survivorat_s_p0011)))

                    ; #23000: <==unclosure== 30449 (neg)
                    (when (and (not (at_c_p0011)))
                          (not (Bc_survivorat_s_p0011)))

                    ; #29210: <==negation-removal== 83434 (pos)
                    (when (and (not_at_b_p0011))
                          (not (Bb_survivorat_s_p0011)))

                    ; #29829: <==negation-removal== 30764 (pos)
                    (when (and (not_at_c_p0011))
                          (not (Pc_survivorat_s_p0011)))

                    ; #30449: <==uncertain_firing== 30764 (pos)
                    (when (and (not (at_c_p0011)))
                          (not (Pc_survivorat_s_p0011)))

                    ; #43587: <==negation-removal== 52401 (pos)
                    (not (Pa_not_msg_p0011))

                    ; #47222: <==negation-removal== 57055 (pos)
                    (when (and (not_at_b_p0011))
                          (not (Pb_survivorat_s_p0011)))

                    ; #50004: <==negation-removal== 70725 (pos)
                    (not (Pb_not_msg_p0011))

                    ; #50737: <==negation-removal== 15381 (pos)
                    (not (not_msg_p0011))

                    ; #68083: <==unclosure== 22408 (neg)
                    (when (and (not (at_b_p0011)))
                          (not (Bb_survivorat_s_p0011)))

                    ; #74901: <==unclosure== 16996 (neg)
                    (when (and (not (at_a_p0011)))
                          (not (Ba_survivorat_s_p0011)))

                    ; #75812: <==negation-removal== 26351 (pos)
                    (not (Pc_not_msg_p0011))

                    ; #76300: <==negation-removal== 61840 (pos)
                    (when (and (not_at_a_p0011))
                          (not (Ba_survivorat_s_p0011)))

                    ; #78427: <==negation-removal== 57255 (pos)
                    (when (and (not_at_a_p0011))
                          (not (Pa_survivorat_s_p0011)))

                    ; #79406: <==negation-removal== 21414 (pos)
                    (when (and (not_at_c_p0011))
                          (not (Bc_survivorat_s_p0011)))

                    ; #83908: <==negation-removal== 90236 (pos)
                    (not (Ba_not_msg_p0011))

                    ; #89641: <==negation-removal== 47741 (pos)
                    (not (Bb_not_msg_p0011))))

    (:action badcommsurvivor_p0011_c_s
        :precondition (and (Bc_survivorat_s_p0011)
                           (at_c_p0011)
                           (Pc_survivorat_s_p0011))
        :effect (and
                    ; #15381: origin
                    (msg_p0011)

                    ; #21414: <==closure== 30764 (pos)
                    (when (and (not_at_c_p0011))
                          (Pc_not_survivorat_s_p0011))

                    ; #26351: <==commonly_known== 15381 (pos)
                    (Bc_msg_p0011)

                    ; #30764: origin
                    (when (and (not_at_c_p0011))
                          (Bc_not_survivorat_s_p0011))

                    ; #47741: <==closure== 70725 (pos)
                    (Pb_msg_p0011)

                    ; #52401: <==commonly_known== 15381 (pos)
                    (Ba_msg_p0011)

                    ; #57055: origin
                    (when (and (not_at_b_p0011))
                          (Bb_not_survivorat_s_p0011))

                    ; #57255: origin
                    (when (and (not_at_a_p0011))
                          (Ba_not_survivorat_s_p0011))

                    ; #61840: <==closure== 57255 (pos)
                    (when (and (not_at_a_p0011))
                          (Pa_not_survivorat_s_p0011))

                    ; #70725: <==commonly_known== 15381 (pos)
                    (Bb_msg_p0011)

                    ; #80976: <==closure== 26351 (pos)
                    (Pc_msg_p0011)

                    ; #83434: <==closure== 57055 (pos)
                    (when (and (not_at_b_p0011))
                          (Pb_not_survivorat_s_p0011))

                    ; #90236: <==closure== 52401 (pos)
                    (Pa_msg_p0011)

                    ; #16408: <==negation-removal== 80976 (pos)
                    (not (Bc_not_msg_p0011))

                    ; #16996: <==uncertain_firing== 57255 (pos)
                    (when (and (not (at_a_p0011)))
                          (not (Pa_survivorat_s_p0011)))

                    ; #22408: <==uncertain_firing== 57055 (pos)
                    (when (and (not (at_b_p0011)))
                          (not (Pb_survivorat_s_p0011)))

                    ; #23000: <==unclosure== 30449 (neg)
                    (when (and (not (at_c_p0011)))
                          (not (Bc_survivorat_s_p0011)))

                    ; #29210: <==negation-removal== 83434 (pos)
                    (when (and (not_at_b_p0011))
                          (not (Bb_survivorat_s_p0011)))

                    ; #29829: <==negation-removal== 30764 (pos)
                    (when (and (not_at_c_p0011))
                          (not (Pc_survivorat_s_p0011)))

                    ; #30449: <==uncertain_firing== 30764 (pos)
                    (when (and (not (at_c_p0011)))
                          (not (Pc_survivorat_s_p0011)))

                    ; #43587: <==negation-removal== 52401 (pos)
                    (not (Pa_not_msg_p0011))

                    ; #47222: <==negation-removal== 57055 (pos)
                    (when (and (not_at_b_p0011))
                          (not (Pb_survivorat_s_p0011)))

                    ; #50004: <==negation-removal== 70725 (pos)
                    (not (Pb_not_msg_p0011))

                    ; #50737: <==negation-removal== 15381 (pos)
                    (not (not_msg_p0011))

                    ; #68083: <==unclosure== 22408 (neg)
                    (when (and (not (at_b_p0011)))
                          (not (Bb_survivorat_s_p0011)))

                    ; #74901: <==unclosure== 16996 (neg)
                    (when (and (not (at_a_p0011)))
                          (not (Ba_survivorat_s_p0011)))

                    ; #75812: <==negation-removal== 26351 (pos)
                    (not (Pc_not_msg_p0011))

                    ; #76300: <==negation-removal== 61840 (pos)
                    (when (and (not_at_a_p0011))
                          (not (Ba_survivorat_s_p0011)))

                    ; #78427: <==negation-removal== 57255 (pos)
                    (when (and (not_at_a_p0011))
                          (not (Pa_survivorat_s_p0011)))

                    ; #79406: <==negation-removal== 21414 (pos)
                    (when (and (not_at_c_p0011))
                          (not (Bc_survivorat_s_p0011)))

                    ; #83908: <==negation-removal== 90236 (pos)
                    (not (Ba_not_msg_p0011))

                    ; #89641: <==negation-removal== 47741 (pos)
                    (not (Bb_not_msg_p0011))))

    (:action badcommsurvivor_p012_a_s
        :precondition (and (at_a_p012)
                           (Ba_survivorat_s_p012)
                           (Pa_survivorat_s_p012))
        :effect (and
                    ; #19800: <==closure== 62789 (pos)
                    (when (and (not_at_a_p012))
                          (Pa_not_survivorat_s_p012))

                    ; #28420: origin
                    (when (and (not_at_c_p012))
                          (Bc_not_survivorat_s_p012))

                    ; #35818: <==closure== 56260 (pos)
                    (Pa_msg_p012)

                    ; #43276: <==commonly_known== 90258 (pos)
                    (Bb_msg_p012)

                    ; #54074: <==closure== 43276 (pos)
                    (Pb_msg_p012)

                    ; #54579: <==closure== 28420 (pos)
                    (when (and (not_at_c_p012))
                          (Pc_not_survivorat_s_p012))

                    ; #56260: <==commonly_known== 90258 (pos)
                    (Ba_msg_p012)

                    ; #62789: origin
                    (when (and (not_at_a_p012))
                          (Ba_not_survivorat_s_p012))

                    ; #76943: <==closure== 88505 (pos)
                    (Pc_msg_p012)

                    ; #88505: <==commonly_known== 90258 (pos)
                    (Bc_msg_p012)

                    ; #90258: origin
                    (msg_p012)

                    ; #91009: origin
                    (when (and (not_at_b_p012))
                          (Bb_not_survivorat_s_p012))

                    ; #91883: <==closure== 91009 (pos)
                    (when (and (not_at_b_p012))
                          (Pb_not_survivorat_s_p012))

                    ; #12913: <==negation-removal== 91883 (pos)
                    (when (and (not_at_b_p012))
                          (not (Bb_survivorat_s_p012)))

                    ; #13068: <==uncertain_firing== 62789 (pos)
                    (when (and (not (at_a_p012)))
                          (not (Pa_survivorat_s_p012)))

                    ; #14645: <==negation-removal== 88505 (pos)
                    (not (Pc_not_msg_p012))

                    ; #25489: <==unclosure== 13068 (neg)
                    (when (and (not (at_a_p012)))
                          (not (Ba_survivorat_s_p012)))

                    ; #30015: <==negation-removal== 28420 (pos)
                    (when (and (not_at_c_p012))
                          (not (Pc_survivorat_s_p012)))

                    ; #31540: <==uncertain_firing== 91009 (pos)
                    (when (and (not (at_b_p012)))
                          (not (Pb_survivorat_s_p012)))

                    ; #38547: <==negation-removal== 76943 (pos)
                    (not (Bc_not_msg_p012))

                    ; #40728: <==unclosure== 31540 (neg)
                    (when (and (not (at_b_p012)))
                          (not (Bb_survivorat_s_p012)))

                    ; #44947: <==negation-removal== 54074 (pos)
                    (not (Bb_not_msg_p012))

                    ; #47817: <==negation-removal== 56260 (pos)
                    (not (Pa_not_msg_p012))

                    ; #50884: <==negation-removal== 54579 (pos)
                    (when (and (not_at_c_p012))
                          (not (Bc_survivorat_s_p012)))

                    ; #56245: <==negation-removal== 90258 (pos)
                    (not (not_msg_p012))

                    ; #63668: <==negation-removal== 35818 (pos)
                    (not (Ba_not_msg_p012))

                    ; #70317: <==uncertain_firing== 28420 (pos)
                    (when (and (not (at_c_p012)))
                          (not (Pc_survivorat_s_p012)))

                    ; #78482: <==negation-removal== 91009 (pos)
                    (when (and (not_at_b_p012))
                          (not (Pb_survivorat_s_p012)))

                    ; #85053: <==negation-removal== 19800 (pos)
                    (when (and (not_at_a_p012))
                          (not (Ba_survivorat_s_p012)))

                    ; #87037: <==unclosure== 70317 (neg)
                    (when (and (not (at_c_p012)))
                          (not (Bc_survivorat_s_p012)))

                    ; #88550: <==negation-removal== 62789 (pos)
                    (when (and (not_at_a_p012))
                          (not (Pa_survivorat_s_p012)))

                    ; #91122: <==negation-removal== 43276 (pos)
                    (not (Pb_not_msg_p012))))

    (:action badcommsurvivor_p012_b_s
        :precondition (and (Pb_survivorat_s_p012)
                           (Bb_survivorat_s_p012)
                           (at_b_p012))
        :effect (and
                    ; #19800: <==closure== 62789 (pos)
                    (when (and (not_at_a_p012))
                          (Pa_not_survivorat_s_p012))

                    ; #28420: origin
                    (when (and (not_at_c_p012))
                          (Bc_not_survivorat_s_p012))

                    ; #35818: <==closure== 56260 (pos)
                    (Pa_msg_p012)

                    ; #43276: <==commonly_known== 90258 (pos)
                    (Bb_msg_p012)

                    ; #54074: <==closure== 43276 (pos)
                    (Pb_msg_p012)

                    ; #54579: <==closure== 28420 (pos)
                    (when (and (not_at_c_p012))
                          (Pc_not_survivorat_s_p012))

                    ; #56260: <==commonly_known== 90258 (pos)
                    (Ba_msg_p012)

                    ; #62789: origin
                    (when (and (not_at_a_p012))
                          (Ba_not_survivorat_s_p012))

                    ; #76943: <==closure== 88505 (pos)
                    (Pc_msg_p012)

                    ; #88505: <==commonly_known== 90258 (pos)
                    (Bc_msg_p012)

                    ; #90258: origin
                    (msg_p012)

                    ; #91009: origin
                    (when (and (not_at_b_p012))
                          (Bb_not_survivorat_s_p012))

                    ; #91883: <==closure== 91009 (pos)
                    (when (and (not_at_b_p012))
                          (Pb_not_survivorat_s_p012))

                    ; #12913: <==negation-removal== 91883 (pos)
                    (when (and (not_at_b_p012))
                          (not (Bb_survivorat_s_p012)))

                    ; #13068: <==uncertain_firing== 62789 (pos)
                    (when (and (not (at_a_p012)))
                          (not (Pa_survivorat_s_p012)))

                    ; #14645: <==negation-removal== 88505 (pos)
                    (not (Pc_not_msg_p012))

                    ; #25489: <==unclosure== 13068 (neg)
                    (when (and (not (at_a_p012)))
                          (not (Ba_survivorat_s_p012)))

                    ; #30015: <==negation-removal== 28420 (pos)
                    (when (and (not_at_c_p012))
                          (not (Pc_survivorat_s_p012)))

                    ; #31540: <==uncertain_firing== 91009 (pos)
                    (when (and (not (at_b_p012)))
                          (not (Pb_survivorat_s_p012)))

                    ; #38547: <==negation-removal== 76943 (pos)
                    (not (Bc_not_msg_p012))

                    ; #40728: <==unclosure== 31540 (neg)
                    (when (and (not (at_b_p012)))
                          (not (Bb_survivorat_s_p012)))

                    ; #44947: <==negation-removal== 54074 (pos)
                    (not (Bb_not_msg_p012))

                    ; #47817: <==negation-removal== 56260 (pos)
                    (not (Pa_not_msg_p012))

                    ; #50884: <==negation-removal== 54579 (pos)
                    (when (and (not_at_c_p012))
                          (not (Bc_survivorat_s_p012)))

                    ; #56245: <==negation-removal== 90258 (pos)
                    (not (not_msg_p012))

                    ; #63668: <==negation-removal== 35818 (pos)
                    (not (Ba_not_msg_p012))

                    ; #70317: <==uncertain_firing== 28420 (pos)
                    (when (and (not (at_c_p012)))
                          (not (Pc_survivorat_s_p012)))

                    ; #78482: <==negation-removal== 91009 (pos)
                    (when (and (not_at_b_p012))
                          (not (Pb_survivorat_s_p012)))

                    ; #85053: <==negation-removal== 19800 (pos)
                    (when (and (not_at_a_p012))
                          (not (Ba_survivorat_s_p012)))

                    ; #87037: <==unclosure== 70317 (neg)
                    (when (and (not (at_c_p012)))
                          (not (Bc_survivorat_s_p012)))

                    ; #88550: <==negation-removal== 62789 (pos)
                    (when (and (not_at_a_p012))
                          (not (Pa_survivorat_s_p012)))

                    ; #91122: <==negation-removal== 43276 (pos)
                    (not (Pb_not_msg_p012))))

    (:action badcommsurvivor_p012_c_s
        :precondition (and (Bc_survivorat_s_p012)
                           (at_c_p012)
                           (Pc_survivorat_s_p012))
        :effect (and
                    ; #19800: <==closure== 62789 (pos)
                    (when (and (not_at_a_p012))
                          (Pa_not_survivorat_s_p012))

                    ; #28420: origin
                    (when (and (not_at_c_p012))
                          (Bc_not_survivorat_s_p012))

                    ; #35818: <==closure== 56260 (pos)
                    (Pa_msg_p012)

                    ; #43276: <==commonly_known== 90258 (pos)
                    (Bb_msg_p012)

                    ; #54074: <==closure== 43276 (pos)
                    (Pb_msg_p012)

                    ; #54579: <==closure== 28420 (pos)
                    (when (and (not_at_c_p012))
                          (Pc_not_survivorat_s_p012))

                    ; #56260: <==commonly_known== 90258 (pos)
                    (Ba_msg_p012)

                    ; #62789: origin
                    (when (and (not_at_a_p012))
                          (Ba_not_survivorat_s_p012))

                    ; #76943: <==closure== 88505 (pos)
                    (Pc_msg_p012)

                    ; #88505: <==commonly_known== 90258 (pos)
                    (Bc_msg_p012)

                    ; #90258: origin
                    (msg_p012)

                    ; #91009: origin
                    (when (and (not_at_b_p012))
                          (Bb_not_survivorat_s_p012))

                    ; #91883: <==closure== 91009 (pos)
                    (when (and (not_at_b_p012))
                          (Pb_not_survivorat_s_p012))

                    ; #12913: <==negation-removal== 91883 (pos)
                    (when (and (not_at_b_p012))
                          (not (Bb_survivorat_s_p012)))

                    ; #13068: <==uncertain_firing== 62789 (pos)
                    (when (and (not (at_a_p012)))
                          (not (Pa_survivorat_s_p012)))

                    ; #14645: <==negation-removal== 88505 (pos)
                    (not (Pc_not_msg_p012))

                    ; #25489: <==unclosure== 13068 (neg)
                    (when (and (not (at_a_p012)))
                          (not (Ba_survivorat_s_p012)))

                    ; #30015: <==negation-removal== 28420 (pos)
                    (when (and (not_at_c_p012))
                          (not (Pc_survivorat_s_p012)))

                    ; #31540: <==uncertain_firing== 91009 (pos)
                    (when (and (not (at_b_p012)))
                          (not (Pb_survivorat_s_p012)))

                    ; #38547: <==negation-removal== 76943 (pos)
                    (not (Bc_not_msg_p012))

                    ; #40728: <==unclosure== 31540 (neg)
                    (when (and (not (at_b_p012)))
                          (not (Bb_survivorat_s_p012)))

                    ; #44947: <==negation-removal== 54074 (pos)
                    (not (Bb_not_msg_p012))

                    ; #47817: <==negation-removal== 56260 (pos)
                    (not (Pa_not_msg_p012))

                    ; #50884: <==negation-removal== 54579 (pos)
                    (when (and (not_at_c_p012))
                          (not (Bc_survivorat_s_p012)))

                    ; #56245: <==negation-removal== 90258 (pos)
                    (not (not_msg_p012))

                    ; #63668: <==negation-removal== 35818 (pos)
                    (not (Ba_not_msg_p012))

                    ; #70317: <==uncertain_firing== 28420 (pos)
                    (when (and (not (at_c_p012)))
                          (not (Pc_survivorat_s_p012)))

                    ; #78482: <==negation-removal== 91009 (pos)
                    (when (and (not_at_b_p012))
                          (not (Pb_survivorat_s_p012)))

                    ; #85053: <==negation-removal== 19800 (pos)
                    (when (and (not_at_a_p012))
                          (not (Ba_survivorat_s_p012)))

                    ; #87037: <==unclosure== 70317 (neg)
                    (when (and (not (at_c_p012)))
                          (not (Bc_survivorat_s_p012)))

                    ; #88550: <==negation-removal== 62789 (pos)
                    (when (and (not_at_a_p012))
                          (not (Pa_survivorat_s_p012)))

                    ; #91122: <==negation-removal== 43276 (pos)
                    (not (Pb_not_msg_p012))))

    (:action badcommsurvivor_p10_a_s
        :precondition (and (Ba_survivorat_s_p10)
                           (Pa_survivorat_s_p10)
                           (at_a_p10))
        :effect (and
                    ; #11845: <==closure== 14551 (pos)
                    (Pb_msg_p10)

                    ; #14551: <==commonly_known== 67170 (pos)
                    (Bb_msg_p10)

                    ; #15851: origin
                    (when (and (not_at_a_p10))
                          (Ba_not_survivorat_s_p10))

                    ; #20946: <==commonly_known== 67170 (pos)
                    (Bc_msg_p10)

                    ; #27328: origin
                    (when (and (not_at_c_p10))
                          (Bc_not_survivorat_s_p10))

                    ; #29955: <==commonly_known== 67170 (pos)
                    (Ba_msg_p10)

                    ; #39334: origin
                    (when (and (not_at_b_p10))
                          (Bb_not_survivorat_s_p10))

                    ; #43858: <==closure== 29955 (pos)
                    (Pa_msg_p10)

                    ; #47658: <==closure== 20946 (pos)
                    (Pc_msg_p10)

                    ; #52696: <==closure== 15851 (pos)
                    (when (and (not_at_a_p10))
                          (Pa_not_survivorat_s_p10))

                    ; #63537: <==closure== 27328 (pos)
                    (when (and (not_at_c_p10))
                          (Pc_not_survivorat_s_p10))

                    ; #67170: origin
                    (msg_p10)

                    ; #68268: <==closure== 39334 (pos)
                    (when (and (not_at_b_p10))
                          (Pb_not_survivorat_s_p10))

                    ; #14939: <==unclosure== 86427 (neg)
                    (when (and (not (at_a_p10)))
                          (not (Ba_survivorat_s_p10)))

                    ; #16845: <==negation-removal== 43858 (pos)
                    (not (Ba_not_msg_p10))

                    ; #17507: <==uncertain_firing== 27328 (pos)
                    (when (and (not (at_c_p10)))
                          (not (Pc_survivorat_s_p10)))

                    ; #19193: <==negation-removal== 15851 (pos)
                    (when (and (not_at_a_p10))
                          (not (Pa_survivorat_s_p10)))

                    ; #30147: <==uncertain_firing== 39334 (pos)
                    (when (and (not (at_b_p10)))
                          (not (Pb_survivorat_s_p10)))

                    ; #30353: <==unclosure== 17507 (neg)
                    (when (and (not (at_c_p10)))
                          (not (Bc_survivorat_s_p10)))

                    ; #30454: <==negation-removal== 68268 (pos)
                    (when (and (not_at_b_p10))
                          (not (Bb_survivorat_s_p10)))

                    ; #33353: <==negation-removal== 39334 (pos)
                    (when (and (not_at_b_p10))
                          (not (Pb_survivorat_s_p10)))

                    ; #35230: <==negation-removal== 63537 (pos)
                    (when (and (not_at_c_p10))
                          (not (Bc_survivorat_s_p10)))

                    ; #42509: <==negation-removal== 67170 (pos)
                    (not (not_msg_p10))

                    ; #56753: <==negation-removal== 11845 (pos)
                    (not (Bb_not_msg_p10))

                    ; #58660: <==negation-removal== 20946 (pos)
                    (not (Pc_not_msg_p10))

                    ; #62292: <==negation-removal== 52696 (pos)
                    (when (and (not_at_a_p10))
                          (not (Ba_survivorat_s_p10)))

                    ; #76623: <==negation-removal== 29955 (pos)
                    (not (Pa_not_msg_p10))

                    ; #77133: <==negation-removal== 47658 (pos)
                    (not (Bc_not_msg_p10))

                    ; #82170: <==negation-removal== 14551 (pos)
                    (not (Pb_not_msg_p10))

                    ; #86427: <==uncertain_firing== 15851 (pos)
                    (when (and (not (at_a_p10)))
                          (not (Pa_survivorat_s_p10)))

                    ; #89018: <==negation-removal== 27328 (pos)
                    (when (and (not_at_c_p10))
                          (not (Pc_survivorat_s_p10)))

                    ; #90451: <==unclosure== 30147 (neg)
                    (when (and (not (at_b_p10)))
                          (not (Bb_survivorat_s_p10)))))

    (:action badcommsurvivor_p10_b_s
        :precondition (and (at_b_p10)
                           (Pb_survivorat_s_p10)
                           (Bb_survivorat_s_p10))
        :effect (and
                    ; #11845: <==closure== 14551 (pos)
                    (Pb_msg_p10)

                    ; #14551: <==commonly_known== 67170 (pos)
                    (Bb_msg_p10)

                    ; #15851: origin
                    (when (and (not_at_a_p10))
                          (Ba_not_survivorat_s_p10))

                    ; #20946: <==commonly_known== 67170 (pos)
                    (Bc_msg_p10)

                    ; #27328: origin
                    (when (and (not_at_c_p10))
                          (Bc_not_survivorat_s_p10))

                    ; #29955: <==commonly_known== 67170 (pos)
                    (Ba_msg_p10)

                    ; #39334: origin
                    (when (and (not_at_b_p10))
                          (Bb_not_survivorat_s_p10))

                    ; #43858: <==closure== 29955 (pos)
                    (Pa_msg_p10)

                    ; #47658: <==closure== 20946 (pos)
                    (Pc_msg_p10)

                    ; #52696: <==closure== 15851 (pos)
                    (when (and (not_at_a_p10))
                          (Pa_not_survivorat_s_p10))

                    ; #63537: <==closure== 27328 (pos)
                    (when (and (not_at_c_p10))
                          (Pc_not_survivorat_s_p10))

                    ; #67170: origin
                    (msg_p10)

                    ; #68268: <==closure== 39334 (pos)
                    (when (and (not_at_b_p10))
                          (Pb_not_survivorat_s_p10))

                    ; #14939: <==unclosure== 86427 (neg)
                    (when (and (not (at_a_p10)))
                          (not (Ba_survivorat_s_p10)))

                    ; #16845: <==negation-removal== 43858 (pos)
                    (not (Ba_not_msg_p10))

                    ; #17507: <==uncertain_firing== 27328 (pos)
                    (when (and (not (at_c_p10)))
                          (not (Pc_survivorat_s_p10)))

                    ; #19193: <==negation-removal== 15851 (pos)
                    (when (and (not_at_a_p10))
                          (not (Pa_survivorat_s_p10)))

                    ; #30147: <==uncertain_firing== 39334 (pos)
                    (when (and (not (at_b_p10)))
                          (not (Pb_survivorat_s_p10)))

                    ; #30353: <==unclosure== 17507 (neg)
                    (when (and (not (at_c_p10)))
                          (not (Bc_survivorat_s_p10)))

                    ; #30454: <==negation-removal== 68268 (pos)
                    (when (and (not_at_b_p10))
                          (not (Bb_survivorat_s_p10)))

                    ; #33353: <==negation-removal== 39334 (pos)
                    (when (and (not_at_b_p10))
                          (not (Pb_survivorat_s_p10)))

                    ; #35230: <==negation-removal== 63537 (pos)
                    (when (and (not_at_c_p10))
                          (not (Bc_survivorat_s_p10)))

                    ; #42509: <==negation-removal== 67170 (pos)
                    (not (not_msg_p10))

                    ; #56753: <==negation-removal== 11845 (pos)
                    (not (Bb_not_msg_p10))

                    ; #58660: <==negation-removal== 20946 (pos)
                    (not (Pc_not_msg_p10))

                    ; #62292: <==negation-removal== 52696 (pos)
                    (when (and (not_at_a_p10))
                          (not (Ba_survivorat_s_p10)))

                    ; #76623: <==negation-removal== 29955 (pos)
                    (not (Pa_not_msg_p10))

                    ; #77133: <==negation-removal== 47658 (pos)
                    (not (Bc_not_msg_p10))

                    ; #82170: <==negation-removal== 14551 (pos)
                    (not (Pb_not_msg_p10))

                    ; #86427: <==uncertain_firing== 15851 (pos)
                    (when (and (not (at_a_p10)))
                          (not (Pa_survivorat_s_p10)))

                    ; #89018: <==negation-removal== 27328 (pos)
                    (when (and (not_at_c_p10))
                          (not (Pc_survivorat_s_p10)))

                    ; #90451: <==unclosure== 30147 (neg)
                    (when (and (not (at_b_p10)))
                          (not (Bb_survivorat_s_p10)))))

    (:action badcommsurvivor_p10_c_s
        :precondition (and (Bc_survivorat_s_p10)
                           (at_c_p10)
                           (Pc_survivorat_s_p10))
        :effect (and
                    ; #11845: <==closure== 14551 (pos)
                    (Pb_msg_p10)

                    ; #14551: <==commonly_known== 67170 (pos)
                    (Bb_msg_p10)

                    ; #15851: origin
                    (when (and (not_at_a_p10))
                          (Ba_not_survivorat_s_p10))

                    ; #20946: <==commonly_known== 67170 (pos)
                    (Bc_msg_p10)

                    ; #27328: origin
                    (when (and (not_at_c_p10))
                          (Bc_not_survivorat_s_p10))

                    ; #29955: <==commonly_known== 67170 (pos)
                    (Ba_msg_p10)

                    ; #39334: origin
                    (when (and (not_at_b_p10))
                          (Bb_not_survivorat_s_p10))

                    ; #43858: <==closure== 29955 (pos)
                    (Pa_msg_p10)

                    ; #47658: <==closure== 20946 (pos)
                    (Pc_msg_p10)

                    ; #52696: <==closure== 15851 (pos)
                    (when (and (not_at_a_p10))
                          (Pa_not_survivorat_s_p10))

                    ; #63537: <==closure== 27328 (pos)
                    (when (and (not_at_c_p10))
                          (Pc_not_survivorat_s_p10))

                    ; #67170: origin
                    (msg_p10)

                    ; #68268: <==closure== 39334 (pos)
                    (when (and (not_at_b_p10))
                          (Pb_not_survivorat_s_p10))

                    ; #14939: <==unclosure== 86427 (neg)
                    (when (and (not (at_a_p10)))
                          (not (Ba_survivorat_s_p10)))

                    ; #16845: <==negation-removal== 43858 (pos)
                    (not (Ba_not_msg_p10))

                    ; #17507: <==uncertain_firing== 27328 (pos)
                    (when (and (not (at_c_p10)))
                          (not (Pc_survivorat_s_p10)))

                    ; #19193: <==negation-removal== 15851 (pos)
                    (when (and (not_at_a_p10))
                          (not (Pa_survivorat_s_p10)))

                    ; #30147: <==uncertain_firing== 39334 (pos)
                    (when (and (not (at_b_p10)))
                          (not (Pb_survivorat_s_p10)))

                    ; #30353: <==unclosure== 17507 (neg)
                    (when (and (not (at_c_p10)))
                          (not (Bc_survivorat_s_p10)))

                    ; #30454: <==negation-removal== 68268 (pos)
                    (when (and (not_at_b_p10))
                          (not (Bb_survivorat_s_p10)))

                    ; #33353: <==negation-removal== 39334 (pos)
                    (when (and (not_at_b_p10))
                          (not (Pb_survivorat_s_p10)))

                    ; #35230: <==negation-removal== 63537 (pos)
                    (when (and (not_at_c_p10))
                          (not (Bc_survivorat_s_p10)))

                    ; #42509: <==negation-removal== 67170 (pos)
                    (not (not_msg_p10))

                    ; #56753: <==negation-removal== 11845 (pos)
                    (not (Bb_not_msg_p10))

                    ; #58660: <==negation-removal== 20946 (pos)
                    (not (Pc_not_msg_p10))

                    ; #62292: <==negation-removal== 52696 (pos)
                    (when (and (not_at_a_p10))
                          (not (Ba_survivorat_s_p10)))

                    ; #76623: <==negation-removal== 29955 (pos)
                    (not (Pa_not_msg_p10))

                    ; #77133: <==negation-removal== 47658 (pos)
                    (not (Bc_not_msg_p10))

                    ; #82170: <==negation-removal== 14551 (pos)
                    (not (Pb_not_msg_p10))

                    ; #86427: <==uncertain_firing== 15851 (pos)
                    (when (and (not (at_a_p10)))
                          (not (Pa_survivorat_s_p10)))

                    ; #89018: <==negation-removal== 27328 (pos)
                    (when (and (not_at_c_p10))
                          (not (Pc_survivorat_s_p10)))

                    ; #90451: <==unclosure== 30147 (neg)
                    (when (and (not (at_b_p10)))
                          (not (Bb_survivorat_s_p10)))))

    (:action badcommsurvivor_p1_a_s
        :precondition (and (Ba_survivorat_s_p1)
                           (at_a_p1)
                           (Pa_survivorat_s_p1))
        :effect (and
                    ; #15436: origin
                    (when (and (not_at_b_p1))
                          (Bb_not_survivorat_s_p1))

                    ; #23040: <==closure== 65171 (pos)
                    (Pa_msg_p1)

                    ; #26893: <==commonly_known== 87255 (pos)
                    (Bb_msg_p1)

                    ; #28388: origin
                    (when (and (not_at_a_p1))
                          (Ba_not_survivorat_s_p1))

                    ; #44954: <==closure== 15436 (pos)
                    (when (and (not_at_b_p1))
                          (Pb_not_survivorat_s_p1))

                    ; #56144: <==closure== 91846 (pos)
                    (when (and (not_at_c_p1))
                          (Pc_not_survivorat_s_p1))

                    ; #62658: <==closure== 28388 (pos)
                    (when (and (not_at_a_p1))
                          (Pa_not_survivorat_s_p1))

                    ; #65171: <==commonly_known== 87255 (pos)
                    (Ba_msg_p1)

                    ; #76384: <==commonly_known== 87255 (pos)
                    (Bc_msg_p1)

                    ; #83854: <==closure== 26893 (pos)
                    (Pb_msg_p1)

                    ; #87168: <==closure== 76384 (pos)
                    (Pc_msg_p1)

                    ; #87255: origin
                    (msg_p1)

                    ; #91846: origin
                    (when (and (not_at_c_p1))
                          (Bc_not_survivorat_s_p1))

                    ; #10035: <==negation-removal== 23040 (pos)
                    (not (Ba_not_msg_p1))

                    ; #10812: <==negation-removal== 87168 (pos)
                    (not (Bc_not_msg_p1))

                    ; #11426: <==negation-removal== 76384 (pos)
                    (not (Pc_not_msg_p1))

                    ; #11446: <==negation-removal== 28388 (pos)
                    (when (and (not_at_a_p1))
                          (not (Pa_survivorat_s_p1)))

                    ; #13406: <==uncertain_firing== 28388 (pos)
                    (when (and (not (at_a_p1)))
                          (not (Pa_survivorat_s_p1)))

                    ; #17942: <==negation-removal== 65171 (pos)
                    (not (Pa_not_msg_p1))

                    ; #31599: <==unclosure== 38517 (neg)
                    (when (and (not (at_b_p1)))
                          (not (Bb_survivorat_s_p1)))

                    ; #33196: <==unclosure== 82258 (neg)
                    (when (and (not (at_c_p1)))
                          (not (Bc_survivorat_s_p1)))

                    ; #36359: <==negation-removal== 62658 (pos)
                    (when (and (not_at_a_p1))
                          (not (Ba_survivorat_s_p1)))

                    ; #38517: <==uncertain_firing== 15436 (pos)
                    (when (and (not (at_b_p1)))
                          (not (Pb_survivorat_s_p1)))

                    ; #52706: <==negation-removal== 87255 (pos)
                    (not (not_msg_p1))

                    ; #53586: <==negation-removal== 83854 (pos)
                    (not (Bb_not_msg_p1))

                    ; #58048: <==negation-removal== 56144 (pos)
                    (when (and (not_at_c_p1))
                          (not (Bc_survivorat_s_p1)))

                    ; #64880: <==negation-removal== 26893 (pos)
                    (not (Pb_not_msg_p1))

                    ; #73651: <==unclosure== 13406 (neg)
                    (when (and (not (at_a_p1)))
                          (not (Ba_survivorat_s_p1)))

                    ; #77034: <==negation-removal== 15436 (pos)
                    (when (and (not_at_b_p1))
                          (not (Pb_survivorat_s_p1)))

                    ; #82258: <==uncertain_firing== 91846 (pos)
                    (when (and (not (at_c_p1)))
                          (not (Pc_survivorat_s_p1)))

                    ; #84042: <==negation-removal== 44954 (pos)
                    (when (and (not_at_b_p1))
                          (not (Bb_survivorat_s_p1)))

                    ; #97366: <==negation-removal== 91846 (pos)
                    (when (and (not_at_c_p1))
                          (not (Pc_survivorat_s_p1)))))

    (:action badcommsurvivor_p1_b_s
        :precondition (and (at_b_p1)
                           (Bb_survivorat_s_p1)
                           (Pb_survivorat_s_p1))
        :effect (and
                    ; #15436: origin
                    (when (and (not_at_b_p1))
                          (Bb_not_survivorat_s_p1))

                    ; #23040: <==closure== 65171 (pos)
                    (Pa_msg_p1)

                    ; #26893: <==commonly_known== 87255 (pos)
                    (Bb_msg_p1)

                    ; #28388: origin
                    (when (and (not_at_a_p1))
                          (Ba_not_survivorat_s_p1))

                    ; #44954: <==closure== 15436 (pos)
                    (when (and (not_at_b_p1))
                          (Pb_not_survivorat_s_p1))

                    ; #56144: <==closure== 91846 (pos)
                    (when (and (not_at_c_p1))
                          (Pc_not_survivorat_s_p1))

                    ; #62658: <==closure== 28388 (pos)
                    (when (and (not_at_a_p1))
                          (Pa_not_survivorat_s_p1))

                    ; #65171: <==commonly_known== 87255 (pos)
                    (Ba_msg_p1)

                    ; #76384: <==commonly_known== 87255 (pos)
                    (Bc_msg_p1)

                    ; #83854: <==closure== 26893 (pos)
                    (Pb_msg_p1)

                    ; #87168: <==closure== 76384 (pos)
                    (Pc_msg_p1)

                    ; #87255: origin
                    (msg_p1)

                    ; #91846: origin
                    (when (and (not_at_c_p1))
                          (Bc_not_survivorat_s_p1))

                    ; #10035: <==negation-removal== 23040 (pos)
                    (not (Ba_not_msg_p1))

                    ; #10812: <==negation-removal== 87168 (pos)
                    (not (Bc_not_msg_p1))

                    ; #11426: <==negation-removal== 76384 (pos)
                    (not (Pc_not_msg_p1))

                    ; #11446: <==negation-removal== 28388 (pos)
                    (when (and (not_at_a_p1))
                          (not (Pa_survivorat_s_p1)))

                    ; #13406: <==uncertain_firing== 28388 (pos)
                    (when (and (not (at_a_p1)))
                          (not (Pa_survivorat_s_p1)))

                    ; #17942: <==negation-removal== 65171 (pos)
                    (not (Pa_not_msg_p1))

                    ; #31599: <==unclosure== 38517 (neg)
                    (when (and (not (at_b_p1)))
                          (not (Bb_survivorat_s_p1)))

                    ; #33196: <==unclosure== 82258 (neg)
                    (when (and (not (at_c_p1)))
                          (not (Bc_survivorat_s_p1)))

                    ; #36359: <==negation-removal== 62658 (pos)
                    (when (and (not_at_a_p1))
                          (not (Ba_survivorat_s_p1)))

                    ; #38517: <==uncertain_firing== 15436 (pos)
                    (when (and (not (at_b_p1)))
                          (not (Pb_survivorat_s_p1)))

                    ; #52706: <==negation-removal== 87255 (pos)
                    (not (not_msg_p1))

                    ; #53586: <==negation-removal== 83854 (pos)
                    (not (Bb_not_msg_p1))

                    ; #58048: <==negation-removal== 56144 (pos)
                    (when (and (not_at_c_p1))
                          (not (Bc_survivorat_s_p1)))

                    ; #64880: <==negation-removal== 26893 (pos)
                    (not (Pb_not_msg_p1))

                    ; #73651: <==unclosure== 13406 (neg)
                    (when (and (not (at_a_p1)))
                          (not (Ba_survivorat_s_p1)))

                    ; #77034: <==negation-removal== 15436 (pos)
                    (when (and (not_at_b_p1))
                          (not (Pb_survivorat_s_p1)))

                    ; #82258: <==uncertain_firing== 91846 (pos)
                    (when (and (not (at_c_p1)))
                          (not (Pc_survivorat_s_p1)))

                    ; #84042: <==negation-removal== 44954 (pos)
                    (when (and (not_at_b_p1))
                          (not (Bb_survivorat_s_p1)))

                    ; #97366: <==negation-removal== 91846 (pos)
                    (when (and (not_at_c_p1))
                          (not (Pc_survivorat_s_p1)))))

    (:action badcommsurvivor_p1_c_s
        :precondition (and (Pc_survivorat_s_p1)
                           (Bc_survivorat_s_p1)
                           (at_c_p1))
        :effect (and
                    ; #15436: origin
                    (when (and (not_at_b_p1))
                          (Bb_not_survivorat_s_p1))

                    ; #23040: <==closure== 65171 (pos)
                    (Pa_msg_p1)

                    ; #26893: <==commonly_known== 87255 (pos)
                    (Bb_msg_p1)

                    ; #28388: origin
                    (when (and (not_at_a_p1))
                          (Ba_not_survivorat_s_p1))

                    ; #44954: <==closure== 15436 (pos)
                    (when (and (not_at_b_p1))
                          (Pb_not_survivorat_s_p1))

                    ; #56144: <==closure== 91846 (pos)
                    (when (and (not_at_c_p1))
                          (Pc_not_survivorat_s_p1))

                    ; #62658: <==closure== 28388 (pos)
                    (when (and (not_at_a_p1))
                          (Pa_not_survivorat_s_p1))

                    ; #65171: <==commonly_known== 87255 (pos)
                    (Ba_msg_p1)

                    ; #76384: <==commonly_known== 87255 (pos)
                    (Bc_msg_p1)

                    ; #83854: <==closure== 26893 (pos)
                    (Pb_msg_p1)

                    ; #87168: <==closure== 76384 (pos)
                    (Pc_msg_p1)

                    ; #87255: origin
                    (msg_p1)

                    ; #91846: origin
                    (when (and (not_at_c_p1))
                          (Bc_not_survivorat_s_p1))

                    ; #10035: <==negation-removal== 23040 (pos)
                    (not (Ba_not_msg_p1))

                    ; #10812: <==negation-removal== 87168 (pos)
                    (not (Bc_not_msg_p1))

                    ; #11426: <==negation-removal== 76384 (pos)
                    (not (Pc_not_msg_p1))

                    ; #11446: <==negation-removal== 28388 (pos)
                    (when (and (not_at_a_p1))
                          (not (Pa_survivorat_s_p1)))

                    ; #13406: <==uncertain_firing== 28388 (pos)
                    (when (and (not (at_a_p1)))
                          (not (Pa_survivorat_s_p1)))

                    ; #17942: <==negation-removal== 65171 (pos)
                    (not (Pa_not_msg_p1))

                    ; #31599: <==unclosure== 38517 (neg)
                    (when (and (not (at_b_p1)))
                          (not (Bb_survivorat_s_p1)))

                    ; #33196: <==unclosure== 82258 (neg)
                    (when (and (not (at_c_p1)))
                          (not (Bc_survivorat_s_p1)))

                    ; #36359: <==negation-removal== 62658 (pos)
                    (when (and (not_at_a_p1))
                          (not (Ba_survivorat_s_p1)))

                    ; #38517: <==uncertain_firing== 15436 (pos)
                    (when (and (not (at_b_p1)))
                          (not (Pb_survivorat_s_p1)))

                    ; #52706: <==negation-removal== 87255 (pos)
                    (not (not_msg_p1))

                    ; #53586: <==negation-removal== 83854 (pos)
                    (not (Bb_not_msg_p1))

                    ; #58048: <==negation-removal== 56144 (pos)
                    (when (and (not_at_c_p1))
                          (not (Bc_survivorat_s_p1)))

                    ; #64880: <==negation-removal== 26893 (pos)
                    (not (Pb_not_msg_p1))

                    ; #73651: <==unclosure== 13406 (neg)
                    (when (and (not (at_a_p1)))
                          (not (Ba_survivorat_s_p1)))

                    ; #77034: <==negation-removal== 15436 (pos)
                    (when (and (not_at_b_p1))
                          (not (Pb_survivorat_s_p1)))

                    ; #82258: <==uncertain_firing== 91846 (pos)
                    (when (and (not (at_c_p1)))
                          (not (Pc_survivorat_s_p1)))

                    ; #84042: <==negation-removal== 44954 (pos)
                    (when (and (not_at_b_p1))
                          (not (Bb_survivorat_s_p1)))

                    ; #97366: <==negation-removal== 91846 (pos)
                    (when (and (not_at_c_p1))
                          (not (Pc_survivorat_s_p1)))))

    (:action badcommsurvivor_p2_a_s
        :precondition (and (at_a_p2)
                           (Ba_survivorat_s_p2)
                           (Pa_survivorat_s_p2))
        :effect (and
                    ; #16797: <==closure== 65698 (pos)
                    (when (and (not_at_c_p2))
                          (Pc_not_survivorat_s_p2))

                    ; #22701: <==closure== 87202 (pos)
                    (when (and (not_at_b_p2))
                          (Pb_not_survivorat_s_p2))

                    ; #36251: <==closure== 88526 (pos)
                    (Pc_msg_p2)

                    ; #41185: <==commonly_known== 88062 (pos)
                    (Bb_msg_p2)

                    ; #41244: <==closure== 55403 (pos)
                    (Pa_msg_p2)

                    ; #49594: origin
                    (when (and (not_at_a_p2))
                          (Ba_not_survivorat_s_p2))

                    ; #51555: <==closure== 41185 (pos)
                    (Pb_msg_p2)

                    ; #55403: <==commonly_known== 88062 (pos)
                    (Ba_msg_p2)

                    ; #57533: <==closure== 49594 (pos)
                    (when (and (not_at_a_p2))
                          (Pa_not_survivorat_s_p2))

                    ; #65698: origin
                    (when (and (not_at_c_p2))
                          (Bc_not_survivorat_s_p2))

                    ; #87202: origin
                    (when (and (not_at_b_p2))
                          (Bb_not_survivorat_s_p2))

                    ; #88062: origin
                    (msg_p2)

                    ; #88526: <==commonly_known== 88062 (pos)
                    (Bc_msg_p2)

                    ; #21872: <==negation-removal== 65698 (pos)
                    (when (and (not_at_c_p2))
                          (not (Pc_survivorat_s_p2)))

                    ; #34731: <==negation-removal== 57533 (pos)
                    (when (and (not_at_a_p2))
                          (not (Ba_survivorat_s_p2)))

                    ; #35016: <==negation-removal== 88526 (pos)
                    (not (Pc_not_msg_p2))

                    ; #44138: <==negation-removal== 55403 (pos)
                    (not (Pa_not_msg_p2))

                    ; #45148: <==negation-removal== 88062 (pos)
                    (not (not_msg_p2))

                    ; #49483: <==negation-removal== 16797 (pos)
                    (when (and (not_at_c_p2))
                          (not (Bc_survivorat_s_p2)))

                    ; #50086: <==negation-removal== 49594 (pos)
                    (when (and (not_at_a_p2))
                          (not (Pa_survivorat_s_p2)))

                    ; #52185: <==negation-removal== 41244 (pos)
                    (not (Ba_not_msg_p2))

                    ; #67653: <==uncertain_firing== 65698 (pos)
                    (when (and (not (at_c_p2)))
                          (not (Pc_survivorat_s_p2)))

                    ; #67654: <==uncertain_firing== 87202 (pos)
                    (when (and (not (at_b_p2)))
                          (not (Pb_survivorat_s_p2)))

                    ; #67682: <==unclosure== 68292 (neg)
                    (when (and (not (at_a_p2)))
                          (not (Ba_survivorat_s_p2)))

                    ; #68292: <==uncertain_firing== 49594 (pos)
                    (when (and (not (at_a_p2)))
                          (not (Pa_survivorat_s_p2)))

                    ; #69156: <==negation-removal== 41185 (pos)
                    (not (Pb_not_msg_p2))

                    ; #75886: <==negation-removal== 87202 (pos)
                    (when (and (not_at_b_p2))
                          (not (Pb_survivorat_s_p2)))

                    ; #77153: <==negation-removal== 22701 (pos)
                    (when (and (not_at_b_p2))
                          (not (Bb_survivorat_s_p2)))

                    ; #80766: <==negation-removal== 36251 (pos)
                    (not (Bc_not_msg_p2))

                    ; #86425: <==unclosure== 67654 (neg)
                    (when (and (not (at_b_p2)))
                          (not (Bb_survivorat_s_p2)))

                    ; #91178: <==negation-removal== 51555 (pos)
                    (not (Bb_not_msg_p2))

                    ; #91399: <==unclosure== 67653 (neg)
                    (when (and (not (at_c_p2)))
                          (not (Bc_survivorat_s_p2)))))

    (:action badcommsurvivor_p2_b_s
        :precondition (and (Bb_survivorat_s_p2)
                           (at_b_p2)
                           (Pb_survivorat_s_p2))
        :effect (and
                    ; #16797: <==closure== 65698 (pos)
                    (when (and (not_at_c_p2))
                          (Pc_not_survivorat_s_p2))

                    ; #22701: <==closure== 87202 (pos)
                    (when (and (not_at_b_p2))
                          (Pb_not_survivorat_s_p2))

                    ; #36251: <==closure== 88526 (pos)
                    (Pc_msg_p2)

                    ; #41185: <==commonly_known== 88062 (pos)
                    (Bb_msg_p2)

                    ; #41244: <==closure== 55403 (pos)
                    (Pa_msg_p2)

                    ; #49594: origin
                    (when (and (not_at_a_p2))
                          (Ba_not_survivorat_s_p2))

                    ; #51555: <==closure== 41185 (pos)
                    (Pb_msg_p2)

                    ; #55403: <==commonly_known== 88062 (pos)
                    (Ba_msg_p2)

                    ; #57533: <==closure== 49594 (pos)
                    (when (and (not_at_a_p2))
                          (Pa_not_survivorat_s_p2))

                    ; #65698: origin
                    (when (and (not_at_c_p2))
                          (Bc_not_survivorat_s_p2))

                    ; #87202: origin
                    (when (and (not_at_b_p2))
                          (Bb_not_survivorat_s_p2))

                    ; #88062: origin
                    (msg_p2)

                    ; #88526: <==commonly_known== 88062 (pos)
                    (Bc_msg_p2)

                    ; #21872: <==negation-removal== 65698 (pos)
                    (when (and (not_at_c_p2))
                          (not (Pc_survivorat_s_p2)))

                    ; #34731: <==negation-removal== 57533 (pos)
                    (when (and (not_at_a_p2))
                          (not (Ba_survivorat_s_p2)))

                    ; #35016: <==negation-removal== 88526 (pos)
                    (not (Pc_not_msg_p2))

                    ; #44138: <==negation-removal== 55403 (pos)
                    (not (Pa_not_msg_p2))

                    ; #45148: <==negation-removal== 88062 (pos)
                    (not (not_msg_p2))

                    ; #49483: <==negation-removal== 16797 (pos)
                    (when (and (not_at_c_p2))
                          (not (Bc_survivorat_s_p2)))

                    ; #50086: <==negation-removal== 49594 (pos)
                    (when (and (not_at_a_p2))
                          (not (Pa_survivorat_s_p2)))

                    ; #52185: <==negation-removal== 41244 (pos)
                    (not (Ba_not_msg_p2))

                    ; #67653: <==uncertain_firing== 65698 (pos)
                    (when (and (not (at_c_p2)))
                          (not (Pc_survivorat_s_p2)))

                    ; #67654: <==uncertain_firing== 87202 (pos)
                    (when (and (not (at_b_p2)))
                          (not (Pb_survivorat_s_p2)))

                    ; #67682: <==unclosure== 68292 (neg)
                    (when (and (not (at_a_p2)))
                          (not (Ba_survivorat_s_p2)))

                    ; #68292: <==uncertain_firing== 49594 (pos)
                    (when (and (not (at_a_p2)))
                          (not (Pa_survivorat_s_p2)))

                    ; #69156: <==negation-removal== 41185 (pos)
                    (not (Pb_not_msg_p2))

                    ; #75886: <==negation-removal== 87202 (pos)
                    (when (and (not_at_b_p2))
                          (not (Pb_survivorat_s_p2)))

                    ; #77153: <==negation-removal== 22701 (pos)
                    (when (and (not_at_b_p2))
                          (not (Bb_survivorat_s_p2)))

                    ; #80766: <==negation-removal== 36251 (pos)
                    (not (Bc_not_msg_p2))

                    ; #86425: <==unclosure== 67654 (neg)
                    (when (and (not (at_b_p2)))
                          (not (Bb_survivorat_s_p2)))

                    ; #91178: <==negation-removal== 51555 (pos)
                    (not (Bb_not_msg_p2))

                    ; #91399: <==unclosure== 67653 (neg)
                    (when (and (not (at_c_p2)))
                          (not (Bc_survivorat_s_p2)))))

    (:action badcommsurvivor_p2_c_s
        :precondition (and (Pc_survivorat_s_p2)
                           (Bc_survivorat_s_p2)
                           (at_c_p2))
        :effect (and
                    ; #16797: <==closure== 65698 (pos)
                    (when (and (not_at_c_p2))
                          (Pc_not_survivorat_s_p2))

                    ; #22701: <==closure== 87202 (pos)
                    (when (and (not_at_b_p2))
                          (Pb_not_survivorat_s_p2))

                    ; #36251: <==closure== 88526 (pos)
                    (Pc_msg_p2)

                    ; #41185: <==commonly_known== 88062 (pos)
                    (Bb_msg_p2)

                    ; #41244: <==closure== 55403 (pos)
                    (Pa_msg_p2)

                    ; #49594: origin
                    (when (and (not_at_a_p2))
                          (Ba_not_survivorat_s_p2))

                    ; #51555: <==closure== 41185 (pos)
                    (Pb_msg_p2)

                    ; #55403: <==commonly_known== 88062 (pos)
                    (Ba_msg_p2)

                    ; #57533: <==closure== 49594 (pos)
                    (when (and (not_at_a_p2))
                          (Pa_not_survivorat_s_p2))

                    ; #65698: origin
                    (when (and (not_at_c_p2))
                          (Bc_not_survivorat_s_p2))

                    ; #87202: origin
                    (when (and (not_at_b_p2))
                          (Bb_not_survivorat_s_p2))

                    ; #88062: origin
                    (msg_p2)

                    ; #88526: <==commonly_known== 88062 (pos)
                    (Bc_msg_p2)

                    ; #21872: <==negation-removal== 65698 (pos)
                    (when (and (not_at_c_p2))
                          (not (Pc_survivorat_s_p2)))

                    ; #34731: <==negation-removal== 57533 (pos)
                    (when (and (not_at_a_p2))
                          (not (Ba_survivorat_s_p2)))

                    ; #35016: <==negation-removal== 88526 (pos)
                    (not (Pc_not_msg_p2))

                    ; #44138: <==negation-removal== 55403 (pos)
                    (not (Pa_not_msg_p2))

                    ; #45148: <==negation-removal== 88062 (pos)
                    (not (not_msg_p2))

                    ; #49483: <==negation-removal== 16797 (pos)
                    (when (and (not_at_c_p2))
                          (not (Bc_survivorat_s_p2)))

                    ; #50086: <==negation-removal== 49594 (pos)
                    (when (and (not_at_a_p2))
                          (not (Pa_survivorat_s_p2)))

                    ; #52185: <==negation-removal== 41244 (pos)
                    (not (Ba_not_msg_p2))

                    ; #67653: <==uncertain_firing== 65698 (pos)
                    (when (and (not (at_c_p2)))
                          (not (Pc_survivorat_s_p2)))

                    ; #67654: <==uncertain_firing== 87202 (pos)
                    (when (and (not (at_b_p2)))
                          (not (Pb_survivorat_s_p2)))

                    ; #67682: <==unclosure== 68292 (neg)
                    (when (and (not (at_a_p2)))
                          (not (Ba_survivorat_s_p2)))

                    ; #68292: <==uncertain_firing== 49594 (pos)
                    (when (and (not (at_a_p2)))
                          (not (Pa_survivorat_s_p2)))

                    ; #69156: <==negation-removal== 41185 (pos)
                    (not (Pb_not_msg_p2))

                    ; #75886: <==negation-removal== 87202 (pos)
                    (when (and (not_at_b_p2))
                          (not (Pb_survivorat_s_p2)))

                    ; #77153: <==negation-removal== 22701 (pos)
                    (when (and (not_at_b_p2))
                          (not (Bb_survivorat_s_p2)))

                    ; #80766: <==negation-removal== 36251 (pos)
                    (not (Bc_not_msg_p2))

                    ; #86425: <==unclosure== 67654 (neg)
                    (when (and (not (at_b_p2)))
                          (not (Bb_survivorat_s_p2)))

                    ; #91178: <==negation-removal== 51555 (pos)
                    (not (Bb_not_msg_p2))

                    ; #91399: <==unclosure== 67653 (neg)
                    (when (and (not (at_c_p2)))
                          (not (Bc_survivorat_s_p2)))))

    (:action badcommsurvivor_p3_a_s
        :precondition (and (Ba_survivorat_s_p3)
                           (Pa_survivorat_s_p3)
                           (at_a_p3))
        :effect (and
                    ; #18019: <==closure== 24966 (pos)
                    (Pc_msg_p3)

                    ; #24966: <==commonly_known== 48833 (pos)
                    (Bc_msg_p3)

                    ; #48833: origin
                    (msg_p3)

                    ; #51415: <==closure== 72558 (pos)
                    (when (and (not_at_c_p3))
                          (Pc_not_survivorat_s_p3))

                    ; #51458: <==commonly_known== 48833 (pos)
                    (Bb_msg_p3)

                    ; #69812: <==closure== 74648 (pos)
                    (Pa_msg_p3)

                    ; #72558: origin
                    (when (and (not_at_c_p3))
                          (Bc_not_survivorat_s_p3))

                    ; #74648: <==commonly_known== 48833 (pos)
                    (Ba_msg_p3)

                    ; #77571: <==closure== 79651 (pos)
                    (when (and (not_at_b_p3))
                          (Pb_not_survivorat_s_p3))

                    ; #79651: origin
                    (when (and (not_at_b_p3))
                          (Bb_not_survivorat_s_p3))

                    ; #79902: <==closure== 51458 (pos)
                    (Pb_msg_p3)

                    ; #82199: origin
                    (when (and (not_at_a_p3))
                          (Ba_not_survivorat_s_p3))

                    ; #84578: <==closure== 82199 (pos)
                    (when (and (not_at_a_p3))
                          (Pa_not_survivorat_s_p3))

                    ; #13407: <==negation-removal== 84578 (pos)
                    (when (and (not_at_a_p3))
                          (not (Ba_survivorat_s_p3)))

                    ; #23694: <==negation-removal== 74648 (pos)
                    (not (Pa_not_msg_p3))

                    ; #30735: <==negation-removal== 51415 (pos)
                    (when (and (not_at_c_p3))
                          (not (Bc_survivorat_s_p3)))

                    ; #33049: <==negation-removal== 18019 (pos)
                    (not (Bc_not_msg_p3))

                    ; #35972: <==negation-removal== 48833 (pos)
                    (not (not_msg_p3))

                    ; #35995: <==uncertain_firing== 72558 (pos)
                    (when (and (not (at_c_p3)))
                          (not (Pc_survivorat_s_p3)))

                    ; #47252: <==negation-removal== 24966 (pos)
                    (not (Pc_not_msg_p3))

                    ; #56376: <==uncertain_firing== 79651 (pos)
                    (when (and (not (at_b_p3)))
                          (not (Pb_survivorat_s_p3)))

                    ; #59108: <==negation-removal== 79902 (pos)
                    (not (Bb_not_msg_p3))

                    ; #63040: <==uncertain_firing== 82199 (pos)
                    (when (and (not (at_a_p3)))
                          (not (Pa_survivorat_s_p3)))

                    ; #63933: <==negation-removal== 69812 (pos)
                    (not (Ba_not_msg_p3))

                    ; #64017: <==unclosure== 56376 (neg)
                    (when (and (not (at_b_p3)))
                          (not (Bb_survivorat_s_p3)))

                    ; #73853: <==negation-removal== 79651 (pos)
                    (when (and (not_at_b_p3))
                          (not (Pb_survivorat_s_p3)))

                    ; #74723: <==negation-removal== 82199 (pos)
                    (when (and (not_at_a_p3))
                          (not (Pa_survivorat_s_p3)))

                    ; #80886: <==negation-removal== 77571 (pos)
                    (when (and (not_at_b_p3))
                          (not (Bb_survivorat_s_p3)))

                    ; #86801: <==negation-removal== 72558 (pos)
                    (when (and (not_at_c_p3))
                          (not (Pc_survivorat_s_p3)))

                    ; #90730: <==negation-removal== 51458 (pos)
                    (not (Pb_not_msg_p3))

                    ; #90960: <==unclosure== 63040 (neg)
                    (when (and (not (at_a_p3)))
                          (not (Ba_survivorat_s_p3)))

                    ; #91784: <==unclosure== 35995 (neg)
                    (when (and (not (at_c_p3)))
                          (not (Bc_survivorat_s_p3)))))

    (:action badcommsurvivor_p3_b_s
        :precondition (and (Bb_survivorat_s_p3)
                           (Pb_survivorat_s_p3)
                           (at_b_p3))
        :effect (and
                    ; #18019: <==closure== 24966 (pos)
                    (Pc_msg_p3)

                    ; #24966: <==commonly_known== 48833 (pos)
                    (Bc_msg_p3)

                    ; #48833: origin
                    (msg_p3)

                    ; #51415: <==closure== 72558 (pos)
                    (when (and (not_at_c_p3))
                          (Pc_not_survivorat_s_p3))

                    ; #51458: <==commonly_known== 48833 (pos)
                    (Bb_msg_p3)

                    ; #69812: <==closure== 74648 (pos)
                    (Pa_msg_p3)

                    ; #72558: origin
                    (when (and (not_at_c_p3))
                          (Bc_not_survivorat_s_p3))

                    ; #74648: <==commonly_known== 48833 (pos)
                    (Ba_msg_p3)

                    ; #77571: <==closure== 79651 (pos)
                    (when (and (not_at_b_p3))
                          (Pb_not_survivorat_s_p3))

                    ; #79651: origin
                    (when (and (not_at_b_p3))
                          (Bb_not_survivorat_s_p3))

                    ; #79902: <==closure== 51458 (pos)
                    (Pb_msg_p3)

                    ; #82199: origin
                    (when (and (not_at_a_p3))
                          (Ba_not_survivorat_s_p3))

                    ; #84578: <==closure== 82199 (pos)
                    (when (and (not_at_a_p3))
                          (Pa_not_survivorat_s_p3))

                    ; #13407: <==negation-removal== 84578 (pos)
                    (when (and (not_at_a_p3))
                          (not (Ba_survivorat_s_p3)))

                    ; #23694: <==negation-removal== 74648 (pos)
                    (not (Pa_not_msg_p3))

                    ; #30735: <==negation-removal== 51415 (pos)
                    (when (and (not_at_c_p3))
                          (not (Bc_survivorat_s_p3)))

                    ; #33049: <==negation-removal== 18019 (pos)
                    (not (Bc_not_msg_p3))

                    ; #35972: <==negation-removal== 48833 (pos)
                    (not (not_msg_p3))

                    ; #35995: <==uncertain_firing== 72558 (pos)
                    (when (and (not (at_c_p3)))
                          (not (Pc_survivorat_s_p3)))

                    ; #47252: <==negation-removal== 24966 (pos)
                    (not (Pc_not_msg_p3))

                    ; #56376: <==uncertain_firing== 79651 (pos)
                    (when (and (not (at_b_p3)))
                          (not (Pb_survivorat_s_p3)))

                    ; #59108: <==negation-removal== 79902 (pos)
                    (not (Bb_not_msg_p3))

                    ; #63040: <==uncertain_firing== 82199 (pos)
                    (when (and (not (at_a_p3)))
                          (not (Pa_survivorat_s_p3)))

                    ; #63933: <==negation-removal== 69812 (pos)
                    (not (Ba_not_msg_p3))

                    ; #64017: <==unclosure== 56376 (neg)
                    (when (and (not (at_b_p3)))
                          (not (Bb_survivorat_s_p3)))

                    ; #73853: <==negation-removal== 79651 (pos)
                    (when (and (not_at_b_p3))
                          (not (Pb_survivorat_s_p3)))

                    ; #74723: <==negation-removal== 82199 (pos)
                    (when (and (not_at_a_p3))
                          (not (Pa_survivorat_s_p3)))

                    ; #80886: <==negation-removal== 77571 (pos)
                    (when (and (not_at_b_p3))
                          (not (Bb_survivorat_s_p3)))

                    ; #86801: <==negation-removal== 72558 (pos)
                    (when (and (not_at_c_p3))
                          (not (Pc_survivorat_s_p3)))

                    ; #90730: <==negation-removal== 51458 (pos)
                    (not (Pb_not_msg_p3))

                    ; #90960: <==unclosure== 63040 (neg)
                    (when (and (not (at_a_p3)))
                          (not (Ba_survivorat_s_p3)))

                    ; #91784: <==unclosure== 35995 (neg)
                    (when (and (not (at_c_p3)))
                          (not (Bc_survivorat_s_p3)))))

    (:action badcommsurvivor_p3_c_s
        :precondition (and (at_c_p3)
                           (Bc_survivorat_s_p3)
                           (Pc_survivorat_s_p3))
        :effect (and
                    ; #18019: <==closure== 24966 (pos)
                    (Pc_msg_p3)

                    ; #24966: <==commonly_known== 48833 (pos)
                    (Bc_msg_p3)

                    ; #48833: origin
                    (msg_p3)

                    ; #51415: <==closure== 72558 (pos)
                    (when (and (not_at_c_p3))
                          (Pc_not_survivorat_s_p3))

                    ; #51458: <==commonly_known== 48833 (pos)
                    (Bb_msg_p3)

                    ; #69812: <==closure== 74648 (pos)
                    (Pa_msg_p3)

                    ; #72558: origin
                    (when (and (not_at_c_p3))
                          (Bc_not_survivorat_s_p3))

                    ; #74648: <==commonly_known== 48833 (pos)
                    (Ba_msg_p3)

                    ; #77571: <==closure== 79651 (pos)
                    (when (and (not_at_b_p3))
                          (Pb_not_survivorat_s_p3))

                    ; #79651: origin
                    (when (and (not_at_b_p3))
                          (Bb_not_survivorat_s_p3))

                    ; #79902: <==closure== 51458 (pos)
                    (Pb_msg_p3)

                    ; #82199: origin
                    (when (and (not_at_a_p3))
                          (Ba_not_survivorat_s_p3))

                    ; #84578: <==closure== 82199 (pos)
                    (when (and (not_at_a_p3))
                          (Pa_not_survivorat_s_p3))

                    ; #13407: <==negation-removal== 84578 (pos)
                    (when (and (not_at_a_p3))
                          (not (Ba_survivorat_s_p3)))

                    ; #23694: <==negation-removal== 74648 (pos)
                    (not (Pa_not_msg_p3))

                    ; #30735: <==negation-removal== 51415 (pos)
                    (when (and (not_at_c_p3))
                          (not (Bc_survivorat_s_p3)))

                    ; #33049: <==negation-removal== 18019 (pos)
                    (not (Bc_not_msg_p3))

                    ; #35972: <==negation-removal== 48833 (pos)
                    (not (not_msg_p3))

                    ; #35995: <==uncertain_firing== 72558 (pos)
                    (when (and (not (at_c_p3)))
                          (not (Pc_survivorat_s_p3)))

                    ; #47252: <==negation-removal== 24966 (pos)
                    (not (Pc_not_msg_p3))

                    ; #56376: <==uncertain_firing== 79651 (pos)
                    (when (and (not (at_b_p3)))
                          (not (Pb_survivorat_s_p3)))

                    ; #59108: <==negation-removal== 79902 (pos)
                    (not (Bb_not_msg_p3))

                    ; #63040: <==uncertain_firing== 82199 (pos)
                    (when (and (not (at_a_p3)))
                          (not (Pa_survivorat_s_p3)))

                    ; #63933: <==negation-removal== 69812 (pos)
                    (not (Ba_not_msg_p3))

                    ; #64017: <==unclosure== 56376 (neg)
                    (when (and (not (at_b_p3)))
                          (not (Bb_survivorat_s_p3)))

                    ; #73853: <==negation-removal== 79651 (pos)
                    (when (and (not_at_b_p3))
                          (not (Pb_survivorat_s_p3)))

                    ; #74723: <==negation-removal== 82199 (pos)
                    (when (and (not_at_a_p3))
                          (not (Pa_survivorat_s_p3)))

                    ; #80886: <==negation-removal== 77571 (pos)
                    (when (and (not_at_b_p3))
                          (not (Bb_survivorat_s_p3)))

                    ; #86801: <==negation-removal== 72558 (pos)
                    (when (and (not_at_c_p3))
                          (not (Pc_survivorat_s_p3)))

                    ; #90730: <==negation-removal== 51458 (pos)
                    (not (Pb_not_msg_p3))

                    ; #90960: <==unclosure== 63040 (neg)
                    (when (and (not (at_a_p3)))
                          (not (Ba_survivorat_s_p3)))

                    ; #91784: <==unclosure== 35995 (neg)
                    (when (and (not (at_c_p3)))
                          (not (Bc_survivorat_s_p3)))))

    (:action badcommsurvivor_p4_a_s
        :precondition (and (Ba_survivorat_s_p4)
                           (at_a_p4)
                           (Pa_survivorat_s_p4))
        :effect (and
                    ; #14056: origin
                    (msg_p4)

                    ; #16363: origin
                    (when (and (not_at_c_p4))
                          (Bc_not_survivorat_s_p4))

                    ; #20941: <==closure== 50975 (pos)
                    (Pa_msg_p4)

                    ; #30849: <==commonly_known== 14056 (pos)
                    (Bb_msg_p4)

                    ; #32340: origin
                    (when (and (not_at_b_p4))
                          (Bb_not_survivorat_s_p4))

                    ; #37790: <==commonly_known== 14056 (pos)
                    (Bc_msg_p4)

                    ; #42982: <==closure== 37790 (pos)
                    (Pc_msg_p4)

                    ; #49881: <==closure== 32340 (pos)
                    (when (and (not_at_b_p4))
                          (Pb_not_survivorat_s_p4))

                    ; #50136: <==closure== 30849 (pos)
                    (Pb_msg_p4)

                    ; #50801: origin
                    (when (and (not_at_a_p4))
                          (Ba_not_survivorat_s_p4))

                    ; #50975: <==commonly_known== 14056 (pos)
                    (Ba_msg_p4)

                    ; #51530: <==closure== 16363 (pos)
                    (when (and (not_at_c_p4))
                          (Pc_not_survivorat_s_p4))

                    ; #61393: <==closure== 50801 (pos)
                    (when (and (not_at_a_p4))
                          (Pa_not_survivorat_s_p4))

                    ; #22680: <==uncertain_firing== 32340 (pos)
                    (when (and (not (at_b_p4)))
                          (not (Pb_survivorat_s_p4)))

                    ; #31026: <==negation-removal== 16363 (pos)
                    (when (and (not_at_c_p4))
                          (not (Pc_survivorat_s_p4)))

                    ; #40207: <==negation-removal== 32340 (pos)
                    (when (and (not_at_b_p4))
                          (not (Pb_survivorat_s_p4)))

                    ; #43025: <==negation-removal== 50136 (pos)
                    (not (Bb_not_msg_p4))

                    ; #43942: <==negation-removal== 49881 (pos)
                    (when (and (not_at_b_p4))
                          (not (Bb_survivorat_s_p4)))

                    ; #51440: <==unclosure== 86571 (neg)
                    (when (and (not (at_a_p4)))
                          (not (Ba_survivorat_s_p4)))

                    ; #51926: <==negation-removal== 30849 (pos)
                    (not (Pb_not_msg_p4))

                    ; #57022: <==negation-removal== 50975 (pos)
                    (not (Pa_not_msg_p4))

                    ; #62020: <==unclosure== 87453 (neg)
                    (when (and (not (at_c_p4)))
                          (not (Bc_survivorat_s_p4)))

                    ; #63472: <==negation-removal== 61393 (pos)
                    (when (and (not_at_a_p4))
                          (not (Ba_survivorat_s_p4)))

                    ; #67781: <==negation-removal== 42982 (pos)
                    (not (Bc_not_msg_p4))

                    ; #73354: <==unclosure== 22680 (neg)
                    (when (and (not (at_b_p4)))
                          (not (Bb_survivorat_s_p4)))

                    ; #74571: <==negation-removal== 50801 (pos)
                    (when (and (not_at_a_p4))
                          (not (Pa_survivorat_s_p4)))

                    ; #76631: <==negation-removal== 20941 (pos)
                    (not (Ba_not_msg_p4))

                    ; #86571: <==uncertain_firing== 50801 (pos)
                    (when (and (not (at_a_p4)))
                          (not (Pa_survivorat_s_p4)))

                    ; #86893: <==negation-removal== 14056 (pos)
                    (not (not_msg_p4))

                    ; #87453: <==uncertain_firing== 16363 (pos)
                    (when (and (not (at_c_p4)))
                          (not (Pc_survivorat_s_p4)))

                    ; #89129: <==negation-removal== 51530 (pos)
                    (when (and (not_at_c_p4))
                          (not (Bc_survivorat_s_p4)))

                    ; #91785: <==negation-removal== 37790 (pos)
                    (not (Pc_not_msg_p4))))

    (:action badcommsurvivor_p4_b_s
        :precondition (and (at_b_p4)
                           (Bb_survivorat_s_p4)
                           (Pb_survivorat_s_p4))
        :effect (and
                    ; #14056: origin
                    (msg_p4)

                    ; #16363: origin
                    (when (and (not_at_c_p4))
                          (Bc_not_survivorat_s_p4))

                    ; #20941: <==closure== 50975 (pos)
                    (Pa_msg_p4)

                    ; #30849: <==commonly_known== 14056 (pos)
                    (Bb_msg_p4)

                    ; #32340: origin
                    (when (and (not_at_b_p4))
                          (Bb_not_survivorat_s_p4))

                    ; #37790: <==commonly_known== 14056 (pos)
                    (Bc_msg_p4)

                    ; #42982: <==closure== 37790 (pos)
                    (Pc_msg_p4)

                    ; #49881: <==closure== 32340 (pos)
                    (when (and (not_at_b_p4))
                          (Pb_not_survivorat_s_p4))

                    ; #50136: <==closure== 30849 (pos)
                    (Pb_msg_p4)

                    ; #50801: origin
                    (when (and (not_at_a_p4))
                          (Ba_not_survivorat_s_p4))

                    ; #50975: <==commonly_known== 14056 (pos)
                    (Ba_msg_p4)

                    ; #51530: <==closure== 16363 (pos)
                    (when (and (not_at_c_p4))
                          (Pc_not_survivorat_s_p4))

                    ; #61393: <==closure== 50801 (pos)
                    (when (and (not_at_a_p4))
                          (Pa_not_survivorat_s_p4))

                    ; #22680: <==uncertain_firing== 32340 (pos)
                    (when (and (not (at_b_p4)))
                          (not (Pb_survivorat_s_p4)))

                    ; #31026: <==negation-removal== 16363 (pos)
                    (when (and (not_at_c_p4))
                          (not (Pc_survivorat_s_p4)))

                    ; #40207: <==negation-removal== 32340 (pos)
                    (when (and (not_at_b_p4))
                          (not (Pb_survivorat_s_p4)))

                    ; #43025: <==negation-removal== 50136 (pos)
                    (not (Bb_not_msg_p4))

                    ; #43942: <==negation-removal== 49881 (pos)
                    (when (and (not_at_b_p4))
                          (not (Bb_survivorat_s_p4)))

                    ; #51440: <==unclosure== 86571 (neg)
                    (when (and (not (at_a_p4)))
                          (not (Ba_survivorat_s_p4)))

                    ; #51926: <==negation-removal== 30849 (pos)
                    (not (Pb_not_msg_p4))

                    ; #57022: <==negation-removal== 50975 (pos)
                    (not (Pa_not_msg_p4))

                    ; #62020: <==unclosure== 87453 (neg)
                    (when (and (not (at_c_p4)))
                          (not (Bc_survivorat_s_p4)))

                    ; #63472: <==negation-removal== 61393 (pos)
                    (when (and (not_at_a_p4))
                          (not (Ba_survivorat_s_p4)))

                    ; #67781: <==negation-removal== 42982 (pos)
                    (not (Bc_not_msg_p4))

                    ; #73354: <==unclosure== 22680 (neg)
                    (when (and (not (at_b_p4)))
                          (not (Bb_survivorat_s_p4)))

                    ; #74571: <==negation-removal== 50801 (pos)
                    (when (and (not_at_a_p4))
                          (not (Pa_survivorat_s_p4)))

                    ; #76631: <==negation-removal== 20941 (pos)
                    (not (Ba_not_msg_p4))

                    ; #86571: <==uncertain_firing== 50801 (pos)
                    (when (and (not (at_a_p4)))
                          (not (Pa_survivorat_s_p4)))

                    ; #86893: <==negation-removal== 14056 (pos)
                    (not (not_msg_p4))

                    ; #87453: <==uncertain_firing== 16363 (pos)
                    (when (and (not (at_c_p4)))
                          (not (Pc_survivorat_s_p4)))

                    ; #89129: <==negation-removal== 51530 (pos)
                    (when (and (not_at_c_p4))
                          (not (Bc_survivorat_s_p4)))

                    ; #91785: <==negation-removal== 37790 (pos)
                    (not (Pc_not_msg_p4))))

    (:action badcommsurvivor_p4_c_s
        :precondition (and (Bc_survivorat_s_p4)
                           (at_c_p4)
                           (Pc_survivorat_s_p4))
        :effect (and
                    ; #14056: origin
                    (msg_p4)

                    ; #16363: origin
                    (when (and (not_at_c_p4))
                          (Bc_not_survivorat_s_p4))

                    ; #20941: <==closure== 50975 (pos)
                    (Pa_msg_p4)

                    ; #30849: <==commonly_known== 14056 (pos)
                    (Bb_msg_p4)

                    ; #32340: origin
                    (when (and (not_at_b_p4))
                          (Bb_not_survivorat_s_p4))

                    ; #37790: <==commonly_known== 14056 (pos)
                    (Bc_msg_p4)

                    ; #42982: <==closure== 37790 (pos)
                    (Pc_msg_p4)

                    ; #49881: <==closure== 32340 (pos)
                    (when (and (not_at_b_p4))
                          (Pb_not_survivorat_s_p4))

                    ; #50136: <==closure== 30849 (pos)
                    (Pb_msg_p4)

                    ; #50801: origin
                    (when (and (not_at_a_p4))
                          (Ba_not_survivorat_s_p4))

                    ; #50975: <==commonly_known== 14056 (pos)
                    (Ba_msg_p4)

                    ; #51530: <==closure== 16363 (pos)
                    (when (and (not_at_c_p4))
                          (Pc_not_survivorat_s_p4))

                    ; #61393: <==closure== 50801 (pos)
                    (when (and (not_at_a_p4))
                          (Pa_not_survivorat_s_p4))

                    ; #22680: <==uncertain_firing== 32340 (pos)
                    (when (and (not (at_b_p4)))
                          (not (Pb_survivorat_s_p4)))

                    ; #31026: <==negation-removal== 16363 (pos)
                    (when (and (not_at_c_p4))
                          (not (Pc_survivorat_s_p4)))

                    ; #40207: <==negation-removal== 32340 (pos)
                    (when (and (not_at_b_p4))
                          (not (Pb_survivorat_s_p4)))

                    ; #43025: <==negation-removal== 50136 (pos)
                    (not (Bb_not_msg_p4))

                    ; #43942: <==negation-removal== 49881 (pos)
                    (when (and (not_at_b_p4))
                          (not (Bb_survivorat_s_p4)))

                    ; #51440: <==unclosure== 86571 (neg)
                    (when (and (not (at_a_p4)))
                          (not (Ba_survivorat_s_p4)))

                    ; #51926: <==negation-removal== 30849 (pos)
                    (not (Pb_not_msg_p4))

                    ; #57022: <==negation-removal== 50975 (pos)
                    (not (Pa_not_msg_p4))

                    ; #62020: <==unclosure== 87453 (neg)
                    (when (and (not (at_c_p4)))
                          (not (Bc_survivorat_s_p4)))

                    ; #63472: <==negation-removal== 61393 (pos)
                    (when (and (not_at_a_p4))
                          (not (Ba_survivorat_s_p4)))

                    ; #67781: <==negation-removal== 42982 (pos)
                    (not (Bc_not_msg_p4))

                    ; #73354: <==unclosure== 22680 (neg)
                    (when (and (not (at_b_p4)))
                          (not (Bb_survivorat_s_p4)))

                    ; #74571: <==negation-removal== 50801 (pos)
                    (when (and (not_at_a_p4))
                          (not (Pa_survivorat_s_p4)))

                    ; #76631: <==negation-removal== 20941 (pos)
                    (not (Ba_not_msg_p4))

                    ; #86571: <==uncertain_firing== 50801 (pos)
                    (when (and (not (at_a_p4)))
                          (not (Pa_survivorat_s_p4)))

                    ; #86893: <==negation-removal== 14056 (pos)
                    (not (not_msg_p4))

                    ; #87453: <==uncertain_firing== 16363 (pos)
                    (when (and (not (at_c_p4)))
                          (not (Pc_survivorat_s_p4)))

                    ; #89129: <==negation-removal== 51530 (pos)
                    (when (and (not_at_c_p4))
                          (not (Bc_survivorat_s_p4)))

                    ; #91785: <==negation-removal== 37790 (pos)
                    (not (Pc_not_msg_p4))))

    (:action badcommsurvivor_p5_a_s
        :precondition (and (at_a_p5)
                           (Ba_survivorat_s_p5)
                           (Pa_survivorat_s_p5))
        :effect (and
                    ; #10075: origin
                    (when (and (not_at_c_p5))
                          (Bc_not_survivorat_s_p5))

                    ; #15159: <==closure== 10075 (pos)
                    (when (and (not_at_c_p5))
                          (Pc_not_survivorat_s_p5))

                    ; #34174: <==closure== 58918 (pos)
                    (Pb_msg_p5)

                    ; #43568: <==commonly_known== 56449 (pos)
                    (Bc_msg_p5)

                    ; #49776: origin
                    (when (and (not_at_b_p5))
                          (Bb_not_survivorat_s_p5))

                    ; #54455: <==closure== 43568 (pos)
                    (Pc_msg_p5)

                    ; #56449: origin
                    (msg_p5)

                    ; #57898: <==commonly_known== 56449 (pos)
                    (Ba_msg_p5)

                    ; #58918: <==commonly_known== 56449 (pos)
                    (Bb_msg_p5)

                    ; #61067: <==closure== 49776 (pos)
                    (when (and (not_at_b_p5))
                          (Pb_not_survivorat_s_p5))

                    ; #70674: <==closure== 85901 (pos)
                    (when (and (not_at_a_p5))
                          (Pa_not_survivorat_s_p5))

                    ; #85901: origin
                    (when (and (not_at_a_p5))
                          (Ba_not_survivorat_s_p5))

                    ; #89002: <==closure== 57898 (pos)
                    (Pa_msg_p5)

                    ; #11506: <==negation-removal== 57898 (pos)
                    (not (Pa_not_msg_p5))

                    ; #13199: <==negation-removal== 43568 (pos)
                    (not (Pc_not_msg_p5))

                    ; #23850: <==negation-removal== 89002 (pos)
                    (not (Ba_not_msg_p5))

                    ; #24013: <==negation-removal== 58918 (pos)
                    (not (Pb_not_msg_p5))

                    ; #32838: <==negation-removal== 49776 (pos)
                    (when (and (not_at_b_p5))
                          (not (Pb_survivorat_s_p5)))

                    ; #36490: <==negation-removal== 15159 (pos)
                    (when (and (not_at_c_p5))
                          (not (Bc_survivorat_s_p5)))

                    ; #37044: <==uncertain_firing== 85901 (pos)
                    (when (and (not (at_a_p5)))
                          (not (Pa_survivorat_s_p5)))

                    ; #38908: <==unclosure== 47223 (neg)
                    (when (and (not (at_b_p5)))
                          (not (Bb_survivorat_s_p5)))

                    ; #38920: <==negation-removal== 70674 (pos)
                    (when (and (not_at_a_p5))
                          (not (Ba_survivorat_s_p5)))

                    ; #45465: <==negation-removal== 61067 (pos)
                    (when (and (not_at_b_p5))
                          (not (Bb_survivorat_s_p5)))

                    ; #46064: <==negation-removal== 34174 (pos)
                    (not (Bb_not_msg_p5))

                    ; #47223: <==uncertain_firing== 49776 (pos)
                    (when (and (not (at_b_p5)))
                          (not (Pb_survivorat_s_p5)))

                    ; #48347: <==negation-removal== 10075 (pos)
                    (when (and (not_at_c_p5))
                          (not (Pc_survivorat_s_p5)))

                    ; #50139: <==uncertain_firing== 10075 (pos)
                    (when (and (not (at_c_p5)))
                          (not (Pc_survivorat_s_p5)))

                    ; #54936: <==unclosure== 37044 (neg)
                    (when (and (not (at_a_p5)))
                          (not (Ba_survivorat_s_p5)))

                    ; #56958: <==negation-removal== 85901 (pos)
                    (when (and (not_at_a_p5))
                          (not (Pa_survivorat_s_p5)))

                    ; #65248: <==unclosure== 50139 (neg)
                    (when (and (not (at_c_p5)))
                          (not (Bc_survivorat_s_p5)))

                    ; #71598: <==negation-removal== 56449 (pos)
                    (not (not_msg_p5))

                    ; #87670: <==negation-removal== 54455 (pos)
                    (not (Bc_not_msg_p5))))

    (:action badcommsurvivor_p5_b_s
        :precondition (and (Bb_survivorat_s_p5)
                           (Pb_survivorat_s_p5)
                           (at_b_p5))
        :effect (and
                    ; #10075: origin
                    (when (and (not_at_c_p5))
                          (Bc_not_survivorat_s_p5))

                    ; #15159: <==closure== 10075 (pos)
                    (when (and (not_at_c_p5))
                          (Pc_not_survivorat_s_p5))

                    ; #34174: <==closure== 58918 (pos)
                    (Pb_msg_p5)

                    ; #43568: <==commonly_known== 56449 (pos)
                    (Bc_msg_p5)

                    ; #49776: origin
                    (when (and (not_at_b_p5))
                          (Bb_not_survivorat_s_p5))

                    ; #54455: <==closure== 43568 (pos)
                    (Pc_msg_p5)

                    ; #56449: origin
                    (msg_p5)

                    ; #57898: <==commonly_known== 56449 (pos)
                    (Ba_msg_p5)

                    ; #58918: <==commonly_known== 56449 (pos)
                    (Bb_msg_p5)

                    ; #61067: <==closure== 49776 (pos)
                    (when (and (not_at_b_p5))
                          (Pb_not_survivorat_s_p5))

                    ; #70674: <==closure== 85901 (pos)
                    (when (and (not_at_a_p5))
                          (Pa_not_survivorat_s_p5))

                    ; #85901: origin
                    (when (and (not_at_a_p5))
                          (Ba_not_survivorat_s_p5))

                    ; #89002: <==closure== 57898 (pos)
                    (Pa_msg_p5)

                    ; #11506: <==negation-removal== 57898 (pos)
                    (not (Pa_not_msg_p5))

                    ; #13199: <==negation-removal== 43568 (pos)
                    (not (Pc_not_msg_p5))

                    ; #23850: <==negation-removal== 89002 (pos)
                    (not (Ba_not_msg_p5))

                    ; #24013: <==negation-removal== 58918 (pos)
                    (not (Pb_not_msg_p5))

                    ; #32838: <==negation-removal== 49776 (pos)
                    (when (and (not_at_b_p5))
                          (not (Pb_survivorat_s_p5)))

                    ; #36490: <==negation-removal== 15159 (pos)
                    (when (and (not_at_c_p5))
                          (not (Bc_survivorat_s_p5)))

                    ; #37044: <==uncertain_firing== 85901 (pos)
                    (when (and (not (at_a_p5)))
                          (not (Pa_survivorat_s_p5)))

                    ; #38908: <==unclosure== 47223 (neg)
                    (when (and (not (at_b_p5)))
                          (not (Bb_survivorat_s_p5)))

                    ; #38920: <==negation-removal== 70674 (pos)
                    (when (and (not_at_a_p5))
                          (not (Ba_survivorat_s_p5)))

                    ; #45465: <==negation-removal== 61067 (pos)
                    (when (and (not_at_b_p5))
                          (not (Bb_survivorat_s_p5)))

                    ; #46064: <==negation-removal== 34174 (pos)
                    (not (Bb_not_msg_p5))

                    ; #47223: <==uncertain_firing== 49776 (pos)
                    (when (and (not (at_b_p5)))
                          (not (Pb_survivorat_s_p5)))

                    ; #48347: <==negation-removal== 10075 (pos)
                    (when (and (not_at_c_p5))
                          (not (Pc_survivorat_s_p5)))

                    ; #50139: <==uncertain_firing== 10075 (pos)
                    (when (and (not (at_c_p5)))
                          (not (Pc_survivorat_s_p5)))

                    ; #54936: <==unclosure== 37044 (neg)
                    (when (and (not (at_a_p5)))
                          (not (Ba_survivorat_s_p5)))

                    ; #56958: <==negation-removal== 85901 (pos)
                    (when (and (not_at_a_p5))
                          (not (Pa_survivorat_s_p5)))

                    ; #65248: <==unclosure== 50139 (neg)
                    (when (and (not (at_c_p5)))
                          (not (Bc_survivorat_s_p5)))

                    ; #71598: <==negation-removal== 56449 (pos)
                    (not (not_msg_p5))

                    ; #87670: <==negation-removal== 54455 (pos)
                    (not (Bc_not_msg_p5))))

    (:action badcommsurvivor_p5_c_s
        :precondition (and (Bc_survivorat_s_p5)
                           (Pc_survivorat_s_p5)
                           (at_c_p5))
        :effect (and
                    ; #10075: origin
                    (when (and (not_at_c_p5))
                          (Bc_not_survivorat_s_p5))

                    ; #15159: <==closure== 10075 (pos)
                    (when (and (not_at_c_p5))
                          (Pc_not_survivorat_s_p5))

                    ; #34174: <==closure== 58918 (pos)
                    (Pb_msg_p5)

                    ; #43568: <==commonly_known== 56449 (pos)
                    (Bc_msg_p5)

                    ; #49776: origin
                    (when (and (not_at_b_p5))
                          (Bb_not_survivorat_s_p5))

                    ; #54455: <==closure== 43568 (pos)
                    (Pc_msg_p5)

                    ; #56449: origin
                    (msg_p5)

                    ; #57898: <==commonly_known== 56449 (pos)
                    (Ba_msg_p5)

                    ; #58918: <==commonly_known== 56449 (pos)
                    (Bb_msg_p5)

                    ; #61067: <==closure== 49776 (pos)
                    (when (and (not_at_b_p5))
                          (Pb_not_survivorat_s_p5))

                    ; #70674: <==closure== 85901 (pos)
                    (when (and (not_at_a_p5))
                          (Pa_not_survivorat_s_p5))

                    ; #85901: origin
                    (when (and (not_at_a_p5))
                          (Ba_not_survivorat_s_p5))

                    ; #89002: <==closure== 57898 (pos)
                    (Pa_msg_p5)

                    ; #11506: <==negation-removal== 57898 (pos)
                    (not (Pa_not_msg_p5))

                    ; #13199: <==negation-removal== 43568 (pos)
                    (not (Pc_not_msg_p5))

                    ; #23850: <==negation-removal== 89002 (pos)
                    (not (Ba_not_msg_p5))

                    ; #24013: <==negation-removal== 58918 (pos)
                    (not (Pb_not_msg_p5))

                    ; #32838: <==negation-removal== 49776 (pos)
                    (when (and (not_at_b_p5))
                          (not (Pb_survivorat_s_p5)))

                    ; #36490: <==negation-removal== 15159 (pos)
                    (when (and (not_at_c_p5))
                          (not (Bc_survivorat_s_p5)))

                    ; #37044: <==uncertain_firing== 85901 (pos)
                    (when (and (not (at_a_p5)))
                          (not (Pa_survivorat_s_p5)))

                    ; #38908: <==unclosure== 47223 (neg)
                    (when (and (not (at_b_p5)))
                          (not (Bb_survivorat_s_p5)))

                    ; #38920: <==negation-removal== 70674 (pos)
                    (when (and (not_at_a_p5))
                          (not (Ba_survivorat_s_p5)))

                    ; #45465: <==negation-removal== 61067 (pos)
                    (when (and (not_at_b_p5))
                          (not (Bb_survivorat_s_p5)))

                    ; #46064: <==negation-removal== 34174 (pos)
                    (not (Bb_not_msg_p5))

                    ; #47223: <==uncertain_firing== 49776 (pos)
                    (when (and (not (at_b_p5)))
                          (not (Pb_survivorat_s_p5)))

                    ; #48347: <==negation-removal== 10075 (pos)
                    (when (and (not_at_c_p5))
                          (not (Pc_survivorat_s_p5)))

                    ; #50139: <==uncertain_firing== 10075 (pos)
                    (when (and (not (at_c_p5)))
                          (not (Pc_survivorat_s_p5)))

                    ; #54936: <==unclosure== 37044 (neg)
                    (when (and (not (at_a_p5)))
                          (not (Ba_survivorat_s_p5)))

                    ; #56958: <==negation-removal== 85901 (pos)
                    (when (and (not_at_a_p5))
                          (not (Pa_survivorat_s_p5)))

                    ; #65248: <==unclosure== 50139 (neg)
                    (when (and (not (at_c_p5)))
                          (not (Bc_survivorat_s_p5)))

                    ; #71598: <==negation-removal== 56449 (pos)
                    (not (not_msg_p5))

                    ; #87670: <==negation-removal== 54455 (pos)
                    (not (Bc_not_msg_p5))))

    (:action badcommsurvivor_p6_a_s
        :precondition (and (at_a_p6)
                           (Ba_survivorat_s_p6)
                           (Pa_survivorat_s_p6))
        :effect (and
                    ; #11679: origin
                    (msg_p6)

                    ; #12898: origin
                    (when (and (not_at_b_p6))
                          (Bb_not_survivorat_s_p6))

                    ; #18303: <==commonly_known== 11679 (pos)
                    (Bb_msg_p6)

                    ; #20371: <==closure== 18303 (pos)
                    (Pb_msg_p6)

                    ; #22257: origin
                    (when (and (not_at_a_p6))
                          (Ba_not_survivorat_s_p6))

                    ; #36628: origin
                    (when (and (not_at_c_p6))
                          (Bc_not_survivorat_s_p6))

                    ; #37348: <==closure== 87015 (pos)
                    (Pa_msg_p6)

                    ; #41342: <==closure== 83661 (pos)
                    (Pc_msg_p6)

                    ; #54979: <==closure== 36628 (pos)
                    (when (and (not_at_c_p6))
                          (Pc_not_survivorat_s_p6))

                    ; #57230: <==closure== 12898 (pos)
                    (when (and (not_at_b_p6))
                          (Pb_not_survivorat_s_p6))

                    ; #78011: <==closure== 22257 (pos)
                    (when (and (not_at_a_p6))
                          (Pa_not_survivorat_s_p6))

                    ; #83661: <==commonly_known== 11679 (pos)
                    (Bc_msg_p6)

                    ; #87015: <==commonly_known== 11679 (pos)
                    (Ba_msg_p6)

                    ; #12749: <==uncertain_firing== 22257 (pos)
                    (when (and (not (at_a_p6)))
                          (not (Pa_survivorat_s_p6)))

                    ; #16049: <==unclosure== 12749 (neg)
                    (when (and (not (at_a_p6)))
                          (not (Ba_survivorat_s_p6)))

                    ; #17206: <==negation-removal== 57230 (pos)
                    (when (and (not_at_b_p6))
                          (not (Bb_survivorat_s_p6)))

                    ; #19628: <==negation-removal== 36628 (pos)
                    (when (and (not_at_c_p6))
                          (not (Pc_survivorat_s_p6)))

                    ; #26239: <==negation-removal== 20371 (pos)
                    (not (Bb_not_msg_p6))

                    ; #31351: <==negation-removal== 83661 (pos)
                    (not (Pc_not_msg_p6))

                    ; #35222: <==negation-removal== 37348 (pos)
                    (not (Ba_not_msg_p6))

                    ; #36386: <==negation-removal== 78011 (pos)
                    (when (and (not_at_a_p6))
                          (not (Ba_survivorat_s_p6)))

                    ; #38800: <==uncertain_firing== 36628 (pos)
                    (when (and (not (at_c_p6)))
                          (not (Pc_survivorat_s_p6)))

                    ; #55103: <==negation-removal== 54979 (pos)
                    (when (and (not_at_c_p6))
                          (not (Bc_survivorat_s_p6)))

                    ; #57259: <==negation-removal== 11679 (pos)
                    (not (not_msg_p6))

                    ; #59587: <==negation-removal== 18303 (pos)
                    (not (Pb_not_msg_p6))

                    ; #67612: <==negation-removal== 41342 (pos)
                    (not (Bc_not_msg_p6))

                    ; #70515: <==negation-removal== 87015 (pos)
                    (not (Pa_not_msg_p6))

                    ; #70947: <==negation-removal== 12898 (pos)
                    (when (and (not_at_b_p6))
                          (not (Pb_survivorat_s_p6)))

                    ; #78106: <==unclosure== 38800 (neg)
                    (when (and (not (at_c_p6)))
                          (not (Bc_survivorat_s_p6)))

                    ; #83802: <==negation-removal== 22257 (pos)
                    (when (and (not_at_a_p6))
                          (not (Pa_survivorat_s_p6)))

                    ; #85447: <==uncertain_firing== 12898 (pos)
                    (when (and (not (at_b_p6)))
                          (not (Pb_survivorat_s_p6)))

                    ; #88514: <==unclosure== 85447 (neg)
                    (when (and (not (at_b_p6)))
                          (not (Bb_survivorat_s_p6)))))

    (:action badcommsurvivor_p6_b_s
        :precondition (and (at_b_p6)
                           (Bb_survivorat_s_p6)
                           (Pb_survivorat_s_p6))
        :effect (and
                    ; #11679: origin
                    (msg_p6)

                    ; #12898: origin
                    (when (and (not_at_b_p6))
                          (Bb_not_survivorat_s_p6))

                    ; #18303: <==commonly_known== 11679 (pos)
                    (Bb_msg_p6)

                    ; #20371: <==closure== 18303 (pos)
                    (Pb_msg_p6)

                    ; #22257: origin
                    (when (and (not_at_a_p6))
                          (Ba_not_survivorat_s_p6))

                    ; #36628: origin
                    (when (and (not_at_c_p6))
                          (Bc_not_survivorat_s_p6))

                    ; #37348: <==closure== 87015 (pos)
                    (Pa_msg_p6)

                    ; #41342: <==closure== 83661 (pos)
                    (Pc_msg_p6)

                    ; #54979: <==closure== 36628 (pos)
                    (when (and (not_at_c_p6))
                          (Pc_not_survivorat_s_p6))

                    ; #57230: <==closure== 12898 (pos)
                    (when (and (not_at_b_p6))
                          (Pb_not_survivorat_s_p6))

                    ; #78011: <==closure== 22257 (pos)
                    (when (and (not_at_a_p6))
                          (Pa_not_survivorat_s_p6))

                    ; #83661: <==commonly_known== 11679 (pos)
                    (Bc_msg_p6)

                    ; #87015: <==commonly_known== 11679 (pos)
                    (Ba_msg_p6)

                    ; #12749: <==uncertain_firing== 22257 (pos)
                    (when (and (not (at_a_p6)))
                          (not (Pa_survivorat_s_p6)))

                    ; #16049: <==unclosure== 12749 (neg)
                    (when (and (not (at_a_p6)))
                          (not (Ba_survivorat_s_p6)))

                    ; #17206: <==negation-removal== 57230 (pos)
                    (when (and (not_at_b_p6))
                          (not (Bb_survivorat_s_p6)))

                    ; #19628: <==negation-removal== 36628 (pos)
                    (when (and (not_at_c_p6))
                          (not (Pc_survivorat_s_p6)))

                    ; #26239: <==negation-removal== 20371 (pos)
                    (not (Bb_not_msg_p6))

                    ; #31351: <==negation-removal== 83661 (pos)
                    (not (Pc_not_msg_p6))

                    ; #35222: <==negation-removal== 37348 (pos)
                    (not (Ba_not_msg_p6))

                    ; #36386: <==negation-removal== 78011 (pos)
                    (when (and (not_at_a_p6))
                          (not (Ba_survivorat_s_p6)))

                    ; #38800: <==uncertain_firing== 36628 (pos)
                    (when (and (not (at_c_p6)))
                          (not (Pc_survivorat_s_p6)))

                    ; #55103: <==negation-removal== 54979 (pos)
                    (when (and (not_at_c_p6))
                          (not (Bc_survivorat_s_p6)))

                    ; #57259: <==negation-removal== 11679 (pos)
                    (not (not_msg_p6))

                    ; #59587: <==negation-removal== 18303 (pos)
                    (not (Pb_not_msg_p6))

                    ; #67612: <==negation-removal== 41342 (pos)
                    (not (Bc_not_msg_p6))

                    ; #70515: <==negation-removal== 87015 (pos)
                    (not (Pa_not_msg_p6))

                    ; #70947: <==negation-removal== 12898 (pos)
                    (when (and (not_at_b_p6))
                          (not (Pb_survivorat_s_p6)))

                    ; #78106: <==unclosure== 38800 (neg)
                    (when (and (not (at_c_p6)))
                          (not (Bc_survivorat_s_p6)))

                    ; #83802: <==negation-removal== 22257 (pos)
                    (when (and (not_at_a_p6))
                          (not (Pa_survivorat_s_p6)))

                    ; #85447: <==uncertain_firing== 12898 (pos)
                    (when (and (not (at_b_p6)))
                          (not (Pb_survivorat_s_p6)))

                    ; #88514: <==unclosure== 85447 (neg)
                    (when (and (not (at_b_p6)))
                          (not (Bb_survivorat_s_p6)))))

    (:action badcommsurvivor_p6_c_s
        :precondition (and (Bc_survivorat_s_p6)
                           (at_c_p6)
                           (Pc_survivorat_s_p6))
        :effect (and
                    ; #11679: origin
                    (msg_p6)

                    ; #12898: origin
                    (when (and (not_at_b_p6))
                          (Bb_not_survivorat_s_p6))

                    ; #18303: <==commonly_known== 11679 (pos)
                    (Bb_msg_p6)

                    ; #20371: <==closure== 18303 (pos)
                    (Pb_msg_p6)

                    ; #22257: origin
                    (when (and (not_at_a_p6))
                          (Ba_not_survivorat_s_p6))

                    ; #36628: origin
                    (when (and (not_at_c_p6))
                          (Bc_not_survivorat_s_p6))

                    ; #37348: <==closure== 87015 (pos)
                    (Pa_msg_p6)

                    ; #41342: <==closure== 83661 (pos)
                    (Pc_msg_p6)

                    ; #54979: <==closure== 36628 (pos)
                    (when (and (not_at_c_p6))
                          (Pc_not_survivorat_s_p6))

                    ; #57230: <==closure== 12898 (pos)
                    (when (and (not_at_b_p6))
                          (Pb_not_survivorat_s_p6))

                    ; #78011: <==closure== 22257 (pos)
                    (when (and (not_at_a_p6))
                          (Pa_not_survivorat_s_p6))

                    ; #83661: <==commonly_known== 11679 (pos)
                    (Bc_msg_p6)

                    ; #87015: <==commonly_known== 11679 (pos)
                    (Ba_msg_p6)

                    ; #12749: <==uncertain_firing== 22257 (pos)
                    (when (and (not (at_a_p6)))
                          (not (Pa_survivorat_s_p6)))

                    ; #16049: <==unclosure== 12749 (neg)
                    (when (and (not (at_a_p6)))
                          (not (Ba_survivorat_s_p6)))

                    ; #17206: <==negation-removal== 57230 (pos)
                    (when (and (not_at_b_p6))
                          (not (Bb_survivorat_s_p6)))

                    ; #19628: <==negation-removal== 36628 (pos)
                    (when (and (not_at_c_p6))
                          (not (Pc_survivorat_s_p6)))

                    ; #26239: <==negation-removal== 20371 (pos)
                    (not (Bb_not_msg_p6))

                    ; #31351: <==negation-removal== 83661 (pos)
                    (not (Pc_not_msg_p6))

                    ; #35222: <==negation-removal== 37348 (pos)
                    (not (Ba_not_msg_p6))

                    ; #36386: <==negation-removal== 78011 (pos)
                    (when (and (not_at_a_p6))
                          (not (Ba_survivorat_s_p6)))

                    ; #38800: <==uncertain_firing== 36628 (pos)
                    (when (and (not (at_c_p6)))
                          (not (Pc_survivorat_s_p6)))

                    ; #55103: <==negation-removal== 54979 (pos)
                    (when (and (not_at_c_p6))
                          (not (Bc_survivorat_s_p6)))

                    ; #57259: <==negation-removal== 11679 (pos)
                    (not (not_msg_p6))

                    ; #59587: <==negation-removal== 18303 (pos)
                    (not (Pb_not_msg_p6))

                    ; #67612: <==negation-removal== 41342 (pos)
                    (not (Bc_not_msg_p6))

                    ; #70515: <==negation-removal== 87015 (pos)
                    (not (Pa_not_msg_p6))

                    ; #70947: <==negation-removal== 12898 (pos)
                    (when (and (not_at_b_p6))
                          (not (Pb_survivorat_s_p6)))

                    ; #78106: <==unclosure== 38800 (neg)
                    (when (and (not (at_c_p6)))
                          (not (Bc_survivorat_s_p6)))

                    ; #83802: <==negation-removal== 22257 (pos)
                    (when (and (not_at_a_p6))
                          (not (Pa_survivorat_s_p6)))

                    ; #85447: <==uncertain_firing== 12898 (pos)
                    (when (and (not (at_b_p6)))
                          (not (Pb_survivorat_s_p6)))

                    ; #88514: <==unclosure== 85447 (neg)
                    (when (and (not (at_b_p6)))
                          (not (Bb_survivorat_s_p6)))))

    (:action badcommsurvivor_p7_a_s
        :precondition (and (Pa_survivorat_s_p7)
                           (Ba_survivorat_s_p7)
                           (at_a_p7))
        :effect (and
                    ; #24372: <==commonly_known== 70925 (pos)
                    (Bc_msg_p7)

                    ; #28285: origin
                    (when (and (not_at_c_p7))
                          (Bc_not_survivorat_s_p7))

                    ; #29525: <==closure== 66945 (pos)
                    (Pa_msg_p7)

                    ; #29795: <==closure== 90318 (pos)
                    (Pb_msg_p7)

                    ; #37322: <==closure== 28285 (pos)
                    (when (and (not_at_c_p7))
                          (Pc_not_survivorat_s_p7))

                    ; #56769: origin
                    (when (and (not_at_a_p7))
                          (Ba_not_survivorat_s_p7))

                    ; #58334: <==closure== 24372 (pos)
                    (Pc_msg_p7)

                    ; #66945: <==commonly_known== 70925 (pos)
                    (Ba_msg_p7)

                    ; #70925: origin
                    (msg_p7)

                    ; #76308: origin
                    (when (and (not_at_b_p7))
                          (Bb_not_survivorat_s_p7))

                    ; #87769: <==closure== 76308 (pos)
                    (when (and (not_at_b_p7))
                          (Pb_not_survivorat_s_p7))

                    ; #90318: <==commonly_known== 70925 (pos)
                    (Bb_msg_p7)

                    ; #90788: <==closure== 56769 (pos)
                    (when (and (not_at_a_p7))
                          (Pa_not_survivorat_s_p7))

                    ; #12573: <==negation-removal== 70925 (pos)
                    (not (not_msg_p7))

                    ; #12618: <==negation-removal== 29525 (pos)
                    (not (Ba_not_msg_p7))

                    ; #12852: <==negation-removal== 90318 (pos)
                    (not (Pb_not_msg_p7))

                    ; #16456: <==negation-removal== 29795 (pos)
                    (not (Bb_not_msg_p7))

                    ; #30991: <==negation-removal== 24372 (pos)
                    (not (Pc_not_msg_p7))

                    ; #37470: <==uncertain_firing== 28285 (pos)
                    (when (and (not (at_c_p7)))
                          (not (Pc_survivorat_s_p7)))

                    ; #40874: <==unclosure== 60891 (neg)
                    (when (and (not (at_a_p7)))
                          (not (Ba_survivorat_s_p7)))

                    ; #42345: <==negation-removal== 28285 (pos)
                    (when (and (not_at_c_p7))
                          (not (Pc_survivorat_s_p7)))

                    ; #44026: <==uncertain_firing== 76308 (pos)
                    (when (and (not (at_b_p7)))
                          (not (Pb_survivorat_s_p7)))

                    ; #50736: <==negation-removal== 37322 (pos)
                    (when (and (not_at_c_p7))
                          (not (Bc_survivorat_s_p7)))

                    ; #54562: <==negation-removal== 87769 (pos)
                    (when (and (not_at_b_p7))
                          (not (Bb_survivorat_s_p7)))

                    ; #60891: <==uncertain_firing== 56769 (pos)
                    (when (and (not (at_a_p7)))
                          (not (Pa_survivorat_s_p7)))

                    ; #66728: <==negation-removal== 56769 (pos)
                    (when (and (not_at_a_p7))
                          (not (Pa_survivorat_s_p7)))

                    ; #71295: <==negation-removal== 58334 (pos)
                    (not (Bc_not_msg_p7))

                    ; #71325: <==unclosure== 44026 (neg)
                    (when (and (not (at_b_p7)))
                          (not (Bb_survivorat_s_p7)))

                    ; #79577: <==negation-removal== 76308 (pos)
                    (when (and (not_at_b_p7))
                          (not (Pb_survivorat_s_p7)))

                    ; #83924: <==negation-removal== 90788 (pos)
                    (when (and (not_at_a_p7))
                          (not (Ba_survivorat_s_p7)))

                    ; #87935: <==unclosure== 37470 (neg)
                    (when (and (not (at_c_p7)))
                          (not (Bc_survivorat_s_p7)))

                    ; #93375: <==negation-removal== 66945 (pos)
                    (not (Pa_not_msg_p7))))

    (:action badcommsurvivor_p7_b_s
        :precondition (and (Bb_survivorat_s_p7)
                           (at_b_p7)
                           (Pb_survivorat_s_p7))
        :effect (and
                    ; #24372: <==commonly_known== 70925 (pos)
                    (Bc_msg_p7)

                    ; #28285: origin
                    (when (and (not_at_c_p7))
                          (Bc_not_survivorat_s_p7))

                    ; #29525: <==closure== 66945 (pos)
                    (Pa_msg_p7)

                    ; #29795: <==closure== 90318 (pos)
                    (Pb_msg_p7)

                    ; #37322: <==closure== 28285 (pos)
                    (when (and (not_at_c_p7))
                          (Pc_not_survivorat_s_p7))

                    ; #56769: origin
                    (when (and (not_at_a_p7))
                          (Ba_not_survivorat_s_p7))

                    ; #58334: <==closure== 24372 (pos)
                    (Pc_msg_p7)

                    ; #66945: <==commonly_known== 70925 (pos)
                    (Ba_msg_p7)

                    ; #70925: origin
                    (msg_p7)

                    ; #76308: origin
                    (when (and (not_at_b_p7))
                          (Bb_not_survivorat_s_p7))

                    ; #87769: <==closure== 76308 (pos)
                    (when (and (not_at_b_p7))
                          (Pb_not_survivorat_s_p7))

                    ; #90318: <==commonly_known== 70925 (pos)
                    (Bb_msg_p7)

                    ; #90788: <==closure== 56769 (pos)
                    (when (and (not_at_a_p7))
                          (Pa_not_survivorat_s_p7))

                    ; #12573: <==negation-removal== 70925 (pos)
                    (not (not_msg_p7))

                    ; #12618: <==negation-removal== 29525 (pos)
                    (not (Ba_not_msg_p7))

                    ; #12852: <==negation-removal== 90318 (pos)
                    (not (Pb_not_msg_p7))

                    ; #16456: <==negation-removal== 29795 (pos)
                    (not (Bb_not_msg_p7))

                    ; #30991: <==negation-removal== 24372 (pos)
                    (not (Pc_not_msg_p7))

                    ; #37470: <==uncertain_firing== 28285 (pos)
                    (when (and (not (at_c_p7)))
                          (not (Pc_survivorat_s_p7)))

                    ; #40874: <==unclosure== 60891 (neg)
                    (when (and (not (at_a_p7)))
                          (not (Ba_survivorat_s_p7)))

                    ; #42345: <==negation-removal== 28285 (pos)
                    (when (and (not_at_c_p7))
                          (not (Pc_survivorat_s_p7)))

                    ; #44026: <==uncertain_firing== 76308 (pos)
                    (when (and (not (at_b_p7)))
                          (not (Pb_survivorat_s_p7)))

                    ; #50736: <==negation-removal== 37322 (pos)
                    (when (and (not_at_c_p7))
                          (not (Bc_survivorat_s_p7)))

                    ; #54562: <==negation-removal== 87769 (pos)
                    (when (and (not_at_b_p7))
                          (not (Bb_survivorat_s_p7)))

                    ; #60891: <==uncertain_firing== 56769 (pos)
                    (when (and (not (at_a_p7)))
                          (not (Pa_survivorat_s_p7)))

                    ; #66728: <==negation-removal== 56769 (pos)
                    (when (and (not_at_a_p7))
                          (not (Pa_survivorat_s_p7)))

                    ; #71295: <==negation-removal== 58334 (pos)
                    (not (Bc_not_msg_p7))

                    ; #71325: <==unclosure== 44026 (neg)
                    (when (and (not (at_b_p7)))
                          (not (Bb_survivorat_s_p7)))

                    ; #79577: <==negation-removal== 76308 (pos)
                    (when (and (not_at_b_p7))
                          (not (Pb_survivorat_s_p7)))

                    ; #83924: <==negation-removal== 90788 (pos)
                    (when (and (not_at_a_p7))
                          (not (Ba_survivorat_s_p7)))

                    ; #87935: <==unclosure== 37470 (neg)
                    (when (and (not (at_c_p7)))
                          (not (Bc_survivorat_s_p7)))

                    ; #93375: <==negation-removal== 66945 (pos)
                    (not (Pa_not_msg_p7))))

    (:action badcommsurvivor_p7_c_s
        :precondition (and (at_c_p7)
                           (Bc_survivorat_s_p7)
                           (Pc_survivorat_s_p7))
        :effect (and
                    ; #24372: <==commonly_known== 70925 (pos)
                    (Bc_msg_p7)

                    ; #28285: origin
                    (when (and (not_at_c_p7))
                          (Bc_not_survivorat_s_p7))

                    ; #29525: <==closure== 66945 (pos)
                    (Pa_msg_p7)

                    ; #29795: <==closure== 90318 (pos)
                    (Pb_msg_p7)

                    ; #37322: <==closure== 28285 (pos)
                    (when (and (not_at_c_p7))
                          (Pc_not_survivorat_s_p7))

                    ; #56769: origin
                    (when (and (not_at_a_p7))
                          (Ba_not_survivorat_s_p7))

                    ; #58334: <==closure== 24372 (pos)
                    (Pc_msg_p7)

                    ; #66945: <==commonly_known== 70925 (pos)
                    (Ba_msg_p7)

                    ; #70925: origin
                    (msg_p7)

                    ; #76308: origin
                    (when (and (not_at_b_p7))
                          (Bb_not_survivorat_s_p7))

                    ; #87769: <==closure== 76308 (pos)
                    (when (and (not_at_b_p7))
                          (Pb_not_survivorat_s_p7))

                    ; #90318: <==commonly_known== 70925 (pos)
                    (Bb_msg_p7)

                    ; #90788: <==closure== 56769 (pos)
                    (when (and (not_at_a_p7))
                          (Pa_not_survivorat_s_p7))

                    ; #12573: <==negation-removal== 70925 (pos)
                    (not (not_msg_p7))

                    ; #12618: <==negation-removal== 29525 (pos)
                    (not (Ba_not_msg_p7))

                    ; #12852: <==negation-removal== 90318 (pos)
                    (not (Pb_not_msg_p7))

                    ; #16456: <==negation-removal== 29795 (pos)
                    (not (Bb_not_msg_p7))

                    ; #30991: <==negation-removal== 24372 (pos)
                    (not (Pc_not_msg_p7))

                    ; #37470: <==uncertain_firing== 28285 (pos)
                    (when (and (not (at_c_p7)))
                          (not (Pc_survivorat_s_p7)))

                    ; #40874: <==unclosure== 60891 (neg)
                    (when (and (not (at_a_p7)))
                          (not (Ba_survivorat_s_p7)))

                    ; #42345: <==negation-removal== 28285 (pos)
                    (when (and (not_at_c_p7))
                          (not (Pc_survivorat_s_p7)))

                    ; #44026: <==uncertain_firing== 76308 (pos)
                    (when (and (not (at_b_p7)))
                          (not (Pb_survivorat_s_p7)))

                    ; #50736: <==negation-removal== 37322 (pos)
                    (when (and (not_at_c_p7))
                          (not (Bc_survivorat_s_p7)))

                    ; #54562: <==negation-removal== 87769 (pos)
                    (when (and (not_at_b_p7))
                          (not (Bb_survivorat_s_p7)))

                    ; #60891: <==uncertain_firing== 56769 (pos)
                    (when (and (not (at_a_p7)))
                          (not (Pa_survivorat_s_p7)))

                    ; #66728: <==negation-removal== 56769 (pos)
                    (when (and (not_at_a_p7))
                          (not (Pa_survivorat_s_p7)))

                    ; #71295: <==negation-removal== 58334 (pos)
                    (not (Bc_not_msg_p7))

                    ; #71325: <==unclosure== 44026 (neg)
                    (when (and (not (at_b_p7)))
                          (not (Bb_survivorat_s_p7)))

                    ; #79577: <==negation-removal== 76308 (pos)
                    (when (and (not_at_b_p7))
                          (not (Pb_survivorat_s_p7)))

                    ; #83924: <==negation-removal== 90788 (pos)
                    (when (and (not_at_a_p7))
                          (not (Ba_survivorat_s_p7)))

                    ; #87935: <==unclosure== 37470 (neg)
                    (when (and (not (at_c_p7)))
                          (not (Bc_survivorat_s_p7)))

                    ; #93375: <==negation-removal== 66945 (pos)
                    (not (Pa_not_msg_p7))))

    (:action badcommsurvivor_p8_a_s
        :precondition (and (Ba_survivorat_s_p8)
                           (Pa_survivorat_s_p8)
                           (at_a_p8))
        :effect (and
                    ; #16394: <==commonly_known== 56326 (pos)
                    (Bc_msg_p8)

                    ; #26367: origin
                    (when (and (not_at_b_p8))
                          (Bb_not_survivorat_s_p8))

                    ; #30166: <==closure== 31117 (pos)
                    (when (and (not_at_a_p8))
                          (Pa_not_survivorat_s_p8))

                    ; #31117: origin
                    (when (and (not_at_a_p8))
                          (Ba_not_survivorat_s_p8))

                    ; #39446: <==closure== 56154 (pos)
                    (when (and (not_at_c_p8))
                          (Pc_not_survivorat_s_p8))

                    ; #45271: <==closure== 63985 (pos)
                    (Pb_msg_p8)

                    ; #53529: <==closure== 91576 (pos)
                    (Pa_msg_p8)

                    ; #56154: origin
                    (when (and (not_at_c_p8))
                          (Bc_not_survivorat_s_p8))

                    ; #56326: origin
                    (msg_p8)

                    ; #58557: <==closure== 26367 (pos)
                    (when (and (not_at_b_p8))
                          (Pb_not_survivorat_s_p8))

                    ; #63985: <==commonly_known== 56326 (pos)
                    (Bb_msg_p8)

                    ; #78681: <==closure== 16394 (pos)
                    (Pc_msg_p8)

                    ; #91576: <==commonly_known== 56326 (pos)
                    (Ba_msg_p8)

                    ; #13376: <==negation-removal== 56154 (pos)
                    (when (and (not_at_c_p8))
                          (not (Pc_survivorat_s_p8)))

                    ; #22505: <==negation-removal== 30166 (pos)
                    (when (and (not_at_a_p8))
                          (not (Ba_survivorat_s_p8)))

                    ; #24389: <==negation-removal== 91576 (pos)
                    (not (Pa_not_msg_p8))

                    ; #27058: <==negation-removal== 63985 (pos)
                    (not (Pb_not_msg_p8))

                    ; #33600: <==negation-removal== 26367 (pos)
                    (when (and (not_at_b_p8))
                          (not (Pb_survivorat_s_p8)))

                    ; #34178: <==uncertain_firing== 31117 (pos)
                    (when (and (not (at_a_p8)))
                          (not (Pa_survivorat_s_p8)))

                    ; #39012: <==negation-removal== 58557 (pos)
                    (when (and (not_at_b_p8))
                          (not (Bb_survivorat_s_p8)))

                    ; #51554: <==unclosure== 55269 (neg)
                    (when (and (not (at_b_p8)))
                          (not (Bb_survivorat_s_p8)))

                    ; #51698: <==negation-removal== 78681 (pos)
                    (not (Bc_not_msg_p8))

                    ; #52422: <==unclosure== 81743 (neg)
                    (when (and (not (at_c_p8)))
                          (not (Bc_survivorat_s_p8)))

                    ; #55269: <==uncertain_firing== 26367 (pos)
                    (when (and (not (at_b_p8)))
                          (not (Pb_survivorat_s_p8)))

                    ; #68520: <==negation-removal== 56326 (pos)
                    (not (not_msg_p8))

                    ; #73736: <==unclosure== 34178 (neg)
                    (when (and (not (at_a_p8)))
                          (not (Ba_survivorat_s_p8)))

                    ; #81743: <==uncertain_firing== 56154 (pos)
                    (when (and (not (at_c_p8)))
                          (not (Pc_survivorat_s_p8)))

                    ; #82736: <==negation-removal== 53529 (pos)
                    (not (Ba_not_msg_p8))

                    ; #83221: <==negation-removal== 16394 (pos)
                    (not (Pc_not_msg_p8))

                    ; #87809: <==negation-removal== 45271 (pos)
                    (not (Bb_not_msg_p8))

                    ; #90828: <==negation-removal== 31117 (pos)
                    (when (and (not_at_a_p8))
                          (not (Pa_survivorat_s_p8)))

                    ; #90971: <==negation-removal== 39446 (pos)
                    (when (and (not_at_c_p8))
                          (not (Bc_survivorat_s_p8)))))

    (:action badcommsurvivor_p8_b_s
        :precondition (and (Pb_survivorat_s_p8)
                           (Bb_survivorat_s_p8)
                           (at_b_p8))
        :effect (and
                    ; #16394: <==commonly_known== 56326 (pos)
                    (Bc_msg_p8)

                    ; #26367: origin
                    (when (and (not_at_b_p8))
                          (Bb_not_survivorat_s_p8))

                    ; #30166: <==closure== 31117 (pos)
                    (when (and (not_at_a_p8))
                          (Pa_not_survivorat_s_p8))

                    ; #31117: origin
                    (when (and (not_at_a_p8))
                          (Ba_not_survivorat_s_p8))

                    ; #39446: <==closure== 56154 (pos)
                    (when (and (not_at_c_p8))
                          (Pc_not_survivorat_s_p8))

                    ; #45271: <==closure== 63985 (pos)
                    (Pb_msg_p8)

                    ; #53529: <==closure== 91576 (pos)
                    (Pa_msg_p8)

                    ; #56154: origin
                    (when (and (not_at_c_p8))
                          (Bc_not_survivorat_s_p8))

                    ; #56326: origin
                    (msg_p8)

                    ; #58557: <==closure== 26367 (pos)
                    (when (and (not_at_b_p8))
                          (Pb_not_survivorat_s_p8))

                    ; #63985: <==commonly_known== 56326 (pos)
                    (Bb_msg_p8)

                    ; #78681: <==closure== 16394 (pos)
                    (Pc_msg_p8)

                    ; #91576: <==commonly_known== 56326 (pos)
                    (Ba_msg_p8)

                    ; #13376: <==negation-removal== 56154 (pos)
                    (when (and (not_at_c_p8))
                          (not (Pc_survivorat_s_p8)))

                    ; #22505: <==negation-removal== 30166 (pos)
                    (when (and (not_at_a_p8))
                          (not (Ba_survivorat_s_p8)))

                    ; #24389: <==negation-removal== 91576 (pos)
                    (not (Pa_not_msg_p8))

                    ; #27058: <==negation-removal== 63985 (pos)
                    (not (Pb_not_msg_p8))

                    ; #33600: <==negation-removal== 26367 (pos)
                    (when (and (not_at_b_p8))
                          (not (Pb_survivorat_s_p8)))

                    ; #34178: <==uncertain_firing== 31117 (pos)
                    (when (and (not (at_a_p8)))
                          (not (Pa_survivorat_s_p8)))

                    ; #39012: <==negation-removal== 58557 (pos)
                    (when (and (not_at_b_p8))
                          (not (Bb_survivorat_s_p8)))

                    ; #51554: <==unclosure== 55269 (neg)
                    (when (and (not (at_b_p8)))
                          (not (Bb_survivorat_s_p8)))

                    ; #51698: <==negation-removal== 78681 (pos)
                    (not (Bc_not_msg_p8))

                    ; #52422: <==unclosure== 81743 (neg)
                    (when (and (not (at_c_p8)))
                          (not (Bc_survivorat_s_p8)))

                    ; #55269: <==uncertain_firing== 26367 (pos)
                    (when (and (not (at_b_p8)))
                          (not (Pb_survivorat_s_p8)))

                    ; #68520: <==negation-removal== 56326 (pos)
                    (not (not_msg_p8))

                    ; #73736: <==unclosure== 34178 (neg)
                    (when (and (not (at_a_p8)))
                          (not (Ba_survivorat_s_p8)))

                    ; #81743: <==uncertain_firing== 56154 (pos)
                    (when (and (not (at_c_p8)))
                          (not (Pc_survivorat_s_p8)))

                    ; #82736: <==negation-removal== 53529 (pos)
                    (not (Ba_not_msg_p8))

                    ; #83221: <==negation-removal== 16394 (pos)
                    (not (Pc_not_msg_p8))

                    ; #87809: <==negation-removal== 45271 (pos)
                    (not (Bb_not_msg_p8))

                    ; #90828: <==negation-removal== 31117 (pos)
                    (when (and (not_at_a_p8))
                          (not (Pa_survivorat_s_p8)))

                    ; #90971: <==negation-removal== 39446 (pos)
                    (when (and (not_at_c_p8))
                          (not (Bc_survivorat_s_p8)))))

    (:action badcommsurvivor_p8_c_s
        :precondition (and (Pc_survivorat_s_p8)
                           (Bc_survivorat_s_p8)
                           (at_c_p8))
        :effect (and
                    ; #16394: <==commonly_known== 56326 (pos)
                    (Bc_msg_p8)

                    ; #26367: origin
                    (when (and (not_at_b_p8))
                          (Bb_not_survivorat_s_p8))

                    ; #30166: <==closure== 31117 (pos)
                    (when (and (not_at_a_p8))
                          (Pa_not_survivorat_s_p8))

                    ; #31117: origin
                    (when (and (not_at_a_p8))
                          (Ba_not_survivorat_s_p8))

                    ; #39446: <==closure== 56154 (pos)
                    (when (and (not_at_c_p8))
                          (Pc_not_survivorat_s_p8))

                    ; #45271: <==closure== 63985 (pos)
                    (Pb_msg_p8)

                    ; #53529: <==closure== 91576 (pos)
                    (Pa_msg_p8)

                    ; #56154: origin
                    (when (and (not_at_c_p8))
                          (Bc_not_survivorat_s_p8))

                    ; #56326: origin
                    (msg_p8)

                    ; #58557: <==closure== 26367 (pos)
                    (when (and (not_at_b_p8))
                          (Pb_not_survivorat_s_p8))

                    ; #63985: <==commonly_known== 56326 (pos)
                    (Bb_msg_p8)

                    ; #78681: <==closure== 16394 (pos)
                    (Pc_msg_p8)

                    ; #91576: <==commonly_known== 56326 (pos)
                    (Ba_msg_p8)

                    ; #13376: <==negation-removal== 56154 (pos)
                    (when (and (not_at_c_p8))
                          (not (Pc_survivorat_s_p8)))

                    ; #22505: <==negation-removal== 30166 (pos)
                    (when (and (not_at_a_p8))
                          (not (Ba_survivorat_s_p8)))

                    ; #24389: <==negation-removal== 91576 (pos)
                    (not (Pa_not_msg_p8))

                    ; #27058: <==negation-removal== 63985 (pos)
                    (not (Pb_not_msg_p8))

                    ; #33600: <==negation-removal== 26367 (pos)
                    (when (and (not_at_b_p8))
                          (not (Pb_survivorat_s_p8)))

                    ; #34178: <==uncertain_firing== 31117 (pos)
                    (when (and (not (at_a_p8)))
                          (not (Pa_survivorat_s_p8)))

                    ; #39012: <==negation-removal== 58557 (pos)
                    (when (and (not_at_b_p8))
                          (not (Bb_survivorat_s_p8)))

                    ; #51554: <==unclosure== 55269 (neg)
                    (when (and (not (at_b_p8)))
                          (not (Bb_survivorat_s_p8)))

                    ; #51698: <==negation-removal== 78681 (pos)
                    (not (Bc_not_msg_p8))

                    ; #52422: <==unclosure== 81743 (neg)
                    (when (and (not (at_c_p8)))
                          (not (Bc_survivorat_s_p8)))

                    ; #55269: <==uncertain_firing== 26367 (pos)
                    (when (and (not (at_b_p8)))
                          (not (Pb_survivorat_s_p8)))

                    ; #68520: <==negation-removal== 56326 (pos)
                    (not (not_msg_p8))

                    ; #73736: <==unclosure== 34178 (neg)
                    (when (and (not (at_a_p8)))
                          (not (Ba_survivorat_s_p8)))

                    ; #81743: <==uncertain_firing== 56154 (pos)
                    (when (and (not (at_c_p8)))
                          (not (Pc_survivorat_s_p8)))

                    ; #82736: <==negation-removal== 53529 (pos)
                    (not (Ba_not_msg_p8))

                    ; #83221: <==negation-removal== 16394 (pos)
                    (not (Pc_not_msg_p8))

                    ; #87809: <==negation-removal== 45271 (pos)
                    (not (Bb_not_msg_p8))

                    ; #90828: <==negation-removal== 31117 (pos)
                    (when (and (not_at_a_p8))
                          (not (Pa_survivorat_s_p8)))

                    ; #90971: <==negation-removal== 39446 (pos)
                    (when (and (not_at_c_p8))
                          (not (Bc_survivorat_s_p8)))))

    (:action badcommsurvivor_p9_a_s
        :precondition (and (at_a_p9)
                           (Pa_survivorat_s_p9)
                           (Ba_survivorat_s_p9))
        :effect (and
                    ; #12440: origin
                    (when (and (not_at_c_p9))
                          (Bc_not_survivorat_s_p9))

                    ; #13574: origin
                    (msg_p9)

                    ; #23139: <==closure== 33810 (pos)
                    (Pa_msg_p9)

                    ; #27620: <==closure== 62163 (pos)
                    (Pb_msg_p9)

                    ; #32175: <==closure== 78491 (pos)
                    (when (and (not_at_b_p9))
                          (Pb_not_survivorat_s_p9))

                    ; #33810: <==commonly_known== 13574 (pos)
                    (Ba_msg_p9)

                    ; #54233: <==closure== 12440 (pos)
                    (when (and (not_at_c_p9))
                          (Pc_not_survivorat_s_p9))

                    ; #57545: <==commonly_known== 13574 (pos)
                    (Bc_msg_p9)

                    ; #60183: <==closure== 57545 (pos)
                    (Pc_msg_p9)

                    ; #62163: <==commonly_known== 13574 (pos)
                    (Bb_msg_p9)

                    ; #69473: <==closure== 80386 (pos)
                    (when (and (not_at_a_p9))
                          (Pa_not_survivorat_s_p9))

                    ; #78491: origin
                    (when (and (not_at_b_p9))
                          (Bb_not_survivorat_s_p9))

                    ; #80386: origin
                    (when (and (not_at_a_p9))
                          (Ba_not_survivorat_s_p9))

                    ; #12102: <==uncertain_firing== 80386 (pos)
                    (when (and (not (at_a_p9)))
                          (not (Pa_survivorat_s_p9)))

                    ; #13367: <==unclosure== 17422 (neg)
                    (when (and (not (at_b_p9)))
                          (not (Bb_survivorat_s_p9)))

                    ; #16913: <==negation-removal== 32175 (pos)
                    (when (and (not_at_b_p9))
                          (not (Bb_survivorat_s_p9)))

                    ; #17422: <==uncertain_firing== 78491 (pos)
                    (when (and (not (at_b_p9)))
                          (not (Pb_survivorat_s_p9)))

                    ; #24995: <==negation-removal== 62163 (pos)
                    (not (Pb_not_msg_p9))

                    ; #35609: <==negation-removal== 13574 (pos)
                    (not (not_msg_p9))

                    ; #40049: <==negation-removal== 80386 (pos)
                    (when (and (not_at_a_p9))
                          (not (Pa_survivorat_s_p9)))

                    ; #40385: <==negation-removal== 69473 (pos)
                    (when (and (not_at_a_p9))
                          (not (Ba_survivorat_s_p9)))

                    ; #41662: <==unclosure== 12102 (neg)
                    (when (and (not (at_a_p9)))
                          (not (Ba_survivorat_s_p9)))

                    ; #41679: <==negation-removal== 54233 (pos)
                    (when (and (not_at_c_p9))
                          (not (Bc_survivorat_s_p9)))

                    ; #46314: <==negation-removal== 12440 (pos)
                    (when (and (not_at_c_p9))
                          (not (Pc_survivorat_s_p9)))

                    ; #46383: <==negation-removal== 78491 (pos)
                    (when (and (not_at_b_p9))
                          (not (Pb_survivorat_s_p9)))

                    ; #48869: <==negation-removal== 60183 (pos)
                    (not (Bc_not_msg_p9))

                    ; #50559: <==negation-removal== 27620 (pos)
                    (not (Bb_not_msg_p9))

                    ; #56619: <==unclosure== 83894 (neg)
                    (when (and (not (at_c_p9)))
                          (not (Bc_survivorat_s_p9)))

                    ; #81831: <==negation-removal== 33810 (pos)
                    (not (Pa_not_msg_p9))

                    ; #83894: <==uncertain_firing== 12440 (pos)
                    (when (and (not (at_c_p9)))
                          (not (Pc_survivorat_s_p9)))

                    ; #89693: <==negation-removal== 57545 (pos)
                    (not (Pc_not_msg_p9))

                    ; #89788: <==negation-removal== 23139 (pos)
                    (not (Ba_not_msg_p9))))

    (:action badcommsurvivor_p9_b_s
        :precondition (and (at_b_p9)
                           (Pb_survivorat_s_p9)
                           (Bb_survivorat_s_p9))
        :effect (and
                    ; #12440: origin
                    (when (and (not_at_c_p9))
                          (Bc_not_survivorat_s_p9))

                    ; #13574: origin
                    (msg_p9)

                    ; #23139: <==closure== 33810 (pos)
                    (Pa_msg_p9)

                    ; #27620: <==closure== 62163 (pos)
                    (Pb_msg_p9)

                    ; #32175: <==closure== 78491 (pos)
                    (when (and (not_at_b_p9))
                          (Pb_not_survivorat_s_p9))

                    ; #33810: <==commonly_known== 13574 (pos)
                    (Ba_msg_p9)

                    ; #54233: <==closure== 12440 (pos)
                    (when (and (not_at_c_p9))
                          (Pc_not_survivorat_s_p9))

                    ; #57545: <==commonly_known== 13574 (pos)
                    (Bc_msg_p9)

                    ; #60183: <==closure== 57545 (pos)
                    (Pc_msg_p9)

                    ; #62163: <==commonly_known== 13574 (pos)
                    (Bb_msg_p9)

                    ; #69473: <==closure== 80386 (pos)
                    (when (and (not_at_a_p9))
                          (Pa_not_survivorat_s_p9))

                    ; #78491: origin
                    (when (and (not_at_b_p9))
                          (Bb_not_survivorat_s_p9))

                    ; #80386: origin
                    (when (and (not_at_a_p9))
                          (Ba_not_survivorat_s_p9))

                    ; #12102: <==uncertain_firing== 80386 (pos)
                    (when (and (not (at_a_p9)))
                          (not (Pa_survivorat_s_p9)))

                    ; #13367: <==unclosure== 17422 (neg)
                    (when (and (not (at_b_p9)))
                          (not (Bb_survivorat_s_p9)))

                    ; #16913: <==negation-removal== 32175 (pos)
                    (when (and (not_at_b_p9))
                          (not (Bb_survivorat_s_p9)))

                    ; #17422: <==uncertain_firing== 78491 (pos)
                    (when (and (not (at_b_p9)))
                          (not (Pb_survivorat_s_p9)))

                    ; #24995: <==negation-removal== 62163 (pos)
                    (not (Pb_not_msg_p9))

                    ; #35609: <==negation-removal== 13574 (pos)
                    (not (not_msg_p9))

                    ; #40049: <==negation-removal== 80386 (pos)
                    (when (and (not_at_a_p9))
                          (not (Pa_survivorat_s_p9)))

                    ; #40385: <==negation-removal== 69473 (pos)
                    (when (and (not_at_a_p9))
                          (not (Ba_survivorat_s_p9)))

                    ; #41662: <==unclosure== 12102 (neg)
                    (when (and (not (at_a_p9)))
                          (not (Ba_survivorat_s_p9)))

                    ; #41679: <==negation-removal== 54233 (pos)
                    (when (and (not_at_c_p9))
                          (not (Bc_survivorat_s_p9)))

                    ; #46314: <==negation-removal== 12440 (pos)
                    (when (and (not_at_c_p9))
                          (not (Pc_survivorat_s_p9)))

                    ; #46383: <==negation-removal== 78491 (pos)
                    (when (and (not_at_b_p9))
                          (not (Pb_survivorat_s_p9)))

                    ; #48869: <==negation-removal== 60183 (pos)
                    (not (Bc_not_msg_p9))

                    ; #50559: <==negation-removal== 27620 (pos)
                    (not (Bb_not_msg_p9))

                    ; #56619: <==unclosure== 83894 (neg)
                    (when (and (not (at_c_p9)))
                          (not (Bc_survivorat_s_p9)))

                    ; #81831: <==negation-removal== 33810 (pos)
                    (not (Pa_not_msg_p9))

                    ; #83894: <==uncertain_firing== 12440 (pos)
                    (when (and (not (at_c_p9)))
                          (not (Pc_survivorat_s_p9)))

                    ; #89693: <==negation-removal== 57545 (pos)
                    (not (Pc_not_msg_p9))

                    ; #89788: <==negation-removal== 23139 (pos)
                    (not (Ba_not_msg_p9))))

    (:action badcommsurvivor_p9_c_s
        :precondition (and (Pc_survivorat_s_p9)
                           (Bc_survivorat_s_p9)
                           (at_c_p9))
        :effect (and
                    ; #12440: origin
                    (when (and (not_at_c_p9))
                          (Bc_not_survivorat_s_p9))

                    ; #13574: origin
                    (msg_p9)

                    ; #23139: <==closure== 33810 (pos)
                    (Pa_msg_p9)

                    ; #27620: <==closure== 62163 (pos)
                    (Pb_msg_p9)

                    ; #32175: <==closure== 78491 (pos)
                    (when (and (not_at_b_p9))
                          (Pb_not_survivorat_s_p9))

                    ; #33810: <==commonly_known== 13574 (pos)
                    (Ba_msg_p9)

                    ; #54233: <==closure== 12440 (pos)
                    (when (and (not_at_c_p9))
                          (Pc_not_survivorat_s_p9))

                    ; #57545: <==commonly_known== 13574 (pos)
                    (Bc_msg_p9)

                    ; #60183: <==closure== 57545 (pos)
                    (Pc_msg_p9)

                    ; #62163: <==commonly_known== 13574 (pos)
                    (Bb_msg_p9)

                    ; #69473: <==closure== 80386 (pos)
                    (when (and (not_at_a_p9))
                          (Pa_not_survivorat_s_p9))

                    ; #78491: origin
                    (when (and (not_at_b_p9))
                          (Bb_not_survivorat_s_p9))

                    ; #80386: origin
                    (when (and (not_at_a_p9))
                          (Ba_not_survivorat_s_p9))

                    ; #12102: <==uncertain_firing== 80386 (pos)
                    (when (and (not (at_a_p9)))
                          (not (Pa_survivorat_s_p9)))

                    ; #13367: <==unclosure== 17422 (neg)
                    (when (and (not (at_b_p9)))
                          (not (Bb_survivorat_s_p9)))

                    ; #16913: <==negation-removal== 32175 (pos)
                    (when (and (not_at_b_p9))
                          (not (Bb_survivorat_s_p9)))

                    ; #17422: <==uncertain_firing== 78491 (pos)
                    (when (and (not (at_b_p9)))
                          (not (Pb_survivorat_s_p9)))

                    ; #24995: <==negation-removal== 62163 (pos)
                    (not (Pb_not_msg_p9))

                    ; #35609: <==negation-removal== 13574 (pos)
                    (not (not_msg_p9))

                    ; #40049: <==negation-removal== 80386 (pos)
                    (when (and (not_at_a_p9))
                          (not (Pa_survivorat_s_p9)))

                    ; #40385: <==negation-removal== 69473 (pos)
                    (when (and (not_at_a_p9))
                          (not (Ba_survivorat_s_p9)))

                    ; #41662: <==unclosure== 12102 (neg)
                    (when (and (not (at_a_p9)))
                          (not (Ba_survivorat_s_p9)))

                    ; #41679: <==negation-removal== 54233 (pos)
                    (when (and (not_at_c_p9))
                          (not (Bc_survivorat_s_p9)))

                    ; #46314: <==negation-removal== 12440 (pos)
                    (when (and (not_at_c_p9))
                          (not (Pc_survivorat_s_p9)))

                    ; #46383: <==negation-removal== 78491 (pos)
                    (when (and (not_at_b_p9))
                          (not (Pb_survivorat_s_p9)))

                    ; #48869: <==negation-removal== 60183 (pos)
                    (not (Bc_not_msg_p9))

                    ; #50559: <==negation-removal== 27620 (pos)
                    (not (Bb_not_msg_p9))

                    ; #56619: <==unclosure== 83894 (neg)
                    (when (and (not (at_c_p9)))
                          (not (Bc_survivorat_s_p9)))

                    ; #81831: <==negation-removal== 33810 (pos)
                    (not (Pa_not_msg_p9))

                    ; #83894: <==uncertain_firing== 12440 (pos)
                    (when (and (not (at_c_p9)))
                          (not (Pc_survivorat_s_p9)))

                    ; #89693: <==negation-removal== 57545 (pos)
                    (not (Pc_not_msg_p9))

                    ; #89788: <==negation-removal== 23139 (pos)
                    (not (Ba_not_msg_p9))))

    (:action commsurvivor_p0011_a_s
        :precondition (and (Ba_survivorat_s_p0011)
                           (Pa_survivorat_s_p0011)
                           (at_a_p0011))
        :effect (and
                    ; #11852: origin
                    (Bb_survivorat_s_p0011)

                    ; #15381: origin
                    (msg_p0011)

                    ; #26351: <==commonly_known== 15381 (pos)
                    (Bc_msg_p0011)

                    ; #41507: <==closure== 43151 (pos)
                    (Pc_survivorat_s_p0011)

                    ; #43151: origin
                    (Bc_survivorat_s_p0011)

                    ; #47741: <==closure== 70725 (pos)
                    (Pb_msg_p0011)

                    ; #51463: origin
                    (Ba_survivorat_s_p0011)

                    ; #52401: <==commonly_known== 15381 (pos)
                    (Ba_msg_p0011)

                    ; #55805: <==closure== 11852 (pos)
                    (Pb_survivorat_s_p0011)

                    ; #70725: <==commonly_known== 15381 (pos)
                    (Bb_msg_p0011)

                    ; #78732: <==closure== 51463 (pos)
                    (Pa_survivorat_s_p0011)

                    ; #80976: <==closure== 26351 (pos)
                    (Pc_msg_p0011)

                    ; #90236: <==closure== 52401 (pos)
                    (Pa_msg_p0011)

                    ; #16408: <==negation-removal== 80976 (pos)
                    (not (Bc_not_msg_p0011))

                    ; #25461: <==negation-removal== 55805 (pos)
                    (not (Bb_not_survivorat_s_p0011))

                    ; #35045: <==negation-removal== 43151 (pos)
                    (not (Pc_not_survivorat_s_p0011))

                    ; #43587: <==negation-removal== 52401 (pos)
                    (not (Pa_not_msg_p0011))

                    ; #50004: <==negation-removal== 70725 (pos)
                    (not (Pb_not_msg_p0011))

                    ; #50737: <==negation-removal== 15381 (pos)
                    (not (not_msg_p0011))

                    ; #52569: <==negation-removal== 41507 (pos)
                    (not (Bc_not_survivorat_s_p0011))

                    ; #52956: <==negation-removal== 78732 (pos)
                    (not (Ba_not_survivorat_s_p0011))

                    ; #53590: <==negation-removal== 11852 (pos)
                    (not (Pb_not_survivorat_s_p0011))

                    ; #67603: <==negation-removal== 51463 (pos)
                    (not (Pa_not_survivorat_s_p0011))

                    ; #75812: <==negation-removal== 26351 (pos)
                    (not (Pc_not_msg_p0011))

                    ; #83908: <==negation-removal== 90236 (pos)
                    (not (Ba_not_msg_p0011))

                    ; #89641: <==negation-removal== 47741 (pos)
                    (not (Bb_not_msg_p0011))))

    (:action commsurvivor_p0011_b_s
        :precondition (and (Bb_survivorat_s_p0011)
                           (Pb_survivorat_s_p0011)
                           (at_b_p0011))
        :effect (and
                    ; #11852: origin
                    (Bb_survivorat_s_p0011)

                    ; #15381: origin
                    (msg_p0011)

                    ; #26351: <==commonly_known== 15381 (pos)
                    (Bc_msg_p0011)

                    ; #41507: <==closure== 43151 (pos)
                    (Pc_survivorat_s_p0011)

                    ; #43151: origin
                    (Bc_survivorat_s_p0011)

                    ; #47741: <==closure== 70725 (pos)
                    (Pb_msg_p0011)

                    ; #51463: origin
                    (Ba_survivorat_s_p0011)

                    ; #52401: <==commonly_known== 15381 (pos)
                    (Ba_msg_p0011)

                    ; #55805: <==closure== 11852 (pos)
                    (Pb_survivorat_s_p0011)

                    ; #70725: <==commonly_known== 15381 (pos)
                    (Bb_msg_p0011)

                    ; #78732: <==closure== 51463 (pos)
                    (Pa_survivorat_s_p0011)

                    ; #80976: <==closure== 26351 (pos)
                    (Pc_msg_p0011)

                    ; #90236: <==closure== 52401 (pos)
                    (Pa_msg_p0011)

                    ; #16408: <==negation-removal== 80976 (pos)
                    (not (Bc_not_msg_p0011))

                    ; #25461: <==negation-removal== 55805 (pos)
                    (not (Bb_not_survivorat_s_p0011))

                    ; #35045: <==negation-removal== 43151 (pos)
                    (not (Pc_not_survivorat_s_p0011))

                    ; #43587: <==negation-removal== 52401 (pos)
                    (not (Pa_not_msg_p0011))

                    ; #50004: <==negation-removal== 70725 (pos)
                    (not (Pb_not_msg_p0011))

                    ; #50737: <==negation-removal== 15381 (pos)
                    (not (not_msg_p0011))

                    ; #52569: <==negation-removal== 41507 (pos)
                    (not (Bc_not_survivorat_s_p0011))

                    ; #52956: <==negation-removal== 78732 (pos)
                    (not (Ba_not_survivorat_s_p0011))

                    ; #53590: <==negation-removal== 11852 (pos)
                    (not (Pb_not_survivorat_s_p0011))

                    ; #67603: <==negation-removal== 51463 (pos)
                    (not (Pa_not_survivorat_s_p0011))

                    ; #75812: <==negation-removal== 26351 (pos)
                    (not (Pc_not_msg_p0011))

                    ; #83908: <==negation-removal== 90236 (pos)
                    (not (Ba_not_msg_p0011))

                    ; #89641: <==negation-removal== 47741 (pos)
                    (not (Bb_not_msg_p0011))))

    (:action commsurvivor_p0011_c_s
        :precondition (and (Bc_survivorat_s_p0011)
                           (at_c_p0011)
                           (Pc_survivorat_s_p0011))
        :effect (and
                    ; #11852: origin
                    (Bb_survivorat_s_p0011)

                    ; #15381: origin
                    (msg_p0011)

                    ; #26351: <==commonly_known== 15381 (pos)
                    (Bc_msg_p0011)

                    ; #41507: <==closure== 43151 (pos)
                    (Pc_survivorat_s_p0011)

                    ; #43151: origin
                    (Bc_survivorat_s_p0011)

                    ; #47741: <==closure== 70725 (pos)
                    (Pb_msg_p0011)

                    ; #51463: origin
                    (Ba_survivorat_s_p0011)

                    ; #52401: <==commonly_known== 15381 (pos)
                    (Ba_msg_p0011)

                    ; #55805: <==closure== 11852 (pos)
                    (Pb_survivorat_s_p0011)

                    ; #70725: <==commonly_known== 15381 (pos)
                    (Bb_msg_p0011)

                    ; #78732: <==closure== 51463 (pos)
                    (Pa_survivorat_s_p0011)

                    ; #80976: <==closure== 26351 (pos)
                    (Pc_msg_p0011)

                    ; #90236: <==closure== 52401 (pos)
                    (Pa_msg_p0011)

                    ; #16408: <==negation-removal== 80976 (pos)
                    (not (Bc_not_msg_p0011))

                    ; #25461: <==negation-removal== 55805 (pos)
                    (not (Bb_not_survivorat_s_p0011))

                    ; #35045: <==negation-removal== 43151 (pos)
                    (not (Pc_not_survivorat_s_p0011))

                    ; #43587: <==negation-removal== 52401 (pos)
                    (not (Pa_not_msg_p0011))

                    ; #50004: <==negation-removal== 70725 (pos)
                    (not (Pb_not_msg_p0011))

                    ; #50737: <==negation-removal== 15381 (pos)
                    (not (not_msg_p0011))

                    ; #52569: <==negation-removal== 41507 (pos)
                    (not (Bc_not_survivorat_s_p0011))

                    ; #52956: <==negation-removal== 78732 (pos)
                    (not (Ba_not_survivorat_s_p0011))

                    ; #53590: <==negation-removal== 11852 (pos)
                    (not (Pb_not_survivorat_s_p0011))

                    ; #67603: <==negation-removal== 51463 (pos)
                    (not (Pa_not_survivorat_s_p0011))

                    ; #75812: <==negation-removal== 26351 (pos)
                    (not (Pc_not_msg_p0011))

                    ; #83908: <==negation-removal== 90236 (pos)
                    (not (Ba_not_msg_p0011))

                    ; #89641: <==negation-removal== 47741 (pos)
                    (not (Bb_not_msg_p0011))))

    (:action commsurvivor_p012_a_s
        :precondition (and (at_a_p012)
                           (Ba_survivorat_s_p012)
                           (Pa_survivorat_s_p012))
        :effect (and
                    ; #35818: <==closure== 56260 (pos)
                    (Pa_msg_p012)

                    ; #43276: <==commonly_known== 90258 (pos)
                    (Bb_msg_p012)

                    ; #51549: origin
                    (Bc_survivorat_s_p012)

                    ; #54074: <==closure== 43276 (pos)
                    (Pb_msg_p012)

                    ; #56260: <==commonly_known== 90258 (pos)
                    (Ba_msg_p012)

                    ; #63397: <==closure== 51549 (pos)
                    (Pc_survivorat_s_p012)

                    ; #63702: <==closure== 84687 (pos)
                    (Pa_survivorat_s_p012)

                    ; #76943: <==closure== 88505 (pos)
                    (Pc_msg_p012)

                    ; #84687: origin
                    (Ba_survivorat_s_p012)

                    ; #85478: <==closure== 86909 (pos)
                    (Pb_survivorat_s_p012)

                    ; #86909: origin
                    (Bb_survivorat_s_p012)

                    ; #88505: <==commonly_known== 90258 (pos)
                    (Bc_msg_p012)

                    ; #90258: origin
                    (msg_p012)

                    ; #14645: <==negation-removal== 88505 (pos)
                    (not (Pc_not_msg_p012))

                    ; #38547: <==negation-removal== 76943 (pos)
                    (not (Bc_not_msg_p012))

                    ; #41040: <==negation-removal== 85478 (pos)
                    (not (Bb_not_survivorat_s_p012))

                    ; #44947: <==negation-removal== 54074 (pos)
                    (not (Bb_not_msg_p012))

                    ; #47568: <==negation-removal== 86909 (pos)
                    (not (Pb_not_survivorat_s_p012))

                    ; #47817: <==negation-removal== 56260 (pos)
                    (not (Pa_not_msg_p012))

                    ; #53355: <==negation-removal== 63702 (pos)
                    (not (Ba_not_survivorat_s_p012))

                    ; #56245: <==negation-removal== 90258 (pos)
                    (not (not_msg_p012))

                    ; #60368: <==negation-removal== 63397 (pos)
                    (not (Bc_not_survivorat_s_p012))

                    ; #63668: <==negation-removal== 35818 (pos)
                    (not (Ba_not_msg_p012))

                    ; #63816: <==negation-removal== 84687 (pos)
                    (not (Pa_not_survivorat_s_p012))

                    ; #65020: <==negation-removal== 51549 (pos)
                    (not (Pc_not_survivorat_s_p012))

                    ; #91122: <==negation-removal== 43276 (pos)
                    (not (Pb_not_msg_p012))))

    (:action commsurvivor_p012_b_s
        :precondition (and (Pb_survivorat_s_p012)
                           (Bb_survivorat_s_p012)
                           (at_b_p012))
        :effect (and
                    ; #35818: <==closure== 56260 (pos)
                    (Pa_msg_p012)

                    ; #43276: <==commonly_known== 90258 (pos)
                    (Bb_msg_p012)

                    ; #51549: origin
                    (Bc_survivorat_s_p012)

                    ; #54074: <==closure== 43276 (pos)
                    (Pb_msg_p012)

                    ; #56260: <==commonly_known== 90258 (pos)
                    (Ba_msg_p012)

                    ; #63397: <==closure== 51549 (pos)
                    (Pc_survivorat_s_p012)

                    ; #63702: <==closure== 84687 (pos)
                    (Pa_survivorat_s_p012)

                    ; #76943: <==closure== 88505 (pos)
                    (Pc_msg_p012)

                    ; #84687: origin
                    (Ba_survivorat_s_p012)

                    ; #85478: <==closure== 86909 (pos)
                    (Pb_survivorat_s_p012)

                    ; #86909: origin
                    (Bb_survivorat_s_p012)

                    ; #88505: <==commonly_known== 90258 (pos)
                    (Bc_msg_p012)

                    ; #90258: origin
                    (msg_p012)

                    ; #14645: <==negation-removal== 88505 (pos)
                    (not (Pc_not_msg_p012))

                    ; #38547: <==negation-removal== 76943 (pos)
                    (not (Bc_not_msg_p012))

                    ; #41040: <==negation-removal== 85478 (pos)
                    (not (Bb_not_survivorat_s_p012))

                    ; #44947: <==negation-removal== 54074 (pos)
                    (not (Bb_not_msg_p012))

                    ; #47568: <==negation-removal== 86909 (pos)
                    (not (Pb_not_survivorat_s_p012))

                    ; #47817: <==negation-removal== 56260 (pos)
                    (not (Pa_not_msg_p012))

                    ; #53355: <==negation-removal== 63702 (pos)
                    (not (Ba_not_survivorat_s_p012))

                    ; #56245: <==negation-removal== 90258 (pos)
                    (not (not_msg_p012))

                    ; #60368: <==negation-removal== 63397 (pos)
                    (not (Bc_not_survivorat_s_p012))

                    ; #63668: <==negation-removal== 35818 (pos)
                    (not (Ba_not_msg_p012))

                    ; #63816: <==negation-removal== 84687 (pos)
                    (not (Pa_not_survivorat_s_p012))

                    ; #65020: <==negation-removal== 51549 (pos)
                    (not (Pc_not_survivorat_s_p012))

                    ; #91122: <==negation-removal== 43276 (pos)
                    (not (Pb_not_msg_p012))))

    (:action commsurvivor_p012_c_s
        :precondition (and (Bc_survivorat_s_p012)
                           (at_c_p012)
                           (Pc_survivorat_s_p012))
        :effect (and
                    ; #35818: <==closure== 56260 (pos)
                    (Pa_msg_p012)

                    ; #43276: <==commonly_known== 90258 (pos)
                    (Bb_msg_p012)

                    ; #51549: origin
                    (Bc_survivorat_s_p012)

                    ; #54074: <==closure== 43276 (pos)
                    (Pb_msg_p012)

                    ; #56260: <==commonly_known== 90258 (pos)
                    (Ba_msg_p012)

                    ; #63397: <==closure== 51549 (pos)
                    (Pc_survivorat_s_p012)

                    ; #63702: <==closure== 84687 (pos)
                    (Pa_survivorat_s_p012)

                    ; #76943: <==closure== 88505 (pos)
                    (Pc_msg_p012)

                    ; #84687: origin
                    (Ba_survivorat_s_p012)

                    ; #85478: <==closure== 86909 (pos)
                    (Pb_survivorat_s_p012)

                    ; #86909: origin
                    (Bb_survivorat_s_p012)

                    ; #88505: <==commonly_known== 90258 (pos)
                    (Bc_msg_p012)

                    ; #90258: origin
                    (msg_p012)

                    ; #14645: <==negation-removal== 88505 (pos)
                    (not (Pc_not_msg_p012))

                    ; #38547: <==negation-removal== 76943 (pos)
                    (not (Bc_not_msg_p012))

                    ; #41040: <==negation-removal== 85478 (pos)
                    (not (Bb_not_survivorat_s_p012))

                    ; #44947: <==negation-removal== 54074 (pos)
                    (not (Bb_not_msg_p012))

                    ; #47568: <==negation-removal== 86909 (pos)
                    (not (Pb_not_survivorat_s_p012))

                    ; #47817: <==negation-removal== 56260 (pos)
                    (not (Pa_not_msg_p012))

                    ; #53355: <==negation-removal== 63702 (pos)
                    (not (Ba_not_survivorat_s_p012))

                    ; #56245: <==negation-removal== 90258 (pos)
                    (not (not_msg_p012))

                    ; #60368: <==negation-removal== 63397 (pos)
                    (not (Bc_not_survivorat_s_p012))

                    ; #63668: <==negation-removal== 35818 (pos)
                    (not (Ba_not_msg_p012))

                    ; #63816: <==negation-removal== 84687 (pos)
                    (not (Pa_not_survivorat_s_p012))

                    ; #65020: <==negation-removal== 51549 (pos)
                    (not (Pc_not_survivorat_s_p012))

                    ; #91122: <==negation-removal== 43276 (pos)
                    (not (Pb_not_msg_p012))))

    (:action commsurvivor_p10_a_s
        :precondition (and (Ba_survivorat_s_p10)
                           (Pa_survivorat_s_p10)
                           (at_a_p10))
        :effect (and
                    ; #11845: <==closure== 14551 (pos)
                    (Pb_msg_p10)

                    ; #14551: <==commonly_known== 67170 (pos)
                    (Bb_msg_p10)

                    ; #20946: <==commonly_known== 67170 (pos)
                    (Bc_msg_p10)

                    ; #29955: <==commonly_known== 67170 (pos)
                    (Ba_msg_p10)

                    ; #31727: origin
                    (Bb_survivorat_s_p10)

                    ; #35521: <==closure== 31727 (pos)
                    (Pb_survivorat_s_p10)

                    ; #43858: <==closure== 29955 (pos)
                    (Pa_msg_p10)

                    ; #47658: <==closure== 20946 (pos)
                    (Pc_msg_p10)

                    ; #54432: origin
                    (Ba_survivorat_s_p10)

                    ; #54787: origin
                    (Bc_survivorat_s_p10)

                    ; #67170: origin
                    (msg_p10)

                    ; #77699: <==closure== 54432 (pos)
                    (Pa_survivorat_s_p10)

                    ; #78627: <==closure== 54787 (pos)
                    (Pc_survivorat_s_p10)

                    ; #10651: <==negation-removal== 78627 (pos)
                    (not (Bc_not_survivorat_s_p10))

                    ; #16845: <==negation-removal== 43858 (pos)
                    (not (Ba_not_msg_p10))

                    ; #42509: <==negation-removal== 67170 (pos)
                    (not (not_msg_p10))

                    ; #44689: <==negation-removal== 35521 (pos)
                    (not (Bb_not_survivorat_s_p10))

                    ; #47704: <==negation-removal== 77699 (pos)
                    (not (Ba_not_survivorat_s_p10))

                    ; #49428: <==negation-removal== 54787 (pos)
                    (not (Pc_not_survivorat_s_p10))

                    ; #54628: <==negation-removal== 54432 (pos)
                    (not (Pa_not_survivorat_s_p10))

                    ; #56753: <==negation-removal== 11845 (pos)
                    (not (Bb_not_msg_p10))

                    ; #58660: <==negation-removal== 20946 (pos)
                    (not (Pc_not_msg_p10))

                    ; #76623: <==negation-removal== 29955 (pos)
                    (not (Pa_not_msg_p10))

                    ; #77133: <==negation-removal== 47658 (pos)
                    (not (Bc_not_msg_p10))

                    ; #82170: <==negation-removal== 14551 (pos)
                    (not (Pb_not_msg_p10))

                    ; #87930: <==negation-removal== 31727 (pos)
                    (not (Pb_not_survivorat_s_p10))))

    (:action commsurvivor_p10_b_s
        :precondition (and (at_b_p10)
                           (Pb_survivorat_s_p10)
                           (Bb_survivorat_s_p10))
        :effect (and
                    ; #11845: <==closure== 14551 (pos)
                    (Pb_msg_p10)

                    ; #14551: <==commonly_known== 67170 (pos)
                    (Bb_msg_p10)

                    ; #20946: <==commonly_known== 67170 (pos)
                    (Bc_msg_p10)

                    ; #29955: <==commonly_known== 67170 (pos)
                    (Ba_msg_p10)

                    ; #31727: origin
                    (Bb_survivorat_s_p10)

                    ; #35521: <==closure== 31727 (pos)
                    (Pb_survivorat_s_p10)

                    ; #43858: <==closure== 29955 (pos)
                    (Pa_msg_p10)

                    ; #47658: <==closure== 20946 (pos)
                    (Pc_msg_p10)

                    ; #54432: origin
                    (Ba_survivorat_s_p10)

                    ; #54787: origin
                    (Bc_survivorat_s_p10)

                    ; #67170: origin
                    (msg_p10)

                    ; #77699: <==closure== 54432 (pos)
                    (Pa_survivorat_s_p10)

                    ; #78627: <==closure== 54787 (pos)
                    (Pc_survivorat_s_p10)

                    ; #10651: <==negation-removal== 78627 (pos)
                    (not (Bc_not_survivorat_s_p10))

                    ; #16845: <==negation-removal== 43858 (pos)
                    (not (Ba_not_msg_p10))

                    ; #42509: <==negation-removal== 67170 (pos)
                    (not (not_msg_p10))

                    ; #44689: <==negation-removal== 35521 (pos)
                    (not (Bb_not_survivorat_s_p10))

                    ; #47704: <==negation-removal== 77699 (pos)
                    (not (Ba_not_survivorat_s_p10))

                    ; #49428: <==negation-removal== 54787 (pos)
                    (not (Pc_not_survivorat_s_p10))

                    ; #54628: <==negation-removal== 54432 (pos)
                    (not (Pa_not_survivorat_s_p10))

                    ; #56753: <==negation-removal== 11845 (pos)
                    (not (Bb_not_msg_p10))

                    ; #58660: <==negation-removal== 20946 (pos)
                    (not (Pc_not_msg_p10))

                    ; #76623: <==negation-removal== 29955 (pos)
                    (not (Pa_not_msg_p10))

                    ; #77133: <==negation-removal== 47658 (pos)
                    (not (Bc_not_msg_p10))

                    ; #82170: <==negation-removal== 14551 (pos)
                    (not (Pb_not_msg_p10))

                    ; #87930: <==negation-removal== 31727 (pos)
                    (not (Pb_not_survivorat_s_p10))))

    (:action commsurvivor_p10_c_s
        :precondition (and (Bc_survivorat_s_p10)
                           (at_c_p10)
                           (Pc_survivorat_s_p10))
        :effect (and
                    ; #11845: <==closure== 14551 (pos)
                    (Pb_msg_p10)

                    ; #14551: <==commonly_known== 67170 (pos)
                    (Bb_msg_p10)

                    ; #20946: <==commonly_known== 67170 (pos)
                    (Bc_msg_p10)

                    ; #29955: <==commonly_known== 67170 (pos)
                    (Ba_msg_p10)

                    ; #31727: origin
                    (Bb_survivorat_s_p10)

                    ; #35521: <==closure== 31727 (pos)
                    (Pb_survivorat_s_p10)

                    ; #43858: <==closure== 29955 (pos)
                    (Pa_msg_p10)

                    ; #47658: <==closure== 20946 (pos)
                    (Pc_msg_p10)

                    ; #54432: origin
                    (Ba_survivorat_s_p10)

                    ; #54787: origin
                    (Bc_survivorat_s_p10)

                    ; #67170: origin
                    (msg_p10)

                    ; #77699: <==closure== 54432 (pos)
                    (Pa_survivorat_s_p10)

                    ; #78627: <==closure== 54787 (pos)
                    (Pc_survivorat_s_p10)

                    ; #10651: <==negation-removal== 78627 (pos)
                    (not (Bc_not_survivorat_s_p10))

                    ; #16845: <==negation-removal== 43858 (pos)
                    (not (Ba_not_msg_p10))

                    ; #42509: <==negation-removal== 67170 (pos)
                    (not (not_msg_p10))

                    ; #44689: <==negation-removal== 35521 (pos)
                    (not (Bb_not_survivorat_s_p10))

                    ; #47704: <==negation-removal== 77699 (pos)
                    (not (Ba_not_survivorat_s_p10))

                    ; #49428: <==negation-removal== 54787 (pos)
                    (not (Pc_not_survivorat_s_p10))

                    ; #54628: <==negation-removal== 54432 (pos)
                    (not (Pa_not_survivorat_s_p10))

                    ; #56753: <==negation-removal== 11845 (pos)
                    (not (Bb_not_msg_p10))

                    ; #58660: <==negation-removal== 20946 (pos)
                    (not (Pc_not_msg_p10))

                    ; #76623: <==negation-removal== 29955 (pos)
                    (not (Pa_not_msg_p10))

                    ; #77133: <==negation-removal== 47658 (pos)
                    (not (Bc_not_msg_p10))

                    ; #82170: <==negation-removal== 14551 (pos)
                    (not (Pb_not_msg_p10))

                    ; #87930: <==negation-removal== 31727 (pos)
                    (not (Pb_not_survivorat_s_p10))))

    (:action commsurvivor_p1_a_s
        :precondition (and (Ba_survivorat_s_p1)
                           (at_a_p1)
                           (Pa_survivorat_s_p1))
        :effect (and
                    ; #23040: <==closure== 65171 (pos)
                    (Pa_msg_p1)

                    ; #26893: <==commonly_known== 87255 (pos)
                    (Bb_msg_p1)

                    ; #30629: <==closure== 52595 (pos)
                    (Pc_survivorat_s_p1)

                    ; #42809: origin
                    (Ba_survivorat_s_p1)

                    ; #52595: origin
                    (Bc_survivorat_s_p1)

                    ; #52782: origin
                    (Bb_survivorat_s_p1)

                    ; #65171: <==commonly_known== 87255 (pos)
                    (Ba_msg_p1)

                    ; #76384: <==commonly_known== 87255 (pos)
                    (Bc_msg_p1)

                    ; #83854: <==closure== 26893 (pos)
                    (Pb_msg_p1)

                    ; #86607: <==closure== 42809 (pos)
                    (Pa_survivorat_s_p1)

                    ; #87168: <==closure== 76384 (pos)
                    (Pc_msg_p1)

                    ; #87255: origin
                    (msg_p1)

                    ; #95869: <==closure== 52782 (pos)
                    (Pb_survivorat_s_p1)

                    ; #10035: <==negation-removal== 23040 (pos)
                    (not (Ba_not_msg_p1))

                    ; #10042: <==negation-removal== 42809 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #10812: <==negation-removal== 87168 (pos)
                    (not (Bc_not_msg_p1))

                    ; #11426: <==negation-removal== 76384 (pos)
                    (not (Pc_not_msg_p1))

                    ; #17942: <==negation-removal== 65171 (pos)
                    (not (Pa_not_msg_p1))

                    ; #34717: <==negation-removal== 95869 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #52706: <==negation-removal== 87255 (pos)
                    (not (not_msg_p1))

                    ; #53586: <==negation-removal== 83854 (pos)
                    (not (Bb_not_msg_p1))

                    ; #64880: <==negation-removal== 26893 (pos)
                    (not (Pb_not_msg_p1))

                    ; #65218: <==negation-removal== 86607 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #68693: <==negation-removal== 52595 (pos)
                    (not (Pc_not_survivorat_s_p1))

                    ; #70079: <==negation-removal== 52782 (pos)
                    (not (Pb_not_survivorat_s_p1))

                    ; #72591: <==negation-removal== 30629 (pos)
                    (not (Bc_not_survivorat_s_p1))))

    (:action commsurvivor_p1_b_s
        :precondition (and (at_b_p1)
                           (Bb_survivorat_s_p1)
                           (Pb_survivorat_s_p1))
        :effect (and
                    ; #23040: <==closure== 65171 (pos)
                    (Pa_msg_p1)

                    ; #26893: <==commonly_known== 87255 (pos)
                    (Bb_msg_p1)

                    ; #30629: <==closure== 52595 (pos)
                    (Pc_survivorat_s_p1)

                    ; #42809: origin
                    (Ba_survivorat_s_p1)

                    ; #52595: origin
                    (Bc_survivorat_s_p1)

                    ; #52782: origin
                    (Bb_survivorat_s_p1)

                    ; #65171: <==commonly_known== 87255 (pos)
                    (Ba_msg_p1)

                    ; #76384: <==commonly_known== 87255 (pos)
                    (Bc_msg_p1)

                    ; #83854: <==closure== 26893 (pos)
                    (Pb_msg_p1)

                    ; #86607: <==closure== 42809 (pos)
                    (Pa_survivorat_s_p1)

                    ; #87168: <==closure== 76384 (pos)
                    (Pc_msg_p1)

                    ; #87255: origin
                    (msg_p1)

                    ; #95869: <==closure== 52782 (pos)
                    (Pb_survivorat_s_p1)

                    ; #10035: <==negation-removal== 23040 (pos)
                    (not (Ba_not_msg_p1))

                    ; #10042: <==negation-removal== 42809 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #10812: <==negation-removal== 87168 (pos)
                    (not (Bc_not_msg_p1))

                    ; #11426: <==negation-removal== 76384 (pos)
                    (not (Pc_not_msg_p1))

                    ; #17942: <==negation-removal== 65171 (pos)
                    (not (Pa_not_msg_p1))

                    ; #34717: <==negation-removal== 95869 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #52706: <==negation-removal== 87255 (pos)
                    (not (not_msg_p1))

                    ; #53586: <==negation-removal== 83854 (pos)
                    (not (Bb_not_msg_p1))

                    ; #64880: <==negation-removal== 26893 (pos)
                    (not (Pb_not_msg_p1))

                    ; #65218: <==negation-removal== 86607 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #68693: <==negation-removal== 52595 (pos)
                    (not (Pc_not_survivorat_s_p1))

                    ; #70079: <==negation-removal== 52782 (pos)
                    (not (Pb_not_survivorat_s_p1))

                    ; #72591: <==negation-removal== 30629 (pos)
                    (not (Bc_not_survivorat_s_p1))))

    (:action commsurvivor_p1_c_s
        :precondition (and (Pc_survivorat_s_p1)
                           (Bc_survivorat_s_p1)
                           (at_c_p1))
        :effect (and
                    ; #23040: <==closure== 65171 (pos)
                    (Pa_msg_p1)

                    ; #26893: <==commonly_known== 87255 (pos)
                    (Bb_msg_p1)

                    ; #30629: <==closure== 52595 (pos)
                    (Pc_survivorat_s_p1)

                    ; #42809: origin
                    (Ba_survivorat_s_p1)

                    ; #52595: origin
                    (Bc_survivorat_s_p1)

                    ; #52782: origin
                    (Bb_survivorat_s_p1)

                    ; #65171: <==commonly_known== 87255 (pos)
                    (Ba_msg_p1)

                    ; #76384: <==commonly_known== 87255 (pos)
                    (Bc_msg_p1)

                    ; #83854: <==closure== 26893 (pos)
                    (Pb_msg_p1)

                    ; #86607: <==closure== 42809 (pos)
                    (Pa_survivorat_s_p1)

                    ; #87168: <==closure== 76384 (pos)
                    (Pc_msg_p1)

                    ; #87255: origin
                    (msg_p1)

                    ; #95869: <==closure== 52782 (pos)
                    (Pb_survivorat_s_p1)

                    ; #10035: <==negation-removal== 23040 (pos)
                    (not (Ba_not_msg_p1))

                    ; #10042: <==negation-removal== 42809 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #10812: <==negation-removal== 87168 (pos)
                    (not (Bc_not_msg_p1))

                    ; #11426: <==negation-removal== 76384 (pos)
                    (not (Pc_not_msg_p1))

                    ; #17942: <==negation-removal== 65171 (pos)
                    (not (Pa_not_msg_p1))

                    ; #34717: <==negation-removal== 95869 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #52706: <==negation-removal== 87255 (pos)
                    (not (not_msg_p1))

                    ; #53586: <==negation-removal== 83854 (pos)
                    (not (Bb_not_msg_p1))

                    ; #64880: <==negation-removal== 26893 (pos)
                    (not (Pb_not_msg_p1))

                    ; #65218: <==negation-removal== 86607 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #68693: <==negation-removal== 52595 (pos)
                    (not (Pc_not_survivorat_s_p1))

                    ; #70079: <==negation-removal== 52782 (pos)
                    (not (Pb_not_survivorat_s_p1))

                    ; #72591: <==negation-removal== 30629 (pos)
                    (not (Bc_not_survivorat_s_p1))))

    (:action commsurvivor_p2_a_s
        :precondition (and (at_a_p2)
                           (Ba_survivorat_s_p2)
                           (Pa_survivorat_s_p2))
        :effect (and
                    ; #10081: <==closure== 70287 (pos)
                    (Pb_survivorat_s_p2)

                    ; #25187: <==closure== 33453 (pos)
                    (Pa_survivorat_s_p2)

                    ; #33453: origin
                    (Ba_survivorat_s_p2)

                    ; #36251: <==closure== 88526 (pos)
                    (Pc_msg_p2)

                    ; #41185: <==commonly_known== 88062 (pos)
                    (Bb_msg_p2)

                    ; #41244: <==closure== 55403 (pos)
                    (Pa_msg_p2)

                    ; #51555: <==closure== 41185 (pos)
                    (Pb_msg_p2)

                    ; #55403: <==commonly_known== 88062 (pos)
                    (Ba_msg_p2)

                    ; #70287: origin
                    (Bb_survivorat_s_p2)

                    ; #75112: <==closure== 87644 (pos)
                    (Pc_survivorat_s_p2)

                    ; #87644: origin
                    (Bc_survivorat_s_p2)

                    ; #88062: origin
                    (msg_p2)

                    ; #88526: <==commonly_known== 88062 (pos)
                    (Bc_msg_p2)

                    ; #10560: <==negation-removal== 33453 (pos)
                    (not (Pa_not_survivorat_s_p2))

                    ; #30489: <==negation-removal== 75112 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #31905: <==negation-removal== 87644 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #35016: <==negation-removal== 88526 (pos)
                    (not (Pc_not_msg_p2))

                    ; #44138: <==negation-removal== 55403 (pos)
                    (not (Pa_not_msg_p2))

                    ; #45148: <==negation-removal== 88062 (pos)
                    (not (not_msg_p2))

                    ; #52185: <==negation-removal== 41244 (pos)
                    (not (Ba_not_msg_p2))

                    ; #53679: <==negation-removal== 70287 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #60721: <==negation-removal== 25187 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #69156: <==negation-removal== 41185 (pos)
                    (not (Pb_not_msg_p2))

                    ; #80766: <==negation-removal== 36251 (pos)
                    (not (Bc_not_msg_p2))

                    ; #84192: <==negation-removal== 10081 (pos)
                    (not (Bb_not_survivorat_s_p2))

                    ; #91178: <==negation-removal== 51555 (pos)
                    (not (Bb_not_msg_p2))))

    (:action commsurvivor_p2_b_s
        :precondition (and (Bb_survivorat_s_p2)
                           (at_b_p2)
                           (Pb_survivorat_s_p2))
        :effect (and
                    ; #10081: <==closure== 70287 (pos)
                    (Pb_survivorat_s_p2)

                    ; #25187: <==closure== 33453 (pos)
                    (Pa_survivorat_s_p2)

                    ; #33453: origin
                    (Ba_survivorat_s_p2)

                    ; #36251: <==closure== 88526 (pos)
                    (Pc_msg_p2)

                    ; #41185: <==commonly_known== 88062 (pos)
                    (Bb_msg_p2)

                    ; #41244: <==closure== 55403 (pos)
                    (Pa_msg_p2)

                    ; #51555: <==closure== 41185 (pos)
                    (Pb_msg_p2)

                    ; #55403: <==commonly_known== 88062 (pos)
                    (Ba_msg_p2)

                    ; #70287: origin
                    (Bb_survivorat_s_p2)

                    ; #75112: <==closure== 87644 (pos)
                    (Pc_survivorat_s_p2)

                    ; #87644: origin
                    (Bc_survivorat_s_p2)

                    ; #88062: origin
                    (msg_p2)

                    ; #88526: <==commonly_known== 88062 (pos)
                    (Bc_msg_p2)

                    ; #10560: <==negation-removal== 33453 (pos)
                    (not (Pa_not_survivorat_s_p2))

                    ; #30489: <==negation-removal== 75112 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #31905: <==negation-removal== 87644 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #35016: <==negation-removal== 88526 (pos)
                    (not (Pc_not_msg_p2))

                    ; #44138: <==negation-removal== 55403 (pos)
                    (not (Pa_not_msg_p2))

                    ; #45148: <==negation-removal== 88062 (pos)
                    (not (not_msg_p2))

                    ; #52185: <==negation-removal== 41244 (pos)
                    (not (Ba_not_msg_p2))

                    ; #53679: <==negation-removal== 70287 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #60721: <==negation-removal== 25187 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #69156: <==negation-removal== 41185 (pos)
                    (not (Pb_not_msg_p2))

                    ; #80766: <==negation-removal== 36251 (pos)
                    (not (Bc_not_msg_p2))

                    ; #84192: <==negation-removal== 10081 (pos)
                    (not (Bb_not_survivorat_s_p2))

                    ; #91178: <==negation-removal== 51555 (pos)
                    (not (Bb_not_msg_p2))))

    (:action commsurvivor_p2_c_s
        :precondition (and (Pc_survivorat_s_p2)
                           (Bc_survivorat_s_p2)
                           (at_c_p2))
        :effect (and
                    ; #10081: <==closure== 70287 (pos)
                    (Pb_survivorat_s_p2)

                    ; #25187: <==closure== 33453 (pos)
                    (Pa_survivorat_s_p2)

                    ; #33453: origin
                    (Ba_survivorat_s_p2)

                    ; #36251: <==closure== 88526 (pos)
                    (Pc_msg_p2)

                    ; #41185: <==commonly_known== 88062 (pos)
                    (Bb_msg_p2)

                    ; #41244: <==closure== 55403 (pos)
                    (Pa_msg_p2)

                    ; #51555: <==closure== 41185 (pos)
                    (Pb_msg_p2)

                    ; #55403: <==commonly_known== 88062 (pos)
                    (Ba_msg_p2)

                    ; #70287: origin
                    (Bb_survivorat_s_p2)

                    ; #75112: <==closure== 87644 (pos)
                    (Pc_survivorat_s_p2)

                    ; #87644: origin
                    (Bc_survivorat_s_p2)

                    ; #88062: origin
                    (msg_p2)

                    ; #88526: <==commonly_known== 88062 (pos)
                    (Bc_msg_p2)

                    ; #10560: <==negation-removal== 33453 (pos)
                    (not (Pa_not_survivorat_s_p2))

                    ; #30489: <==negation-removal== 75112 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #31905: <==negation-removal== 87644 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #35016: <==negation-removal== 88526 (pos)
                    (not (Pc_not_msg_p2))

                    ; #44138: <==negation-removal== 55403 (pos)
                    (not (Pa_not_msg_p2))

                    ; #45148: <==negation-removal== 88062 (pos)
                    (not (not_msg_p2))

                    ; #52185: <==negation-removal== 41244 (pos)
                    (not (Ba_not_msg_p2))

                    ; #53679: <==negation-removal== 70287 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #60721: <==negation-removal== 25187 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #69156: <==negation-removal== 41185 (pos)
                    (not (Pb_not_msg_p2))

                    ; #80766: <==negation-removal== 36251 (pos)
                    (not (Bc_not_msg_p2))

                    ; #84192: <==negation-removal== 10081 (pos)
                    (not (Bb_not_survivorat_s_p2))

                    ; #91178: <==negation-removal== 51555 (pos)
                    (not (Bb_not_msg_p2))))

    (:action commsurvivor_p3_a_s
        :precondition (and (Ba_survivorat_s_p3)
                           (Pa_survivorat_s_p3)
                           (at_a_p3))
        :effect (and
                    ; #15007: <==closure== 32565 (pos)
                    (Pc_survivorat_s_p3)

                    ; #18019: <==closure== 24966 (pos)
                    (Pc_msg_p3)

                    ; #24966: <==commonly_known== 48833 (pos)
                    (Bc_msg_p3)

                    ; #32565: origin
                    (Bc_survivorat_s_p3)

                    ; #46164: <==closure== 71142 (pos)
                    (Pa_survivorat_s_p3)

                    ; #48833: origin
                    (msg_p3)

                    ; #51458: <==commonly_known== 48833 (pos)
                    (Bb_msg_p3)

                    ; #69812: <==closure== 74648 (pos)
                    (Pa_msg_p3)

                    ; #71142: origin
                    (Ba_survivorat_s_p3)

                    ; #71674: origin
                    (Bb_survivorat_s_p3)

                    ; #74648: <==commonly_known== 48833 (pos)
                    (Ba_msg_p3)

                    ; #79902: <==closure== 51458 (pos)
                    (Pb_msg_p3)

                    ; #83052: <==closure== 71674 (pos)
                    (Pb_survivorat_s_p3)

                    ; #23694: <==negation-removal== 74648 (pos)
                    (not (Pa_not_msg_p3))

                    ; #33049: <==negation-removal== 18019 (pos)
                    (not (Bc_not_msg_p3))

                    ; #33777: <==negation-removal== 32565 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #35972: <==negation-removal== 48833 (pos)
                    (not (not_msg_p3))

                    ; #38476: <==negation-removal== 83052 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #47252: <==negation-removal== 24966 (pos)
                    (not (Pc_not_msg_p3))

                    ; #50111: <==negation-removal== 71142 (pos)
                    (not (Pa_not_survivorat_s_p3))

                    ; #59108: <==negation-removal== 79902 (pos)
                    (not (Bb_not_msg_p3))

                    ; #61381: <==negation-removal== 46164 (pos)
                    (not (Ba_not_survivorat_s_p3))

                    ; #62111: <==negation-removal== 15007 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #63933: <==negation-removal== 69812 (pos)
                    (not (Ba_not_msg_p3))

                    ; #84493: <==negation-removal== 71674 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #90730: <==negation-removal== 51458 (pos)
                    (not (Pb_not_msg_p3))))

    (:action commsurvivor_p3_b_s
        :precondition (and (Bb_survivorat_s_p3)
                           (Pb_survivorat_s_p3)
                           (at_b_p3))
        :effect (and
                    ; #15007: <==closure== 32565 (pos)
                    (Pc_survivorat_s_p3)

                    ; #18019: <==closure== 24966 (pos)
                    (Pc_msg_p3)

                    ; #24966: <==commonly_known== 48833 (pos)
                    (Bc_msg_p3)

                    ; #32565: origin
                    (Bc_survivorat_s_p3)

                    ; #46164: <==closure== 71142 (pos)
                    (Pa_survivorat_s_p3)

                    ; #48833: origin
                    (msg_p3)

                    ; #51458: <==commonly_known== 48833 (pos)
                    (Bb_msg_p3)

                    ; #69812: <==closure== 74648 (pos)
                    (Pa_msg_p3)

                    ; #71142: origin
                    (Ba_survivorat_s_p3)

                    ; #71674: origin
                    (Bb_survivorat_s_p3)

                    ; #74648: <==commonly_known== 48833 (pos)
                    (Ba_msg_p3)

                    ; #79902: <==closure== 51458 (pos)
                    (Pb_msg_p3)

                    ; #83052: <==closure== 71674 (pos)
                    (Pb_survivorat_s_p3)

                    ; #23694: <==negation-removal== 74648 (pos)
                    (not (Pa_not_msg_p3))

                    ; #33049: <==negation-removal== 18019 (pos)
                    (not (Bc_not_msg_p3))

                    ; #33777: <==negation-removal== 32565 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #35972: <==negation-removal== 48833 (pos)
                    (not (not_msg_p3))

                    ; #38476: <==negation-removal== 83052 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #47252: <==negation-removal== 24966 (pos)
                    (not (Pc_not_msg_p3))

                    ; #50111: <==negation-removal== 71142 (pos)
                    (not (Pa_not_survivorat_s_p3))

                    ; #59108: <==negation-removal== 79902 (pos)
                    (not (Bb_not_msg_p3))

                    ; #61381: <==negation-removal== 46164 (pos)
                    (not (Ba_not_survivorat_s_p3))

                    ; #62111: <==negation-removal== 15007 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #63933: <==negation-removal== 69812 (pos)
                    (not (Ba_not_msg_p3))

                    ; #84493: <==negation-removal== 71674 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #90730: <==negation-removal== 51458 (pos)
                    (not (Pb_not_msg_p3))))

    (:action commsurvivor_p3_c_s
        :precondition (and (at_c_p3)
                           (Bc_survivorat_s_p3)
                           (Pc_survivorat_s_p3))
        :effect (and
                    ; #15007: <==closure== 32565 (pos)
                    (Pc_survivorat_s_p3)

                    ; #18019: <==closure== 24966 (pos)
                    (Pc_msg_p3)

                    ; #24966: <==commonly_known== 48833 (pos)
                    (Bc_msg_p3)

                    ; #32565: origin
                    (Bc_survivorat_s_p3)

                    ; #46164: <==closure== 71142 (pos)
                    (Pa_survivorat_s_p3)

                    ; #48833: origin
                    (msg_p3)

                    ; #51458: <==commonly_known== 48833 (pos)
                    (Bb_msg_p3)

                    ; #69812: <==closure== 74648 (pos)
                    (Pa_msg_p3)

                    ; #71142: origin
                    (Ba_survivorat_s_p3)

                    ; #71674: origin
                    (Bb_survivorat_s_p3)

                    ; #74648: <==commonly_known== 48833 (pos)
                    (Ba_msg_p3)

                    ; #79902: <==closure== 51458 (pos)
                    (Pb_msg_p3)

                    ; #83052: <==closure== 71674 (pos)
                    (Pb_survivorat_s_p3)

                    ; #23694: <==negation-removal== 74648 (pos)
                    (not (Pa_not_msg_p3))

                    ; #33049: <==negation-removal== 18019 (pos)
                    (not (Bc_not_msg_p3))

                    ; #33777: <==negation-removal== 32565 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #35972: <==negation-removal== 48833 (pos)
                    (not (not_msg_p3))

                    ; #38476: <==negation-removal== 83052 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #47252: <==negation-removal== 24966 (pos)
                    (not (Pc_not_msg_p3))

                    ; #50111: <==negation-removal== 71142 (pos)
                    (not (Pa_not_survivorat_s_p3))

                    ; #59108: <==negation-removal== 79902 (pos)
                    (not (Bb_not_msg_p3))

                    ; #61381: <==negation-removal== 46164 (pos)
                    (not (Ba_not_survivorat_s_p3))

                    ; #62111: <==negation-removal== 15007 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #63933: <==negation-removal== 69812 (pos)
                    (not (Ba_not_msg_p3))

                    ; #84493: <==negation-removal== 71674 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #90730: <==negation-removal== 51458 (pos)
                    (not (Pb_not_msg_p3))))

    (:action commsurvivor_p4_a_s
        :precondition (and (Ba_survivorat_s_p4)
                           (at_a_p4)
                           (Pa_survivorat_s_p4))
        :effect (and
                    ; #12474: <==closure== 48209 (pos)
                    (Pc_survivorat_s_p4)

                    ; #14056: origin
                    (msg_p4)

                    ; #15198: origin
                    (Ba_survivorat_s_p4)

                    ; #20941: <==closure== 50975 (pos)
                    (Pa_msg_p4)

                    ; #30849: <==commonly_known== 14056 (pos)
                    (Bb_msg_p4)

                    ; #37790: <==commonly_known== 14056 (pos)
                    (Bc_msg_p4)

                    ; #42982: <==closure== 37790 (pos)
                    (Pc_msg_p4)

                    ; #48209: origin
                    (Bc_survivorat_s_p4)

                    ; #50136: <==closure== 30849 (pos)
                    (Pb_msg_p4)

                    ; #50975: <==commonly_known== 14056 (pos)
                    (Ba_msg_p4)

                    ; #74803: origin
                    (Bb_survivorat_s_p4)

                    ; #88688: <==closure== 74803 (pos)
                    (Pb_survivorat_s_p4)

                    ; #92029: <==closure== 15198 (pos)
                    (Pa_survivorat_s_p4)

                    ; #18810: <==negation-removal== 15198 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #43025: <==negation-removal== 50136 (pos)
                    (not (Bb_not_msg_p4))

                    ; #50989: <==negation-removal== 74803 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #51926: <==negation-removal== 30849 (pos)
                    (not (Pb_not_msg_p4))

                    ; #57022: <==negation-removal== 50975 (pos)
                    (not (Pa_not_msg_p4))

                    ; #60590: <==negation-removal== 48209 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #63488: <==negation-removal== 88688 (pos)
                    (not (Bb_not_survivorat_s_p4))

                    ; #67781: <==negation-removal== 42982 (pos)
                    (not (Bc_not_msg_p4))

                    ; #71853: <==negation-removal== 92029 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #73104: <==negation-removal== 12474 (pos)
                    (not (Bc_not_survivorat_s_p4))

                    ; #76631: <==negation-removal== 20941 (pos)
                    (not (Ba_not_msg_p4))

                    ; #86893: <==negation-removal== 14056 (pos)
                    (not (not_msg_p4))

                    ; #91785: <==negation-removal== 37790 (pos)
                    (not (Pc_not_msg_p4))))

    (:action commsurvivor_p4_b_s
        :precondition (and (at_b_p4)
                           (Bb_survivorat_s_p4)
                           (Pb_survivorat_s_p4))
        :effect (and
                    ; #12474: <==closure== 48209 (pos)
                    (Pc_survivorat_s_p4)

                    ; #14056: origin
                    (msg_p4)

                    ; #15198: origin
                    (Ba_survivorat_s_p4)

                    ; #20941: <==closure== 50975 (pos)
                    (Pa_msg_p4)

                    ; #30849: <==commonly_known== 14056 (pos)
                    (Bb_msg_p4)

                    ; #37790: <==commonly_known== 14056 (pos)
                    (Bc_msg_p4)

                    ; #42982: <==closure== 37790 (pos)
                    (Pc_msg_p4)

                    ; #48209: origin
                    (Bc_survivorat_s_p4)

                    ; #50136: <==closure== 30849 (pos)
                    (Pb_msg_p4)

                    ; #50975: <==commonly_known== 14056 (pos)
                    (Ba_msg_p4)

                    ; #74803: origin
                    (Bb_survivorat_s_p4)

                    ; #88688: <==closure== 74803 (pos)
                    (Pb_survivorat_s_p4)

                    ; #92029: <==closure== 15198 (pos)
                    (Pa_survivorat_s_p4)

                    ; #18810: <==negation-removal== 15198 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #43025: <==negation-removal== 50136 (pos)
                    (not (Bb_not_msg_p4))

                    ; #50989: <==negation-removal== 74803 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #51926: <==negation-removal== 30849 (pos)
                    (not (Pb_not_msg_p4))

                    ; #57022: <==negation-removal== 50975 (pos)
                    (not (Pa_not_msg_p4))

                    ; #60590: <==negation-removal== 48209 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #63488: <==negation-removal== 88688 (pos)
                    (not (Bb_not_survivorat_s_p4))

                    ; #67781: <==negation-removal== 42982 (pos)
                    (not (Bc_not_msg_p4))

                    ; #71853: <==negation-removal== 92029 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #73104: <==negation-removal== 12474 (pos)
                    (not (Bc_not_survivorat_s_p4))

                    ; #76631: <==negation-removal== 20941 (pos)
                    (not (Ba_not_msg_p4))

                    ; #86893: <==negation-removal== 14056 (pos)
                    (not (not_msg_p4))

                    ; #91785: <==negation-removal== 37790 (pos)
                    (not (Pc_not_msg_p4))))

    (:action commsurvivor_p4_c_s
        :precondition (and (Bc_survivorat_s_p4)
                           (at_c_p4)
                           (Pc_survivorat_s_p4))
        :effect (and
                    ; #12474: <==closure== 48209 (pos)
                    (Pc_survivorat_s_p4)

                    ; #14056: origin
                    (msg_p4)

                    ; #15198: origin
                    (Ba_survivorat_s_p4)

                    ; #20941: <==closure== 50975 (pos)
                    (Pa_msg_p4)

                    ; #30849: <==commonly_known== 14056 (pos)
                    (Bb_msg_p4)

                    ; #37790: <==commonly_known== 14056 (pos)
                    (Bc_msg_p4)

                    ; #42982: <==closure== 37790 (pos)
                    (Pc_msg_p4)

                    ; #48209: origin
                    (Bc_survivorat_s_p4)

                    ; #50136: <==closure== 30849 (pos)
                    (Pb_msg_p4)

                    ; #50975: <==commonly_known== 14056 (pos)
                    (Ba_msg_p4)

                    ; #74803: origin
                    (Bb_survivorat_s_p4)

                    ; #88688: <==closure== 74803 (pos)
                    (Pb_survivorat_s_p4)

                    ; #92029: <==closure== 15198 (pos)
                    (Pa_survivorat_s_p4)

                    ; #18810: <==negation-removal== 15198 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #43025: <==negation-removal== 50136 (pos)
                    (not (Bb_not_msg_p4))

                    ; #50989: <==negation-removal== 74803 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #51926: <==negation-removal== 30849 (pos)
                    (not (Pb_not_msg_p4))

                    ; #57022: <==negation-removal== 50975 (pos)
                    (not (Pa_not_msg_p4))

                    ; #60590: <==negation-removal== 48209 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #63488: <==negation-removal== 88688 (pos)
                    (not (Bb_not_survivorat_s_p4))

                    ; #67781: <==negation-removal== 42982 (pos)
                    (not (Bc_not_msg_p4))

                    ; #71853: <==negation-removal== 92029 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #73104: <==negation-removal== 12474 (pos)
                    (not (Bc_not_survivorat_s_p4))

                    ; #76631: <==negation-removal== 20941 (pos)
                    (not (Ba_not_msg_p4))

                    ; #86893: <==negation-removal== 14056 (pos)
                    (not (not_msg_p4))

                    ; #91785: <==negation-removal== 37790 (pos)
                    (not (Pc_not_msg_p4))))

    (:action commsurvivor_p5_a_s
        :precondition (and (at_a_p5)
                           (Ba_survivorat_s_p5)
                           (Pa_survivorat_s_p5))
        :effect (and
                    ; #24833: <==closure== 88429 (pos)
                    (Pa_survivorat_s_p5)

                    ; #34174: <==closure== 58918 (pos)
                    (Pb_msg_p5)

                    ; #43568: <==commonly_known== 56449 (pos)
                    (Bc_msg_p5)

                    ; #54455: <==closure== 43568 (pos)
                    (Pc_msg_p5)

                    ; #56449: origin
                    (msg_p5)

                    ; #57898: <==commonly_known== 56449 (pos)
                    (Ba_msg_p5)

                    ; #58289: <==closure== 69576 (pos)
                    (Pb_survivorat_s_p5)

                    ; #58918: <==commonly_known== 56449 (pos)
                    (Bb_msg_p5)

                    ; #69576: origin
                    (Bb_survivorat_s_p5)

                    ; #73905: <==closure== 83630 (pos)
                    (Pc_survivorat_s_p5)

                    ; #83630: origin
                    (Bc_survivorat_s_p5)

                    ; #88429: origin
                    (Ba_survivorat_s_p5)

                    ; #89002: <==closure== 57898 (pos)
                    (Pa_msg_p5)

                    ; #11506: <==negation-removal== 57898 (pos)
                    (not (Pa_not_msg_p5))

                    ; #13199: <==negation-removal== 43568 (pos)
                    (not (Pc_not_msg_p5))

                    ; #23850: <==negation-removal== 89002 (pos)
                    (not (Ba_not_msg_p5))

                    ; #24013: <==negation-removal== 58918 (pos)
                    (not (Pb_not_msg_p5))

                    ; #29567: <==negation-removal== 58289 (pos)
                    (not (Bb_not_survivorat_s_p5))

                    ; #31812: <==negation-removal== 88429 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #32271: <==negation-removal== 83630 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #37362: <==negation-removal== 73905 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #46064: <==negation-removal== 34174 (pos)
                    (not (Bb_not_msg_p5))

                    ; #67545: <==negation-removal== 69576 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #71598: <==negation-removal== 56449 (pos)
                    (not (not_msg_p5))

                    ; #75128: <==negation-removal== 24833 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #87670: <==negation-removal== 54455 (pos)
                    (not (Bc_not_msg_p5))))

    (:action commsurvivor_p5_b_s
        :precondition (and (Bb_survivorat_s_p5)
                           (Pb_survivorat_s_p5)
                           (at_b_p5))
        :effect (and
                    ; #24833: <==closure== 88429 (pos)
                    (Pa_survivorat_s_p5)

                    ; #34174: <==closure== 58918 (pos)
                    (Pb_msg_p5)

                    ; #43568: <==commonly_known== 56449 (pos)
                    (Bc_msg_p5)

                    ; #54455: <==closure== 43568 (pos)
                    (Pc_msg_p5)

                    ; #56449: origin
                    (msg_p5)

                    ; #57898: <==commonly_known== 56449 (pos)
                    (Ba_msg_p5)

                    ; #58289: <==closure== 69576 (pos)
                    (Pb_survivorat_s_p5)

                    ; #58918: <==commonly_known== 56449 (pos)
                    (Bb_msg_p5)

                    ; #69576: origin
                    (Bb_survivorat_s_p5)

                    ; #73905: <==closure== 83630 (pos)
                    (Pc_survivorat_s_p5)

                    ; #83630: origin
                    (Bc_survivorat_s_p5)

                    ; #88429: origin
                    (Ba_survivorat_s_p5)

                    ; #89002: <==closure== 57898 (pos)
                    (Pa_msg_p5)

                    ; #11506: <==negation-removal== 57898 (pos)
                    (not (Pa_not_msg_p5))

                    ; #13199: <==negation-removal== 43568 (pos)
                    (not (Pc_not_msg_p5))

                    ; #23850: <==negation-removal== 89002 (pos)
                    (not (Ba_not_msg_p5))

                    ; #24013: <==negation-removal== 58918 (pos)
                    (not (Pb_not_msg_p5))

                    ; #29567: <==negation-removal== 58289 (pos)
                    (not (Bb_not_survivorat_s_p5))

                    ; #31812: <==negation-removal== 88429 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #32271: <==negation-removal== 83630 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #37362: <==negation-removal== 73905 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #46064: <==negation-removal== 34174 (pos)
                    (not (Bb_not_msg_p5))

                    ; #67545: <==negation-removal== 69576 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #71598: <==negation-removal== 56449 (pos)
                    (not (not_msg_p5))

                    ; #75128: <==negation-removal== 24833 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #87670: <==negation-removal== 54455 (pos)
                    (not (Bc_not_msg_p5))))

    (:action commsurvivor_p5_c_s
        :precondition (and (Bc_survivorat_s_p5)
                           (Pc_survivorat_s_p5)
                           (at_c_p5))
        :effect (and
                    ; #24833: <==closure== 88429 (pos)
                    (Pa_survivorat_s_p5)

                    ; #34174: <==closure== 58918 (pos)
                    (Pb_msg_p5)

                    ; #43568: <==commonly_known== 56449 (pos)
                    (Bc_msg_p5)

                    ; #54455: <==closure== 43568 (pos)
                    (Pc_msg_p5)

                    ; #56449: origin
                    (msg_p5)

                    ; #57898: <==commonly_known== 56449 (pos)
                    (Ba_msg_p5)

                    ; #58289: <==closure== 69576 (pos)
                    (Pb_survivorat_s_p5)

                    ; #58918: <==commonly_known== 56449 (pos)
                    (Bb_msg_p5)

                    ; #69576: origin
                    (Bb_survivorat_s_p5)

                    ; #73905: <==closure== 83630 (pos)
                    (Pc_survivorat_s_p5)

                    ; #83630: origin
                    (Bc_survivorat_s_p5)

                    ; #88429: origin
                    (Ba_survivorat_s_p5)

                    ; #89002: <==closure== 57898 (pos)
                    (Pa_msg_p5)

                    ; #11506: <==negation-removal== 57898 (pos)
                    (not (Pa_not_msg_p5))

                    ; #13199: <==negation-removal== 43568 (pos)
                    (not (Pc_not_msg_p5))

                    ; #23850: <==negation-removal== 89002 (pos)
                    (not (Ba_not_msg_p5))

                    ; #24013: <==negation-removal== 58918 (pos)
                    (not (Pb_not_msg_p5))

                    ; #29567: <==negation-removal== 58289 (pos)
                    (not (Bb_not_survivorat_s_p5))

                    ; #31812: <==negation-removal== 88429 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #32271: <==negation-removal== 83630 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #37362: <==negation-removal== 73905 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #46064: <==negation-removal== 34174 (pos)
                    (not (Bb_not_msg_p5))

                    ; #67545: <==negation-removal== 69576 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #71598: <==negation-removal== 56449 (pos)
                    (not (not_msg_p5))

                    ; #75128: <==negation-removal== 24833 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #87670: <==negation-removal== 54455 (pos)
                    (not (Bc_not_msg_p5))))

    (:action commsurvivor_p6_a_s
        :precondition (and (at_a_p6)
                           (Ba_survivorat_s_p6)
                           (Pa_survivorat_s_p6))
        :effect (and
                    ; #11679: origin
                    (msg_p6)

                    ; #11842: <==closure== 46089 (pos)
                    (Pa_survivorat_s_p6)

                    ; #18303: <==commonly_known== 11679 (pos)
                    (Bb_msg_p6)

                    ; #20371: <==closure== 18303 (pos)
                    (Pb_msg_p6)

                    ; #37348: <==closure== 87015 (pos)
                    (Pa_msg_p6)

                    ; #41342: <==closure== 83661 (pos)
                    (Pc_msg_p6)

                    ; #41396: <==closure== 49552 (pos)
                    (Pc_survivorat_s_p6)

                    ; #46089: origin
                    (Ba_survivorat_s_p6)

                    ; #49552: origin
                    (Bc_survivorat_s_p6)

                    ; #62581: <==closure== 77272 (pos)
                    (Pb_survivorat_s_p6)

                    ; #77272: origin
                    (Bb_survivorat_s_p6)

                    ; #83661: <==commonly_known== 11679 (pos)
                    (Bc_msg_p6)

                    ; #87015: <==commonly_known== 11679 (pos)
                    (Ba_msg_p6)

                    ; #26239: <==negation-removal== 20371 (pos)
                    (not (Bb_not_msg_p6))

                    ; #31351: <==negation-removal== 83661 (pos)
                    (not (Pc_not_msg_p6))

                    ; #35222: <==negation-removal== 37348 (pos)
                    (not (Ba_not_msg_p6))

                    ; #49734: <==negation-removal== 62581 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #57259: <==negation-removal== 11679 (pos)
                    (not (not_msg_p6))

                    ; #58911: <==negation-removal== 11842 (pos)
                    (not (Ba_not_survivorat_s_p6))

                    ; #59587: <==negation-removal== 18303 (pos)
                    (not (Pb_not_msg_p6))

                    ; #65777: <==negation-removal== 77272 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #65838: <==negation-removal== 49552 (pos)
                    (not (Pc_not_survivorat_s_p6))

                    ; #67612: <==negation-removal== 41342 (pos)
                    (not (Bc_not_msg_p6))

                    ; #70515: <==negation-removal== 87015 (pos)
                    (not (Pa_not_msg_p6))

                    ; #75921: <==negation-removal== 41396 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #82031: <==negation-removal== 46089 (pos)
                    (not (Pa_not_survivorat_s_p6))))

    (:action commsurvivor_p6_b_s
        :precondition (and (at_b_p6)
                           (Bb_survivorat_s_p6)
                           (Pb_survivorat_s_p6))
        :effect (and
                    ; #11679: origin
                    (msg_p6)

                    ; #11842: <==closure== 46089 (pos)
                    (Pa_survivorat_s_p6)

                    ; #18303: <==commonly_known== 11679 (pos)
                    (Bb_msg_p6)

                    ; #20371: <==closure== 18303 (pos)
                    (Pb_msg_p6)

                    ; #37348: <==closure== 87015 (pos)
                    (Pa_msg_p6)

                    ; #41342: <==closure== 83661 (pos)
                    (Pc_msg_p6)

                    ; #41396: <==closure== 49552 (pos)
                    (Pc_survivorat_s_p6)

                    ; #46089: origin
                    (Ba_survivorat_s_p6)

                    ; #49552: origin
                    (Bc_survivorat_s_p6)

                    ; #62581: <==closure== 77272 (pos)
                    (Pb_survivorat_s_p6)

                    ; #77272: origin
                    (Bb_survivorat_s_p6)

                    ; #83661: <==commonly_known== 11679 (pos)
                    (Bc_msg_p6)

                    ; #87015: <==commonly_known== 11679 (pos)
                    (Ba_msg_p6)

                    ; #26239: <==negation-removal== 20371 (pos)
                    (not (Bb_not_msg_p6))

                    ; #31351: <==negation-removal== 83661 (pos)
                    (not (Pc_not_msg_p6))

                    ; #35222: <==negation-removal== 37348 (pos)
                    (not (Ba_not_msg_p6))

                    ; #49734: <==negation-removal== 62581 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #57259: <==negation-removal== 11679 (pos)
                    (not (not_msg_p6))

                    ; #58911: <==negation-removal== 11842 (pos)
                    (not (Ba_not_survivorat_s_p6))

                    ; #59587: <==negation-removal== 18303 (pos)
                    (not (Pb_not_msg_p6))

                    ; #65777: <==negation-removal== 77272 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #65838: <==negation-removal== 49552 (pos)
                    (not (Pc_not_survivorat_s_p6))

                    ; #67612: <==negation-removal== 41342 (pos)
                    (not (Bc_not_msg_p6))

                    ; #70515: <==negation-removal== 87015 (pos)
                    (not (Pa_not_msg_p6))

                    ; #75921: <==negation-removal== 41396 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #82031: <==negation-removal== 46089 (pos)
                    (not (Pa_not_survivorat_s_p6))))

    (:action commsurvivor_p6_c_s
        :precondition (and (Bc_survivorat_s_p6)
                           (at_c_p6)
                           (Pc_survivorat_s_p6))
        :effect (and
                    ; #11679: origin
                    (msg_p6)

                    ; #11842: <==closure== 46089 (pos)
                    (Pa_survivorat_s_p6)

                    ; #18303: <==commonly_known== 11679 (pos)
                    (Bb_msg_p6)

                    ; #20371: <==closure== 18303 (pos)
                    (Pb_msg_p6)

                    ; #37348: <==closure== 87015 (pos)
                    (Pa_msg_p6)

                    ; #41342: <==closure== 83661 (pos)
                    (Pc_msg_p6)

                    ; #41396: <==closure== 49552 (pos)
                    (Pc_survivorat_s_p6)

                    ; #46089: origin
                    (Ba_survivorat_s_p6)

                    ; #49552: origin
                    (Bc_survivorat_s_p6)

                    ; #62581: <==closure== 77272 (pos)
                    (Pb_survivorat_s_p6)

                    ; #77272: origin
                    (Bb_survivorat_s_p6)

                    ; #83661: <==commonly_known== 11679 (pos)
                    (Bc_msg_p6)

                    ; #87015: <==commonly_known== 11679 (pos)
                    (Ba_msg_p6)

                    ; #26239: <==negation-removal== 20371 (pos)
                    (not (Bb_not_msg_p6))

                    ; #31351: <==negation-removal== 83661 (pos)
                    (not (Pc_not_msg_p6))

                    ; #35222: <==negation-removal== 37348 (pos)
                    (not (Ba_not_msg_p6))

                    ; #49734: <==negation-removal== 62581 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #57259: <==negation-removal== 11679 (pos)
                    (not (not_msg_p6))

                    ; #58911: <==negation-removal== 11842 (pos)
                    (not (Ba_not_survivorat_s_p6))

                    ; #59587: <==negation-removal== 18303 (pos)
                    (not (Pb_not_msg_p6))

                    ; #65777: <==negation-removal== 77272 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #65838: <==negation-removal== 49552 (pos)
                    (not (Pc_not_survivorat_s_p6))

                    ; #67612: <==negation-removal== 41342 (pos)
                    (not (Bc_not_msg_p6))

                    ; #70515: <==negation-removal== 87015 (pos)
                    (not (Pa_not_msg_p6))

                    ; #75921: <==negation-removal== 41396 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #82031: <==negation-removal== 46089 (pos)
                    (not (Pa_not_survivorat_s_p6))))

    (:action commsurvivor_p7_a_s
        :precondition (and (Pa_survivorat_s_p7)
                           (Ba_survivorat_s_p7)
                           (at_a_p7))
        :effect (and
                    ; #24372: <==commonly_known== 70925 (pos)
                    (Bc_msg_p7)

                    ; #29525: <==closure== 66945 (pos)
                    (Pa_msg_p7)

                    ; #29795: <==closure== 90318 (pos)
                    (Pb_msg_p7)

                    ; #33668: origin
                    (Bc_survivorat_s_p7)

                    ; #38758: origin
                    (Ba_survivorat_s_p7)

                    ; #45017: <==closure== 69414 (pos)
                    (Pb_survivorat_s_p7)

                    ; #58334: <==closure== 24372 (pos)
                    (Pc_msg_p7)

                    ; #66945: <==commonly_known== 70925 (pos)
                    (Ba_msg_p7)

                    ; #68161: <==closure== 33668 (pos)
                    (Pc_survivorat_s_p7)

                    ; #69414: origin
                    (Bb_survivorat_s_p7)

                    ; #70925: origin
                    (msg_p7)

                    ; #76864: <==closure== 38758 (pos)
                    (Pa_survivorat_s_p7)

                    ; #90318: <==commonly_known== 70925 (pos)
                    (Bb_msg_p7)

                    ; #11935: <==negation-removal== 45017 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #12573: <==negation-removal== 70925 (pos)
                    (not (not_msg_p7))

                    ; #12618: <==negation-removal== 29525 (pos)
                    (not (Ba_not_msg_p7))

                    ; #12852: <==negation-removal== 90318 (pos)
                    (not (Pb_not_msg_p7))

                    ; #16456: <==negation-removal== 29795 (pos)
                    (not (Bb_not_msg_p7))

                    ; #16627: <==negation-removal== 68161 (pos)
                    (not (Bc_not_survivorat_s_p7))

                    ; #17169: <==negation-removal== 33668 (pos)
                    (not (Pc_not_survivorat_s_p7))

                    ; #22137: <==negation-removal== 69414 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #22905: <==negation-removal== 38758 (pos)
                    (not (Pa_not_survivorat_s_p7))

                    ; #30991: <==negation-removal== 24372 (pos)
                    (not (Pc_not_msg_p7))

                    ; #37129: <==negation-removal== 76864 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #71295: <==negation-removal== 58334 (pos)
                    (not (Bc_not_msg_p7))

                    ; #93375: <==negation-removal== 66945 (pos)
                    (not (Pa_not_msg_p7))))

    (:action commsurvivor_p7_b_s
        :precondition (and (Bb_survivorat_s_p7)
                           (at_b_p7)
                           (Pb_survivorat_s_p7))
        :effect (and
                    ; #24372: <==commonly_known== 70925 (pos)
                    (Bc_msg_p7)

                    ; #29525: <==closure== 66945 (pos)
                    (Pa_msg_p7)

                    ; #29795: <==closure== 90318 (pos)
                    (Pb_msg_p7)

                    ; #33668: origin
                    (Bc_survivorat_s_p7)

                    ; #38758: origin
                    (Ba_survivorat_s_p7)

                    ; #45017: <==closure== 69414 (pos)
                    (Pb_survivorat_s_p7)

                    ; #58334: <==closure== 24372 (pos)
                    (Pc_msg_p7)

                    ; #66945: <==commonly_known== 70925 (pos)
                    (Ba_msg_p7)

                    ; #68161: <==closure== 33668 (pos)
                    (Pc_survivorat_s_p7)

                    ; #69414: origin
                    (Bb_survivorat_s_p7)

                    ; #70925: origin
                    (msg_p7)

                    ; #76864: <==closure== 38758 (pos)
                    (Pa_survivorat_s_p7)

                    ; #90318: <==commonly_known== 70925 (pos)
                    (Bb_msg_p7)

                    ; #11935: <==negation-removal== 45017 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #12573: <==negation-removal== 70925 (pos)
                    (not (not_msg_p7))

                    ; #12618: <==negation-removal== 29525 (pos)
                    (not (Ba_not_msg_p7))

                    ; #12852: <==negation-removal== 90318 (pos)
                    (not (Pb_not_msg_p7))

                    ; #16456: <==negation-removal== 29795 (pos)
                    (not (Bb_not_msg_p7))

                    ; #16627: <==negation-removal== 68161 (pos)
                    (not (Bc_not_survivorat_s_p7))

                    ; #17169: <==negation-removal== 33668 (pos)
                    (not (Pc_not_survivorat_s_p7))

                    ; #22137: <==negation-removal== 69414 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #22905: <==negation-removal== 38758 (pos)
                    (not (Pa_not_survivorat_s_p7))

                    ; #30991: <==negation-removal== 24372 (pos)
                    (not (Pc_not_msg_p7))

                    ; #37129: <==negation-removal== 76864 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #71295: <==negation-removal== 58334 (pos)
                    (not (Bc_not_msg_p7))

                    ; #93375: <==negation-removal== 66945 (pos)
                    (not (Pa_not_msg_p7))))

    (:action commsurvivor_p7_c_s
        :precondition (and (at_c_p7)
                           (Bc_survivorat_s_p7)
                           (Pc_survivorat_s_p7))
        :effect (and
                    ; #24372: <==commonly_known== 70925 (pos)
                    (Bc_msg_p7)

                    ; #29525: <==closure== 66945 (pos)
                    (Pa_msg_p7)

                    ; #29795: <==closure== 90318 (pos)
                    (Pb_msg_p7)

                    ; #33668: origin
                    (Bc_survivorat_s_p7)

                    ; #38758: origin
                    (Ba_survivorat_s_p7)

                    ; #45017: <==closure== 69414 (pos)
                    (Pb_survivorat_s_p7)

                    ; #58334: <==closure== 24372 (pos)
                    (Pc_msg_p7)

                    ; #66945: <==commonly_known== 70925 (pos)
                    (Ba_msg_p7)

                    ; #68161: <==closure== 33668 (pos)
                    (Pc_survivorat_s_p7)

                    ; #69414: origin
                    (Bb_survivorat_s_p7)

                    ; #70925: origin
                    (msg_p7)

                    ; #76864: <==closure== 38758 (pos)
                    (Pa_survivorat_s_p7)

                    ; #90318: <==commonly_known== 70925 (pos)
                    (Bb_msg_p7)

                    ; #11935: <==negation-removal== 45017 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #12573: <==negation-removal== 70925 (pos)
                    (not (not_msg_p7))

                    ; #12618: <==negation-removal== 29525 (pos)
                    (not (Ba_not_msg_p7))

                    ; #12852: <==negation-removal== 90318 (pos)
                    (not (Pb_not_msg_p7))

                    ; #16456: <==negation-removal== 29795 (pos)
                    (not (Bb_not_msg_p7))

                    ; #16627: <==negation-removal== 68161 (pos)
                    (not (Bc_not_survivorat_s_p7))

                    ; #17169: <==negation-removal== 33668 (pos)
                    (not (Pc_not_survivorat_s_p7))

                    ; #22137: <==negation-removal== 69414 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #22905: <==negation-removal== 38758 (pos)
                    (not (Pa_not_survivorat_s_p7))

                    ; #30991: <==negation-removal== 24372 (pos)
                    (not (Pc_not_msg_p7))

                    ; #37129: <==negation-removal== 76864 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #71295: <==negation-removal== 58334 (pos)
                    (not (Bc_not_msg_p7))

                    ; #93375: <==negation-removal== 66945 (pos)
                    (not (Pa_not_msg_p7))))

    (:action commsurvivor_p8_a_s
        :precondition (and (Ba_survivorat_s_p8)
                           (Pa_survivorat_s_p8)
                           (at_a_p8))
        :effect (and
                    ; #16394: <==commonly_known== 56326 (pos)
                    (Bc_msg_p8)

                    ; #43373: <==closure== 46875 (pos)
                    (Pb_survivorat_s_p8)

                    ; #45271: <==closure== 63985 (pos)
                    (Pb_msg_p8)

                    ; #46875: origin
                    (Bb_survivorat_s_p8)

                    ; #53529: <==closure== 91576 (pos)
                    (Pa_msg_p8)

                    ; #56326: origin
                    (msg_p8)

                    ; #60212: <==closure== 77723 (pos)
                    (Pa_survivorat_s_p8)

                    ; #63290: origin
                    (Bc_survivorat_s_p8)

                    ; #63985: <==commonly_known== 56326 (pos)
                    (Bb_msg_p8)

                    ; #73619: <==closure== 63290 (pos)
                    (Pc_survivorat_s_p8)

                    ; #77723: origin
                    (Ba_survivorat_s_p8)

                    ; #78681: <==closure== 16394 (pos)
                    (Pc_msg_p8)

                    ; #91576: <==commonly_known== 56326 (pos)
                    (Ba_msg_p8)

                    ; #12533: <==negation-removal== 43373 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #18888: <==negation-removal== 63290 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #22174: <==negation-removal== 60212 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #24389: <==negation-removal== 91576 (pos)
                    (not (Pa_not_msg_p8))

                    ; #27058: <==negation-removal== 63985 (pos)
                    (not (Pb_not_msg_p8))

                    ; #29656: <==negation-removal== 46875 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #38093: <==negation-removal== 73619 (pos)
                    (not (Bc_not_survivorat_s_p8))

                    ; #51698: <==negation-removal== 78681 (pos)
                    (not (Bc_not_msg_p8))

                    ; #68520: <==negation-removal== 56326 (pos)
                    (not (not_msg_p8))

                    ; #82736: <==negation-removal== 53529 (pos)
                    (not (Ba_not_msg_p8))

                    ; #83221: <==negation-removal== 16394 (pos)
                    (not (Pc_not_msg_p8))

                    ; #83453: <==negation-removal== 77723 (pos)
                    (not (Pa_not_survivorat_s_p8))

                    ; #87809: <==negation-removal== 45271 (pos)
                    (not (Bb_not_msg_p8))))

    (:action commsurvivor_p8_b_s
        :precondition (and (Pb_survivorat_s_p8)
                           (Bb_survivorat_s_p8)
                           (at_b_p8))
        :effect (and
                    ; #16394: <==commonly_known== 56326 (pos)
                    (Bc_msg_p8)

                    ; #43373: <==closure== 46875 (pos)
                    (Pb_survivorat_s_p8)

                    ; #45271: <==closure== 63985 (pos)
                    (Pb_msg_p8)

                    ; #46875: origin
                    (Bb_survivorat_s_p8)

                    ; #53529: <==closure== 91576 (pos)
                    (Pa_msg_p8)

                    ; #56326: origin
                    (msg_p8)

                    ; #60212: <==closure== 77723 (pos)
                    (Pa_survivorat_s_p8)

                    ; #63290: origin
                    (Bc_survivorat_s_p8)

                    ; #63985: <==commonly_known== 56326 (pos)
                    (Bb_msg_p8)

                    ; #73619: <==closure== 63290 (pos)
                    (Pc_survivorat_s_p8)

                    ; #77723: origin
                    (Ba_survivorat_s_p8)

                    ; #78681: <==closure== 16394 (pos)
                    (Pc_msg_p8)

                    ; #91576: <==commonly_known== 56326 (pos)
                    (Ba_msg_p8)

                    ; #12533: <==negation-removal== 43373 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #18888: <==negation-removal== 63290 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #22174: <==negation-removal== 60212 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #24389: <==negation-removal== 91576 (pos)
                    (not (Pa_not_msg_p8))

                    ; #27058: <==negation-removal== 63985 (pos)
                    (not (Pb_not_msg_p8))

                    ; #29656: <==negation-removal== 46875 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #38093: <==negation-removal== 73619 (pos)
                    (not (Bc_not_survivorat_s_p8))

                    ; #51698: <==negation-removal== 78681 (pos)
                    (not (Bc_not_msg_p8))

                    ; #68520: <==negation-removal== 56326 (pos)
                    (not (not_msg_p8))

                    ; #82736: <==negation-removal== 53529 (pos)
                    (not (Ba_not_msg_p8))

                    ; #83221: <==negation-removal== 16394 (pos)
                    (not (Pc_not_msg_p8))

                    ; #83453: <==negation-removal== 77723 (pos)
                    (not (Pa_not_survivorat_s_p8))

                    ; #87809: <==negation-removal== 45271 (pos)
                    (not (Bb_not_msg_p8))))

    (:action commsurvivor_p8_c_s
        :precondition (and (Pc_survivorat_s_p8)
                           (Bc_survivorat_s_p8)
                           (at_c_p8))
        :effect (and
                    ; #16394: <==commonly_known== 56326 (pos)
                    (Bc_msg_p8)

                    ; #43373: <==closure== 46875 (pos)
                    (Pb_survivorat_s_p8)

                    ; #45271: <==closure== 63985 (pos)
                    (Pb_msg_p8)

                    ; #46875: origin
                    (Bb_survivorat_s_p8)

                    ; #53529: <==closure== 91576 (pos)
                    (Pa_msg_p8)

                    ; #56326: origin
                    (msg_p8)

                    ; #60212: <==closure== 77723 (pos)
                    (Pa_survivorat_s_p8)

                    ; #63290: origin
                    (Bc_survivorat_s_p8)

                    ; #63985: <==commonly_known== 56326 (pos)
                    (Bb_msg_p8)

                    ; #73619: <==closure== 63290 (pos)
                    (Pc_survivorat_s_p8)

                    ; #77723: origin
                    (Ba_survivorat_s_p8)

                    ; #78681: <==closure== 16394 (pos)
                    (Pc_msg_p8)

                    ; #91576: <==commonly_known== 56326 (pos)
                    (Ba_msg_p8)

                    ; #12533: <==negation-removal== 43373 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #18888: <==negation-removal== 63290 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #22174: <==negation-removal== 60212 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #24389: <==negation-removal== 91576 (pos)
                    (not (Pa_not_msg_p8))

                    ; #27058: <==negation-removal== 63985 (pos)
                    (not (Pb_not_msg_p8))

                    ; #29656: <==negation-removal== 46875 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #38093: <==negation-removal== 73619 (pos)
                    (not (Bc_not_survivorat_s_p8))

                    ; #51698: <==negation-removal== 78681 (pos)
                    (not (Bc_not_msg_p8))

                    ; #68520: <==negation-removal== 56326 (pos)
                    (not (not_msg_p8))

                    ; #82736: <==negation-removal== 53529 (pos)
                    (not (Ba_not_msg_p8))

                    ; #83221: <==negation-removal== 16394 (pos)
                    (not (Pc_not_msg_p8))

                    ; #83453: <==negation-removal== 77723 (pos)
                    (not (Pa_not_survivorat_s_p8))

                    ; #87809: <==negation-removal== 45271 (pos)
                    (not (Bb_not_msg_p8))))

    (:action commsurvivor_p9_a_s
        :precondition (and (at_a_p9)
                           (Pa_survivorat_s_p9)
                           (Ba_survivorat_s_p9))
        :effect (and
                    ; #11470: <==closure== 48665 (pos)
                    (Pb_survivorat_s_p9)

                    ; #13574: origin
                    (msg_p9)

                    ; #23139: <==closure== 33810 (pos)
                    (Pa_msg_p9)

                    ; #26271: origin
                    (Bc_survivorat_s_p9)

                    ; #27620: <==closure== 62163 (pos)
                    (Pb_msg_p9)

                    ; #33810: <==commonly_known== 13574 (pos)
                    (Ba_msg_p9)

                    ; #42898: origin
                    (Ba_survivorat_s_p9)

                    ; #48665: origin
                    (Bb_survivorat_s_p9)

                    ; #50409: <==closure== 26271 (pos)
                    (Pc_survivorat_s_p9)

                    ; #57545: <==commonly_known== 13574 (pos)
                    (Bc_msg_p9)

                    ; #60183: <==closure== 57545 (pos)
                    (Pc_msg_p9)

                    ; #62163: <==commonly_known== 13574 (pos)
                    (Bb_msg_p9)

                    ; #89334: <==closure== 42898 (pos)
                    (Pa_survivorat_s_p9)

                    ; #10444: <==negation-removal== 50409 (pos)
                    (not (Bc_not_survivorat_s_p9))

                    ; #23901: <==negation-removal== 11470 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #24995: <==negation-removal== 62163 (pos)
                    (not (Pb_not_msg_p9))

                    ; #26508: <==negation-removal== 89334 (pos)
                    (not (Ba_not_survivorat_s_p9))

                    ; #35609: <==negation-removal== 13574 (pos)
                    (not (not_msg_p9))

                    ; #37222: <==negation-removal== 42898 (pos)
                    (not (Pa_not_survivorat_s_p9))

                    ; #48869: <==negation-removal== 60183 (pos)
                    (not (Bc_not_msg_p9))

                    ; #50559: <==negation-removal== 27620 (pos)
                    (not (Bb_not_msg_p9))

                    ; #64626: <==negation-removal== 48665 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #81831: <==negation-removal== 33810 (pos)
                    (not (Pa_not_msg_p9))

                    ; #86606: <==negation-removal== 26271 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #89693: <==negation-removal== 57545 (pos)
                    (not (Pc_not_msg_p9))

                    ; #89788: <==negation-removal== 23139 (pos)
                    (not (Ba_not_msg_p9))))

    (:action commsurvivor_p9_b_s
        :precondition (and (at_b_p9)
                           (Pb_survivorat_s_p9)
                           (Bb_survivorat_s_p9))
        :effect (and
                    ; #11470: <==closure== 48665 (pos)
                    (Pb_survivorat_s_p9)

                    ; #13574: origin
                    (msg_p9)

                    ; #23139: <==closure== 33810 (pos)
                    (Pa_msg_p9)

                    ; #26271: origin
                    (Bc_survivorat_s_p9)

                    ; #27620: <==closure== 62163 (pos)
                    (Pb_msg_p9)

                    ; #33810: <==commonly_known== 13574 (pos)
                    (Ba_msg_p9)

                    ; #42898: origin
                    (Ba_survivorat_s_p9)

                    ; #48665: origin
                    (Bb_survivorat_s_p9)

                    ; #50409: <==closure== 26271 (pos)
                    (Pc_survivorat_s_p9)

                    ; #57545: <==commonly_known== 13574 (pos)
                    (Bc_msg_p9)

                    ; #60183: <==closure== 57545 (pos)
                    (Pc_msg_p9)

                    ; #62163: <==commonly_known== 13574 (pos)
                    (Bb_msg_p9)

                    ; #89334: <==closure== 42898 (pos)
                    (Pa_survivorat_s_p9)

                    ; #10444: <==negation-removal== 50409 (pos)
                    (not (Bc_not_survivorat_s_p9))

                    ; #23901: <==negation-removal== 11470 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #24995: <==negation-removal== 62163 (pos)
                    (not (Pb_not_msg_p9))

                    ; #26508: <==negation-removal== 89334 (pos)
                    (not (Ba_not_survivorat_s_p9))

                    ; #35609: <==negation-removal== 13574 (pos)
                    (not (not_msg_p9))

                    ; #37222: <==negation-removal== 42898 (pos)
                    (not (Pa_not_survivorat_s_p9))

                    ; #48869: <==negation-removal== 60183 (pos)
                    (not (Bc_not_msg_p9))

                    ; #50559: <==negation-removal== 27620 (pos)
                    (not (Bb_not_msg_p9))

                    ; #64626: <==negation-removal== 48665 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #81831: <==negation-removal== 33810 (pos)
                    (not (Pa_not_msg_p9))

                    ; #86606: <==negation-removal== 26271 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #89693: <==negation-removal== 57545 (pos)
                    (not (Pc_not_msg_p9))

                    ; #89788: <==negation-removal== 23139 (pos)
                    (not (Ba_not_msg_p9))))

    (:action commsurvivor_p9_c_s
        :precondition (and (Pc_survivorat_s_p9)
                           (Bc_survivorat_s_p9)
                           (at_c_p9))
        :effect (and
                    ; #11470: <==closure== 48665 (pos)
                    (Pb_survivorat_s_p9)

                    ; #13574: origin
                    (msg_p9)

                    ; #23139: <==closure== 33810 (pos)
                    (Pa_msg_p9)

                    ; #26271: origin
                    (Bc_survivorat_s_p9)

                    ; #27620: <==closure== 62163 (pos)
                    (Pb_msg_p9)

                    ; #33810: <==commonly_known== 13574 (pos)
                    (Ba_msg_p9)

                    ; #42898: origin
                    (Ba_survivorat_s_p9)

                    ; #48665: origin
                    (Bb_survivorat_s_p9)

                    ; #50409: <==closure== 26271 (pos)
                    (Pc_survivorat_s_p9)

                    ; #57545: <==commonly_known== 13574 (pos)
                    (Bc_msg_p9)

                    ; #60183: <==closure== 57545 (pos)
                    (Pc_msg_p9)

                    ; #62163: <==commonly_known== 13574 (pos)
                    (Bb_msg_p9)

                    ; #89334: <==closure== 42898 (pos)
                    (Pa_survivorat_s_p9)

                    ; #10444: <==negation-removal== 50409 (pos)
                    (not (Bc_not_survivorat_s_p9))

                    ; #23901: <==negation-removal== 11470 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #24995: <==negation-removal== 62163 (pos)
                    (not (Pb_not_msg_p9))

                    ; #26508: <==negation-removal== 89334 (pos)
                    (not (Ba_not_survivorat_s_p9))

                    ; #35609: <==negation-removal== 13574 (pos)
                    (not (not_msg_p9))

                    ; #37222: <==negation-removal== 42898 (pos)
                    (not (Pa_not_survivorat_s_p9))

                    ; #48869: <==negation-removal== 60183 (pos)
                    (not (Bc_not_msg_p9))

                    ; #50559: <==negation-removal== 27620 (pos)
                    (not (Bb_not_msg_p9))

                    ; #64626: <==negation-removal== 48665 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #81831: <==negation-removal== 33810 (pos)
                    (not (Pa_not_msg_p9))

                    ; #86606: <==negation-removal== 26271 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #89693: <==negation-removal== 57545 (pos)
                    (not (Pc_not_msg_p9))

                    ; #89788: <==negation-removal== 23139 (pos)
                    (not (Ba_not_msg_p9))))

    (:action communcells_p0011_p0011_a
        :precondition (and (succ_p0011_p0011)
                           (at_a_p0011)
                           (Pa_not_blocked_p0011)
                           (checked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p0011_p0011_b
        :precondition (and (Bb_not_blocked_p0011)
                           (succ_p0011_p0011)
                           (checked_p0011)
                           (at_b_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p0011_p0011_c
        :precondition (and (at_c_p0011)
                           (succ_p0011_p0011)
                           (Bc_not_blocked_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p0011_p012_a
        :precondition (and (Pa_not_blocked_p012)
                           (checked_p012)
                           (at_a_p0011)
                           (Ba_not_blocked_p012)
                           (succ_p0011_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p0011_p012_b
        :precondition (and (checked_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (at_b_p0011)
                           (succ_p0011_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p0011_p012_c
        :precondition (and (at_c_p0011)
                           (checked_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (succ_p0011_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p0011_p10_a
        :precondition (and (succ_p0011_p10)
                           (Pa_not_blocked_p10)
                           (Ba_not_blocked_p10)
                           (at_a_p0011)
                           (checked_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p0011_p10_b
        :precondition (and (succ_p0011_p10)
                           (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (checked_p10)
                           (at_b_p0011))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p0011_p10_c
        :precondition (and (at_c_p0011)
                           (succ_p0011_p10)
                           (Bc_not_blocked_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p0011_p1_a
        :precondition (and (Pa_not_blocked_p1)
                           (checked_p1)
                           (succ_p0011_p1)
                           (at_a_p0011)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p0011_p1_b
        :precondition (and (checked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p0011_p1)
                           (Pb_not_blocked_p1)
                           (at_b_p0011))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p0011_p1_c
        :precondition (and (at_c_p0011)
                           (checked_p1)
                           (succ_p0011_p1)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p0011_p2_a
        :precondition (and (succ_p0011_p2)
                           (at_a_p0011)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p0011_p2_b
        :precondition (and (Bb_not_blocked_p2)
                           (Pb_not_blocked_p2)
                           (succ_p0011_p2)
                           (checked_p2)
                           (at_b_p0011))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p0011_p2_c
        :precondition (and (at_c_p0011)
                           (Bc_not_blocked_p2)
                           (succ_p0011_p2)
                           (checked_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p0011_p3_a
        :precondition (and (succ_p0011_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p0011)
                           (Ba_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p0011_p3_b
        :precondition (and (succ_p0011_p3)
                           (Pb_not_blocked_p3)
                           (checked_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p0011))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p0011_p3_c
        :precondition (and (at_c_p0011)
                           (succ_p0011_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p0011_p4_a
        :precondition (and (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p0011)
                           (checked_p4)
                           (succ_p0011_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p0011_p4_b
        :precondition (and (Bb_not_blocked_p4)
                           (checked_p4)
                           (Pb_not_blocked_p4)
                           (at_b_p0011)
                           (succ_p0011_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p0011_p4_c
        :precondition (and (Pc_not_blocked_p4)
                           (at_c_p0011)
                           (Bc_not_blocked_p4)
                           (checked_p4)
                           (succ_p0011_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p0011_p5_a
        :precondition (and (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p0011)
                           (checked_p5)
                           (succ_p0011_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p0011_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (succ_p0011_p5)
                           (checked_p5)
                           (at_b_p0011)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p0011_p5_c
        :precondition (and (at_c_p0011)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5)
                           (succ_p0011_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p0011_p6_a
        :precondition (and (succ_p0011_p6)
                           (Pa_not_blocked_p6)
                           (checked_p6)
                           (at_a_p0011)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p0011_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (succ_p0011_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p0011))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p0011_p6_c
        :precondition (and (at_c_p0011)
                           (succ_p0011_p6)
                           (Bc_not_blocked_p6)
                           (checked_p6)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p0011_p7_a
        :precondition (and (succ_p0011_p7)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p0011)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p0011_p7_b
        :precondition (and (succ_p0011_p7)
                           (checked_p7)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7)
                           (at_b_p0011))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p0011_p7_c
        :precondition (and (at_c_p0011)
                           (succ_p0011_p7)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p0011_p8_a
        :precondition (and (at_a_p0011)
                           (checked_p8)
                           (Pa_not_blocked_p8)
                           (succ_p0011_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p0011_p8_b
        :precondition (and (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8)
                           (checked_p8)
                           (at_b_p0011)
                           (succ_p0011_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p0011_p8_c
        :precondition (and (at_c_p0011)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (succ_p0011_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p0011_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (succ_p0011_p9)
                           (at_a_p0011)
                           (Pa_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p0011_p9_b
        :precondition (and (succ_p0011_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (at_b_p0011)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p0011_p9_c
        :precondition (and (at_c_p0011)
                           (succ_p0011_p9)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p012_p0011_a
        :precondition (and (at_a_p012)
                           (Pa_not_blocked_p0011)
                           (checked_p0011)
                           (Ba_not_blocked_p0011)
                           (succ_p012_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p012_p0011_b
        :precondition (and (Bb_not_blocked_p0011)
                           (at_b_p012)
                           (succ_p012_p0011)
                           (checked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p012_p0011_c
        :precondition (and (Bc_not_blocked_p0011)
                           (at_c_p012)
                           (checked_p0011)
                           (Pc_not_blocked_p0011)
                           (succ_p012_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p012_p012_a
        :precondition (and (at_a_p012)
                           (Pa_not_blocked_p012)
                           (checked_p012)
                           (Ba_not_blocked_p012)
                           (succ_p012_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p012_p012_b
        :precondition (and (checked_p012)
                           (at_b_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (succ_p012_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p012_p012_c
        :precondition (and (checked_p012)
                           (Pc_not_blocked_p012)
                           (at_c_p012)
                           (Bc_not_blocked_p012)
                           (succ_p012_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p012_p10_a
        :precondition (and (at_a_p012)
                           (Pa_not_blocked_p10)
                           (Ba_not_blocked_p10)
                           (checked_p10)
                           (succ_p012_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p012_p10_b
        :precondition (and (Bb_not_blocked_p10)
                           (at_b_p012)
                           (Pb_not_blocked_p10)
                           (checked_p10)
                           (succ_p012_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p012_p10_c
        :precondition (and (Bc_not_blocked_p10)
                           (at_c_p012)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (succ_p012_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p012_p1_a
        :precondition (and (at_a_p012)
                           (Pa_not_blocked_p1)
                           (succ_p012_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p012_p1_b
        :precondition (and (succ_p012_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (at_b_p012)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p012_p1_c
        :precondition (and (succ_p012_p1)
                           (checked_p1)
                           (at_c_p012)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p012_p2_a
        :precondition (and (at_a_p012)
                           (succ_p012_p2)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p012_p2_b
        :precondition (and (succ_p012_p2)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (at_b_p012)
                           (checked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p012_p2_c
        :precondition (and (succ_p012_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p012)
                           (checked_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p012_p3_a
        :precondition (and (at_a_p012)
                           (Pa_not_blocked_p3)
                           (succ_p012_p3)
                           (Ba_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p012_p3_b
        :precondition (and (succ_p012_p3)
                           (at_b_p012)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p012_p3_c
        :precondition (and (Pc_not_blocked_p3)
                           (succ_p012_p3)
                           (checked_p3)
                           (at_c_p012)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p012_p4_a
        :precondition (and (at_a_p012)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p012_p4)
                           (checked_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p012_p4_b
        :precondition (and (Bb_not_blocked_p4)
                           (at_b_p012)
                           (succ_p012_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p012_p4_c
        :precondition (and (Pc_not_blocked_p4)
                           (Bc_not_blocked_p4)
                           (succ_p012_p4)
                           (at_c_p012)
                           (checked_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p012_p5_a
        :precondition (and (at_a_p012)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (checked_p5)
                           (succ_p012_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p012_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (at_b_p012)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (succ_p012_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p012_p5_c
        :precondition (and (checked_p5)
                           (at_c_p012)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5)
                           (succ_p012_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p012_p6_a
        :precondition (and (at_a_p012)
                           (checked_p6)
                           (Pa_not_blocked_p6)
                           (succ_p012_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p012_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (succ_p012_p6)
                           (at_b_p012))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p012_p6_c
        :precondition (and (checked_p6)
                           (Bc_not_blocked_p6)
                           (succ_p012_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p012))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p012_p7_a
        :precondition (and (at_a_p012)
                           (succ_p012_p7)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p012_p7_b
        :precondition (and (succ_p012_p7)
                           (checked_p7)
                           (at_b_p012)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p012_p7_c
        :precondition (and (succ_p012_p7)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (at_c_p012)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p012_p8_a
        :precondition (and (at_a_p012)
                           (succ_p012_p8)
                           (checked_p8)
                           (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p012_p8_b
        :precondition (and (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8)
                           (at_b_p012)
                           (succ_p012_p8)
                           (checked_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p012_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (succ_p012_p8)
                           (Bc_not_blocked_p8)
                           (at_c_p012)
                           (checked_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p012_p9_a
        :precondition (and (at_a_p012)
                           (Ba_not_blocked_p9)
                           (succ_p012_p9)
                           (Pa_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p012_p9_b
        :precondition (and (at_b_p012)
                           (Bb_not_blocked_p9)
                           (succ_p012_p9)
                           (Pb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p012_p9_c
        :precondition (and (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (succ_p012_p9)
                           (at_c_p012)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p10_p0011_a
        :precondition (and (at_a_p10)
                           (Pa_not_blocked_p0011)
                           (succ_p10_p0011)
                           (checked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p10_p0011_b
        :precondition (and (at_b_p10)
                           (Bb_not_blocked_p0011)
                           (succ_p10_p0011)
                           (checked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p10_p0011_c
        :precondition (and (at_c_p10)
                           (Bc_not_blocked_p0011)
                           (succ_p10_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p10_p012_a
        :precondition (and (Pa_not_blocked_p012)
                           (succ_p10_p012)
                           (at_a_p10)
                           (checked_p012)
                           (Ba_not_blocked_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p10_p012_b
        :precondition (and (at_b_p10)
                           (checked_p012)
                           (succ_p10_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p10_p012_c
        :precondition (and (at_c_p10)
                           (succ_p10_p012)
                           (checked_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p10_p10_a
        :precondition (and (Pa_not_blocked_p10)
                           (Ba_not_blocked_p10)
                           (at_a_p10)
                           (checked_p10)
                           (succ_p10_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p10_p10_b
        :precondition (and (at_b_p10)
                           (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (checked_p10)
                           (succ_p10_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p10_p10_c
        :precondition (and (at_c_p10)
                           (Bc_not_blocked_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (succ_p10_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p10_p1_a
        :precondition (and (Pa_not_blocked_p1)
                           (checked_p1)
                           (at_a_p10)
                           (Ba_not_blocked_p1)
                           (succ_p10_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p10_p1_b
        :precondition (and (at_b_p10)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (succ_p10_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p10_p1_c
        :precondition (and (checked_p1)
                           (at_c_p10)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (succ_p10_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p10_p2_a
        :precondition (and (succ_p10_p2)
                           (at_a_p10)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p10_p2_b
        :precondition (and (at_b_p10)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (succ_p10_p2)
                           (checked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p10_p2_c
        :precondition (and (succ_p10_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p10)
                           (checked_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p10_p3_a
        :precondition (and (checked_p3)
                           (Pa_not_blocked_p3)
                           (succ_p10_p3)
                           (at_a_p10)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p10_p3_b
        :precondition (and (at_b_p10)
                           (succ_p10_p3)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p10_p3_c
        :precondition (and (at_c_p10)
                           (Pc_not_blocked_p3)
                           (succ_p10_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p10_p4_a
        :precondition (and (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p10)
                           (checked_p4)
                           (succ_p10_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p10_p4_b
        :precondition (and (at_b_p10)
                           (Bb_not_blocked_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4)
                           (succ_p10_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p10_p4_c
        :precondition (and (Pc_not_blocked_p4)
                           (at_c_p10)
                           (Bc_not_blocked_p4)
                           (checked_p4)
                           (succ_p10_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p10_p5_a
        :precondition (and (succ_p10_p5)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p10)
                           (checked_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p10_p5_b
        :precondition (and (at_b_p10)
                           (Bb_not_blocked_p5)
                           (succ_p10_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p10_p5_c
        :precondition (and (succ_p10_p5)
                           (at_c_p10)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p10_p6_a
        :precondition (and (checked_p6)
                           (Pa_not_blocked_p6)
                           (at_a_p10)
                           (Ba_not_blocked_p6)
                           (succ_p10_p6))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p10_p6_b
        :precondition (and (at_b_p10)
                           (Pb_not_blocked_p6)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (succ_p10_p6))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p10_p6_c
        :precondition (and (checked_p6)
                           (Bc_not_blocked_p6)
                           (at_c_p10)
                           (Pc_not_blocked_p6)
                           (succ_p10_p6))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p10_p7_a
        :precondition (and (checked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p10)
                           (succ_p10_p7)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p10_p7_b
        :precondition (and (at_b_p10)
                           (succ_p10_p7)
                           (checked_p7)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p10_p7_c
        :precondition (and (at_c_p10)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (succ_p10_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p10_p8_a
        :precondition (and (at_a_p10)
                           (succ_p10_p8)
                           (checked_p8)
                           (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p10_p8_b
        :precondition (and (at_b_p10)
                           (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8)
                           (succ_p10_p8)
                           (checked_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p10_p8_c
        :precondition (and (Bc_not_blocked_p8)
                           (at_c_p10)
                           (Pc_not_blocked_p8)
                           (succ_p10_p8)
                           (checked_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p10_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (at_a_p10)
                           (Pa_not_blocked_p9)
                           (checked_p9)
                           (succ_p10_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p10_p9_b
        :precondition (and (at_b_p10)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9)
                           (succ_p10_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p10_p9_c
        :precondition (and (at_c_p10)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (checked_p9)
                           (succ_p10_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p1_p0011_a
        :precondition (and (at_a_p1)
                           (Pa_not_blocked_p0011)
                           (succ_p1_p0011)
                           (checked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p1_p0011_b
        :precondition (and (at_b_p1)
                           (Bb_not_blocked_p0011)
                           (succ_p1_p0011)
                           (checked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p1_p0011_c
        :precondition (and (Bc_not_blocked_p0011)
                           (succ_p1_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011)
                           (at_c_p1))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p1_p012_a
        :precondition (and (at_a_p1)
                           (Pa_not_blocked_p012)
                           (checked_p012)
                           (succ_p1_p012)
                           (Ba_not_blocked_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p1_p012_b
        :precondition (and (at_b_p1)
                           (checked_p012)
                           (succ_p1_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p1_p012_c
        :precondition (and (checked_p012)
                           (succ_p1_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (at_c_p1))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p1_p10_a
        :precondition (and (at_a_p1)
                           (Pa_not_blocked_p10)
                           (checked_p10)
                           (Ba_not_blocked_p10)
                           (succ_p1_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p1_p10_b
        :precondition (and (at_b_p1)
                           (checked_p10)
                           (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (succ_p1_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p1_p10_c
        :precondition (and (checked_p10)
                           (Bc_not_blocked_p10)
                           (Pc_not_blocked_p10)
                           (succ_p1_p10)
                           (at_c_p1))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p1_p1_a
        :precondition (and (Pa_not_blocked_p1)
                           (at_a_p1)
                           (checked_p1)
                           (succ_p1_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p1_p1_b
        :precondition (and (at_b_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p1_p1_c
        :precondition (and (checked_p1)
                           (Pc_not_blocked_p1)
                           (succ_p1_p1)
                           (Bc_not_blocked_p1)
                           (at_c_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p1_p2_a
        :precondition (and (succ_p1_p2)
                           (at_a_p1)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p1_p2_b
        :precondition (and (Bb_not_blocked_p2)
                           (at_b_p1)
                           (succ_p1_p2)
                           (Pb_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p1_p2_c
        :precondition (and (succ_p1_p2)
                           (Bc_not_blocked_p2)
                           (checked_p2)
                           (Pc_not_blocked_p2)
                           (at_c_p1))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p1_p3_a
        :precondition (and (at_a_p1)
                           (succ_p1_p3)
                           (Ba_not_blocked_p3)
                           (Pa_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p1_p3_b
        :precondition (and (at_b_p1)
                           (succ_p1_p3)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p1_p3_c
        :precondition (and (succ_p1_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3)
                           (at_c_p1))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p1_p4_a
        :precondition (and (at_a_p1)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (checked_p4)
                           (succ_p1_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p1_p4_b
        :precondition (and (at_b_p1)
                           (Bb_not_blocked_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4)
                           (succ_p1_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p1_p4_c
        :precondition (and (Pc_not_blocked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p1)
                           (checked_p4)
                           (succ_p1_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p1_p5_a
        :precondition (and (succ_p1_p5)
                           (at_a_p1)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p1_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (succ_p1_p5)
                           (at_b_p1)
                           (checked_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p1_p5_c
        :precondition (and (succ_p1_p5)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p1))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p1_p6_a
        :precondition (and (checked_p6)
                           (Pa_not_blocked_p6)
                           (at_a_p1)
                           (Ba_not_blocked_p6)
                           (succ_p1_p6))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p1_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (at_b_p1)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (succ_p1_p6))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p1_p6_c
        :precondition (and (checked_p6)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (succ_p1_p6)
                           (at_c_p1))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p1_p7_a
        :precondition (and (at_a_p1)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p1_p7)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p1_p7_b
        :precondition (and (at_b_p1)
                           (checked_p7)
                           (succ_p1_p7)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p1_p7_c
        :precondition (and (Pc_not_blocked_p7)
                           (checked_p7)
                           (succ_p1_p7)
                           (at_c_p1)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p1_p8_a
        :precondition (and (at_a_p1)
                           (succ_p1_p8)
                           (checked_p8)
                           (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p1_p8_b
        :precondition (and (at_b_p1)
                           (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8)
                           (succ_p1_p8)
                           (checked_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p1_p8_c
        :precondition (and (succ_p1_p8)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (at_c_p1))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p1_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (at_a_p1)
                           (succ_p1_p9)
                           (Pa_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p1_p9_b
        :precondition (and (at_b_p1)
                           (Bb_not_blocked_p9)
                           (succ_p1_p9)
                           (Pb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p1_p9_c
        :precondition (and (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p1_p9)
                           (checked_p9)
                           (at_c_p1))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p2_p0011_a
        :precondition (and (succ_p2_p0011)
                           (Pa_not_blocked_p0011)
                           (at_a_p2)
                           (checked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p2_p0011_b
        :precondition (and (Bb_not_blocked_p0011)
                           (succ_p2_p0011)
                           (checked_p0011)
                           (at_b_p2)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p2_p0011_c
        :precondition (and (succ_p2_p0011)
                           (Bc_not_blocked_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011)
                           (at_c_p2))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p2_p012_a
        :precondition (and (Pa_not_blocked_p012)
                           (checked_p012)
                           (at_a_p2)
                           (Ba_not_blocked_p012)
                           (succ_p2_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p2_p012_b
        :precondition (and (checked_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (at_b_p2)
                           (succ_p2_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p2_p012_c
        :precondition (and (checked_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (succ_p2_p012)
                           (at_c_p2))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p2_p10_a
        :precondition (and (Pa_not_blocked_p10)
                           (Ba_not_blocked_p10)
                           (at_a_p2)
                           (checked_p10)
                           (succ_p2_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p2_p10_b
        :precondition (and (checked_p10)
                           (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (at_b_p2)
                           (succ_p2_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p2_p10_c
        :precondition (and (Bc_not_blocked_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (succ_p2_p10)
                           (at_c_p2))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p2_p1_a
        :precondition (and (Pa_not_blocked_p1)
                           (checked_p1)
                           (succ_p2_p1)
                           (at_a_p2)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p2_p1_b
        :precondition (and (checked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p2_p1)
                           (Pb_not_blocked_p1)
                           (at_b_p2))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p2_p1_c
        :precondition (and (checked_p1)
                           (succ_p2_p1)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (at_c_p2))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p2_p2_a
        :precondition (and (checked_p2)
                           (at_a_p2)
                           (Pa_not_blocked_p2)
                           (succ_p2_p2)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p2_p2_b
        :precondition (and (Bb_not_blocked_p2)
                           (Pb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p2_p2_c
        :precondition (and (checked_p2)
                           (Bc_not_blocked_p2)
                           (succ_p2_p2)
                           (Pc_not_blocked_p2)
                           (at_c_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p2_p3_a
        :precondition (and (succ_p2_p3)
                           (Pa_not_blocked_p3)
                           (Ba_not_blocked_p3)
                           (checked_p3)
                           (at_a_p2))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p2_p3_b
        :precondition (and (succ_p2_p3)
                           (at_b_p2)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p2_p3_c
        :precondition (and (succ_p2_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3)
                           (at_c_p2))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p2_p4_a
        :precondition (and (Pa_not_blocked_p4)
                           (succ_p2_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p2)
                           (checked_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p2_p4_b
        :precondition (and (Bb_not_blocked_p4)
                           (succ_p2_p4)
                           (Pb_not_blocked_p4)
                           (at_b_p2)
                           (checked_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p2_p4_c
        :precondition (and (Pc_not_blocked_p4)
                           (succ_p2_p4)
                           (Bc_not_blocked_p4)
                           (checked_p4)
                           (at_c_p2))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p2_p5_a
        :precondition (and (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (checked_p5)
                           (at_a_p2)
                           (succ_p2_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p2_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (at_b_p2)
                           (checked_p5)
                           (succ_p2_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p2_p5_c
        :precondition (and (checked_p5)
                           (succ_p2_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p2))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p2_p6_a
        :precondition (and (checked_p6)
                           (Pa_not_blocked_p6)
                           (succ_p2_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p2))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p2_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (succ_p2_p6)
                           (at_b_p2))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p2_p6_c
        :precondition (and (checked_p6)
                           (Bc_not_blocked_p6)
                           (succ_p2_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p2))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p2_p7_a
        :precondition (and (succ_p2_p7)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p2)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p2_p7_b
        :precondition (and (succ_p2_p7)
                           (checked_p7)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7)
                           (at_b_p2))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p2_p7_c
        :precondition (and (succ_p2_p7)
                           (at_c_p2)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p2_p8_a
        :precondition (and (succ_p2_p8)
                           (at_a_p2)
                           (checked_p8)
                           (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p2_p8_b
        :precondition (and (Bb_not_blocked_p8)
                           (checked_p8)
                           (Pb_not_blocked_p8)
                           (succ_p2_p8)
                           (at_b_p2))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p2_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (succ_p2_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (at_c_p2))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p2_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (succ_p2_p9)
                           (at_a_p2)
                           (Pa_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p2_p9_b
        :precondition (and (succ_p2_p9)
                           (Bb_not_blocked_p9)
                           (at_b_p2)
                           (Pb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p2_p9_c
        :precondition (and (succ_p2_p9)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (checked_p9)
                           (at_c_p2))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p3_p0011_a
        :precondition (and (succ_p3_p0011)
                           (Pa_not_blocked_p0011)
                           (checked_p0011)
                           (Ba_not_blocked_p0011)
                           (at_a_p3))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p3_p0011_b
        :precondition (and (Bb_not_blocked_p0011)
                           (succ_p3_p0011)
                           (checked_p0011)
                           (at_b_p3)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p3_p0011_c
        :precondition (and (at_c_p3)
                           (Bc_not_blocked_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011)
                           (succ_p3_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p3_p012_a
        :precondition (and (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (checked_p012)
                           (succ_p3_p012)
                           (at_a_p3))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p3_p012_b
        :precondition (and (checked_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (succ_p3_p012)
                           (at_b_p3))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p3_p012_c
        :precondition (and (Bc_not_blocked_p012)
                           (checked_p012)
                           (at_c_p3)
                           (succ_p3_p012)
                           (Pc_not_blocked_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p3_p10_a
        :precondition (and (Pa_not_blocked_p10)
                           (Ba_not_blocked_p10)
                           (checked_p10)
                           (succ_p3_p10)
                           (at_a_p3))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p3_p10_b
        :precondition (and (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (checked_p10)
                           (succ_p3_p10)
                           (at_b_p3))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p3_p10_c
        :precondition (and (Bc_not_blocked_p10)
                           (at_c_p3)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (succ_p3_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p3_p1_a
        :precondition (and (Pa_not_blocked_p1)
                           (checked_p1)
                           (succ_p3_p1)
                           (Ba_not_blocked_p1)
                           (at_a_p3))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p3_p1_b
        :precondition (and (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (succ_p3_p1)
                           (at_b_p3))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p3_p1_c
        :precondition (and (checked_p1)
                           (succ_p3_p1)
                           (at_c_p3)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p3_p2_a
        :precondition (and (succ_p3_p2)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p3))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p3_p2_b
        :precondition (and (Bb_not_blocked_p2)
                           (Pb_not_blocked_p2)
                           (succ_p3_p2)
                           (checked_p2)
                           (at_b_p3))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p3_p2_c
        :precondition (and (Bc_not_blocked_p2)
                           (succ_p3_p2)
                           (at_c_p3)
                           (checked_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p3_p3_a
        :precondition (and (Pa_not_blocked_p3)
                           (Ba_not_blocked_p3)
                           (succ_p3_p3)
                           (checked_p3)
                           (at_a_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p3_p3_b
        :precondition (and (succ_p3_p3)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p3_p3_c
        :precondition (and (Pc_not_blocked_p3)
                           (succ_p3_p3)
                           (at_c_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p3_p4_a
        :precondition (and (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p3_p4)
                           (checked_p4)
                           (at_a_p3))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p3_p4_b
        :precondition (and (Bb_not_blocked_p4)
                           (Pb_not_blocked_p4)
                           (succ_p3_p4)
                           (checked_p4)
                           (at_b_p3))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p3_p4_c
        :precondition (and (Pc_not_blocked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p3)
                           (succ_p3_p4)
                           (checked_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p3_p5_a
        :precondition (and (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (checked_p5)
                           (succ_p3_p5)
                           (at_a_p3))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p3_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (succ_p3_p5)
                           (at_b_p3))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p3_p5_c
        :precondition (and (checked_p5)
                           (at_c_p3)
                           (succ_p3_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p3_p6_a
        :precondition (and (checked_p6)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6)
                           (succ_p3_p6)
                           (at_a_p3))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p3_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (succ_p3_p6)
                           (at_b_p3))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p3_p6_c
        :precondition (and (checked_p6)
                           (Bc_not_blocked_p6)
                           (at_c_p3)
                           (succ_p3_p6)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p3_p7_a
        :precondition (and (checked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p3_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p3))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p3_p7_b
        :precondition (and (checked_p7)
                           (succ_p3_p7)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7)
                           (at_b_p3))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p3_p7_c
        :precondition (and (Pc_not_blocked_p7)
                           (succ_p3_p7)
                           (checked_p7)
                           (at_c_p3)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p3_p8_a
        :precondition (and (succ_p3_p8)
                           (checked_p8)
                           (at_a_p3)
                           (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p3_p8_b
        :precondition (and (Bb_not_blocked_p8)
                           (succ_p3_p8)
                           (Pb_not_blocked_p8)
                           (checked_p8)
                           (at_b_p3))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p3_p8_c
        :precondition (and (succ_p3_p8)
                           (Bc_not_blocked_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p3)
                           (checked_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p3_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (succ_p3_p9)
                           (Pa_not_blocked_p9)
                           (checked_p9)
                           (at_a_p3))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p3_p9_b
        :precondition (and (Bb_not_blocked_p9)
                           (succ_p3_p9)
                           (checked_p9)
                           (Pb_not_blocked_p9)
                           (at_b_p3))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p3_p9_c
        :precondition (and (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p3)
                           (succ_p3_p9)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p4_p0011_a
        :precondition (and (succ_p4_p0011)
                           (Pa_not_blocked_p0011)
                           (checked_p0011)
                           (at_a_p4)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p4_p0011_b
        :precondition (and (Bb_not_blocked_p0011)
                           (at_b_p4)
                           (checked_p0011)
                           (succ_p4_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p4_p0011_c
        :precondition (and (at_c_p4)
                           (Bc_not_blocked_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011)
                           (succ_p4_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p4_p012_a
        :precondition (and (succ_p4_p012)
                           (Pa_not_blocked_p012)
                           (checked_p012)
                           (Ba_not_blocked_p012)
                           (at_a_p4))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p4_p012_b
        :precondition (and (succ_p4_p012)
                           (checked_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (at_b_p4))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p4_p012_c
        :precondition (and (succ_p4_p012)
                           (at_c_p4)
                           (checked_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p4_p10_a
        :precondition (and (succ_p4_p10)
                           (Pa_not_blocked_p10)
                           (Ba_not_blocked_p10)
                           (checked_p10)
                           (at_a_p4))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p4_p10_b
        :precondition (and (succ_p4_p10)
                           (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (at_b_p4)
                           (checked_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p4_p10_c
        :precondition (and (succ_p4_p10)
                           (at_c_p4)
                           (Bc_not_blocked_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p4_p1_a
        :precondition (and (Pa_not_blocked_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1)
                           (at_a_p4)
                           (succ_p4_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p4_p1_b
        :precondition (and (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (at_b_p4)
                           (succ_p4_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p4_p1_c
        :precondition (and (checked_p1)
                           (at_c_p4)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (succ_p4_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p4_p2_a
        :precondition (and (succ_p4_p2)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (at_a_p4)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p4_p2_b
        :precondition (and (Bb_not_blocked_p2)
                           (Pb_not_blocked_p2)
                           (succ_p4_p2)
                           (at_b_p4)
                           (checked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p4_p2_c
        :precondition (and (succ_p4_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p4)
                           (checked_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p4_p3_a
        :precondition (and (Ba_not_blocked_p3)
                           (Pa_not_blocked_p3)
                           (checked_p3)
                           (succ_p4_p3)
                           (at_a_p4))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p4_p3_b
        :precondition (and (Pb_not_blocked_p3)
                           (succ_p4_p3)
                           (checked_p3)
                           (at_b_p4)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p4_p3_c
        :precondition (and (at_c_p4)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (succ_p4_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p4_p4_a
        :precondition (and (Pa_not_blocked_p4)
                           (checked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p4_p4)
                           (at_a_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p4_p4_b
        :precondition (and (Bb_not_blocked_p4)
                           (Pb_not_blocked_p4)
                           (at_b_p4)
                           (succ_p4_p4)
                           (checked_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p4_p4_c
        :precondition (and (Pc_not_blocked_p4)
                           (at_c_p4)
                           (Bc_not_blocked_p4)
                           (succ_p4_p4)
                           (checked_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p4_p5_a
        :precondition (and (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (checked_p5)
                           (at_a_p4)
                           (succ_p4_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p4_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (at_b_p4)
                           (Pb_not_blocked_p5)
                           (succ_p4_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p4_p5_c
        :precondition (and (at_c_p4)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5)
                           (succ_p4_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p4_p6_a
        :precondition (and (succ_p4_p6)
                           (checked_p6)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p4))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p4_p6_b
        :precondition (and (succ_p4_p6)
                           (Pb_not_blocked_p6)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p4))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p4_p6_c
        :precondition (and (succ_p4_p6)
                           (checked_p6)
                           (Bc_not_blocked_p6)
                           (at_c_p4)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p4_p7_a
        :precondition (and (checked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p4_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p4))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p4_p7_b
        :precondition (and (checked_p7)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7)
                           (at_b_p4)
                           (succ_p4_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p4_p7_c
        :precondition (and (at_c_p4)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (succ_p4_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p4_p8_a
        :precondition (and (succ_p4_p8)
                           (at_a_p4)
                           (checked_p8)
                           (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p4_p8_b
        :precondition (and (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8)
                           (succ_p4_p8)
                           (at_b_p4)
                           (checked_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p4_p8_c
        :precondition (and (succ_p4_p8)
                           (at_c_p4)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p4_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (succ_p4_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p4)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p4_p9_b
        :precondition (and (Pb_not_blocked_p9)
                           (at_b_p4)
                           (succ_p4_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p4_p9_c
        :precondition (and (at_c_p4)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p4_p9)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p5_p0011_a
        :precondition (and (at_a_p5)
                           (Pa_not_blocked_p0011)
                           (checked_p0011)
                           (Ba_not_blocked_p0011)
                           (succ_p5_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p5_p0011_b
        :precondition (and (Bb_not_blocked_p0011)
                           (at_b_p5)
                           (succ_p5_p0011)
                           (checked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p5_p0011_c
        :precondition (and (Bc_not_blocked_p0011)
                           (checked_p0011)
                           (at_c_p5)
                           (Pc_not_blocked_p0011)
                           (succ_p5_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p5_p012_a
        :precondition (and (at_a_p5)
                           (Pa_not_blocked_p012)
                           (checked_p012)
                           (Ba_not_blocked_p012)
                           (succ_p5_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p5_p012_b
        :precondition (and (checked_p012)
                           (at_b_p5)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (succ_p5_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p5_p012_c
        :precondition (and (succ_p5_p012)
                           (checked_p012)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012)
                           (at_c_p5))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p5_p10_a
        :precondition (and (at_a_p5)
                           (Pa_not_blocked_p10)
                           (Ba_not_blocked_p10)
                           (checked_p10)
                           (succ_p5_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p5_p10_b
        :precondition (and (Bb_not_blocked_p10)
                           (at_b_p5)
                           (checked_p10)
                           (succ_p5_p10)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p5_p10_c
        :precondition (and (Bc_not_blocked_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (succ_p5_p10)
                           (at_c_p5))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p5_p1_a
        :precondition (and (succ_p5_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p5)
                           (checked_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p5_p1_b
        :precondition (and (succ_p5_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (at_b_p5)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p5_p1_c
        :precondition (and (succ_p5_p1)
                           (checked_p1)
                           (Pc_not_blocked_p1)
                           (at_c_p5)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p5_p2_a
        :precondition (and (at_a_p5)
                           (succ_p5_p2)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p5_p2_b
        :precondition (and (Bb_not_blocked_p2)
                           (Pb_not_blocked_p2)
                           (succ_p5_p2)
                           (at_b_p5)
                           (checked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p5_p2_c
        :precondition (and (checked_p2)
                           (succ_p5_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p5)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p5_p3_a
        :precondition (and (at_a_p5)
                           (Pa_not_blocked_p3)
                           (succ_p5_p3)
                           (Ba_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p5_p3_b
        :precondition (and (at_b_p5)
                           (succ_p5_p3)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p5_p3_c
        :precondition (and (Pc_not_blocked_p3)
                           (succ_p5_p3)
                           (checked_p3)
                           (at_c_p5)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p5_p4_a
        :precondition (and (succ_p5_p4)
                           (at_a_p5)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p5_p4_b
        :precondition (and (succ_p5_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p5)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p5_p4_c
        :precondition (and (Pc_not_blocked_p4)
                           (succ_p5_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p5)
                           (checked_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p5_p5_a
        :precondition (and (at_a_p5)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (checked_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p5_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (at_b_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p5_p5_c
        :precondition (and (checked_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p5_p6_a
        :precondition (and (checked_p6)
                           (Pa_not_blocked_p6)
                           (at_a_p5)
                           (Ba_not_blocked_p6)
                           (succ_p5_p6))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p5_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p5)
                           (succ_p5_p6))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p5_p6_c
        :precondition (and (checked_p6)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p5)
                           (succ_p5_p6))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p5_p7_a
        :precondition (and (succ_p5_p7)
                           (at_a_p5)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p5_p7_b
        :precondition (and (succ_p5_p7)
                           (checked_p7)
                           (at_b_p5)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p5_p7_c
        :precondition (and (succ_p5_p7)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (at_c_p5)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p5_p8_a
        :precondition (and (at_a_p5)
                           (succ_p5_p8)
                           (checked_p8)
                           (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p5_p8_b
        :precondition (and (Bb_not_blocked_p8)
                           (succ_p5_p8)
                           (Pb_not_blocked_p8)
                           (at_b_p5)
                           (checked_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p5_p8_c
        :precondition (and (succ_p5_p8)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (at_c_p5))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p5_p9_a
        :precondition (and (succ_p5_p9)
                           (Ba_not_blocked_p9)
                           (at_a_p5)
                           (Pa_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p5_p9_b
        :precondition (and (succ_p5_p9)
                           (at_b_p5)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p5_p9_c
        :precondition (and (succ_p5_p9)
                           (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p5)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p6_p0011_a
        :precondition (and (succ_p6_p0011)
                           (at_a_p6)
                           (Pa_not_blocked_p0011)
                           (checked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p6_p0011_b
        :precondition (and (succ_p6_p0011)
                           (Bb_not_blocked_p0011)
                           (at_b_p6)
                           (checked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p6_p0011_c
        :precondition (and (succ_p6_p0011)
                           (at_c_p6)
                           (Bc_not_blocked_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p6_p012_a
        :precondition (and (at_a_p6)
                           (Pa_not_blocked_p012)
                           (checked_p012)
                           (succ_p6_p012)
                           (Ba_not_blocked_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p6_p012_b
        :precondition (and (at_b_p6)
                           (checked_p012)
                           (succ_p6_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p6_p012_c
        :precondition (and (checked_p012)
                           (succ_p6_p012)
                           (at_c_p6)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p6_p10_a
        :precondition (and (succ_p6_p10)
                           (at_a_p6)
                           (Pa_not_blocked_p10)
                           (Ba_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p6_p10_b
        :precondition (and (at_b_p6)
                           (succ_p6_p10)
                           (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p6_p10_c
        :precondition (and (succ_p6_p10)
                           (at_c_p6)
                           (Bc_not_blocked_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p6_p1_a
        :precondition (and (Pa_not_blocked_p1)
                           (at_a_p6)
                           (checked_p1)
                           (succ_p6_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p6_p1_b
        :precondition (and (at_b_p6)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (succ_p6_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p6_p1_c
        :precondition (and (checked_p1)
                           (at_c_p6)
                           (succ_p6_p1)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p6_p2_a
        :precondition (and (at_a_p6)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (Ba_not_blocked_p2)
                           (succ_p6_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p6_p2_b
        :precondition (and (Bb_not_blocked_p2)
                           (Pb_not_blocked_p2)
                           (at_b_p6)
                           (checked_p2)
                           (succ_p6_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p6_p2_c
        :precondition (and (Bc_not_blocked_p2)
                           (at_c_p6)
                           (checked_p2)
                           (Pc_not_blocked_p2)
                           (succ_p6_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p6_p3_a
        :precondition (and (at_a_p6)
                           (Ba_not_blocked_p3)
                           (Pa_not_blocked_p3)
                           (checked_p3)
                           (succ_p6_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p6_p3_b
        :precondition (and (at_b_p6)
                           (succ_p6_p3)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p6_p3_c
        :precondition (and (Pc_not_blocked_p3)
                           (at_c_p6)
                           (succ_p6_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p6_p4_a
        :precondition (and (Pa_not_blocked_p4)
                           (at_a_p6)
                           (Ba_not_blocked_p4)
                           (succ_p6_p4)
                           (checked_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p6_p4_b
        :precondition (and (Bb_not_blocked_p4)
                           (at_b_p6)
                           (Pb_not_blocked_p4)
                           (succ_p6_p4)
                           (checked_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p6_p4_c
        :precondition (and (Pc_not_blocked_p4)
                           (at_c_p6)
                           (Bc_not_blocked_p4)
                           (succ_p6_p4)
                           (checked_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p6_p5_a
        :precondition (and (succ_p6_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p6)
                           (Pa_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p6_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (succ_p6_p5)
                           (at_b_p6)
                           (checked_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p6_p5_c
        :precondition (and (succ_p6_p5)
                           (at_c_p6)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p6_p6_a
        :precondition (and (checked_p6)
                           (Pa_not_blocked_p6)
                           (at_a_p6)
                           (Ba_not_blocked_p6)
                           (succ_p6_p6))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p6_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (at_b_p6)
                           (checked_p6)
                           (succ_p6_p6))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p6_p6_c
        :precondition (and (checked_p6)
                           (Bc_not_blocked_p6)
                           (at_c_p6)
                           (Pc_not_blocked_p6)
                           (succ_p6_p6))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p6_p7_a
        :precondition (and (succ_p6_p7)
                           (at_a_p6)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p6_p7_b
        :precondition (and (succ_p6_p7)
                           (at_b_p6)
                           (checked_p7)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p6_p7_c
        :precondition (and (succ_p6_p7)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (at_c_p6)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p6_p8_a
        :precondition (and (at_a_p6)
                           (checked_p8)
                           (Pa_not_blocked_p8)
                           (succ_p6_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p6_p8_b
        :precondition (and (Bb_not_blocked_p8)
                           (at_b_p6)
                           (Pb_not_blocked_p8)
                           (checked_p8)
                           (succ_p6_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p6_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (at_c_p6)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (succ_p6_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p6_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (at_a_p6)
                           (succ_p6_p9)
                           (Pa_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p6_p9_b
        :precondition (and (at_b_p6)
                           (succ_p6_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p6_p9_c
        :precondition (and (Bc_not_blocked_p9)
                           (succ_p6_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p6)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p7_p0011_a
        :precondition (and (Pa_not_blocked_p0011)
                           (checked_p0011)
                           (at_a_p7)
                           (succ_p7_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p7_p0011_b
        :precondition (and (Bb_not_blocked_p0011)
                           (checked_p0011)
                           (at_b_p7)
                           (succ_p7_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p7_p0011_c
        :precondition (and (at_c_p7)
                           (Bc_not_blocked_p0011)
                           (checked_p0011)
                           (succ_p7_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p7_p012_a
        :precondition (and (Pa_not_blocked_p012)
                           (checked_p012)
                           (succ_p7_p012)
                           (Ba_not_blocked_p012)
                           (at_a_p7))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p7_p012_b
        :precondition (and (checked_p012)
                           (Pb_not_blocked_p012)
                           (succ_p7_p012)
                           (Bb_not_blocked_p012)
                           (at_b_p7))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p7_p012_c
        :precondition (and (at_c_p7)
                           (Bc_not_blocked_p012)
                           (checked_p012)
                           (succ_p7_p012)
                           (Pc_not_blocked_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p7_p10_a
        :precondition (and (succ_p7_p10)
                           (Pa_not_blocked_p10)
                           (Ba_not_blocked_p10)
                           (checked_p10)
                           (at_a_p7))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p7_p10_b
        :precondition (and (succ_p7_p10)
                           (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (checked_p10)
                           (at_b_p7))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p7_p10_c
        :precondition (and (at_c_p7)
                           (succ_p7_p10)
                           (Bc_not_blocked_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p7_p1_a
        :precondition (and (Pa_not_blocked_p1)
                           (checked_p1)
                           (succ_p7_p1)
                           (at_a_p7)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p7_p1_b
        :precondition (and (checked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p7_p1)
                           (Pb_not_blocked_p1)
                           (at_b_p7))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p7_p1_c
        :precondition (and (at_c_p7)
                           (checked_p1)
                           (succ_p7_p1)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p7_p2_a
        :precondition (and (Pa_not_blocked_p2)
                           (checked_p2)
                           (succ_p7_p2)
                           (at_a_p7)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p7_p2_b
        :precondition (and (Bb_not_blocked_p2)
                           (Pb_not_blocked_p2)
                           (checked_p2)
                           (succ_p7_p2)
                           (at_b_p7))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p7_p2_c
        :precondition (and (at_c_p7)
                           (Bc_not_blocked_p2)
                           (succ_p7_p2)
                           (checked_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p7_p3_a
        :precondition (and (Pa_not_blocked_p3)
                           (succ_p7_p3)
                           (Ba_not_blocked_p3)
                           (checked_p3)
                           (at_a_p7))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p7_p3_b
        :precondition (and (succ_p7_p3)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (at_b_p7)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p7_p3_c
        :precondition (and (at_c_p7)
                           (Pc_not_blocked_p3)
                           (succ_p7_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p7_p4_a
        :precondition (and (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p7_p4)
                           (at_a_p7)
                           (checked_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p7_p4_b
        :precondition (and (Bb_not_blocked_p4)
                           (Pb_not_blocked_p4)
                           (succ_p7_p4)
                           (at_b_p7)
                           (checked_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p7_p4_c
        :precondition (and (at_c_p7)
                           (Pc_not_blocked_p4)
                           (Bc_not_blocked_p4)
                           (succ_p7_p4)
                           (checked_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p7_p5_a
        :precondition (and (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (succ_p7_p5)
                           (checked_p5)
                           (at_a_p7))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p7_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (succ_p7_p5)
                           (checked_p5)
                           (at_b_p7)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p7_p5_c
        :precondition (and (at_c_p7)
                           (succ_p7_p5)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p7_p6_a
        :precondition (and (checked_p6)
                           (Pa_not_blocked_p6)
                           (succ_p7_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p7))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p7_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (succ_p7_p6)
                           (at_b_p7))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p7_p6_c
        :precondition (and (at_c_p7)
                           (checked_p6)
                           (Bc_not_blocked_p6)
                           (succ_p7_p6)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p7_p7_a
        :precondition (and (checked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p7_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p7_p7_b
        :precondition (and (checked_p7)
                           (Bb_not_blocked_p7)
                           (succ_p7_p7)
                           (at_b_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p7_p7_c
        :precondition (and (at_c_p7)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (succ_p7_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p7_p8_a
        :precondition (and (succ_p7_p8)
                           (checked_p8)
                           (at_a_p7)
                           (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p7_p8_b
        :precondition (and (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8)
                           (checked_p8)
                           (at_b_p7)
                           (succ_p7_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p7_p8_c
        :precondition (and (at_c_p7)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (succ_p7_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p7_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p7_p9)
                           (at_a_p7)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p7_p9_b
        :precondition (and (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (succ_p7_p9)
                           (at_b_p7)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p7_p9_c
        :precondition (and (at_c_p7)
                           (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (succ_p7_p9)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p8_p0011_a
        :precondition (and (at_a_p8)
                           (Pa_not_blocked_p0011)
                           (succ_p8_p0011)
                           (checked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p8_p0011_b
        :precondition (and (Bb_not_blocked_p0011)
                           (at_b_p8)
                           (succ_p8_p0011)
                           (checked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p8_p0011_c
        :precondition (and (at_c_p8)
                           (Bc_not_blocked_p0011)
                           (succ_p8_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p8_p012_a
        :precondition (and (Pa_not_blocked_p012)
                           (checked_p012)
                           (at_a_p8)
                           (Ba_not_blocked_p012)
                           (succ_p8_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p8_p012_b
        :precondition (and (checked_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (succ_p8_p012)
                           (at_b_p8))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p8_p012_c
        :precondition (and (checked_p012)
                           (at_c_p8)
                           (Bc_not_blocked_p012)
                           (succ_p8_p012)
                           (Pc_not_blocked_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p8_p10_a
        :precondition (and (Pa_not_blocked_p10)
                           (Ba_not_blocked_p10)
                           (at_a_p8)
                           (checked_p10)
                           (succ_p8_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p8_p10_b
        :precondition (and (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (checked_p10)
                           (succ_p8_p10)
                           (at_b_p8))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p8_p10_c
        :precondition (and (at_c_p8)
                           (Bc_not_blocked_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (succ_p8_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p8_p1_a
        :precondition (and (Pa_not_blocked_p1)
                           (succ_p8_p1)
                           (checked_p1)
                           (at_a_p8)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p8_p1_b
        :precondition (and (succ_p8_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (at_b_p8))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p8_p1_c
        :precondition (and (succ_p8_p1)
                           (checked_p1)
                           (at_c_p8)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p8_p2_a
        :precondition (and (succ_p8_p2)
                           (at_a_p8)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p8_p2_b
        :precondition (and (succ_p8_p2)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p8))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p8_p2_c
        :precondition (and (succ_p8_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p8)
                           (checked_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p8_p3_a
        :precondition (and (at_a_p8)
                           (succ_p8_p3)
                           (Ba_not_blocked_p3)
                           (Pa_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p8_p3_b
        :precondition (and (succ_p8_p3)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p8))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p8_p3_c
        :precondition (and (succ_p8_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p8)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p8_p4_a
        :precondition (and (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p8)
                           (succ_p8_p4)
                           (checked_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p8_p4_b
        :precondition (and (Bb_not_blocked_p4)
                           (Pb_not_blocked_p4)
                           (succ_p8_p4)
                           (checked_p4)
                           (at_b_p8))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p8_p4_c
        :precondition (and (Pc_not_blocked_p4)
                           (at_c_p8)
                           (Bc_not_blocked_p4)
                           (succ_p8_p4)
                           (checked_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p8_p5_a
        :precondition (and (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p8)
                           (checked_p5)
                           (succ_p8_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p8_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (at_b_p8)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (succ_p8_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p8_p5_c
        :precondition (and (at_c_p8)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5)
                           (succ_p8_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p8_p6_a
        :precondition (and (checked_p6)
                           (Pa_not_blocked_p6)
                           (at_a_p8)
                           (succ_p8_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p8_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (succ_p8_p6)
                           (at_b_p8))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p8_p6_c
        :precondition (and (checked_p6)
                           (Bc_not_blocked_p6)
                           (succ_p8_p6)
                           (at_c_p8)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p8_p7_a
        :precondition (and (succ_p8_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (at_a_p8)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p8_p7_b
        :precondition (and (succ_p8_p7)
                           (checked_p7)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7)
                           (at_b_p8))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p8_p7_c
        :precondition (and (Pc_not_blocked_p7)
                           (succ_p8_p7)
                           (at_c_p8)
                           (checked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p8_p8_a
        :precondition (and (succ_p8_p8)
                           (at_a_p8)
                           (checked_p8)
                           (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p8_p8_b
        :precondition (and (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8)
                           (succ_p8_p8)
                           (checked_p8)
                           (at_b_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p8_p8_c
        :precondition (and (succ_p8_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p8_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (succ_p8_p9)
                           (at_a_p8)
                           (Pa_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p8_p9_b
        :precondition (and (succ_p8_p9)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9)
                           (at_b_p8))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p8_p9_c
        :precondition (and (succ_p8_p9)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p8)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p9_p0011_a
        :precondition (and (succ_p9_p0011)
                           (Pa_not_blocked_p0011)
                           (at_a_p9)
                           (checked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p9_p0011_b
        :precondition (and (Bb_not_blocked_p0011)
                           (succ_p9_p0011)
                           (at_b_p9)
                           (checked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p9_p0011_c
        :precondition (and (succ_p9_p0011)
                           (Bc_not_blocked_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011)
                           (at_c_p9))
        :effect (and
                    ; #13767: <==closure== 18250 (pos)
                    (Pb_not_blocked_p0011)

                    ; #14103: <==closure== 58069 (pos)
                    (Pc_not_blocked_p0011)

                    ; #18250: origin
                    (Bb_not_blocked_p0011)

                    ; #29321: origin
                    (obss_p0011)

                    ; #35602: <==closure== 55589 (pos)
                    (Pa_not_blocked_p0011)

                    ; #40525: <==closure== 40819 (pos)
                    (Pc_obss_p0011)

                    ; #40819: <==commonly_known== 29321 (pos)
                    (Bc_obss_p0011)

                    ; #43796: <==closure== 50506 (pos)
                    (Pa_obss_p0011)

                    ; #49613: <==commonly_known== 29321 (pos)
                    (Bb_obss_p0011)

                    ; #50506: <==commonly_known== 29321 (pos)
                    (Ba_obss_p0011)

                    ; #55589: origin
                    (Ba_not_blocked_p0011)

                    ; #58069: origin
                    (Bc_not_blocked_p0011)

                    ; #79368: <==closure== 49613 (pos)
                    (Pb_obss_p0011)

                    ; #19292: <==negation-removal== 14103 (pos)
                    (not (Bc_blocked_p0011))

                    ; #27094: <==negation-removal== 40525 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #31769: <==negation-removal== 50506 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #33052: <==negation-removal== 79368 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #35734: <==negation-removal== 35602 (pos)
                    (not (Ba_blocked_p0011))

                    ; #37047: <==negation-removal== 29321 (pos)
                    (not (not_obss_p0011))

                    ; #42042: <==negation-removal== 58069 (pos)
                    (not (Pc_blocked_p0011))

                    ; #47334: <==negation-removal== 43796 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #50218: <==negation-removal== 49613 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #61701: <==negation-removal== 55589 (pos)
                    (not (Pa_blocked_p0011))

                    ; #74329: <==negation-removal== 40819 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #87267: <==negation-removal== 18250 (pos)
                    (not (Pb_blocked_p0011))

                    ; #88059: <==negation-removal== 13767 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p9_p012_a
        :precondition (and (Ba_not_blocked_p012)
                           (at_a_p9)
                           (Pa_not_blocked_p012)
                           (checked_p012)
                           (succ_p9_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p9_p012_b
        :precondition (and (checked_p012)
                           (Pb_not_blocked_p012)
                           (at_b_p9)
                           (Bb_not_blocked_p012)
                           (succ_p9_p012))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p9_p012_c
        :precondition (and (checked_p012)
                           (Pc_not_blocked_p012)
                           (succ_p9_p012)
                           (Bc_not_blocked_p012)
                           (at_c_p9))
        :effect (and
                    ; #11389: origin
                    (obss_p012)

                    ; #14394: origin
                    (Ba_not_blocked_p012)

                    ; #16588: <==closure== 75311 (pos)
                    (Pc_not_blocked_p012)

                    ; #22020: <==closure== 14394 (pos)
                    (Pa_not_blocked_p012)

                    ; #31459: <==commonly_known== 11389 (pos)
                    (Bb_obss_p012)

                    ; #33296: <==closure== 53566 (pos)
                    (Pb_not_blocked_p012)

                    ; #35242: <==closure== 31459 (pos)
                    (Pb_obss_p012)

                    ; #53566: origin
                    (Bb_not_blocked_p012)

                    ; #66056: <==closure== 74832 (pos)
                    (Pc_obss_p012)

                    ; #74832: <==commonly_known== 11389 (pos)
                    (Bc_obss_p012)

                    ; #75311: origin
                    (Bc_not_blocked_p012)

                    ; #82946: <==commonly_known== 11389 (pos)
                    (Ba_obss_p012)

                    ; #83509: <==closure== 82946 (pos)
                    (Pa_obss_p012)

                    ; #19755: <==negation-removal== 75311 (pos)
                    (not (Pc_blocked_p012))

                    ; #22273: <==negation-removal== 66056 (pos)
                    (not (Bc_not_obss_p012))

                    ; #32634: <==negation-removal== 14394 (pos)
                    (not (Pa_blocked_p012))

                    ; #47962: <==negation-removal== 22020 (pos)
                    (not (Ba_blocked_p012))

                    ; #49283: <==negation-removal== 82946 (pos)
                    (not (Pa_not_obss_p012))

                    ; #50515: <==negation-removal== 11389 (pos)
                    (not (not_obss_p012))

                    ; #61362: <==negation-removal== 33296 (pos)
                    (not (Bb_blocked_p012))

                    ; #70302: <==negation-removal== 83509 (pos)
                    (not (Ba_not_obss_p012))

                    ; #74087: <==negation-removal== 16588 (pos)
                    (not (Bc_blocked_p012))

                    ; #77919: <==negation-removal== 74832 (pos)
                    (not (Pc_not_obss_p012))

                    ; #84649: <==negation-removal== 35242 (pos)
                    (not (Bb_not_obss_p012))

                    ; #86649: <==negation-removal== 31459 (pos)
                    (not (Pb_not_obss_p012))

                    ; #87074: <==negation-removal== 53566 (pos)
                    (not (Pb_blocked_p012))))

    (:action communcells_p9_p10_a
        :precondition (and (Pa_not_blocked_p10)
                           (at_a_p9)
                           (Ba_not_blocked_p10)
                           (succ_p9_p10)
                           (checked_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p9_p10_b
        :precondition (and (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (at_b_p9)
                           (succ_p9_p10)
                           (checked_p10))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p9_p10_c
        :precondition (and (succ_p9_p10)
                           (Bc_not_blocked_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (at_c_p9))
        :effect (and
                    ; #25553: origin
                    (obss_p10)

                    ; #31687: origin
                    (Ba_not_blocked_p10)

                    ; #31701: <==closure== 54012 (pos)
                    (Pb_obss_p10)

                    ; #33587: origin
                    (Bc_not_blocked_p10)

                    ; #54012: <==commonly_known== 25553 (pos)
                    (Bb_obss_p10)

                    ; #57942: <==closure== 82398 (pos)
                    (Pa_obss_p10)

                    ; #58149: origin
                    (Bb_not_blocked_p10)

                    ; #61349: <==closure== 31687 (pos)
                    (Pa_not_blocked_p10)

                    ; #77073: <==closure== 58149 (pos)
                    (Pb_not_blocked_p10)

                    ; #80288: <==closure== 87382 (pos)
                    (Pc_obss_p10)

                    ; #82398: <==commonly_known== 25553 (pos)
                    (Ba_obss_p10)

                    ; #87382: <==commonly_known== 25553 (pos)
                    (Bc_obss_p10)

                    ; #91735: <==closure== 33587 (pos)
                    (Pc_not_blocked_p10)

                    ; #36505: <==negation-removal== 31701 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40489: <==negation-removal== 82398 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41707: <==negation-removal== 80288 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46545: <==negation-removal== 58149 (pos)
                    (not (Pb_blocked_p10))

                    ; #47970: <==negation-removal== 57942 (pos)
                    (not (Ba_not_obss_p10))

                    ; #48468: <==negation-removal== 33587 (pos)
                    (not (Pc_blocked_p10))

                    ; #48469: <==negation-removal== 25553 (pos)
                    (not (not_obss_p10))

                    ; #48684: <==negation-removal== 77073 (pos)
                    (not (Bb_blocked_p10))

                    ; #50414: <==negation-removal== 54012 (pos)
                    (not (Pb_not_obss_p10))

                    ; #52975: <==negation-removal== 87382 (pos)
                    (not (Pc_not_obss_p10))

                    ; #69725: <==negation-removal== 91735 (pos)
                    (not (Bc_blocked_p10))

                    ; #76222: <==negation-removal== 31687 (pos)
                    (not (Pa_blocked_p10))

                    ; #91379: <==negation-removal== 61349 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p9_p1_a
        :precondition (and (succ_p9_p1)
                           (Pa_not_blocked_p1)
                           (checked_p1)
                           (at_a_p9)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p9_p1_b
        :precondition (and (succ_p9_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (at_b_p9))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p9_p1_c
        :precondition (and (succ_p9_p1)
                           (checked_p1)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (at_c_p9))
        :effect (and
                    ; #10188: <==closure== 26791 (pos)
                    (Pb_obss_p1)

                    ; #26791: <==commonly_known== 74926 (pos)
                    (Bb_obss_p1)

                    ; #31118: <==commonly_known== 74926 (pos)
                    (Ba_obss_p1)

                    ; #39390: origin
                    (Bb_not_blocked_p1)

                    ; #40845: <==closure== 39390 (pos)
                    (Pb_not_blocked_p1)

                    ; #54773: <==closure== 70535 (pos)
                    (Pc_not_blocked_p1)

                    ; #59572: <==closure== 77063 (pos)
                    (Pa_not_blocked_p1)

                    ; #59808: <==closure== 31118 (pos)
                    (Pa_obss_p1)

                    ; #70535: origin
                    (Bc_not_blocked_p1)

                    ; #74926: origin
                    (obss_p1)

                    ; #76201: <==commonly_known== 74926 (pos)
                    (Bc_obss_p1)

                    ; #77063: origin
                    (Ba_not_blocked_p1)

                    ; #90608: <==closure== 76201 (pos)
                    (Pc_obss_p1)

                    ; #11725: <==negation-removal== 26791 (pos)
                    (not (Pb_not_obss_p1))

                    ; #21891: <==negation-removal== 31118 (pos)
                    (not (Pa_not_obss_p1))

                    ; #23293: <==negation-removal== 70535 (pos)
                    (not (Pc_blocked_p1))

                    ; #29999: <==negation-removal== 76201 (pos)
                    (not (Pc_not_obss_p1))

                    ; #33249: <==negation-removal== 77063 (pos)
                    (not (Pa_blocked_p1))

                    ; #34107: <==negation-removal== 59808 (pos)
                    (not (Ba_not_obss_p1))

                    ; #34958: <==negation-removal== 54773 (pos)
                    (not (Bc_blocked_p1))

                    ; #50939: <==negation-removal== 90608 (pos)
                    (not (Bc_not_obss_p1))

                    ; #67670: <==negation-removal== 39390 (pos)
                    (not (Pb_blocked_p1))

                    ; #68487: <==negation-removal== 59572 (pos)
                    (not (Ba_blocked_p1))

                    ; #72515: <==negation-removal== 74926 (pos)
                    (not (not_obss_p1))

                    ; #80124: <==negation-removal== 40845 (pos)
                    (not (Bb_blocked_p1))

                    ; #98224: <==negation-removal== 10188 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p9_p2_a
        :precondition (and (Pa_not_blocked_p2)
                           (checked_p2)
                           (at_a_p9)
                           (succ_p9_p2)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p9_p2_b
        :precondition (and (Bb_not_blocked_p2)
                           (Pb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p9)
                           (succ_p9_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p9_p2_c
        :precondition (and (checked_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p9)
                           (succ_p9_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #12268: <==closure== 33735 (pos)
                    (Pa_not_blocked_p2)

                    ; #12999: origin
                    (obss_p2)

                    ; #17246: <==commonly_known== 12999 (pos)
                    (Ba_obss_p2)

                    ; #25811: <==closure== 71579 (pos)
                    (Pb_obss_p2)

                    ; #33735: origin
                    (Ba_not_blocked_p2)

                    ; #48595: <==closure== 85951 (pos)
                    (Pc_obss_p2)

                    ; #49244: <==closure== 56601 (pos)
                    (Pc_not_blocked_p2)

                    ; #56601: origin
                    (Bc_not_blocked_p2)

                    ; #65042: <==closure== 17246 (pos)
                    (Pa_obss_p2)

                    ; #70191: <==closure== 89477 (pos)
                    (Pb_not_blocked_p2)

                    ; #71579: <==commonly_known== 12999 (pos)
                    (Bb_obss_p2)

                    ; #85951: <==commonly_known== 12999 (pos)
                    (Bc_obss_p2)

                    ; #89477: origin
                    (Bb_not_blocked_p2)

                    ; #10471: <==negation-removal== 65042 (pos)
                    (not (Ba_not_obss_p2))

                    ; #10670: <==negation-removal== 48595 (pos)
                    (not (Bc_not_obss_p2))

                    ; #16561: <==negation-removal== 85951 (pos)
                    (not (Pc_not_obss_p2))

                    ; #22808: <==negation-removal== 17246 (pos)
                    (not (Pa_not_obss_p2))

                    ; #34040: <==negation-removal== 33735 (pos)
                    (not (Pa_blocked_p2))

                    ; #38643: <==negation-removal== 49244 (pos)
                    (not (Bc_blocked_p2))

                    ; #42077: <==negation-removal== 25811 (pos)
                    (not (Bb_not_obss_p2))

                    ; #42214: <==negation-removal== 70191 (pos)
                    (not (Bb_blocked_p2))

                    ; #42628: <==negation-removal== 71579 (pos)
                    (not (Pb_not_obss_p2))

                    ; #44560: <==negation-removal== 56601 (pos)
                    (not (Pc_blocked_p2))

                    ; #53621: <==negation-removal== 89477 (pos)
                    (not (Pb_blocked_p2))

                    ; #79765: <==negation-removal== 12268 (pos)
                    (not (Ba_blocked_p2))

                    ; #86002: <==negation-removal== 12999 (pos)
                    (not (not_obss_p2))))

    (:action communcells_p9_p3_a
        :precondition (and (Pa_not_blocked_p3)
                           (succ_p9_p3)
                           (Ba_not_blocked_p3)
                           (checked_p3)
                           (at_a_p9))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p9_p3_b
        :precondition (and (succ_p9_p3)
                           (checked_p3)
                           (at_b_p9)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p9_p3_c
        :precondition (and (Pc_not_blocked_p3)
                           (succ_p9_p3)
                           (checked_p3)
                           (at_c_p9)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #14335: <==closure== 45616 (pos)
                    (Pb_obss_p3)

                    ; #14468: <==closure== 57086 (pos)
                    (Pc_not_blocked_p3)

                    ; #22797: <==closure== 55148 (pos)
                    (Pa_not_blocked_p3)

                    ; #28190: <==closure== 61613 (pos)
                    (Pb_not_blocked_p3)

                    ; #29307: <==commonly_known== 86509 (pos)
                    (Bc_obss_p3)

                    ; #45616: <==commonly_known== 86509 (pos)
                    (Bb_obss_p3)

                    ; #55148: origin
                    (Ba_not_blocked_p3)

                    ; #57086: origin
                    (Bc_not_blocked_p3)

                    ; #60765: <==commonly_known== 86509 (pos)
                    (Ba_obss_p3)

                    ; #61613: origin
                    (Bb_not_blocked_p3)

                    ; #64578: <==closure== 29307 (pos)
                    (Pc_obss_p3)

                    ; #75966: <==closure== 60765 (pos)
                    (Pa_obss_p3)

                    ; #86509: origin
                    (obss_p3)

                    ; #19426: <==negation-removal== 22797 (pos)
                    (not (Ba_blocked_p3))

                    ; #19994: <==negation-removal== 28190 (pos)
                    (not (Bb_blocked_p3))

                    ; #21978: <==negation-removal== 60765 (pos)
                    (not (Pa_not_obss_p3))

                    ; #23589: <==negation-removal== 86509 (pos)
                    (not (not_obss_p3))

                    ; #25367: <==negation-removal== 61613 (pos)
                    (not (Pb_blocked_p3))

                    ; #30777: <==negation-removal== 14468 (pos)
                    (not (Bc_blocked_p3))

                    ; #47355: <==negation-removal== 45616 (pos)
                    (not (Pb_not_obss_p3))

                    ; #47392: <==negation-removal== 55148 (pos)
                    (not (Pa_blocked_p3))

                    ; #60144: <==negation-removal== 64578 (pos)
                    (not (Bc_not_obss_p3))

                    ; #73098: <==negation-removal== 75966 (pos)
                    (not (Ba_not_obss_p3))

                    ; #74291: <==negation-removal== 57086 (pos)
                    (not (Pc_blocked_p3))

                    ; #75199: <==negation-removal== 14335 (pos)
                    (not (Bb_not_obss_p3))

                    ; #82417: <==negation-removal== 29307 (pos)
                    (not (Pc_not_obss_p3))))

    (:action communcells_p9_p4_a
        :precondition (and (Pa_not_blocked_p4)
                           (checked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p9)
                           (succ_p9_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p9_p4_b
        :precondition (and (Bb_not_blocked_p4)
                           (checked_p4)
                           (Pb_not_blocked_p4)
                           (at_b_p9)
                           (succ_p9_p4))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p9_p4_c
        :precondition (and (Pc_not_blocked_p4)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (succ_p9_p4)
                           (at_c_p9))
        :effect (and
                    ; #17416: origin
                    (Bc_not_blocked_p4)

                    ; #29632: <==closure== 34034 (pos)
                    (Pc_obss_p4)

                    ; #32989: origin
                    (Ba_not_blocked_p4)

                    ; #34034: <==commonly_known== 53697 (pos)
                    (Bc_obss_p4)

                    ; #38419: <==closure== 54011 (pos)
                    (Pb_not_blocked_p4)

                    ; #41373: <==closure== 88087 (pos)
                    (Pb_obss_p4)

                    ; #44302: <==closure== 17416 (pos)
                    (Pc_not_blocked_p4)

                    ; #48066: <==closure== 32989 (pos)
                    (Pa_not_blocked_p4)

                    ; #53697: origin
                    (obss_p4)

                    ; #54011: origin
                    (Bb_not_blocked_p4)

                    ; #56928: <==commonly_known== 53697 (pos)
                    (Ba_obss_p4)

                    ; #73571: <==closure== 56928 (pos)
                    (Pa_obss_p4)

                    ; #88087: <==commonly_known== 53697 (pos)
                    (Bb_obss_p4)

                    ; #14923: <==negation-removal== 73571 (pos)
                    (not (Ba_not_obss_p4))

                    ; #24680: <==negation-removal== 17416 (pos)
                    (not (Pc_blocked_p4))

                    ; #27281: <==negation-removal== 48066 (pos)
                    (not (Ba_blocked_p4))

                    ; #33271: <==negation-removal== 53697 (pos)
                    (not (not_obss_p4))

                    ; #38905: <==negation-removal== 54011 (pos)
                    (not (Pb_blocked_p4))

                    ; #60803: <==negation-removal== 88087 (pos)
                    (not (Pb_not_obss_p4))

                    ; #64608: <==negation-removal== 29632 (pos)
                    (not (Bc_not_obss_p4))

                    ; #67694: <==negation-removal== 32989 (pos)
                    (not (Pa_blocked_p4))

                    ; #68690: <==negation-removal== 34034 (pos)
                    (not (Pc_not_obss_p4))

                    ; #72272: <==negation-removal== 56928 (pos)
                    (not (Pa_not_obss_p4))

                    ; #78491: <==negation-removal== 44302 (pos)
                    (not (Bc_blocked_p4))

                    ; #89698: <==negation-removal== 38419 (pos)
                    (not (Bb_blocked_p4))

                    ; #91198: <==negation-removal== 41373 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p9_p5_a
        :precondition (and (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (checked_p5)
                           (at_a_p9)
                           (succ_p9_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p9_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (at_b_p9)
                           (succ_p9_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p9_p5_c
        :precondition (and (checked_p5)
                           (succ_p9_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p9))
        :effect (and
                    ; #16205: <==closure== 36846 (pos)
                    (Pb_obss_p5)

                    ; #23055: <==closure== 74944 (pos)
                    (Pa_not_blocked_p5)

                    ; #28681: <==commonly_known== 62634 (pos)
                    (Bc_obss_p5)

                    ; #35465: origin
                    (Bc_not_blocked_p5)

                    ; #36846: <==commonly_known== 62634 (pos)
                    (Bb_obss_p5)

                    ; #42755: <==closure== 28681 (pos)
                    (Pc_obss_p5)

                    ; #44448: <==closure== 83055 (pos)
                    (Pb_not_blocked_p5)

                    ; #45678: <==closure== 35465 (pos)
                    (Pc_not_blocked_p5)

                    ; #54531: <==commonly_known== 62634 (pos)
                    (Ba_obss_p5)

                    ; #62634: origin
                    (obss_p5)

                    ; #68760: <==closure== 54531 (pos)
                    (Pa_obss_p5)

                    ; #74944: origin
                    (Ba_not_blocked_p5)

                    ; #83055: origin
                    (Bb_not_blocked_p5)

                    ; #10563: <==negation-removal== 83055 (pos)
                    (not (Pb_blocked_p5))

                    ; #25474: <==negation-removal== 35465 (pos)
                    (not (Pc_blocked_p5))

                    ; #32996: <==negation-removal== 16205 (pos)
                    (not (Bb_not_obss_p5))

                    ; #33691: <==negation-removal== 23055 (pos)
                    (not (Ba_blocked_p5))

                    ; #40830: <==negation-removal== 62634 (pos)
                    (not (not_obss_p5))

                    ; #42446: <==negation-removal== 68760 (pos)
                    (not (Ba_not_obss_p5))

                    ; #44823: <==negation-removal== 54531 (pos)
                    (not (Pa_not_obss_p5))

                    ; #51474: <==negation-removal== 44448 (pos)
                    (not (Bb_blocked_p5))

                    ; #55367: <==negation-removal== 74944 (pos)
                    (not (Pa_blocked_p5))

                    ; #73164: <==negation-removal== 36846 (pos)
                    (not (Pb_not_obss_p5))

                    ; #73795: <==negation-removal== 45678 (pos)
                    (not (Bc_blocked_p5))

                    ; #80416: <==negation-removal== 28681 (pos)
                    (not (Pc_not_obss_p5))

                    ; #83900: <==negation-removal== 42755 (pos)
                    (not (Bc_not_obss_p5))))

    (:action communcells_p9_p6_a
        :precondition (and (checked_p6)
                           (Pa_not_blocked_p6)
                           (succ_p9_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p9))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p9_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (succ_p9_p6)
                           (at_b_p9))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p9_p6_c
        :precondition (and (checked_p6)
                           (Bc_not_blocked_p6)
                           (succ_p9_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p9))
        :effect (and
                    ; #15887: <==closure== 68763 (pos)
                    (Pb_obss_p6)

                    ; #16346: <==closure== 47946 (pos)
                    (Pa_obss_p6)

                    ; #18646: <==closure== 78355 (pos)
                    (Pb_not_blocked_p6)

                    ; #23806: <==commonly_known== 26669 (pos)
                    (Bc_obss_p6)

                    ; #26669: origin
                    (obss_p6)

                    ; #46962: <==closure== 68135 (pos)
                    (Pc_not_blocked_p6)

                    ; #47946: <==commonly_known== 26669 (pos)
                    (Ba_obss_p6)

                    ; #68135: origin
                    (Bc_not_blocked_p6)

                    ; #68763: <==commonly_known== 26669 (pos)
                    (Bb_obss_p6)

                    ; #78355: origin
                    (Bb_not_blocked_p6)

                    ; #81097: origin
                    (Ba_not_blocked_p6)

                    ; #90131: <==closure== 81097 (pos)
                    (Pa_not_blocked_p6)

                    ; #91217: <==closure== 23806 (pos)
                    (Pc_obss_p6)

                    ; #10710: <==negation-removal== 78355 (pos)
                    (not (Pb_blocked_p6))

                    ; #12106: <==negation-removal== 23806 (pos)
                    (not (Pc_not_obss_p6))

                    ; #19756: <==negation-removal== 91217 (pos)
                    (not (Bc_not_obss_p6))

                    ; #31334: <==negation-removal== 15887 (pos)
                    (not (Bb_not_obss_p6))

                    ; #46762: <==negation-removal== 46962 (pos)
                    (not (Bc_blocked_p6))

                    ; #51567: <==negation-removal== 68135 (pos)
                    (not (Pc_blocked_p6))

                    ; #53948: <==negation-removal== 90131 (pos)
                    (not (Ba_blocked_p6))

                    ; #60590: <==negation-removal== 81097 (pos)
                    (not (Pa_blocked_p6))

                    ; #70252: <==negation-removal== 16346 (pos)
                    (not (Ba_not_obss_p6))

                    ; #73804: <==negation-removal== 47946 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77345: <==negation-removal== 26669 (pos)
                    (not (not_obss_p6))

                    ; #77597: <==negation-removal== 18646 (pos)
                    (not (Bb_blocked_p6))

                    ; #88465: <==negation-removal== 68763 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p9_p7_a
        :precondition (and (checked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p9_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p9))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p9_p7_b
        :precondition (and (checked_p7)
                           (Bb_not_blocked_p7)
                           (succ_p9_p7)
                           (at_b_p9)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p9_p7_c
        :precondition (and (Pc_not_blocked_p7)
                           (checked_p7)
                           (succ_p9_p7)
                           (at_c_p9)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #18955: <==closure== 42810 (pos)
                    (Pb_obss_p7)

                    ; #27877: <==closure== 80129 (pos)
                    (Pa_not_blocked_p7)

                    ; #36086: origin
                    (Bb_not_blocked_p7)

                    ; #41562: <==closure== 36086 (pos)
                    (Pb_not_blocked_p7)

                    ; #42810: <==commonly_known== 47769 (pos)
                    (Bb_obss_p7)

                    ; #44414: origin
                    (Bc_not_blocked_p7)

                    ; #45796: <==commonly_known== 47769 (pos)
                    (Bc_obss_p7)

                    ; #46467: <==closure== 44414 (pos)
                    (Pc_not_blocked_p7)

                    ; #47769: origin
                    (obss_p7)

                    ; #68977: <==closure== 91135 (pos)
                    (Pa_obss_p7)

                    ; #80129: origin
                    (Ba_not_blocked_p7)

                    ; #85563: <==closure== 45796 (pos)
                    (Pc_obss_p7)

                    ; #91135: <==commonly_known== 47769 (pos)
                    (Ba_obss_p7)

                    ; #20380: <==negation-removal== 80129 (pos)
                    (not (Pa_blocked_p7))

                    ; #24102: <==negation-removal== 45796 (pos)
                    (not (Pc_not_obss_p7))

                    ; #29444: <==negation-removal== 44414 (pos)
                    (not (Pc_blocked_p7))

                    ; #30896: <==negation-removal== 36086 (pos)
                    (not (Pb_blocked_p7))

                    ; #35276: <==negation-removal== 18955 (pos)
                    (not (Bb_not_obss_p7))

                    ; #37209: <==negation-removal== 85563 (pos)
                    (not (Bc_not_obss_p7))

                    ; #38041: <==negation-removal== 46467 (pos)
                    (not (Bc_blocked_p7))

                    ; #45701: <==negation-removal== 68977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #46988: <==negation-removal== 42810 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60061: <==negation-removal== 41562 (pos)
                    (not (Bb_blocked_p7))

                    ; #62984: <==negation-removal== 27877 (pos)
                    (not (Ba_blocked_p7))

                    ; #65639: <==negation-removal== 47769 (pos)
                    (not (not_obss_p7))

                    ; #71173: <==negation-removal== 91135 (pos)
                    (not (Pa_not_obss_p7))))

    (:action communcells_p9_p8_a
        :precondition (and (at_a_p9)
                           (checked_p8)
                           (Pa_not_blocked_p8)
                           (succ_p9_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p9_p8_b
        :precondition (and (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8)
                           (at_b_p9)
                           (checked_p8)
                           (succ_p9_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p9_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (at_c_p9)
                           (checked_p8)
                           (succ_p9_p8))
        :effect (and
                    ; #13819: <==closure== 48935 (pos)
                    (Pb_obss_p8)

                    ; #36098: origin
                    (Ba_not_blocked_p8)

                    ; #37736: <==closure== 56388 (pos)
                    (Pc_not_blocked_p8)

                    ; #48935: <==commonly_known== 80666 (pos)
                    (Bb_obss_p8)

                    ; #56388: origin
                    (Bc_not_blocked_p8)

                    ; #61801: <==commonly_known== 80666 (pos)
                    (Ba_obss_p8)

                    ; #69522: <==closure== 36098 (pos)
                    (Pa_not_blocked_p8)

                    ; #80666: origin
                    (obss_p8)

                    ; #82633: <==closure== 83208 (pos)
                    (Pc_obss_p8)

                    ; #83208: <==commonly_known== 80666 (pos)
                    (Bc_obss_p8)

                    ; #85323: <==closure== 89652 (pos)
                    (Pb_not_blocked_p8)

                    ; #88848: <==closure== 61801 (pos)
                    (Pa_obss_p8)

                    ; #89652: origin
                    (Bb_not_blocked_p8)

                    ; #10533: <==negation-removal== 48935 (pos)
                    (not (Pb_not_obss_p8))

                    ; #11123: <==negation-removal== 36098 (pos)
                    (not (Pa_blocked_p8))

                    ; #12439: <==negation-removal== 56388 (pos)
                    (not (Pc_blocked_p8))

                    ; #20065: <==negation-removal== 69522 (pos)
                    (not (Ba_blocked_p8))

                    ; #23152: <==negation-removal== 88848 (pos)
                    (not (Ba_not_obss_p8))

                    ; #38330: <==negation-removal== 82633 (pos)
                    (not (Bc_not_obss_p8))

                    ; #56815: <==negation-removal== 80666 (pos)
                    (not (not_obss_p8))

                    ; #58814: <==negation-removal== 83208 (pos)
                    (not (Pc_not_obss_p8))

                    ; #62113: <==negation-removal== 13819 (pos)
                    (not (Bb_not_obss_p8))

                    ; #69143: <==negation-removal== 37736 (pos)
                    (not (Bc_blocked_p8))

                    ; #69379: <==negation-removal== 85323 (pos)
                    (not (Bb_blocked_p8))

                    ; #83922: <==negation-removal== 61801 (pos)
                    (not (Pa_not_obss_p8))

                    ; #91406: <==negation-removal== 89652 (pos)
                    (not (Pb_blocked_p8))))

    (:action communcells_p9_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p9)
                           (succ_p9_p9)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p9_p9_b
        :precondition (and (Bb_not_blocked_p9)
                           (at_b_p9)
                           (succ_p9_p9)
                           (Pb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p9_p9_c
        :precondition (and (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (checked_p9)
                           (succ_p9_p9)
                           (at_c_p9))
        :effect (and
                    ; #13357: origin
                    (obss_p9)

                    ; #13483: <==closure== 52827 (pos)
                    (Pb_obss_p9)

                    ; #16265: origin
                    (Ba_not_blocked_p9)

                    ; #18102: <==closure== 46076 (pos)
                    (Pa_obss_p9)

                    ; #21551: <==closure== 16265 (pos)
                    (Pa_not_blocked_p9)

                    ; #27265: <==commonly_known== 13357 (pos)
                    (Bc_obss_p9)

                    ; #37378: <==closure== 83486 (pos)
                    (Pb_not_blocked_p9)

                    ; #46076: <==commonly_known== 13357 (pos)
                    (Ba_obss_p9)

                    ; #50036: <==closure== 27265 (pos)
                    (Pc_obss_p9)

                    ; #52827: <==commonly_known== 13357 (pos)
                    (Bb_obss_p9)

                    ; #54244: origin
                    (Bc_not_blocked_p9)

                    ; #71065: <==closure== 54244 (pos)
                    (Pc_not_blocked_p9)

                    ; #83486: origin
                    (Bb_not_blocked_p9)

                    ; #12100: <==negation-removal== 18102 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16979: <==negation-removal== 50036 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23736: <==negation-removal== 16265 (pos)
                    (not (Pa_blocked_p9))

                    ; #25091: <==negation-removal== 83486 (pos)
                    (not (Pb_blocked_p9))

                    ; #28799: <==negation-removal== 54244 (pos)
                    (not (Pc_blocked_p9))

                    ; #42371: <==negation-removal== 52827 (pos)
                    (not (Pb_not_obss_p9))

                    ; #42537: <==negation-removal== 27265 (pos)
                    (not (Pc_not_obss_p9))

                    ; #47491: <==negation-removal== 13357 (pos)
                    (not (not_obss_p9))

                    ; #58238: <==negation-removal== 21551 (pos)
                    (not (Ba_blocked_p9))

                    ; #64167: <==negation-removal== 46076 (pos)
                    (not (Pa_not_obss_p9))

                    ; #65051: <==negation-removal== 13483 (pos)
                    (not (Bb_not_obss_p9))

                    ; #83717: <==negation-removal== 37378 (pos)
                    (not (Bb_blocked_p9))

                    ; #87090: <==negation-removal== 71065 (pos)
                    (not (Bc_blocked_p9))))

    (:action move_a_p0011_p0011
        :precondition (and (succ_p0011_p0011)
                           (at_a_p0011)
                           (Pa_not_blocked_p0011)
                           (checked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #54628: <==commonly_known== 70837 (neg)
                    (not_at_a_p0011)

                    ; #70837: origin
                    (at_a_p0011)

                    ; #54628: <==negation-removal== 70837 (pos)
                    (not (not_at_a_p0011))

                    ; #70837: origin
                    (not (at_a_p0011))))

    (:action move_a_p0011_p012
        :precondition (and (Pa_not_blocked_p012)
                           (checked_p012)
                           (at_a_p0011)
                           (Ba_not_blocked_p012)
                           (succ_p0011_p012))
        :effect (and
                    ; #13553: origin
                    (at_a_p012)

                    ; #54628: <==commonly_known== 70837 (neg)
                    (not_at_a_p0011)

                    ; #70837: origin
                    (not (at_a_p0011))

                    ; #87578: <==negation-removal== 13553 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p0011_p1
        :precondition (and (Pa_not_blocked_p1)
                           (checked_p1)
                           (succ_p0011_p1)
                           (at_a_p0011)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #27949: origin
                    (at_a_p1)

                    ; #54628: <==commonly_known== 70837 (neg)
                    (not_at_a_p0011)

                    ; #70837: origin
                    (not (at_a_p0011))

                    ; #82143: <==negation-removal== 27949 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p0011_p10
        :precondition (and (succ_p0011_p10)
                           (Pa_not_blocked_p10)
                           (Ba_not_blocked_p10)
                           (at_a_p0011)
                           (checked_p10))
        :effect (and
                    ; #54628: <==commonly_known== 70837 (neg)
                    (not_at_a_p0011)

                    ; #70938: origin
                    (at_a_p10)

                    ; #58117: <==negation-removal== 70938 (pos)
                    (not (not_at_a_p10))

                    ; #70837: origin
                    (not (at_a_p0011))))

    (:action move_a_p0011_p2
        :precondition (and (succ_p0011_p2)
                           (at_a_p0011)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #54628: <==commonly_known== 70837 (neg)
                    (not_at_a_p0011)

                    ; #84280: origin
                    (at_a_p2)

                    ; #38483: <==negation-removal== 84280 (pos)
                    (not (not_at_a_p2))

                    ; #70837: origin
                    (not (at_a_p0011))))

    (:action move_a_p0011_p3
        :precondition (and (succ_p0011_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p0011)
                           (Ba_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #54628: <==commonly_known== 70837 (neg)
                    (not_at_a_p0011)

                    ; #67965: origin
                    (at_a_p3)

                    ; #19009: <==negation-removal== 67965 (pos)
                    (not (not_at_a_p3))

                    ; #70837: origin
                    (not (at_a_p0011))))

    (:action move_a_p0011_p4
        :precondition (and (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p0011)
                           (checked_p4)
                           (succ_p0011_p4))
        :effect (and
                    ; #54628: <==commonly_known== 70837 (neg)
                    (not_at_a_p0011)

                    ; #87701: origin
                    (at_a_p4)

                    ; #43560: <==negation-removal== 87701 (pos)
                    (not (not_at_a_p4))

                    ; #70837: origin
                    (not (at_a_p0011))))

    (:action move_a_p0011_p5
        :precondition (and (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p0011)
                           (checked_p5)
                           (succ_p0011_p5))
        :effect (and
                    ; #36055: origin
                    (at_a_p5)

                    ; #54628: <==commonly_known== 70837 (neg)
                    (not_at_a_p0011)

                    ; #17616: <==negation-removal== 36055 (pos)
                    (not (not_at_a_p5))

                    ; #70837: origin
                    (not (at_a_p0011))))

    (:action move_a_p0011_p6
        :precondition (and (succ_p0011_p6)
                           (Pa_not_blocked_p6)
                           (checked_p6)
                           (at_a_p0011)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #36194: origin
                    (at_a_p6)

                    ; #54628: <==commonly_known== 70837 (neg)
                    (not_at_a_p0011)

                    ; #70837: origin
                    (not (at_a_p0011))

                    ; #86428: <==negation-removal== 36194 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p0011_p7
        :precondition (and (succ_p0011_p7)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p0011)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #36217: origin
                    (at_a_p7)

                    ; #54628: <==commonly_known== 70837 (neg)
                    (not_at_a_p0011)

                    ; #13196: <==negation-removal== 36217 (pos)
                    (not (not_at_a_p7))

                    ; #70837: origin
                    (not (at_a_p0011))))

    (:action move_a_p0011_p8
        :precondition (and (at_a_p0011)
                           (checked_p8)
                           (Pa_not_blocked_p8)
                           (succ_p0011_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #24935: origin
                    (at_a_p8)

                    ; #54628: <==commonly_known== 70837 (neg)
                    (not_at_a_p0011)

                    ; #70837: origin
                    (not (at_a_p0011))

                    ; #78361: <==negation-removal== 24935 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p0011_p9
        :precondition (and (Ba_not_blocked_p9)
                           (succ_p0011_p9)
                           (at_a_p0011)
                           (Pa_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #54628: <==commonly_known== 70837 (neg)
                    (not_at_a_p0011)

                    ; #76270: origin
                    (at_a_p9)

                    ; #23232: <==negation-removal== 76270 (pos)
                    (not (not_at_a_p9))

                    ; #70837: origin
                    (not (at_a_p0011))))

    (:action move_a_p012_p0011
        :precondition (and (at_a_p012)
                           (Pa_not_blocked_p0011)
                           (checked_p0011)
                           (Ba_not_blocked_p0011)
                           (succ_p012_p0011))
        :effect (and
                    ; #70837: origin
                    (at_a_p0011)

                    ; #87578: <==commonly_known== 13553 (neg)
                    (not_at_a_p012)

                    ; #13553: origin
                    (not (at_a_p012))

                    ; #54628: <==negation-removal== 70837 (pos)
                    (not (not_at_a_p0011))))

    (:action move_a_p012_p012
        :precondition (and (at_a_p012)
                           (Pa_not_blocked_p012)
                           (checked_p012)
                           (Ba_not_blocked_p012)
                           (succ_p012_p012))
        :effect (and
                    ; #13553: origin
                    (at_a_p012)

                    ; #87578: <==commonly_known== 13553 (neg)
                    (not_at_a_p012)

                    ; #13553: origin
                    (not (at_a_p012))

                    ; #87578: <==negation-removal== 13553 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p012_p1
        :precondition (and (at_a_p012)
                           (Pa_not_blocked_p1)
                           (succ_p012_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #27949: origin
                    (at_a_p1)

                    ; #87578: <==commonly_known== 13553 (neg)
                    (not_at_a_p012)

                    ; #13553: origin
                    (not (at_a_p012))

                    ; #82143: <==negation-removal== 27949 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p012_p10
        :precondition (and (at_a_p012)
                           (Pa_not_blocked_p10)
                           (Ba_not_blocked_p10)
                           (checked_p10)
                           (succ_p012_p10))
        :effect (and
                    ; #70938: origin
                    (at_a_p10)

                    ; #87578: <==commonly_known== 13553 (neg)
                    (not_at_a_p012)

                    ; #13553: origin
                    (not (at_a_p012))

                    ; #58117: <==negation-removal== 70938 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p012_p2
        :precondition (and (at_a_p012)
                           (succ_p012_p2)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #84280: origin
                    (at_a_p2)

                    ; #87578: <==commonly_known== 13553 (neg)
                    (not_at_a_p012)

                    ; #13553: origin
                    (not (at_a_p012))

                    ; #38483: <==negation-removal== 84280 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p012_p3
        :precondition (and (at_a_p012)
                           (Pa_not_blocked_p3)
                           (succ_p012_p3)
                           (Ba_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #67965: origin
                    (at_a_p3)

                    ; #87578: <==commonly_known== 13553 (neg)
                    (not_at_a_p012)

                    ; #13553: origin
                    (not (at_a_p012))

                    ; #19009: <==negation-removal== 67965 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p012_p4
        :precondition (and (at_a_p012)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p012_p4)
                           (checked_p4))
        :effect (and
                    ; #87578: <==commonly_known== 13553 (neg)
                    (not_at_a_p012)

                    ; #87701: origin
                    (at_a_p4)

                    ; #13553: origin
                    (not (at_a_p012))

                    ; #43560: <==negation-removal== 87701 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p012_p5
        :precondition (and (at_a_p012)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (checked_p5)
                           (succ_p012_p5))
        :effect (and
                    ; #36055: origin
                    (at_a_p5)

                    ; #87578: <==commonly_known== 13553 (neg)
                    (not_at_a_p012)

                    ; #13553: origin
                    (not (at_a_p012))

                    ; #17616: <==negation-removal== 36055 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p012_p6
        :precondition (and (at_a_p012)
                           (checked_p6)
                           (Pa_not_blocked_p6)
                           (succ_p012_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #36194: origin
                    (at_a_p6)

                    ; #87578: <==commonly_known== 13553 (neg)
                    (not_at_a_p012)

                    ; #13553: origin
                    (not (at_a_p012))

                    ; #86428: <==negation-removal== 36194 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p012_p7
        :precondition (and (at_a_p012)
                           (succ_p012_p7)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #36217: origin
                    (at_a_p7)

                    ; #87578: <==commonly_known== 13553 (neg)
                    (not_at_a_p012)

                    ; #13196: <==negation-removal== 36217 (pos)
                    (not (not_at_a_p7))

                    ; #13553: origin
                    (not (at_a_p012))))

    (:action move_a_p012_p8
        :precondition (and (at_a_p012)
                           (succ_p012_p8)
                           (checked_p8)
                           (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #24935: origin
                    (at_a_p8)

                    ; #87578: <==commonly_known== 13553 (neg)
                    (not_at_a_p012)

                    ; #13553: origin
                    (not (at_a_p012))

                    ; #78361: <==negation-removal== 24935 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p012_p9
        :precondition (and (at_a_p012)
                           (Ba_not_blocked_p9)
                           (succ_p012_p9)
                           (Pa_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #76270: origin
                    (at_a_p9)

                    ; #87578: <==commonly_known== 13553 (neg)
                    (not_at_a_p012)

                    ; #13553: origin
                    (not (at_a_p012))

                    ; #23232: <==negation-removal== 76270 (pos)
                    (not (not_at_a_p9))))

    (:action move_a_p10_p0011
        :precondition (and (at_a_p10)
                           (Pa_not_blocked_p0011)
                           (succ_p10_p0011)
                           (checked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #58117: <==commonly_known== 70938 (neg)
                    (not_at_a_p10)

                    ; #70837: origin
                    (at_a_p0011)

                    ; #54628: <==negation-removal== 70837 (pos)
                    (not (not_at_a_p0011))

                    ; #70938: origin
                    (not (at_a_p10))))

    (:action move_a_p10_p012
        :precondition (and (Pa_not_blocked_p012)
                           (succ_p10_p012)
                           (at_a_p10)
                           (checked_p012)
                           (Ba_not_blocked_p012))
        :effect (and
                    ; #13553: origin
                    (at_a_p012)

                    ; #58117: <==commonly_known== 70938 (neg)
                    (not_at_a_p10)

                    ; #70938: origin
                    (not (at_a_p10))

                    ; #87578: <==negation-removal== 13553 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p10_p1
        :precondition (and (Pa_not_blocked_p1)
                           (checked_p1)
                           (at_a_p10)
                           (Ba_not_blocked_p1)
                           (succ_p10_p1))
        :effect (and
                    ; #27949: origin
                    (at_a_p1)

                    ; #58117: <==commonly_known== 70938 (neg)
                    (not_at_a_p10)

                    ; #70938: origin
                    (not (at_a_p10))

                    ; #82143: <==negation-removal== 27949 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p10_p10
        :precondition (and (Pa_not_blocked_p10)
                           (Ba_not_blocked_p10)
                           (at_a_p10)
                           (checked_p10)
                           (succ_p10_p10))
        :effect (and
                    ; #58117: <==commonly_known== 70938 (neg)
                    (not_at_a_p10)

                    ; #70938: origin
                    (at_a_p10)

                    ; #58117: <==negation-removal== 70938 (pos)
                    (not (not_at_a_p10))

                    ; #70938: origin
                    (not (at_a_p10))))

    (:action move_a_p10_p2
        :precondition (and (succ_p10_p2)
                           (at_a_p10)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #58117: <==commonly_known== 70938 (neg)
                    (not_at_a_p10)

                    ; #84280: origin
                    (at_a_p2)

                    ; #38483: <==negation-removal== 84280 (pos)
                    (not (not_at_a_p2))

                    ; #70938: origin
                    (not (at_a_p10))))

    (:action move_a_p10_p3
        :precondition (and (checked_p3)
                           (Pa_not_blocked_p3)
                           (succ_p10_p3)
                           (at_a_p10)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #58117: <==commonly_known== 70938 (neg)
                    (not_at_a_p10)

                    ; #67965: origin
                    (at_a_p3)

                    ; #19009: <==negation-removal== 67965 (pos)
                    (not (not_at_a_p3))

                    ; #70938: origin
                    (not (at_a_p10))))

    (:action move_a_p10_p4
        :precondition (and (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p10)
                           (checked_p4)
                           (succ_p10_p4))
        :effect (and
                    ; #58117: <==commonly_known== 70938 (neg)
                    (not_at_a_p10)

                    ; #87701: origin
                    (at_a_p4)

                    ; #43560: <==negation-removal== 87701 (pos)
                    (not (not_at_a_p4))

                    ; #70938: origin
                    (not (at_a_p10))))

    (:action move_a_p10_p5
        :precondition (and (succ_p10_p5)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p10)
                           (checked_p5))
        :effect (and
                    ; #36055: origin
                    (at_a_p5)

                    ; #58117: <==commonly_known== 70938 (neg)
                    (not_at_a_p10)

                    ; #17616: <==negation-removal== 36055 (pos)
                    (not (not_at_a_p5))

                    ; #70938: origin
                    (not (at_a_p10))))

    (:action move_a_p10_p6
        :precondition (and (checked_p6)
                           (Pa_not_blocked_p6)
                           (at_a_p10)
                           (Ba_not_blocked_p6)
                           (succ_p10_p6))
        :effect (and
                    ; #36194: origin
                    (at_a_p6)

                    ; #58117: <==commonly_known== 70938 (neg)
                    (not_at_a_p10)

                    ; #70938: origin
                    (not (at_a_p10))

                    ; #86428: <==negation-removal== 36194 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p10_p7
        :precondition (and (checked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p10)
                           (succ_p10_p7)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #36217: origin
                    (at_a_p7)

                    ; #58117: <==commonly_known== 70938 (neg)
                    (not_at_a_p10)

                    ; #13196: <==negation-removal== 36217 (pos)
                    (not (not_at_a_p7))

                    ; #70938: origin
                    (not (at_a_p10))))

    (:action move_a_p10_p8
        :precondition (and (at_a_p10)
                           (succ_p10_p8)
                           (checked_p8)
                           (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #24935: origin
                    (at_a_p8)

                    ; #58117: <==commonly_known== 70938 (neg)
                    (not_at_a_p10)

                    ; #70938: origin
                    (not (at_a_p10))

                    ; #78361: <==negation-removal== 24935 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p10_p9
        :precondition (and (Ba_not_blocked_p9)
                           (at_a_p10)
                           (Pa_not_blocked_p9)
                           (checked_p9)
                           (succ_p10_p9))
        :effect (and
                    ; #58117: <==commonly_known== 70938 (neg)
                    (not_at_a_p10)

                    ; #76270: origin
                    (at_a_p9)

                    ; #23232: <==negation-removal== 76270 (pos)
                    (not (not_at_a_p9))

                    ; #70938: origin
                    (not (at_a_p10))))

    (:action move_a_p1_p0011
        :precondition (and (at_a_p1)
                           (Pa_not_blocked_p0011)
                           (succ_p1_p0011)
                           (checked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #70837: origin
                    (at_a_p0011)

                    ; #82143: <==commonly_known== 27949 (neg)
                    (not_at_a_p1)

                    ; #27949: origin
                    (not (at_a_p1))

                    ; #54628: <==negation-removal== 70837 (pos)
                    (not (not_at_a_p0011))))

    (:action move_a_p1_p012
        :precondition (and (at_a_p1)
                           (Pa_not_blocked_p012)
                           (checked_p012)
                           (succ_p1_p012)
                           (Ba_not_blocked_p012))
        :effect (and
                    ; #13553: origin
                    (at_a_p012)

                    ; #82143: <==commonly_known== 27949 (neg)
                    (not_at_a_p1)

                    ; #27949: origin
                    (not (at_a_p1))

                    ; #87578: <==negation-removal== 13553 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p1_p1
        :precondition (and (Pa_not_blocked_p1)
                           (at_a_p1)
                           (checked_p1)
                           (succ_p1_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #27949: origin
                    (at_a_p1)

                    ; #82143: <==commonly_known== 27949 (neg)
                    (not_at_a_p1)

                    ; #27949: origin
                    (not (at_a_p1))

                    ; #82143: <==negation-removal== 27949 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p1_p10
        :precondition (and (at_a_p1)
                           (Pa_not_blocked_p10)
                           (checked_p10)
                           (Ba_not_blocked_p10)
                           (succ_p1_p10))
        :effect (and
                    ; #70938: origin
                    (at_a_p10)

                    ; #82143: <==commonly_known== 27949 (neg)
                    (not_at_a_p1)

                    ; #27949: origin
                    (not (at_a_p1))

                    ; #58117: <==negation-removal== 70938 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p1_p2
        :precondition (and (succ_p1_p2)
                           (at_a_p1)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #82143: <==commonly_known== 27949 (neg)
                    (not_at_a_p1)

                    ; #84280: origin
                    (at_a_p2)

                    ; #27949: origin
                    (not (at_a_p1))

                    ; #38483: <==negation-removal== 84280 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p1_p3
        :precondition (and (at_a_p1)
                           (succ_p1_p3)
                           (Ba_not_blocked_p3)
                           (Pa_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #67965: origin
                    (at_a_p3)

                    ; #82143: <==commonly_known== 27949 (neg)
                    (not_at_a_p1)

                    ; #19009: <==negation-removal== 67965 (pos)
                    (not (not_at_a_p3))

                    ; #27949: origin
                    (not (at_a_p1))))

    (:action move_a_p1_p4
        :precondition (and (at_a_p1)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (checked_p4)
                           (succ_p1_p4))
        :effect (and
                    ; #82143: <==commonly_known== 27949 (neg)
                    (not_at_a_p1)

                    ; #87701: origin
                    (at_a_p4)

                    ; #27949: origin
                    (not (at_a_p1))

                    ; #43560: <==negation-removal== 87701 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p1_p5
        :precondition (and (succ_p1_p5)
                           (at_a_p1)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #36055: origin
                    (at_a_p5)

                    ; #82143: <==commonly_known== 27949 (neg)
                    (not_at_a_p1)

                    ; #17616: <==negation-removal== 36055 (pos)
                    (not (not_at_a_p5))

                    ; #27949: origin
                    (not (at_a_p1))))

    (:action move_a_p1_p6
        :precondition (and (checked_p6)
                           (Pa_not_blocked_p6)
                           (at_a_p1)
                           (Ba_not_blocked_p6)
                           (succ_p1_p6))
        :effect (and
                    ; #36194: origin
                    (at_a_p6)

                    ; #82143: <==commonly_known== 27949 (neg)
                    (not_at_a_p1)

                    ; #27949: origin
                    (not (at_a_p1))

                    ; #86428: <==negation-removal== 36194 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p1_p7
        :precondition (and (at_a_p1)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p1_p7)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #36217: origin
                    (at_a_p7)

                    ; #82143: <==commonly_known== 27949 (neg)
                    (not_at_a_p1)

                    ; #13196: <==negation-removal== 36217 (pos)
                    (not (not_at_a_p7))

                    ; #27949: origin
                    (not (at_a_p1))))

    (:action move_a_p1_p8
        :precondition (and (at_a_p1)
                           (succ_p1_p8)
                           (checked_p8)
                           (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #24935: origin
                    (at_a_p8)

                    ; #82143: <==commonly_known== 27949 (neg)
                    (not_at_a_p1)

                    ; #27949: origin
                    (not (at_a_p1))

                    ; #78361: <==negation-removal== 24935 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p1_p9
        :precondition (and (Ba_not_blocked_p9)
                           (at_a_p1)
                           (succ_p1_p9)
                           (Pa_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #76270: origin
                    (at_a_p9)

                    ; #82143: <==commonly_known== 27949 (neg)
                    (not_at_a_p1)

                    ; #23232: <==negation-removal== 76270 (pos)
                    (not (not_at_a_p9))

                    ; #27949: origin
                    (not (at_a_p1))))

    (:action move_a_p2_p0011
        :precondition (and (succ_p2_p0011)
                           (Pa_not_blocked_p0011)
                           (at_a_p2)
                           (checked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #38483: <==commonly_known== 84280 (neg)
                    (not_at_a_p2)

                    ; #70837: origin
                    (at_a_p0011)

                    ; #54628: <==negation-removal== 70837 (pos)
                    (not (not_at_a_p0011))

                    ; #84280: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p012
        :precondition (and (Pa_not_blocked_p012)
                           (checked_p012)
                           (at_a_p2)
                           (Ba_not_blocked_p012)
                           (succ_p2_p012))
        :effect (and
                    ; #13553: origin
                    (at_a_p012)

                    ; #38483: <==commonly_known== 84280 (neg)
                    (not_at_a_p2)

                    ; #84280: origin
                    (not (at_a_p2))

                    ; #87578: <==negation-removal== 13553 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p2_p1
        :precondition (and (Pa_not_blocked_p1)
                           (checked_p1)
                           (succ_p2_p1)
                           (at_a_p2)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #27949: origin
                    (at_a_p1)

                    ; #38483: <==commonly_known== 84280 (neg)
                    (not_at_a_p2)

                    ; #82143: <==negation-removal== 27949 (pos)
                    (not (not_at_a_p1))

                    ; #84280: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p10
        :precondition (and (Pa_not_blocked_p10)
                           (Ba_not_blocked_p10)
                           (at_a_p2)
                           (checked_p10)
                           (succ_p2_p10))
        :effect (and
                    ; #38483: <==commonly_known== 84280 (neg)
                    (not_at_a_p2)

                    ; #70938: origin
                    (at_a_p10)

                    ; #58117: <==negation-removal== 70938 (pos)
                    (not (not_at_a_p10))

                    ; #84280: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p2
        :precondition (and (checked_p2)
                           (at_a_p2)
                           (Pa_not_blocked_p2)
                           (succ_p2_p2)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #38483: <==commonly_known== 84280 (neg)
                    (not_at_a_p2)

                    ; #84280: origin
                    (at_a_p2)

                    ; #38483: <==negation-removal== 84280 (pos)
                    (not (not_at_a_p2))

                    ; #84280: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p3
        :precondition (and (succ_p2_p3)
                           (Pa_not_blocked_p3)
                           (Ba_not_blocked_p3)
                           (checked_p3)
                           (at_a_p2))
        :effect (and
                    ; #38483: <==commonly_known== 84280 (neg)
                    (not_at_a_p2)

                    ; #67965: origin
                    (at_a_p3)

                    ; #19009: <==negation-removal== 67965 (pos)
                    (not (not_at_a_p3))

                    ; #84280: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p4
        :precondition (and (Pa_not_blocked_p4)
                           (succ_p2_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p2)
                           (checked_p4))
        :effect (and
                    ; #38483: <==commonly_known== 84280 (neg)
                    (not_at_a_p2)

                    ; #87701: origin
                    (at_a_p4)

                    ; #43560: <==negation-removal== 87701 (pos)
                    (not (not_at_a_p4))

                    ; #84280: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p5
        :precondition (and (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (checked_p5)
                           (at_a_p2)
                           (succ_p2_p5))
        :effect (and
                    ; #36055: origin
                    (at_a_p5)

                    ; #38483: <==commonly_known== 84280 (neg)
                    (not_at_a_p2)

                    ; #17616: <==negation-removal== 36055 (pos)
                    (not (not_at_a_p5))

                    ; #84280: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p6
        :precondition (and (checked_p6)
                           (Pa_not_blocked_p6)
                           (succ_p2_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p2))
        :effect (and
                    ; #36194: origin
                    (at_a_p6)

                    ; #38483: <==commonly_known== 84280 (neg)
                    (not_at_a_p2)

                    ; #84280: origin
                    (not (at_a_p2))

                    ; #86428: <==negation-removal== 36194 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p2_p7
        :precondition (and (succ_p2_p7)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p2)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #36217: origin
                    (at_a_p7)

                    ; #38483: <==commonly_known== 84280 (neg)
                    (not_at_a_p2)

                    ; #13196: <==negation-removal== 36217 (pos)
                    (not (not_at_a_p7))

                    ; #84280: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p8
        :precondition (and (succ_p2_p8)
                           (at_a_p2)
                           (checked_p8)
                           (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #24935: origin
                    (at_a_p8)

                    ; #38483: <==commonly_known== 84280 (neg)
                    (not_at_a_p2)

                    ; #78361: <==negation-removal== 24935 (pos)
                    (not (not_at_a_p8))

                    ; #84280: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p9
        :precondition (and (Ba_not_blocked_p9)
                           (succ_p2_p9)
                           (at_a_p2)
                           (Pa_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #38483: <==commonly_known== 84280 (neg)
                    (not_at_a_p2)

                    ; #76270: origin
                    (at_a_p9)

                    ; #23232: <==negation-removal== 76270 (pos)
                    (not (not_at_a_p9))

                    ; #84280: origin
                    (not (at_a_p2))))

    (:action move_a_p3_p0011
        :precondition (and (succ_p3_p0011)
                           (Pa_not_blocked_p0011)
                           (checked_p0011)
                           (Ba_not_blocked_p0011)
                           (at_a_p3))
        :effect (and
                    ; #19009: <==commonly_known== 67965 (neg)
                    (not_at_a_p3)

                    ; #70837: origin
                    (at_a_p0011)

                    ; #54628: <==negation-removal== 70837 (pos)
                    (not (not_at_a_p0011))

                    ; #67965: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p012
        :precondition (and (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (checked_p012)
                           (succ_p3_p012)
                           (at_a_p3))
        :effect (and
                    ; #13553: origin
                    (at_a_p012)

                    ; #19009: <==commonly_known== 67965 (neg)
                    (not_at_a_p3)

                    ; #67965: origin
                    (not (at_a_p3))

                    ; #87578: <==negation-removal== 13553 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p3_p1
        :precondition (and (Pa_not_blocked_p1)
                           (checked_p1)
                           (succ_p3_p1)
                           (Ba_not_blocked_p1)
                           (at_a_p3))
        :effect (and
                    ; #19009: <==commonly_known== 67965 (neg)
                    (not_at_a_p3)

                    ; #27949: origin
                    (at_a_p1)

                    ; #67965: origin
                    (not (at_a_p3))

                    ; #82143: <==negation-removal== 27949 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p3_p10
        :precondition (and (Pa_not_blocked_p10)
                           (Ba_not_blocked_p10)
                           (checked_p10)
                           (succ_p3_p10)
                           (at_a_p3))
        :effect (and
                    ; #19009: <==commonly_known== 67965 (neg)
                    (not_at_a_p3)

                    ; #70938: origin
                    (at_a_p10)

                    ; #58117: <==negation-removal== 70938 (pos)
                    (not (not_at_a_p10))

                    ; #67965: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p2
        :precondition (and (succ_p3_p2)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p3))
        :effect (and
                    ; #19009: <==commonly_known== 67965 (neg)
                    (not_at_a_p3)

                    ; #84280: origin
                    (at_a_p2)

                    ; #38483: <==negation-removal== 84280 (pos)
                    (not (not_at_a_p2))

                    ; #67965: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p3
        :precondition (and (Pa_not_blocked_p3)
                           (Ba_not_blocked_p3)
                           (succ_p3_p3)
                           (checked_p3)
                           (at_a_p3))
        :effect (and
                    ; #19009: <==commonly_known== 67965 (neg)
                    (not_at_a_p3)

                    ; #67965: origin
                    (at_a_p3)

                    ; #19009: <==negation-removal== 67965 (pos)
                    (not (not_at_a_p3))

                    ; #67965: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p4
        :precondition (and (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p3_p4)
                           (checked_p4)
                           (at_a_p3))
        :effect (and
                    ; #19009: <==commonly_known== 67965 (neg)
                    (not_at_a_p3)

                    ; #87701: origin
                    (at_a_p4)

                    ; #43560: <==negation-removal== 87701 (pos)
                    (not (not_at_a_p4))

                    ; #67965: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p5
        :precondition (and (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (checked_p5)
                           (succ_p3_p5)
                           (at_a_p3))
        :effect (and
                    ; #19009: <==commonly_known== 67965 (neg)
                    (not_at_a_p3)

                    ; #36055: origin
                    (at_a_p5)

                    ; #17616: <==negation-removal== 36055 (pos)
                    (not (not_at_a_p5))

                    ; #67965: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p6
        :precondition (and (checked_p6)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6)
                           (succ_p3_p6)
                           (at_a_p3))
        :effect (and
                    ; #19009: <==commonly_known== 67965 (neg)
                    (not_at_a_p3)

                    ; #36194: origin
                    (at_a_p6)

                    ; #67965: origin
                    (not (at_a_p3))

                    ; #86428: <==negation-removal== 36194 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p3_p7
        :precondition (and (checked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p3_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p3))
        :effect (and
                    ; #19009: <==commonly_known== 67965 (neg)
                    (not_at_a_p3)

                    ; #36217: origin
                    (at_a_p7)

                    ; #13196: <==negation-removal== 36217 (pos)
                    (not (not_at_a_p7))

                    ; #67965: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p8
        :precondition (and (succ_p3_p8)
                           (checked_p8)
                           (at_a_p3)
                           (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #19009: <==commonly_known== 67965 (neg)
                    (not_at_a_p3)

                    ; #24935: origin
                    (at_a_p8)

                    ; #67965: origin
                    (not (at_a_p3))

                    ; #78361: <==negation-removal== 24935 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p3_p9
        :precondition (and (Ba_not_blocked_p9)
                           (succ_p3_p9)
                           (Pa_not_blocked_p9)
                           (checked_p9)
                           (at_a_p3))
        :effect (and
                    ; #19009: <==commonly_known== 67965 (neg)
                    (not_at_a_p3)

                    ; #76270: origin
                    (at_a_p9)

                    ; #23232: <==negation-removal== 76270 (pos)
                    (not (not_at_a_p9))

                    ; #67965: origin
                    (not (at_a_p3))))

    (:action move_a_p4_p0011
        :precondition (and (succ_p4_p0011)
                           (Pa_not_blocked_p0011)
                           (checked_p0011)
                           (at_a_p4)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #43560: <==commonly_known== 87701 (neg)
                    (not_at_a_p4)

                    ; #70837: origin
                    (at_a_p0011)

                    ; #54628: <==negation-removal== 70837 (pos)
                    (not (not_at_a_p0011))

                    ; #87701: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p012
        :precondition (and (succ_p4_p012)
                           (Pa_not_blocked_p012)
                           (checked_p012)
                           (Ba_not_blocked_p012)
                           (at_a_p4))
        :effect (and
                    ; #13553: origin
                    (at_a_p012)

                    ; #43560: <==commonly_known== 87701 (neg)
                    (not_at_a_p4)

                    ; #87578: <==negation-removal== 13553 (pos)
                    (not (not_at_a_p012))

                    ; #87701: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p1
        :precondition (and (Pa_not_blocked_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1)
                           (at_a_p4)
                           (succ_p4_p1))
        :effect (and
                    ; #27949: origin
                    (at_a_p1)

                    ; #43560: <==commonly_known== 87701 (neg)
                    (not_at_a_p4)

                    ; #82143: <==negation-removal== 27949 (pos)
                    (not (not_at_a_p1))

                    ; #87701: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p10
        :precondition (and (succ_p4_p10)
                           (Pa_not_blocked_p10)
                           (Ba_not_blocked_p10)
                           (checked_p10)
                           (at_a_p4))
        :effect (and
                    ; #43560: <==commonly_known== 87701 (neg)
                    (not_at_a_p4)

                    ; #70938: origin
                    (at_a_p10)

                    ; #58117: <==negation-removal== 70938 (pos)
                    (not (not_at_a_p10))

                    ; #87701: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p2
        :precondition (and (succ_p4_p2)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (at_a_p4)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #43560: <==commonly_known== 87701 (neg)
                    (not_at_a_p4)

                    ; #84280: origin
                    (at_a_p2)

                    ; #38483: <==negation-removal== 84280 (pos)
                    (not (not_at_a_p2))

                    ; #87701: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p3
        :precondition (and (Ba_not_blocked_p3)
                           (Pa_not_blocked_p3)
                           (checked_p3)
                           (succ_p4_p3)
                           (at_a_p4))
        :effect (and
                    ; #43560: <==commonly_known== 87701 (neg)
                    (not_at_a_p4)

                    ; #67965: origin
                    (at_a_p3)

                    ; #19009: <==negation-removal== 67965 (pos)
                    (not (not_at_a_p3))

                    ; #87701: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p4
        :precondition (and (Pa_not_blocked_p4)
                           (checked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p4_p4)
                           (at_a_p4))
        :effect (and
                    ; #43560: <==commonly_known== 87701 (neg)
                    (not_at_a_p4)

                    ; #87701: origin
                    (at_a_p4)

                    ; #43560: <==negation-removal== 87701 (pos)
                    (not (not_at_a_p4))

                    ; #87701: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p5
        :precondition (and (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (checked_p5)
                           (at_a_p4)
                           (succ_p4_p5))
        :effect (and
                    ; #36055: origin
                    (at_a_p5)

                    ; #43560: <==commonly_known== 87701 (neg)
                    (not_at_a_p4)

                    ; #17616: <==negation-removal== 36055 (pos)
                    (not (not_at_a_p5))

                    ; #87701: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p6
        :precondition (and (succ_p4_p6)
                           (checked_p6)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p4))
        :effect (and
                    ; #36194: origin
                    (at_a_p6)

                    ; #43560: <==commonly_known== 87701 (neg)
                    (not_at_a_p4)

                    ; #86428: <==negation-removal== 36194 (pos)
                    (not (not_at_a_p6))

                    ; #87701: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p7
        :precondition (and (checked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p4_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p4))
        :effect (and
                    ; #36217: origin
                    (at_a_p7)

                    ; #43560: <==commonly_known== 87701 (neg)
                    (not_at_a_p4)

                    ; #13196: <==negation-removal== 36217 (pos)
                    (not (not_at_a_p7))

                    ; #87701: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p8
        :precondition (and (succ_p4_p8)
                           (at_a_p4)
                           (checked_p8)
                           (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #24935: origin
                    (at_a_p8)

                    ; #43560: <==commonly_known== 87701 (neg)
                    (not_at_a_p4)

                    ; #78361: <==negation-removal== 24935 (pos)
                    (not (not_at_a_p8))

                    ; #87701: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p9
        :precondition (and (Ba_not_blocked_p9)
                           (succ_p4_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p4)
                           (checked_p9))
        :effect (and
                    ; #43560: <==commonly_known== 87701 (neg)
                    (not_at_a_p4)

                    ; #76270: origin
                    (at_a_p9)

                    ; #23232: <==negation-removal== 76270 (pos)
                    (not (not_at_a_p9))

                    ; #87701: origin
                    (not (at_a_p4))))

    (:action move_a_p5_p0011
        :precondition (and (at_a_p5)
                           (Pa_not_blocked_p0011)
                           (checked_p0011)
                           (Ba_not_blocked_p0011)
                           (succ_p5_p0011))
        :effect (and
                    ; #17616: <==commonly_known== 36055 (neg)
                    (not_at_a_p5)

                    ; #70837: origin
                    (at_a_p0011)

                    ; #36055: origin
                    (not (at_a_p5))

                    ; #54628: <==negation-removal== 70837 (pos)
                    (not (not_at_a_p0011))))

    (:action move_a_p5_p012
        :precondition (and (at_a_p5)
                           (Pa_not_blocked_p012)
                           (checked_p012)
                           (Ba_not_blocked_p012)
                           (succ_p5_p012))
        :effect (and
                    ; #13553: origin
                    (at_a_p012)

                    ; #17616: <==commonly_known== 36055 (neg)
                    (not_at_a_p5)

                    ; #36055: origin
                    (not (at_a_p5))

                    ; #87578: <==negation-removal== 13553 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p5_p1
        :precondition (and (succ_p5_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p5)
                           (checked_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #17616: <==commonly_known== 36055 (neg)
                    (not_at_a_p5)

                    ; #27949: origin
                    (at_a_p1)

                    ; #36055: origin
                    (not (at_a_p5))

                    ; #82143: <==negation-removal== 27949 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p5_p10
        :precondition (and (at_a_p5)
                           (Pa_not_blocked_p10)
                           (Ba_not_blocked_p10)
                           (checked_p10)
                           (succ_p5_p10))
        :effect (and
                    ; #17616: <==commonly_known== 36055 (neg)
                    (not_at_a_p5)

                    ; #70938: origin
                    (at_a_p10)

                    ; #36055: origin
                    (not (at_a_p5))

                    ; #58117: <==negation-removal== 70938 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p5_p2
        :precondition (and (at_a_p5)
                           (succ_p5_p2)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #17616: <==commonly_known== 36055 (neg)
                    (not_at_a_p5)

                    ; #84280: origin
                    (at_a_p2)

                    ; #36055: origin
                    (not (at_a_p5))

                    ; #38483: <==negation-removal== 84280 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p5_p3
        :precondition (and (at_a_p5)
                           (Pa_not_blocked_p3)
                           (succ_p5_p3)
                           (Ba_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #17616: <==commonly_known== 36055 (neg)
                    (not_at_a_p5)

                    ; #67965: origin
                    (at_a_p3)

                    ; #19009: <==negation-removal== 67965 (pos)
                    (not (not_at_a_p3))

                    ; #36055: origin
                    (not (at_a_p5))))

    (:action move_a_p5_p4
        :precondition (and (succ_p5_p4)
                           (at_a_p5)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #17616: <==commonly_known== 36055 (neg)
                    (not_at_a_p5)

                    ; #87701: origin
                    (at_a_p4)

                    ; #36055: origin
                    (not (at_a_p5))

                    ; #43560: <==negation-removal== 87701 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p5_p5
        :precondition (and (at_a_p5)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (checked_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #17616: <==commonly_known== 36055 (neg)
                    (not_at_a_p5)

                    ; #36055: origin
                    (at_a_p5)

                    ; #17616: <==negation-removal== 36055 (pos)
                    (not (not_at_a_p5))

                    ; #36055: origin
                    (not (at_a_p5))))

    (:action move_a_p5_p6
        :precondition (and (checked_p6)
                           (Pa_not_blocked_p6)
                           (at_a_p5)
                           (Ba_not_blocked_p6)
                           (succ_p5_p6))
        :effect (and
                    ; #17616: <==commonly_known== 36055 (neg)
                    (not_at_a_p5)

                    ; #36194: origin
                    (at_a_p6)

                    ; #36055: origin
                    (not (at_a_p5))

                    ; #86428: <==negation-removal== 36194 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p5_p7
        :precondition (and (succ_p5_p7)
                           (at_a_p5)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #17616: <==commonly_known== 36055 (neg)
                    (not_at_a_p5)

                    ; #36217: origin
                    (at_a_p7)

                    ; #13196: <==negation-removal== 36217 (pos)
                    (not (not_at_a_p7))

                    ; #36055: origin
                    (not (at_a_p5))))

    (:action move_a_p5_p8
        :precondition (and (at_a_p5)
                           (succ_p5_p8)
                           (checked_p8)
                           (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #17616: <==commonly_known== 36055 (neg)
                    (not_at_a_p5)

                    ; #24935: origin
                    (at_a_p8)

                    ; #36055: origin
                    (not (at_a_p5))

                    ; #78361: <==negation-removal== 24935 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p5_p9
        :precondition (and (succ_p5_p9)
                           (Ba_not_blocked_p9)
                           (at_a_p5)
                           (Pa_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #17616: <==commonly_known== 36055 (neg)
                    (not_at_a_p5)

                    ; #76270: origin
                    (at_a_p9)

                    ; #23232: <==negation-removal== 76270 (pos)
                    (not (not_at_a_p9))

                    ; #36055: origin
                    (not (at_a_p5))))

    (:action move_a_p6_p0011
        :precondition (and (succ_p6_p0011)
                           (at_a_p6)
                           (Pa_not_blocked_p0011)
                           (checked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #70837: origin
                    (at_a_p0011)

                    ; #86428: <==commonly_known== 36194 (neg)
                    (not_at_a_p6)

                    ; #36194: origin
                    (not (at_a_p6))

                    ; #54628: <==negation-removal== 70837 (pos)
                    (not (not_at_a_p0011))))

    (:action move_a_p6_p012
        :precondition (and (at_a_p6)
                           (Pa_not_blocked_p012)
                           (checked_p012)
                           (succ_p6_p012)
                           (Ba_not_blocked_p012))
        :effect (and
                    ; #13553: origin
                    (at_a_p012)

                    ; #86428: <==commonly_known== 36194 (neg)
                    (not_at_a_p6)

                    ; #36194: origin
                    (not (at_a_p6))

                    ; #87578: <==negation-removal== 13553 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p6_p1
        :precondition (and (Pa_not_blocked_p1)
                           (at_a_p6)
                           (checked_p1)
                           (succ_p6_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #27949: origin
                    (at_a_p1)

                    ; #86428: <==commonly_known== 36194 (neg)
                    (not_at_a_p6)

                    ; #36194: origin
                    (not (at_a_p6))

                    ; #82143: <==negation-removal== 27949 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p6_p10
        :precondition (and (succ_p6_p10)
                           (at_a_p6)
                           (Pa_not_blocked_p10)
                           (Ba_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #70938: origin
                    (at_a_p10)

                    ; #86428: <==commonly_known== 36194 (neg)
                    (not_at_a_p6)

                    ; #36194: origin
                    (not (at_a_p6))

                    ; #58117: <==negation-removal== 70938 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p6_p2
        :precondition (and (at_a_p6)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (Ba_not_blocked_p2)
                           (succ_p6_p2))
        :effect (and
                    ; #84280: origin
                    (at_a_p2)

                    ; #86428: <==commonly_known== 36194 (neg)
                    (not_at_a_p6)

                    ; #36194: origin
                    (not (at_a_p6))

                    ; #38483: <==negation-removal== 84280 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p6_p3
        :precondition (and (at_a_p6)
                           (Ba_not_blocked_p3)
                           (Pa_not_blocked_p3)
                           (checked_p3)
                           (succ_p6_p3))
        :effect (and
                    ; #67965: origin
                    (at_a_p3)

                    ; #86428: <==commonly_known== 36194 (neg)
                    (not_at_a_p6)

                    ; #19009: <==negation-removal== 67965 (pos)
                    (not (not_at_a_p3))

                    ; #36194: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p4
        :precondition (and (Pa_not_blocked_p4)
                           (at_a_p6)
                           (Ba_not_blocked_p4)
                           (succ_p6_p4)
                           (checked_p4))
        :effect (and
                    ; #86428: <==commonly_known== 36194 (neg)
                    (not_at_a_p6)

                    ; #87701: origin
                    (at_a_p4)

                    ; #36194: origin
                    (not (at_a_p6))

                    ; #43560: <==negation-removal== 87701 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p6_p5
        :precondition (and (succ_p6_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p6)
                           (Pa_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #36055: origin
                    (at_a_p5)

                    ; #86428: <==commonly_known== 36194 (neg)
                    (not_at_a_p6)

                    ; #17616: <==negation-removal== 36055 (pos)
                    (not (not_at_a_p5))

                    ; #36194: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p6
        :precondition (and (checked_p6)
                           (Pa_not_blocked_p6)
                           (at_a_p6)
                           (Ba_not_blocked_p6)
                           (succ_p6_p6))
        :effect (and
                    ; #36194: origin
                    (at_a_p6)

                    ; #86428: <==commonly_known== 36194 (neg)
                    (not_at_a_p6)

                    ; #36194: origin
                    (not (at_a_p6))

                    ; #86428: <==negation-removal== 36194 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p6_p7
        :precondition (and (succ_p6_p7)
                           (at_a_p6)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #36217: origin
                    (at_a_p7)

                    ; #86428: <==commonly_known== 36194 (neg)
                    (not_at_a_p6)

                    ; #13196: <==negation-removal== 36217 (pos)
                    (not (not_at_a_p7))

                    ; #36194: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p8
        :precondition (and (at_a_p6)
                           (checked_p8)
                           (Pa_not_blocked_p8)
                           (succ_p6_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #24935: origin
                    (at_a_p8)

                    ; #86428: <==commonly_known== 36194 (neg)
                    (not_at_a_p6)

                    ; #36194: origin
                    (not (at_a_p6))

                    ; #78361: <==negation-removal== 24935 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p6_p9
        :precondition (and (Ba_not_blocked_p9)
                           (at_a_p6)
                           (succ_p6_p9)
                           (Pa_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #76270: origin
                    (at_a_p9)

                    ; #86428: <==commonly_known== 36194 (neg)
                    (not_at_a_p6)

                    ; #23232: <==negation-removal== 76270 (pos)
                    (not (not_at_a_p9))

                    ; #36194: origin
                    (not (at_a_p6))))

    (:action move_a_p7_p0011
        :precondition (and (Pa_not_blocked_p0011)
                           (checked_p0011)
                           (at_a_p7)
                           (succ_p7_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #13196: <==commonly_known== 36217 (neg)
                    (not_at_a_p7)

                    ; #70837: origin
                    (at_a_p0011)

                    ; #36217: origin
                    (not (at_a_p7))

                    ; #54628: <==negation-removal== 70837 (pos)
                    (not (not_at_a_p0011))))

    (:action move_a_p7_p012
        :precondition (and (Pa_not_blocked_p012)
                           (checked_p012)
                           (succ_p7_p012)
                           (Ba_not_blocked_p012)
                           (at_a_p7))
        :effect (and
                    ; #13196: <==commonly_known== 36217 (neg)
                    (not_at_a_p7)

                    ; #13553: origin
                    (at_a_p012)

                    ; #36217: origin
                    (not (at_a_p7))

                    ; #87578: <==negation-removal== 13553 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p7_p1
        :precondition (and (Pa_not_blocked_p1)
                           (checked_p1)
                           (succ_p7_p1)
                           (at_a_p7)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #13196: <==commonly_known== 36217 (neg)
                    (not_at_a_p7)

                    ; #27949: origin
                    (at_a_p1)

                    ; #36217: origin
                    (not (at_a_p7))

                    ; #82143: <==negation-removal== 27949 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p7_p10
        :precondition (and (succ_p7_p10)
                           (Pa_not_blocked_p10)
                           (Ba_not_blocked_p10)
                           (checked_p10)
                           (at_a_p7))
        :effect (and
                    ; #13196: <==commonly_known== 36217 (neg)
                    (not_at_a_p7)

                    ; #70938: origin
                    (at_a_p10)

                    ; #36217: origin
                    (not (at_a_p7))

                    ; #58117: <==negation-removal== 70938 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p7_p2
        :precondition (and (Pa_not_blocked_p2)
                           (checked_p2)
                           (succ_p7_p2)
                           (at_a_p7)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #13196: <==commonly_known== 36217 (neg)
                    (not_at_a_p7)

                    ; #84280: origin
                    (at_a_p2)

                    ; #36217: origin
                    (not (at_a_p7))

                    ; #38483: <==negation-removal== 84280 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p7_p3
        :precondition (and (Pa_not_blocked_p3)
                           (succ_p7_p3)
                           (Ba_not_blocked_p3)
                           (checked_p3)
                           (at_a_p7))
        :effect (and
                    ; #13196: <==commonly_known== 36217 (neg)
                    (not_at_a_p7)

                    ; #67965: origin
                    (at_a_p3)

                    ; #19009: <==negation-removal== 67965 (pos)
                    (not (not_at_a_p3))

                    ; #36217: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p4
        :precondition (and (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p7_p4)
                           (at_a_p7)
                           (checked_p4))
        :effect (and
                    ; #13196: <==commonly_known== 36217 (neg)
                    (not_at_a_p7)

                    ; #87701: origin
                    (at_a_p4)

                    ; #36217: origin
                    (not (at_a_p7))

                    ; #43560: <==negation-removal== 87701 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p7_p5
        :precondition (and (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (succ_p7_p5)
                           (checked_p5)
                           (at_a_p7))
        :effect (and
                    ; #13196: <==commonly_known== 36217 (neg)
                    (not_at_a_p7)

                    ; #36055: origin
                    (at_a_p5)

                    ; #17616: <==negation-removal== 36055 (pos)
                    (not (not_at_a_p5))

                    ; #36217: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p6
        :precondition (and (checked_p6)
                           (Pa_not_blocked_p6)
                           (succ_p7_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p7))
        :effect (and
                    ; #13196: <==commonly_known== 36217 (neg)
                    (not_at_a_p7)

                    ; #36194: origin
                    (at_a_p6)

                    ; #36217: origin
                    (not (at_a_p7))

                    ; #86428: <==negation-removal== 36194 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p7_p7
        :precondition (and (checked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p7_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p7))
        :effect (and
                    ; #13196: <==commonly_known== 36217 (neg)
                    (not_at_a_p7)

                    ; #36217: origin
                    (at_a_p7)

                    ; #13196: <==negation-removal== 36217 (pos)
                    (not (not_at_a_p7))

                    ; #36217: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p8
        :precondition (and (succ_p7_p8)
                           (checked_p8)
                           (at_a_p7)
                           (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #13196: <==commonly_known== 36217 (neg)
                    (not_at_a_p7)

                    ; #24935: origin
                    (at_a_p8)

                    ; #36217: origin
                    (not (at_a_p7))

                    ; #78361: <==negation-removal== 24935 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p7_p9
        :precondition (and (Ba_not_blocked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p7_p9)
                           (at_a_p7)
                           (checked_p9))
        :effect (and
                    ; #13196: <==commonly_known== 36217 (neg)
                    (not_at_a_p7)

                    ; #76270: origin
                    (at_a_p9)

                    ; #23232: <==negation-removal== 76270 (pos)
                    (not (not_at_a_p9))

                    ; #36217: origin
                    (not (at_a_p7))))

    (:action move_a_p8_p0011
        :precondition (and (at_a_p8)
                           (Pa_not_blocked_p0011)
                           (succ_p8_p0011)
                           (checked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #70837: origin
                    (at_a_p0011)

                    ; #78361: <==commonly_known== 24935 (neg)
                    (not_at_a_p8)

                    ; #24935: origin
                    (not (at_a_p8))

                    ; #54628: <==negation-removal== 70837 (pos)
                    (not (not_at_a_p0011))))

    (:action move_a_p8_p012
        :precondition (and (Pa_not_blocked_p012)
                           (checked_p012)
                           (at_a_p8)
                           (Ba_not_blocked_p012)
                           (succ_p8_p012))
        :effect (and
                    ; #13553: origin
                    (at_a_p012)

                    ; #78361: <==commonly_known== 24935 (neg)
                    (not_at_a_p8)

                    ; #24935: origin
                    (not (at_a_p8))

                    ; #87578: <==negation-removal== 13553 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p8_p1
        :precondition (and (Pa_not_blocked_p1)
                           (succ_p8_p1)
                           (checked_p1)
                           (at_a_p8)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #27949: origin
                    (at_a_p1)

                    ; #78361: <==commonly_known== 24935 (neg)
                    (not_at_a_p8)

                    ; #24935: origin
                    (not (at_a_p8))

                    ; #82143: <==negation-removal== 27949 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p8_p10
        :precondition (and (Pa_not_blocked_p10)
                           (Ba_not_blocked_p10)
                           (at_a_p8)
                           (checked_p10)
                           (succ_p8_p10))
        :effect (and
                    ; #70938: origin
                    (at_a_p10)

                    ; #78361: <==commonly_known== 24935 (neg)
                    (not_at_a_p8)

                    ; #24935: origin
                    (not (at_a_p8))

                    ; #58117: <==negation-removal== 70938 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p8_p2
        :precondition (and (succ_p8_p2)
                           (at_a_p8)
                           (Pa_not_blocked_p2)
                           (checked_p2)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #78361: <==commonly_known== 24935 (neg)
                    (not_at_a_p8)

                    ; #84280: origin
                    (at_a_p2)

                    ; #24935: origin
                    (not (at_a_p8))

                    ; #38483: <==negation-removal== 84280 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p8_p3
        :precondition (and (at_a_p8)
                           (succ_p8_p3)
                           (Ba_not_blocked_p3)
                           (Pa_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #67965: origin
                    (at_a_p3)

                    ; #78361: <==commonly_known== 24935 (neg)
                    (not_at_a_p8)

                    ; #19009: <==negation-removal== 67965 (pos)
                    (not (not_at_a_p3))

                    ; #24935: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p4
        :precondition (and (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p8)
                           (succ_p8_p4)
                           (checked_p4))
        :effect (and
                    ; #78361: <==commonly_known== 24935 (neg)
                    (not_at_a_p8)

                    ; #87701: origin
                    (at_a_p4)

                    ; #24935: origin
                    (not (at_a_p8))

                    ; #43560: <==negation-removal== 87701 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p8_p5
        :precondition (and (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p8)
                           (checked_p5)
                           (succ_p8_p5))
        :effect (and
                    ; #36055: origin
                    (at_a_p5)

                    ; #78361: <==commonly_known== 24935 (neg)
                    (not_at_a_p8)

                    ; #17616: <==negation-removal== 36055 (pos)
                    (not (not_at_a_p5))

                    ; #24935: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p6
        :precondition (and (checked_p6)
                           (Pa_not_blocked_p6)
                           (at_a_p8)
                           (succ_p8_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #36194: origin
                    (at_a_p6)

                    ; #78361: <==commonly_known== 24935 (neg)
                    (not_at_a_p8)

                    ; #24935: origin
                    (not (at_a_p8))

                    ; #86428: <==negation-removal== 36194 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p8_p7
        :precondition (and (succ_p8_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (at_a_p8)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #36217: origin
                    (at_a_p7)

                    ; #78361: <==commonly_known== 24935 (neg)
                    (not_at_a_p8)

                    ; #13196: <==negation-removal== 36217 (pos)
                    (not (not_at_a_p7))

                    ; #24935: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p8
        :precondition (and (succ_p8_p8)
                           (at_a_p8)
                           (checked_p8)
                           (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #24935: origin
                    (at_a_p8)

                    ; #78361: <==commonly_known== 24935 (neg)
                    (not_at_a_p8)

                    ; #24935: origin
                    (not (at_a_p8))

                    ; #78361: <==negation-removal== 24935 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p8_p9
        :precondition (and (Ba_not_blocked_p9)
                           (succ_p8_p9)
                           (at_a_p8)
                           (Pa_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #76270: origin
                    (at_a_p9)

                    ; #78361: <==commonly_known== 24935 (neg)
                    (not_at_a_p8)

                    ; #23232: <==negation-removal== 76270 (pos)
                    (not (not_at_a_p9))

                    ; #24935: origin
                    (not (at_a_p8))))

    (:action move_a_p9_p0011
        :precondition (and (succ_p9_p0011)
                           (Pa_not_blocked_p0011)
                           (at_a_p9)
                           (checked_p0011)
                           (Ba_not_blocked_p0011))
        :effect (and
                    ; #23232: <==commonly_known== 76270 (neg)
                    (not_at_a_p9)

                    ; #70837: origin
                    (at_a_p0011)

                    ; #54628: <==negation-removal== 70837 (pos)
                    (not (not_at_a_p0011))

                    ; #76270: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p012
        :precondition (and (Ba_not_blocked_p012)
                           (at_a_p9)
                           (Pa_not_blocked_p012)
                           (checked_p012)
                           (succ_p9_p012))
        :effect (and
                    ; #13553: origin
                    (at_a_p012)

                    ; #23232: <==commonly_known== 76270 (neg)
                    (not_at_a_p9)

                    ; #76270: origin
                    (not (at_a_p9))

                    ; #87578: <==negation-removal== 13553 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p9_p1
        :precondition (and (succ_p9_p1)
                           (Pa_not_blocked_p1)
                           (checked_p1)
                           (at_a_p9)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #23232: <==commonly_known== 76270 (neg)
                    (not_at_a_p9)

                    ; #27949: origin
                    (at_a_p1)

                    ; #76270: origin
                    (not (at_a_p9))

                    ; #82143: <==negation-removal== 27949 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p9_p10
        :precondition (and (Pa_not_blocked_p10)
                           (at_a_p9)
                           (Ba_not_blocked_p10)
                           (succ_p9_p10)
                           (checked_p10))
        :effect (and
                    ; #23232: <==commonly_known== 76270 (neg)
                    (not_at_a_p9)

                    ; #70938: origin
                    (at_a_p10)

                    ; #58117: <==negation-removal== 70938 (pos)
                    (not (not_at_a_p10))

                    ; #76270: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p2
        :precondition (and (Pa_not_blocked_p2)
                           (checked_p2)
                           (at_a_p9)
                           (succ_p9_p2)
                           (Ba_not_blocked_p2))
        :effect (and
                    ; #23232: <==commonly_known== 76270 (neg)
                    (not_at_a_p9)

                    ; #84280: origin
                    (at_a_p2)

                    ; #38483: <==negation-removal== 84280 (pos)
                    (not (not_at_a_p2))

                    ; #76270: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p3
        :precondition (and (Pa_not_blocked_p3)
                           (succ_p9_p3)
                           (Ba_not_blocked_p3)
                           (checked_p3)
                           (at_a_p9))
        :effect (and
                    ; #23232: <==commonly_known== 76270 (neg)
                    (not_at_a_p9)

                    ; #67965: origin
                    (at_a_p3)

                    ; #19009: <==negation-removal== 67965 (pos)
                    (not (not_at_a_p3))

                    ; #76270: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p4
        :precondition (and (Pa_not_blocked_p4)
                           (checked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p9)
                           (succ_p9_p4))
        :effect (and
                    ; #23232: <==commonly_known== 76270 (neg)
                    (not_at_a_p9)

                    ; #87701: origin
                    (at_a_p4)

                    ; #43560: <==negation-removal== 87701 (pos)
                    (not (not_at_a_p4))

                    ; #76270: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p5
        :precondition (and (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (checked_p5)
                           (at_a_p9)
                           (succ_p9_p5))
        :effect (and
                    ; #23232: <==commonly_known== 76270 (neg)
                    (not_at_a_p9)

                    ; #36055: origin
                    (at_a_p5)

                    ; #17616: <==negation-removal== 36055 (pos)
                    (not (not_at_a_p5))

                    ; #76270: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p6
        :precondition (and (checked_p6)
                           (Pa_not_blocked_p6)
                           (succ_p9_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p9))
        :effect (and
                    ; #23232: <==commonly_known== 76270 (neg)
                    (not_at_a_p9)

                    ; #36194: origin
                    (at_a_p6)

                    ; #76270: origin
                    (not (at_a_p9))

                    ; #86428: <==negation-removal== 36194 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p9_p7
        :precondition (and (checked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p9_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p9))
        :effect (and
                    ; #23232: <==commonly_known== 76270 (neg)
                    (not_at_a_p9)

                    ; #36217: origin
                    (at_a_p7)

                    ; #13196: <==negation-removal== 36217 (pos)
                    (not (not_at_a_p7))

                    ; #76270: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p8
        :precondition (and (at_a_p9)
                           (checked_p8)
                           (Pa_not_blocked_p8)
                           (succ_p9_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #23232: <==commonly_known== 76270 (neg)
                    (not_at_a_p9)

                    ; #24935: origin
                    (at_a_p8)

                    ; #76270: origin
                    (not (at_a_p9))

                    ; #78361: <==negation-removal== 24935 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p9_p9
        :precondition (and (Ba_not_blocked_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p9)
                           (succ_p9_p9)
                           (checked_p9))
        :effect (and
                    ; #23232: <==commonly_known== 76270 (neg)
                    (not_at_a_p9)

                    ; #76270: origin
                    (at_a_p9)

                    ; #23232: <==negation-removal== 76270 (pos)
                    (not (not_at_a_p9))

                    ; #76270: origin
                    (not (at_a_p9))))

    (:action move_b_p0011_p0011
        :precondition (and (Bb_not_blocked_p0011)
                           (succ_p0011_p0011)
                           (checked_p0011)
                           (at_b_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13597: origin
                    (at_b_p0011)

                    ; #87981: <==commonly_known== 13597 (neg)
                    (not_at_b_p0011)

                    ; #13597: origin
                    (not (at_b_p0011))

                    ; #87981: <==negation-removal== 13597 (pos)
                    (not (not_at_b_p0011))))

    (:action move_b_p0011_p012
        :precondition (and (checked_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (at_b_p0011)
                           (succ_p0011_p012))
        :effect (and
                    ; #38708: origin
                    (at_b_p012)

                    ; #87981: <==commonly_known== 13597 (neg)
                    (not_at_b_p0011)

                    ; #13597: origin
                    (not (at_b_p0011))

                    ; #73794: <==negation-removal== 38708 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p0011_p1
        :precondition (and (checked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p0011_p1)
                           (Pb_not_blocked_p1)
                           (at_b_p0011))
        :effect (and
                    ; #61165: origin
                    (at_b_p1)

                    ; #87981: <==commonly_known== 13597 (neg)
                    (not_at_b_p0011)

                    ; #13597: origin
                    (not (at_b_p0011))

                    ; #33392: <==negation-removal== 61165 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p0011_p10
        :precondition (and (succ_p0011_p10)
                           (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (checked_p10)
                           (at_b_p0011))
        :effect (and
                    ; #87981: <==commonly_known== 13597 (neg)
                    (not_at_b_p0011)

                    ; #98340: origin
                    (at_b_p10)

                    ; #13597: origin
                    (not (at_b_p0011))

                    ; #46054: <==negation-removal== 98340 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p0011_p2
        :precondition (and (Bb_not_blocked_p2)
                           (Pb_not_blocked_p2)
                           (succ_p0011_p2)
                           (checked_p2)
                           (at_b_p0011))
        :effect (and
                    ; #87318: origin
                    (at_b_p2)

                    ; #87981: <==commonly_known== 13597 (neg)
                    (not_at_b_p0011)

                    ; #13597: origin
                    (not (at_b_p0011))

                    ; #56711: <==negation-removal== 87318 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p0011_p3
        :precondition (and (succ_p0011_p3)
                           (Pb_not_blocked_p3)
                           (checked_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p0011))
        :effect (and
                    ; #83507: origin
                    (at_b_p3)

                    ; #87981: <==commonly_known== 13597 (neg)
                    (not_at_b_p0011)

                    ; #13597: origin
                    (not (at_b_p0011))

                    ; #75928: <==negation-removal== 83507 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p0011_p4
        :precondition (and (Bb_not_blocked_p4)
                           (checked_p4)
                           (Pb_not_blocked_p4)
                           (at_b_p0011)
                           (succ_p0011_p4))
        :effect (and
                    ; #14176: origin
                    (at_b_p4)

                    ; #87981: <==commonly_known== 13597 (neg)
                    (not_at_b_p0011)

                    ; #13597: origin
                    (not (at_b_p0011))

                    ; #72391: <==negation-removal== 14176 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p0011_p5
        :precondition (and (Bb_not_blocked_p5)
                           (succ_p0011_p5)
                           (checked_p5)
                           (at_b_p0011)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #87981: <==commonly_known== 13597 (neg)
                    (not_at_b_p0011)

                    ; #96346: origin
                    (at_b_p5)

                    ; #13597: origin
                    (not (at_b_p0011))

                    ; #36952: <==negation-removal== 96346 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p0011_p6
        :precondition (and (Bb_not_blocked_p6)
                           (succ_p0011_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p0011))
        :effect (and
                    ; #37936: origin
                    (at_b_p6)

                    ; #87981: <==commonly_known== 13597 (neg)
                    (not_at_b_p0011)

                    ; #13597: origin
                    (not (at_b_p0011))

                    ; #39181: <==negation-removal== 37936 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p0011_p7
        :precondition (and (succ_p0011_p7)
                           (checked_p7)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7)
                           (at_b_p0011))
        :effect (and
                    ; #72079: origin
                    (at_b_p7)

                    ; #87981: <==commonly_known== 13597 (neg)
                    (not_at_b_p0011)

                    ; #13597: origin
                    (not (at_b_p0011))

                    ; #91544: <==negation-removal== 72079 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p0011_p8
        :precondition (and (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8)
                           (checked_p8)
                           (at_b_p0011)
                           (succ_p0011_p8))
        :effect (and
                    ; #39056: origin
                    (at_b_p8)

                    ; #87981: <==commonly_known== 13597 (neg)
                    (not_at_b_p0011)

                    ; #13597: origin
                    (not (at_b_p0011))

                    ; #34542: <==negation-removal== 39056 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p0011_p9
        :precondition (and (succ_p0011_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (at_b_p0011)
                           (checked_p9))
        :effect (and
                    ; #25230: origin
                    (at_b_p9)

                    ; #87981: <==commonly_known== 13597 (neg)
                    (not_at_b_p0011)

                    ; #13597: origin
                    (not (at_b_p0011))

                    ; #80614: <==negation-removal== 25230 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p012_p0011
        :precondition (and (Bb_not_blocked_p0011)
                           (at_b_p012)
                           (succ_p012_p0011)
                           (checked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13597: origin
                    (at_b_p0011)

                    ; #73794: <==commonly_known== 38708 (neg)
                    (not_at_b_p012)

                    ; #38708: origin
                    (not (at_b_p012))

                    ; #87981: <==negation-removal== 13597 (pos)
                    (not (not_at_b_p0011))))

    (:action move_b_p012_p012
        :precondition (and (checked_p012)
                           (at_b_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (succ_p012_p012))
        :effect (and
                    ; #38708: origin
                    (at_b_p012)

                    ; #73794: <==commonly_known== 38708 (neg)
                    (not_at_b_p012)

                    ; #38708: origin
                    (not (at_b_p012))

                    ; #73794: <==negation-removal== 38708 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p012_p1
        :precondition (and (succ_p012_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (at_b_p012)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #61165: origin
                    (at_b_p1)

                    ; #73794: <==commonly_known== 38708 (neg)
                    (not_at_b_p012)

                    ; #33392: <==negation-removal== 61165 (pos)
                    (not (not_at_b_p1))

                    ; #38708: origin
                    (not (at_b_p012))))

    (:action move_b_p012_p10
        :precondition (and (Bb_not_blocked_p10)
                           (at_b_p012)
                           (Pb_not_blocked_p10)
                           (checked_p10)
                           (succ_p012_p10))
        :effect (and
                    ; #73794: <==commonly_known== 38708 (neg)
                    (not_at_b_p012)

                    ; #98340: origin
                    (at_b_p10)

                    ; #38708: origin
                    (not (at_b_p012))

                    ; #46054: <==negation-removal== 98340 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p012_p2
        :precondition (and (succ_p012_p2)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (at_b_p012)
                           (checked_p2))
        :effect (and
                    ; #73794: <==commonly_known== 38708 (neg)
                    (not_at_b_p012)

                    ; #87318: origin
                    (at_b_p2)

                    ; #38708: origin
                    (not (at_b_p012))

                    ; #56711: <==negation-removal== 87318 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p012_p3
        :precondition (and (succ_p012_p3)
                           (at_b_p012)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #73794: <==commonly_known== 38708 (neg)
                    (not_at_b_p012)

                    ; #83507: origin
                    (at_b_p3)

                    ; #38708: origin
                    (not (at_b_p012))

                    ; #75928: <==negation-removal== 83507 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p012_p4
        :precondition (and (Bb_not_blocked_p4)
                           (at_b_p012)
                           (succ_p012_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #14176: origin
                    (at_b_p4)

                    ; #73794: <==commonly_known== 38708 (neg)
                    (not_at_b_p012)

                    ; #38708: origin
                    (not (at_b_p012))

                    ; #72391: <==negation-removal== 14176 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p012_p5
        :precondition (and (Bb_not_blocked_p5)
                           (at_b_p012)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (succ_p012_p5))
        :effect (and
                    ; #73794: <==commonly_known== 38708 (neg)
                    (not_at_b_p012)

                    ; #96346: origin
                    (at_b_p5)

                    ; #36952: <==negation-removal== 96346 (pos)
                    (not (not_at_b_p5))

                    ; #38708: origin
                    (not (at_b_p012))))

    (:action move_b_p012_p6
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (succ_p012_p6)
                           (at_b_p012))
        :effect (and
                    ; #37936: origin
                    (at_b_p6)

                    ; #73794: <==commonly_known== 38708 (neg)
                    (not_at_b_p012)

                    ; #38708: origin
                    (not (at_b_p012))

                    ; #39181: <==negation-removal== 37936 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p012_p7
        :precondition (and (succ_p012_p7)
                           (checked_p7)
                           (at_b_p012)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #72079: origin
                    (at_b_p7)

                    ; #73794: <==commonly_known== 38708 (neg)
                    (not_at_b_p012)

                    ; #38708: origin
                    (not (at_b_p012))

                    ; #91544: <==negation-removal== 72079 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p012_p8
        :precondition (and (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8)
                           (at_b_p012)
                           (succ_p012_p8)
                           (checked_p8))
        :effect (and
                    ; #39056: origin
                    (at_b_p8)

                    ; #73794: <==commonly_known== 38708 (neg)
                    (not_at_b_p012)

                    ; #34542: <==negation-removal== 39056 (pos)
                    (not (not_at_b_p8))

                    ; #38708: origin
                    (not (at_b_p012))))

    (:action move_b_p012_p9
        :precondition (and (at_b_p012)
                           (Bb_not_blocked_p9)
                           (succ_p012_p9)
                           (Pb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #25230: origin
                    (at_b_p9)

                    ; #73794: <==commonly_known== 38708 (neg)
                    (not_at_b_p012)

                    ; #38708: origin
                    (not (at_b_p012))

                    ; #80614: <==negation-removal== 25230 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p10_p0011
        :precondition (and (at_b_p10)
                           (Bb_not_blocked_p0011)
                           (succ_p10_p0011)
                           (checked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13597: origin
                    (at_b_p0011)

                    ; #46054: <==commonly_known== 98340 (neg)
                    (not_at_b_p10)

                    ; #87981: <==negation-removal== 13597 (pos)
                    (not (not_at_b_p0011))

                    ; #98340: origin
                    (not (at_b_p10))))

    (:action move_b_p10_p012
        :precondition (and (at_b_p10)
                           (checked_p012)
                           (succ_p10_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012))
        :effect (and
                    ; #38708: origin
                    (at_b_p012)

                    ; #46054: <==commonly_known== 98340 (neg)
                    (not_at_b_p10)

                    ; #73794: <==negation-removal== 38708 (pos)
                    (not (not_at_b_p012))

                    ; #98340: origin
                    (not (at_b_p10))))

    (:action move_b_p10_p1
        :precondition (and (at_b_p10)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (succ_p10_p1))
        :effect (and
                    ; #46054: <==commonly_known== 98340 (neg)
                    (not_at_b_p10)

                    ; #61165: origin
                    (at_b_p1)

                    ; #33392: <==negation-removal== 61165 (pos)
                    (not (not_at_b_p1))

                    ; #98340: origin
                    (not (at_b_p10))))

    (:action move_b_p10_p10
        :precondition (and (at_b_p10)
                           (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (checked_p10)
                           (succ_p10_p10))
        :effect (and
                    ; #46054: <==commonly_known== 98340 (neg)
                    (not_at_b_p10)

                    ; #98340: origin
                    (at_b_p10)

                    ; #46054: <==negation-removal== 98340 (pos)
                    (not (not_at_b_p10))

                    ; #98340: origin
                    (not (at_b_p10))))

    (:action move_b_p10_p2
        :precondition (and (at_b_p10)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (succ_p10_p2)
                           (checked_p2))
        :effect (and
                    ; #46054: <==commonly_known== 98340 (neg)
                    (not_at_b_p10)

                    ; #87318: origin
                    (at_b_p2)

                    ; #56711: <==negation-removal== 87318 (pos)
                    (not (not_at_b_p2))

                    ; #98340: origin
                    (not (at_b_p10))))

    (:action move_b_p10_p3
        :precondition (and (at_b_p10)
                           (succ_p10_p3)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #46054: <==commonly_known== 98340 (neg)
                    (not_at_b_p10)

                    ; #83507: origin
                    (at_b_p3)

                    ; #75928: <==negation-removal== 83507 (pos)
                    (not (not_at_b_p3))

                    ; #98340: origin
                    (not (at_b_p10))))

    (:action move_b_p10_p4
        :precondition (and (at_b_p10)
                           (Bb_not_blocked_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4)
                           (succ_p10_p4))
        :effect (and
                    ; #14176: origin
                    (at_b_p4)

                    ; #46054: <==commonly_known== 98340 (neg)
                    (not_at_b_p10)

                    ; #72391: <==negation-removal== 14176 (pos)
                    (not (not_at_b_p4))

                    ; #98340: origin
                    (not (at_b_p10))))

    (:action move_b_p10_p5
        :precondition (and (at_b_p10)
                           (Bb_not_blocked_p5)
                           (succ_p10_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #46054: <==commonly_known== 98340 (neg)
                    (not_at_b_p10)

                    ; #96346: origin
                    (at_b_p5)

                    ; #36952: <==negation-removal== 96346 (pos)
                    (not (not_at_b_p5))

                    ; #98340: origin
                    (not (at_b_p10))))

    (:action move_b_p10_p6
        :precondition (and (at_b_p10)
                           (Pb_not_blocked_p6)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (succ_p10_p6))
        :effect (and
                    ; #37936: origin
                    (at_b_p6)

                    ; #46054: <==commonly_known== 98340 (neg)
                    (not_at_b_p10)

                    ; #39181: <==negation-removal== 37936 (pos)
                    (not (not_at_b_p6))

                    ; #98340: origin
                    (not (at_b_p10))))

    (:action move_b_p10_p7
        :precondition (and (at_b_p10)
                           (succ_p10_p7)
                           (checked_p7)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #46054: <==commonly_known== 98340 (neg)
                    (not_at_b_p10)

                    ; #72079: origin
                    (at_b_p7)

                    ; #91544: <==negation-removal== 72079 (pos)
                    (not (not_at_b_p7))

                    ; #98340: origin
                    (not (at_b_p10))))

    (:action move_b_p10_p8
        :precondition (and (at_b_p10)
                           (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8)
                           (succ_p10_p8)
                           (checked_p8))
        :effect (and
                    ; #39056: origin
                    (at_b_p8)

                    ; #46054: <==commonly_known== 98340 (neg)
                    (not_at_b_p10)

                    ; #34542: <==negation-removal== 39056 (pos)
                    (not (not_at_b_p8))

                    ; #98340: origin
                    (not (at_b_p10))))

    (:action move_b_p10_p9
        :precondition (and (at_b_p10)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9)
                           (succ_p10_p9))
        :effect (and
                    ; #25230: origin
                    (at_b_p9)

                    ; #46054: <==commonly_known== 98340 (neg)
                    (not_at_b_p10)

                    ; #80614: <==negation-removal== 25230 (pos)
                    (not (not_at_b_p9))

                    ; #98340: origin
                    (not (at_b_p10))))

    (:action move_b_p1_p0011
        :precondition (and (at_b_p1)
                           (Bb_not_blocked_p0011)
                           (succ_p1_p0011)
                           (checked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13597: origin
                    (at_b_p0011)

                    ; #33392: <==commonly_known== 61165 (neg)
                    (not_at_b_p1)

                    ; #61165: origin
                    (not (at_b_p1))

                    ; #87981: <==negation-removal== 13597 (pos)
                    (not (not_at_b_p0011))))

    (:action move_b_p1_p012
        :precondition (and (at_b_p1)
                           (checked_p012)
                           (succ_p1_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012))
        :effect (and
                    ; #33392: <==commonly_known== 61165 (neg)
                    (not_at_b_p1)

                    ; #38708: origin
                    (at_b_p012)

                    ; #61165: origin
                    (not (at_b_p1))

                    ; #73794: <==negation-removal== 38708 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p1_p1
        :precondition (and (at_b_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #33392: <==commonly_known== 61165 (neg)
                    (not_at_b_p1)

                    ; #61165: origin
                    (at_b_p1)

                    ; #33392: <==negation-removal== 61165 (pos)
                    (not (not_at_b_p1))

                    ; #61165: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p10
        :precondition (and (at_b_p1)
                           (checked_p10)
                           (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (succ_p1_p10))
        :effect (and
                    ; #33392: <==commonly_known== 61165 (neg)
                    (not_at_b_p1)

                    ; #98340: origin
                    (at_b_p10)

                    ; #46054: <==negation-removal== 98340 (pos)
                    (not (not_at_b_p10))

                    ; #61165: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p2
        :precondition (and (Bb_not_blocked_p2)
                           (at_b_p1)
                           (succ_p1_p2)
                           (Pb_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #33392: <==commonly_known== 61165 (neg)
                    (not_at_b_p1)

                    ; #87318: origin
                    (at_b_p2)

                    ; #56711: <==negation-removal== 87318 (pos)
                    (not (not_at_b_p2))

                    ; #61165: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p3
        :precondition (and (at_b_p1)
                           (succ_p1_p3)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #33392: <==commonly_known== 61165 (neg)
                    (not_at_b_p1)

                    ; #83507: origin
                    (at_b_p3)

                    ; #61165: origin
                    (not (at_b_p1))

                    ; #75928: <==negation-removal== 83507 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p1_p4
        :precondition (and (at_b_p1)
                           (Bb_not_blocked_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4)
                           (succ_p1_p4))
        :effect (and
                    ; #14176: origin
                    (at_b_p4)

                    ; #33392: <==commonly_known== 61165 (neg)
                    (not_at_b_p1)

                    ; #61165: origin
                    (not (at_b_p1))

                    ; #72391: <==negation-removal== 14176 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p1_p5
        :precondition (and (Bb_not_blocked_p5)
                           (succ_p1_p5)
                           (at_b_p1)
                           (checked_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #33392: <==commonly_known== 61165 (neg)
                    (not_at_b_p1)

                    ; #96346: origin
                    (at_b_p5)

                    ; #36952: <==negation-removal== 96346 (pos)
                    (not (not_at_b_p5))

                    ; #61165: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p6
        :precondition (and (Bb_not_blocked_p6)
                           (at_b_p1)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (succ_p1_p6))
        :effect (and
                    ; #33392: <==commonly_known== 61165 (neg)
                    (not_at_b_p1)

                    ; #37936: origin
                    (at_b_p6)

                    ; #39181: <==negation-removal== 37936 (pos)
                    (not (not_at_b_p6))

                    ; #61165: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p7
        :precondition (and (at_b_p1)
                           (checked_p7)
                           (succ_p1_p7)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #33392: <==commonly_known== 61165 (neg)
                    (not_at_b_p1)

                    ; #72079: origin
                    (at_b_p7)

                    ; #61165: origin
                    (not (at_b_p1))

                    ; #91544: <==negation-removal== 72079 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p1_p8
        :precondition (and (at_b_p1)
                           (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8)
                           (succ_p1_p8)
                           (checked_p8))
        :effect (and
                    ; #33392: <==commonly_known== 61165 (neg)
                    (not_at_b_p1)

                    ; #39056: origin
                    (at_b_p8)

                    ; #34542: <==negation-removal== 39056 (pos)
                    (not (not_at_b_p8))

                    ; #61165: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p9
        :precondition (and (at_b_p1)
                           (Bb_not_blocked_p9)
                           (succ_p1_p9)
                           (Pb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #25230: origin
                    (at_b_p9)

                    ; #33392: <==commonly_known== 61165 (neg)
                    (not_at_b_p1)

                    ; #61165: origin
                    (not (at_b_p1))

                    ; #80614: <==negation-removal== 25230 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p2_p0011
        :precondition (and (Bb_not_blocked_p0011)
                           (succ_p2_p0011)
                           (checked_p0011)
                           (at_b_p2)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13597: origin
                    (at_b_p0011)

                    ; #56711: <==commonly_known== 87318 (neg)
                    (not_at_b_p2)

                    ; #87318: origin
                    (not (at_b_p2))

                    ; #87981: <==negation-removal== 13597 (pos)
                    (not (not_at_b_p0011))))

    (:action move_b_p2_p012
        :precondition (and (checked_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (at_b_p2)
                           (succ_p2_p012))
        :effect (and
                    ; #38708: origin
                    (at_b_p012)

                    ; #56711: <==commonly_known== 87318 (neg)
                    (not_at_b_p2)

                    ; #73794: <==negation-removal== 38708 (pos)
                    (not (not_at_b_p012))

                    ; #87318: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p1
        :precondition (and (checked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p2_p1)
                           (Pb_not_blocked_p1)
                           (at_b_p2))
        :effect (and
                    ; #56711: <==commonly_known== 87318 (neg)
                    (not_at_b_p2)

                    ; #61165: origin
                    (at_b_p1)

                    ; #33392: <==negation-removal== 61165 (pos)
                    (not (not_at_b_p1))

                    ; #87318: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p10
        :precondition (and (checked_p10)
                           (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (at_b_p2)
                           (succ_p2_p10))
        :effect (and
                    ; #56711: <==commonly_known== 87318 (neg)
                    (not_at_b_p2)

                    ; #98340: origin
                    (at_b_p10)

                    ; #46054: <==negation-removal== 98340 (pos)
                    (not (not_at_b_p10))

                    ; #87318: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p2
        :precondition (and (Bb_not_blocked_p2)
                           (Pb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #56711: <==commonly_known== 87318 (neg)
                    (not_at_b_p2)

                    ; #87318: origin
                    (at_b_p2)

                    ; #56711: <==negation-removal== 87318 (pos)
                    (not (not_at_b_p2))

                    ; #87318: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p3
        :precondition (and (succ_p2_p3)
                           (at_b_p2)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #56711: <==commonly_known== 87318 (neg)
                    (not_at_b_p2)

                    ; #83507: origin
                    (at_b_p3)

                    ; #75928: <==negation-removal== 83507 (pos)
                    (not (not_at_b_p3))

                    ; #87318: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p4
        :precondition (and (Bb_not_blocked_p4)
                           (succ_p2_p4)
                           (Pb_not_blocked_p4)
                           (at_b_p2)
                           (checked_p4))
        :effect (and
                    ; #14176: origin
                    (at_b_p4)

                    ; #56711: <==commonly_known== 87318 (neg)
                    (not_at_b_p2)

                    ; #72391: <==negation-removal== 14176 (pos)
                    (not (not_at_b_p4))

                    ; #87318: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p5
        :precondition (and (Bb_not_blocked_p5)
                           (at_b_p2)
                           (checked_p5)
                           (succ_p2_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #56711: <==commonly_known== 87318 (neg)
                    (not_at_b_p2)

                    ; #96346: origin
                    (at_b_p5)

                    ; #36952: <==negation-removal== 96346 (pos)
                    (not (not_at_b_p5))

                    ; #87318: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p6
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (succ_p2_p6)
                           (at_b_p2))
        :effect (and
                    ; #37936: origin
                    (at_b_p6)

                    ; #56711: <==commonly_known== 87318 (neg)
                    (not_at_b_p2)

                    ; #39181: <==negation-removal== 37936 (pos)
                    (not (not_at_b_p6))

                    ; #87318: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p7
        :precondition (and (succ_p2_p7)
                           (checked_p7)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7)
                           (at_b_p2))
        :effect (and
                    ; #56711: <==commonly_known== 87318 (neg)
                    (not_at_b_p2)

                    ; #72079: origin
                    (at_b_p7)

                    ; #87318: origin
                    (not (at_b_p2))

                    ; #91544: <==negation-removal== 72079 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p2_p8
        :precondition (and (Bb_not_blocked_p8)
                           (checked_p8)
                           (Pb_not_blocked_p8)
                           (succ_p2_p8)
                           (at_b_p2))
        :effect (and
                    ; #39056: origin
                    (at_b_p8)

                    ; #56711: <==commonly_known== 87318 (neg)
                    (not_at_b_p2)

                    ; #34542: <==negation-removal== 39056 (pos)
                    (not (not_at_b_p8))

                    ; #87318: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p9
        :precondition (and (succ_p2_p9)
                           (Bb_not_blocked_p9)
                           (at_b_p2)
                           (Pb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #25230: origin
                    (at_b_p9)

                    ; #56711: <==commonly_known== 87318 (neg)
                    (not_at_b_p2)

                    ; #80614: <==negation-removal== 25230 (pos)
                    (not (not_at_b_p9))

                    ; #87318: origin
                    (not (at_b_p2))))

    (:action move_b_p3_p0011
        :precondition (and (Bb_not_blocked_p0011)
                           (succ_p3_p0011)
                           (checked_p0011)
                           (at_b_p3)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13597: origin
                    (at_b_p0011)

                    ; #75928: <==commonly_known== 83507 (neg)
                    (not_at_b_p3)

                    ; #83507: origin
                    (not (at_b_p3))

                    ; #87981: <==negation-removal== 13597 (pos)
                    (not (not_at_b_p0011))))

    (:action move_b_p3_p012
        :precondition (and (checked_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (succ_p3_p012)
                           (at_b_p3))
        :effect (and
                    ; #38708: origin
                    (at_b_p012)

                    ; #75928: <==commonly_known== 83507 (neg)
                    (not_at_b_p3)

                    ; #73794: <==negation-removal== 38708 (pos)
                    (not (not_at_b_p012))

                    ; #83507: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p1
        :precondition (and (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (succ_p3_p1)
                           (at_b_p3))
        :effect (and
                    ; #61165: origin
                    (at_b_p1)

                    ; #75928: <==commonly_known== 83507 (neg)
                    (not_at_b_p3)

                    ; #33392: <==negation-removal== 61165 (pos)
                    (not (not_at_b_p1))

                    ; #83507: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p10
        :precondition (and (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (checked_p10)
                           (succ_p3_p10)
                           (at_b_p3))
        :effect (and
                    ; #75928: <==commonly_known== 83507 (neg)
                    (not_at_b_p3)

                    ; #98340: origin
                    (at_b_p10)

                    ; #46054: <==negation-removal== 98340 (pos)
                    (not (not_at_b_p10))

                    ; #83507: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p2
        :precondition (and (Bb_not_blocked_p2)
                           (Pb_not_blocked_p2)
                           (succ_p3_p2)
                           (checked_p2)
                           (at_b_p3))
        :effect (and
                    ; #75928: <==commonly_known== 83507 (neg)
                    (not_at_b_p3)

                    ; #87318: origin
                    (at_b_p2)

                    ; #56711: <==negation-removal== 87318 (pos)
                    (not (not_at_b_p2))

                    ; #83507: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p3
        :precondition (and (succ_p3_p3)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p3))
        :effect (and
                    ; #75928: <==commonly_known== 83507 (neg)
                    (not_at_b_p3)

                    ; #83507: origin
                    (at_b_p3)

                    ; #75928: <==negation-removal== 83507 (pos)
                    (not (not_at_b_p3))

                    ; #83507: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p4
        :precondition (and (Bb_not_blocked_p4)
                           (Pb_not_blocked_p4)
                           (succ_p3_p4)
                           (checked_p4)
                           (at_b_p3))
        :effect (and
                    ; #14176: origin
                    (at_b_p4)

                    ; #75928: <==commonly_known== 83507 (neg)
                    (not_at_b_p3)

                    ; #72391: <==negation-removal== 14176 (pos)
                    (not (not_at_b_p4))

                    ; #83507: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p5
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (succ_p3_p5)
                           (at_b_p3))
        :effect (and
                    ; #75928: <==commonly_known== 83507 (neg)
                    (not_at_b_p3)

                    ; #96346: origin
                    (at_b_p5)

                    ; #36952: <==negation-removal== 96346 (pos)
                    (not (not_at_b_p5))

                    ; #83507: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p6
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (succ_p3_p6)
                           (at_b_p3))
        :effect (and
                    ; #37936: origin
                    (at_b_p6)

                    ; #75928: <==commonly_known== 83507 (neg)
                    (not_at_b_p3)

                    ; #39181: <==negation-removal== 37936 (pos)
                    (not (not_at_b_p6))

                    ; #83507: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p7
        :precondition (and (checked_p7)
                           (succ_p3_p7)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7)
                           (at_b_p3))
        :effect (and
                    ; #72079: origin
                    (at_b_p7)

                    ; #75928: <==commonly_known== 83507 (neg)
                    (not_at_b_p3)

                    ; #83507: origin
                    (not (at_b_p3))

                    ; #91544: <==negation-removal== 72079 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p3_p8
        :precondition (and (Bb_not_blocked_p8)
                           (succ_p3_p8)
                           (Pb_not_blocked_p8)
                           (checked_p8)
                           (at_b_p3))
        :effect (and
                    ; #39056: origin
                    (at_b_p8)

                    ; #75928: <==commonly_known== 83507 (neg)
                    (not_at_b_p3)

                    ; #34542: <==negation-removal== 39056 (pos)
                    (not (not_at_b_p8))

                    ; #83507: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p9
        :precondition (and (Bb_not_blocked_p9)
                           (succ_p3_p9)
                           (checked_p9)
                           (Pb_not_blocked_p9)
                           (at_b_p3))
        :effect (and
                    ; #25230: origin
                    (at_b_p9)

                    ; #75928: <==commonly_known== 83507 (neg)
                    (not_at_b_p3)

                    ; #80614: <==negation-removal== 25230 (pos)
                    (not (not_at_b_p9))

                    ; #83507: origin
                    (not (at_b_p3))))

    (:action move_b_p4_p0011
        :precondition (and (Bb_not_blocked_p0011)
                           (at_b_p4)
                           (checked_p0011)
                           (succ_p4_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13597: origin
                    (at_b_p0011)

                    ; #72391: <==commonly_known== 14176 (neg)
                    (not_at_b_p4)

                    ; #14176: origin
                    (not (at_b_p4))

                    ; #87981: <==negation-removal== 13597 (pos)
                    (not (not_at_b_p0011))))

    (:action move_b_p4_p012
        :precondition (and (succ_p4_p012)
                           (checked_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (at_b_p4))
        :effect (and
                    ; #38708: origin
                    (at_b_p012)

                    ; #72391: <==commonly_known== 14176 (neg)
                    (not_at_b_p4)

                    ; #14176: origin
                    (not (at_b_p4))

                    ; #73794: <==negation-removal== 38708 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p4_p1
        :precondition (and (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (at_b_p4)
                           (succ_p4_p1))
        :effect (and
                    ; #61165: origin
                    (at_b_p1)

                    ; #72391: <==commonly_known== 14176 (neg)
                    (not_at_b_p4)

                    ; #14176: origin
                    (not (at_b_p4))

                    ; #33392: <==negation-removal== 61165 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p4_p10
        :precondition (and (succ_p4_p10)
                           (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (at_b_p4)
                           (checked_p10))
        :effect (and
                    ; #72391: <==commonly_known== 14176 (neg)
                    (not_at_b_p4)

                    ; #98340: origin
                    (at_b_p10)

                    ; #14176: origin
                    (not (at_b_p4))

                    ; #46054: <==negation-removal== 98340 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p4_p2
        :precondition (and (Bb_not_blocked_p2)
                           (Pb_not_blocked_p2)
                           (succ_p4_p2)
                           (at_b_p4)
                           (checked_p2))
        :effect (and
                    ; #72391: <==commonly_known== 14176 (neg)
                    (not_at_b_p4)

                    ; #87318: origin
                    (at_b_p2)

                    ; #14176: origin
                    (not (at_b_p4))

                    ; #56711: <==negation-removal== 87318 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p4_p3
        :precondition (and (Pb_not_blocked_p3)
                           (succ_p4_p3)
                           (checked_p3)
                           (at_b_p4)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #72391: <==commonly_known== 14176 (neg)
                    (not_at_b_p4)

                    ; #83507: origin
                    (at_b_p3)

                    ; #14176: origin
                    (not (at_b_p4))

                    ; #75928: <==negation-removal== 83507 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p4_p4
        :precondition (and (Bb_not_blocked_p4)
                           (Pb_not_blocked_p4)
                           (at_b_p4)
                           (succ_p4_p4)
                           (checked_p4))
        :effect (and
                    ; #14176: origin
                    (at_b_p4)

                    ; #72391: <==commonly_known== 14176 (neg)
                    (not_at_b_p4)

                    ; #14176: origin
                    (not (at_b_p4))

                    ; #72391: <==negation-removal== 14176 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p4_p5
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (at_b_p4)
                           (Pb_not_blocked_p5)
                           (succ_p4_p5))
        :effect (and
                    ; #72391: <==commonly_known== 14176 (neg)
                    (not_at_b_p4)

                    ; #96346: origin
                    (at_b_p5)

                    ; #14176: origin
                    (not (at_b_p4))

                    ; #36952: <==negation-removal== 96346 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p4_p6
        :precondition (and (succ_p4_p6)
                           (Pb_not_blocked_p6)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p4))
        :effect (and
                    ; #37936: origin
                    (at_b_p6)

                    ; #72391: <==commonly_known== 14176 (neg)
                    (not_at_b_p4)

                    ; #14176: origin
                    (not (at_b_p4))

                    ; #39181: <==negation-removal== 37936 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p4_p7
        :precondition (and (checked_p7)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7)
                           (at_b_p4)
                           (succ_p4_p7))
        :effect (and
                    ; #72079: origin
                    (at_b_p7)

                    ; #72391: <==commonly_known== 14176 (neg)
                    (not_at_b_p4)

                    ; #14176: origin
                    (not (at_b_p4))

                    ; #91544: <==negation-removal== 72079 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p4_p8
        :precondition (and (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8)
                           (succ_p4_p8)
                           (at_b_p4)
                           (checked_p8))
        :effect (and
                    ; #39056: origin
                    (at_b_p8)

                    ; #72391: <==commonly_known== 14176 (neg)
                    (not_at_b_p4)

                    ; #14176: origin
                    (not (at_b_p4))

                    ; #34542: <==negation-removal== 39056 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p4_p9
        :precondition (and (Pb_not_blocked_p9)
                           (at_b_p4)
                           (succ_p4_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #25230: origin
                    (at_b_p9)

                    ; #72391: <==commonly_known== 14176 (neg)
                    (not_at_b_p4)

                    ; #14176: origin
                    (not (at_b_p4))

                    ; #80614: <==negation-removal== 25230 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p5_p0011
        :precondition (and (Bb_not_blocked_p0011)
                           (at_b_p5)
                           (succ_p5_p0011)
                           (checked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13597: origin
                    (at_b_p0011)

                    ; #36952: <==commonly_known== 96346 (neg)
                    (not_at_b_p5)

                    ; #87981: <==negation-removal== 13597 (pos)
                    (not (not_at_b_p0011))

                    ; #96346: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p012
        :precondition (and (checked_p012)
                           (at_b_p5)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (succ_p5_p012))
        :effect (and
                    ; #36952: <==commonly_known== 96346 (neg)
                    (not_at_b_p5)

                    ; #38708: origin
                    (at_b_p012)

                    ; #73794: <==negation-removal== 38708 (pos)
                    (not (not_at_b_p012))

                    ; #96346: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p1
        :precondition (and (succ_p5_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (at_b_p5)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #36952: <==commonly_known== 96346 (neg)
                    (not_at_b_p5)

                    ; #61165: origin
                    (at_b_p1)

                    ; #33392: <==negation-removal== 61165 (pos)
                    (not (not_at_b_p1))

                    ; #96346: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p10
        :precondition (and (Bb_not_blocked_p10)
                           (at_b_p5)
                           (checked_p10)
                           (succ_p5_p10)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #36952: <==commonly_known== 96346 (neg)
                    (not_at_b_p5)

                    ; #98340: origin
                    (at_b_p10)

                    ; #46054: <==negation-removal== 98340 (pos)
                    (not (not_at_b_p10))

                    ; #96346: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p2
        :precondition (and (Bb_not_blocked_p2)
                           (Pb_not_blocked_p2)
                           (succ_p5_p2)
                           (at_b_p5)
                           (checked_p2))
        :effect (and
                    ; #36952: <==commonly_known== 96346 (neg)
                    (not_at_b_p5)

                    ; #87318: origin
                    (at_b_p2)

                    ; #56711: <==negation-removal== 87318 (pos)
                    (not (not_at_b_p2))

                    ; #96346: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p3
        :precondition (and (at_b_p5)
                           (succ_p5_p3)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #36952: <==commonly_known== 96346 (neg)
                    (not_at_b_p5)

                    ; #83507: origin
                    (at_b_p3)

                    ; #75928: <==negation-removal== 83507 (pos)
                    (not (not_at_b_p3))

                    ; #96346: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p4
        :precondition (and (succ_p5_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p5)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #14176: origin
                    (at_b_p4)

                    ; #36952: <==commonly_known== 96346 (neg)
                    (not_at_b_p5)

                    ; #72391: <==negation-removal== 14176 (pos)
                    (not (not_at_b_p4))

                    ; #96346: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p5
        :precondition (and (Bb_not_blocked_p5)
                           (at_b_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #36952: <==commonly_known== 96346 (neg)
                    (not_at_b_p5)

                    ; #96346: origin
                    (at_b_p5)

                    ; #36952: <==negation-removal== 96346 (pos)
                    (not (not_at_b_p5))

                    ; #96346: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p6
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p5)
                           (succ_p5_p6))
        :effect (and
                    ; #36952: <==commonly_known== 96346 (neg)
                    (not_at_b_p5)

                    ; #37936: origin
                    (at_b_p6)

                    ; #39181: <==negation-removal== 37936 (pos)
                    (not (not_at_b_p6))

                    ; #96346: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p7
        :precondition (and (succ_p5_p7)
                           (checked_p7)
                           (at_b_p5)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #36952: <==commonly_known== 96346 (neg)
                    (not_at_b_p5)

                    ; #72079: origin
                    (at_b_p7)

                    ; #91544: <==negation-removal== 72079 (pos)
                    (not (not_at_b_p7))

                    ; #96346: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p8
        :precondition (and (Bb_not_blocked_p8)
                           (succ_p5_p8)
                           (Pb_not_blocked_p8)
                           (at_b_p5)
                           (checked_p8))
        :effect (and
                    ; #36952: <==commonly_known== 96346 (neg)
                    (not_at_b_p5)

                    ; #39056: origin
                    (at_b_p8)

                    ; #34542: <==negation-removal== 39056 (pos)
                    (not (not_at_b_p8))

                    ; #96346: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p9
        :precondition (and (succ_p5_p9)
                           (at_b_p5)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #25230: origin
                    (at_b_p9)

                    ; #36952: <==commonly_known== 96346 (neg)
                    (not_at_b_p5)

                    ; #80614: <==negation-removal== 25230 (pos)
                    (not (not_at_b_p9))

                    ; #96346: origin
                    (not (at_b_p5))))

    (:action move_b_p6_p0011
        :precondition (and (succ_p6_p0011)
                           (Bb_not_blocked_p0011)
                           (at_b_p6)
                           (checked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13597: origin
                    (at_b_p0011)

                    ; #39181: <==commonly_known== 37936 (neg)
                    (not_at_b_p6)

                    ; #37936: origin
                    (not (at_b_p6))

                    ; #87981: <==negation-removal== 13597 (pos)
                    (not (not_at_b_p0011))))

    (:action move_b_p6_p012
        :precondition (and (at_b_p6)
                           (checked_p012)
                           (succ_p6_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012))
        :effect (and
                    ; #38708: origin
                    (at_b_p012)

                    ; #39181: <==commonly_known== 37936 (neg)
                    (not_at_b_p6)

                    ; #37936: origin
                    (not (at_b_p6))

                    ; #73794: <==negation-removal== 38708 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p6_p1
        :precondition (and (at_b_p6)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (succ_p6_p1))
        :effect (and
                    ; #39181: <==commonly_known== 37936 (neg)
                    (not_at_b_p6)

                    ; #61165: origin
                    (at_b_p1)

                    ; #33392: <==negation-removal== 61165 (pos)
                    (not (not_at_b_p1))

                    ; #37936: origin
                    (not (at_b_p6))))

    (:action move_b_p6_p10
        :precondition (and (at_b_p6)
                           (succ_p6_p10)
                           (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #39181: <==commonly_known== 37936 (neg)
                    (not_at_b_p6)

                    ; #98340: origin
                    (at_b_p10)

                    ; #37936: origin
                    (not (at_b_p6))

                    ; #46054: <==negation-removal== 98340 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p6_p2
        :precondition (and (Bb_not_blocked_p2)
                           (Pb_not_blocked_p2)
                           (at_b_p6)
                           (checked_p2)
                           (succ_p6_p2))
        :effect (and
                    ; #39181: <==commonly_known== 37936 (neg)
                    (not_at_b_p6)

                    ; #87318: origin
                    (at_b_p2)

                    ; #37936: origin
                    (not (at_b_p6))

                    ; #56711: <==negation-removal== 87318 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p6_p3
        :precondition (and (at_b_p6)
                           (succ_p6_p3)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #39181: <==commonly_known== 37936 (neg)
                    (not_at_b_p6)

                    ; #83507: origin
                    (at_b_p3)

                    ; #37936: origin
                    (not (at_b_p6))

                    ; #75928: <==negation-removal== 83507 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p6_p4
        :precondition (and (Bb_not_blocked_p4)
                           (at_b_p6)
                           (Pb_not_blocked_p4)
                           (succ_p6_p4)
                           (checked_p4))
        :effect (and
                    ; #14176: origin
                    (at_b_p4)

                    ; #39181: <==commonly_known== 37936 (neg)
                    (not_at_b_p6)

                    ; #37936: origin
                    (not (at_b_p6))

                    ; #72391: <==negation-removal== 14176 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p6_p5
        :precondition (and (Bb_not_blocked_p5)
                           (succ_p6_p5)
                           (at_b_p6)
                           (checked_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #39181: <==commonly_known== 37936 (neg)
                    (not_at_b_p6)

                    ; #96346: origin
                    (at_b_p5)

                    ; #36952: <==negation-removal== 96346 (pos)
                    (not (not_at_b_p5))

                    ; #37936: origin
                    (not (at_b_p6))))

    (:action move_b_p6_p6
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (at_b_p6)
                           (checked_p6)
                           (succ_p6_p6))
        :effect (and
                    ; #37936: origin
                    (at_b_p6)

                    ; #39181: <==commonly_known== 37936 (neg)
                    (not_at_b_p6)

                    ; #37936: origin
                    (not (at_b_p6))

                    ; #39181: <==negation-removal== 37936 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p6_p7
        :precondition (and (succ_p6_p7)
                           (at_b_p6)
                           (checked_p7)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #39181: <==commonly_known== 37936 (neg)
                    (not_at_b_p6)

                    ; #72079: origin
                    (at_b_p7)

                    ; #37936: origin
                    (not (at_b_p6))

                    ; #91544: <==negation-removal== 72079 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p6_p8
        :precondition (and (Bb_not_blocked_p8)
                           (at_b_p6)
                           (Pb_not_blocked_p8)
                           (checked_p8)
                           (succ_p6_p8))
        :effect (and
                    ; #39056: origin
                    (at_b_p8)

                    ; #39181: <==commonly_known== 37936 (neg)
                    (not_at_b_p6)

                    ; #34542: <==negation-removal== 39056 (pos)
                    (not (not_at_b_p8))

                    ; #37936: origin
                    (not (at_b_p6))))

    (:action move_b_p6_p9
        :precondition (and (at_b_p6)
                           (succ_p6_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #25230: origin
                    (at_b_p9)

                    ; #39181: <==commonly_known== 37936 (neg)
                    (not_at_b_p6)

                    ; #37936: origin
                    (not (at_b_p6))

                    ; #80614: <==negation-removal== 25230 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p7_p0011
        :precondition (and (Bb_not_blocked_p0011)
                           (checked_p0011)
                           (at_b_p7)
                           (succ_p7_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13597: origin
                    (at_b_p0011)

                    ; #91544: <==commonly_known== 72079 (neg)
                    (not_at_b_p7)

                    ; #72079: origin
                    (not (at_b_p7))

                    ; #87981: <==negation-removal== 13597 (pos)
                    (not (not_at_b_p0011))))

    (:action move_b_p7_p012
        :precondition (and (checked_p012)
                           (Pb_not_blocked_p012)
                           (succ_p7_p012)
                           (Bb_not_blocked_p012)
                           (at_b_p7))
        :effect (and
                    ; #38708: origin
                    (at_b_p012)

                    ; #91544: <==commonly_known== 72079 (neg)
                    (not_at_b_p7)

                    ; #72079: origin
                    (not (at_b_p7))

                    ; #73794: <==negation-removal== 38708 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p7_p1
        :precondition (and (checked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p7_p1)
                           (Pb_not_blocked_p1)
                           (at_b_p7))
        :effect (and
                    ; #61165: origin
                    (at_b_p1)

                    ; #91544: <==commonly_known== 72079 (neg)
                    (not_at_b_p7)

                    ; #33392: <==negation-removal== 61165 (pos)
                    (not (not_at_b_p1))

                    ; #72079: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p10
        :precondition (and (succ_p7_p10)
                           (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (checked_p10)
                           (at_b_p7))
        :effect (and
                    ; #91544: <==commonly_known== 72079 (neg)
                    (not_at_b_p7)

                    ; #98340: origin
                    (at_b_p10)

                    ; #46054: <==negation-removal== 98340 (pos)
                    (not (not_at_b_p10))

                    ; #72079: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p2
        :precondition (and (Bb_not_blocked_p2)
                           (Pb_not_blocked_p2)
                           (checked_p2)
                           (succ_p7_p2)
                           (at_b_p7))
        :effect (and
                    ; #87318: origin
                    (at_b_p2)

                    ; #91544: <==commonly_known== 72079 (neg)
                    (not_at_b_p7)

                    ; #56711: <==negation-removal== 87318 (pos)
                    (not (not_at_b_p2))

                    ; #72079: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p3
        :precondition (and (succ_p7_p3)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (at_b_p7)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #83507: origin
                    (at_b_p3)

                    ; #91544: <==commonly_known== 72079 (neg)
                    (not_at_b_p7)

                    ; #72079: origin
                    (not (at_b_p7))

                    ; #75928: <==negation-removal== 83507 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p7_p4
        :precondition (and (Bb_not_blocked_p4)
                           (Pb_not_blocked_p4)
                           (succ_p7_p4)
                           (at_b_p7)
                           (checked_p4))
        :effect (and
                    ; #14176: origin
                    (at_b_p4)

                    ; #91544: <==commonly_known== 72079 (neg)
                    (not_at_b_p7)

                    ; #72079: origin
                    (not (at_b_p7))

                    ; #72391: <==negation-removal== 14176 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p7_p5
        :precondition (and (Bb_not_blocked_p5)
                           (succ_p7_p5)
                           (checked_p5)
                           (at_b_p7)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #91544: <==commonly_known== 72079 (neg)
                    (not_at_b_p7)

                    ; #96346: origin
                    (at_b_p5)

                    ; #36952: <==negation-removal== 96346 (pos)
                    (not (not_at_b_p5))

                    ; #72079: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p6
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (succ_p7_p6)
                           (at_b_p7))
        :effect (and
                    ; #37936: origin
                    (at_b_p6)

                    ; #91544: <==commonly_known== 72079 (neg)
                    (not_at_b_p7)

                    ; #39181: <==negation-removal== 37936 (pos)
                    (not (not_at_b_p6))

                    ; #72079: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p7
        :precondition (and (checked_p7)
                           (Bb_not_blocked_p7)
                           (succ_p7_p7)
                           (at_b_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #72079: origin
                    (at_b_p7)

                    ; #91544: <==commonly_known== 72079 (neg)
                    (not_at_b_p7)

                    ; #72079: origin
                    (not (at_b_p7))

                    ; #91544: <==negation-removal== 72079 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p7_p8
        :precondition (and (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8)
                           (checked_p8)
                           (at_b_p7)
                           (succ_p7_p8))
        :effect (and
                    ; #39056: origin
                    (at_b_p8)

                    ; #91544: <==commonly_known== 72079 (neg)
                    (not_at_b_p7)

                    ; #34542: <==negation-removal== 39056 (pos)
                    (not (not_at_b_p8))

                    ; #72079: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p9
        :precondition (and (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (succ_p7_p9)
                           (at_b_p7)
                           (checked_p9))
        :effect (and
                    ; #25230: origin
                    (at_b_p9)

                    ; #91544: <==commonly_known== 72079 (neg)
                    (not_at_b_p7)

                    ; #72079: origin
                    (not (at_b_p7))

                    ; #80614: <==negation-removal== 25230 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p8_p0011
        :precondition (and (Bb_not_blocked_p0011)
                           (at_b_p8)
                           (succ_p8_p0011)
                           (checked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13597: origin
                    (at_b_p0011)

                    ; #34542: <==commonly_known== 39056 (neg)
                    (not_at_b_p8)

                    ; #39056: origin
                    (not (at_b_p8))

                    ; #87981: <==negation-removal== 13597 (pos)
                    (not (not_at_b_p0011))))

    (:action move_b_p8_p012
        :precondition (and (checked_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (succ_p8_p012)
                           (at_b_p8))
        :effect (and
                    ; #34542: <==commonly_known== 39056 (neg)
                    (not_at_b_p8)

                    ; #38708: origin
                    (at_b_p012)

                    ; #39056: origin
                    (not (at_b_p8))

                    ; #73794: <==negation-removal== 38708 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p8_p1
        :precondition (and (succ_p8_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (at_b_p8))
        :effect (and
                    ; #34542: <==commonly_known== 39056 (neg)
                    (not_at_b_p8)

                    ; #61165: origin
                    (at_b_p1)

                    ; #33392: <==negation-removal== 61165 (pos)
                    (not (not_at_b_p1))

                    ; #39056: origin
                    (not (at_b_p8))))

    (:action move_b_p8_p10
        :precondition (and (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (checked_p10)
                           (succ_p8_p10)
                           (at_b_p8))
        :effect (and
                    ; #34542: <==commonly_known== 39056 (neg)
                    (not_at_b_p8)

                    ; #98340: origin
                    (at_b_p10)

                    ; #39056: origin
                    (not (at_b_p8))

                    ; #46054: <==negation-removal== 98340 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p8_p2
        :precondition (and (succ_p8_p2)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p8))
        :effect (and
                    ; #34542: <==commonly_known== 39056 (neg)
                    (not_at_b_p8)

                    ; #87318: origin
                    (at_b_p2)

                    ; #39056: origin
                    (not (at_b_p8))

                    ; #56711: <==negation-removal== 87318 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p8_p3
        :precondition (and (succ_p8_p3)
                           (checked_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p8))
        :effect (and
                    ; #34542: <==commonly_known== 39056 (neg)
                    (not_at_b_p8)

                    ; #83507: origin
                    (at_b_p3)

                    ; #39056: origin
                    (not (at_b_p8))

                    ; #75928: <==negation-removal== 83507 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p8_p4
        :precondition (and (Bb_not_blocked_p4)
                           (Pb_not_blocked_p4)
                           (succ_p8_p4)
                           (checked_p4)
                           (at_b_p8))
        :effect (and
                    ; #14176: origin
                    (at_b_p4)

                    ; #34542: <==commonly_known== 39056 (neg)
                    (not_at_b_p8)

                    ; #39056: origin
                    (not (at_b_p8))

                    ; #72391: <==negation-removal== 14176 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p8_p5
        :precondition (and (Bb_not_blocked_p5)
                           (at_b_p8)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (succ_p8_p5))
        :effect (and
                    ; #34542: <==commonly_known== 39056 (neg)
                    (not_at_b_p8)

                    ; #96346: origin
                    (at_b_p5)

                    ; #36952: <==negation-removal== 96346 (pos)
                    (not (not_at_b_p5))

                    ; #39056: origin
                    (not (at_b_p8))))

    (:action move_b_p8_p6
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (succ_p8_p6)
                           (at_b_p8))
        :effect (and
                    ; #34542: <==commonly_known== 39056 (neg)
                    (not_at_b_p8)

                    ; #37936: origin
                    (at_b_p6)

                    ; #39056: origin
                    (not (at_b_p8))

                    ; #39181: <==negation-removal== 37936 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p8_p7
        :precondition (and (succ_p8_p7)
                           (checked_p7)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7)
                           (at_b_p8))
        :effect (and
                    ; #34542: <==commonly_known== 39056 (neg)
                    (not_at_b_p8)

                    ; #72079: origin
                    (at_b_p7)

                    ; #39056: origin
                    (not (at_b_p8))

                    ; #91544: <==negation-removal== 72079 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p8_p8
        :precondition (and (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8)
                           (succ_p8_p8)
                           (checked_p8)
                           (at_b_p8))
        :effect (and
                    ; #34542: <==commonly_known== 39056 (neg)
                    (not_at_b_p8)

                    ; #39056: origin
                    (at_b_p8)

                    ; #34542: <==negation-removal== 39056 (pos)
                    (not (not_at_b_p8))

                    ; #39056: origin
                    (not (at_b_p8))))

    (:action move_b_p8_p9
        :precondition (and (succ_p8_p9)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9)
                           (at_b_p8))
        :effect (and
                    ; #25230: origin
                    (at_b_p9)

                    ; #34542: <==commonly_known== 39056 (neg)
                    (not_at_b_p8)

                    ; #39056: origin
                    (not (at_b_p8))

                    ; #80614: <==negation-removal== 25230 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p9_p0011
        :precondition (and (Bb_not_blocked_p0011)
                           (succ_p9_p0011)
                           (at_b_p9)
                           (checked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13597: origin
                    (at_b_p0011)

                    ; #80614: <==commonly_known== 25230 (neg)
                    (not_at_b_p9)

                    ; #25230: origin
                    (not (at_b_p9))

                    ; #87981: <==negation-removal== 13597 (pos)
                    (not (not_at_b_p0011))))

    (:action move_b_p9_p012
        :precondition (and (checked_p012)
                           (Pb_not_blocked_p012)
                           (at_b_p9)
                           (Bb_not_blocked_p012)
                           (succ_p9_p012))
        :effect (and
                    ; #38708: origin
                    (at_b_p012)

                    ; #80614: <==commonly_known== 25230 (neg)
                    (not_at_b_p9)

                    ; #25230: origin
                    (not (at_b_p9))

                    ; #73794: <==negation-removal== 38708 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p9_p1
        :precondition (and (succ_p9_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (at_b_p9))
        :effect (and
                    ; #61165: origin
                    (at_b_p1)

                    ; #80614: <==commonly_known== 25230 (neg)
                    (not_at_b_p9)

                    ; #25230: origin
                    (not (at_b_p9))

                    ; #33392: <==negation-removal== 61165 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p9_p10
        :precondition (and (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (at_b_p9)
                           (succ_p9_p10)
                           (checked_p10))
        :effect (and
                    ; #80614: <==commonly_known== 25230 (neg)
                    (not_at_b_p9)

                    ; #98340: origin
                    (at_b_p10)

                    ; #25230: origin
                    (not (at_b_p9))

                    ; #46054: <==negation-removal== 98340 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p9_p2
        :precondition (and (Bb_not_blocked_p2)
                           (Pb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p9)
                           (succ_p9_p2))
        :effect (and
                    ; #80614: <==commonly_known== 25230 (neg)
                    (not_at_b_p9)

                    ; #87318: origin
                    (at_b_p2)

                    ; #25230: origin
                    (not (at_b_p9))

                    ; #56711: <==negation-removal== 87318 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p9_p3
        :precondition (and (succ_p9_p3)
                           (checked_p3)
                           (at_b_p9)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3))
        :effect (and
                    ; #80614: <==commonly_known== 25230 (neg)
                    (not_at_b_p9)

                    ; #83507: origin
                    (at_b_p3)

                    ; #25230: origin
                    (not (at_b_p9))

                    ; #75928: <==negation-removal== 83507 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p9_p4
        :precondition (and (Bb_not_blocked_p4)
                           (checked_p4)
                           (Pb_not_blocked_p4)
                           (at_b_p9)
                           (succ_p9_p4))
        :effect (and
                    ; #14176: origin
                    (at_b_p4)

                    ; #80614: <==commonly_known== 25230 (neg)
                    (not_at_b_p9)

                    ; #25230: origin
                    (not (at_b_p9))

                    ; #72391: <==negation-removal== 14176 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p9_p5
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (at_b_p9)
                           (succ_p9_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #80614: <==commonly_known== 25230 (neg)
                    (not_at_b_p9)

                    ; #96346: origin
                    (at_b_p5)

                    ; #25230: origin
                    (not (at_b_p9))

                    ; #36952: <==negation-removal== 96346 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p9_p6
        :precondition (and (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (succ_p9_p6)
                           (at_b_p9))
        :effect (and
                    ; #37936: origin
                    (at_b_p6)

                    ; #80614: <==commonly_known== 25230 (neg)
                    (not_at_b_p9)

                    ; #25230: origin
                    (not (at_b_p9))

                    ; #39181: <==negation-removal== 37936 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p9_p7
        :precondition (and (checked_p7)
                           (Bb_not_blocked_p7)
                           (succ_p9_p7)
                           (at_b_p9)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #72079: origin
                    (at_b_p7)

                    ; #80614: <==commonly_known== 25230 (neg)
                    (not_at_b_p9)

                    ; #25230: origin
                    (not (at_b_p9))

                    ; #91544: <==negation-removal== 72079 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p9_p8
        :precondition (and (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8)
                           (at_b_p9)
                           (checked_p8)
                           (succ_p9_p8))
        :effect (and
                    ; #39056: origin
                    (at_b_p8)

                    ; #80614: <==commonly_known== 25230 (neg)
                    (not_at_b_p9)

                    ; #25230: origin
                    (not (at_b_p9))

                    ; #34542: <==negation-removal== 39056 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p9_p9
        :precondition (and (Bb_not_blocked_p9)
                           (at_b_p9)
                           (succ_p9_p9)
                           (Pb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #25230: origin
                    (at_b_p9)

                    ; #80614: <==commonly_known== 25230 (neg)
                    (not_at_b_p9)

                    ; #25230: origin
                    (not (at_b_p9))

                    ; #80614: <==negation-removal== 25230 (pos)
                    (not (not_at_b_p9))))

    (:action move_c_p0011_p0011
        :precondition (and (at_c_p0011)
                           (succ_p0011_p0011)
                           (Bc_not_blocked_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #11942: origin
                    (at_c_p0011)

                    ; #72562: <==commonly_known== 11942 (neg)
                    (not_at_c_p0011)

                    ; #11942: origin
                    (not (at_c_p0011))

                    ; #72562: <==negation-removal== 11942 (pos)
                    (not (not_at_c_p0011))))

    (:action move_c_p0011_p012
        :precondition (and (at_c_p0011)
                           (checked_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (succ_p0011_p012))
        :effect (and
                    ; #53676: origin
                    (at_c_p012)

                    ; #72562: <==commonly_known== 11942 (neg)
                    (not_at_c_p0011)

                    ; #11942: origin
                    (not (at_c_p0011))

                    ; #76287: <==negation-removal== 53676 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p0011_p1
        :precondition (and (at_c_p0011)
                           (checked_p1)
                           (succ_p0011_p1)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #52794: origin
                    (at_c_p1)

                    ; #72562: <==commonly_known== 11942 (neg)
                    (not_at_c_p0011)

                    ; #11942: origin
                    (not (at_c_p0011))

                    ; #63868: <==negation-removal== 52794 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p0011_p10
        :precondition (and (at_c_p0011)
                           (succ_p0011_p10)
                           (Bc_not_blocked_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #36374: origin
                    (at_c_p10)

                    ; #72562: <==commonly_known== 11942 (neg)
                    (not_at_c_p0011)

                    ; #11942: origin
                    (not (at_c_p0011))

                    ; #14652: <==negation-removal== 36374 (pos)
                    (not (not_at_c_p10))))

    (:action move_c_p0011_p2
        :precondition (and (at_c_p0011)
                           (Bc_not_blocked_p2)
                           (succ_p0011_p2)
                           (checked_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #72562: <==commonly_known== 11942 (neg)
                    (not_at_c_p0011)

                    ; #77264: origin
                    (at_c_p2)

                    ; #11942: origin
                    (not (at_c_p0011))

                    ; #46515: <==negation-removal== 77264 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p0011_p3
        :precondition (and (at_c_p0011)
                           (succ_p0011_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #31647: origin
                    (at_c_p3)

                    ; #72562: <==commonly_known== 11942 (neg)
                    (not_at_c_p0011)

                    ; #11942: origin
                    (not (at_c_p0011))

                    ; #85804: <==negation-removal== 31647 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p0011_p4
        :precondition (and (Pc_not_blocked_p4)
                           (at_c_p0011)
                           (Bc_not_blocked_p4)
                           (checked_p4)
                           (succ_p0011_p4))
        :effect (and
                    ; #49458: origin
                    (at_c_p4)

                    ; #72562: <==commonly_known== 11942 (neg)
                    (not_at_c_p0011)

                    ; #11942: origin
                    (not (at_c_p0011))

                    ; #50761: <==negation-removal== 49458 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p0011_p5
        :precondition (and (at_c_p0011)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5)
                           (succ_p0011_p5))
        :effect (and
                    ; #71773: origin
                    (at_c_p5)

                    ; #72562: <==commonly_known== 11942 (neg)
                    (not_at_c_p0011)

                    ; #11942: origin
                    (not (at_c_p0011))

                    ; #42386: <==negation-removal== 71773 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p0011_p6
        :precondition (and (at_c_p0011)
                           (succ_p0011_p6)
                           (Bc_not_blocked_p6)
                           (checked_p6)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #39294: origin
                    (at_c_p6)

                    ; #72562: <==commonly_known== 11942 (neg)
                    (not_at_c_p0011)

                    ; #11942: origin
                    (not (at_c_p0011))

                    ; #39495: <==negation-removal== 39294 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p0011_p7
        :precondition (and (at_c_p0011)
                           (succ_p0011_p7)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #62048: origin
                    (at_c_p7)

                    ; #72562: <==commonly_known== 11942 (neg)
                    (not_at_c_p0011)

                    ; #11942: origin
                    (not (at_c_p0011))

                    ; #57846: <==negation-removal== 62048 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p0011_p8
        :precondition (and (at_c_p0011)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (succ_p0011_p8))
        :effect (and
                    ; #72562: <==commonly_known== 11942 (neg)
                    (not_at_c_p0011)

                    ; #78620: origin
                    (at_c_p8)

                    ; #11942: origin
                    (not (at_c_p0011))

                    ; #38337: <==negation-removal== 78620 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p0011_p9
        :precondition (and (at_c_p0011)
                           (succ_p0011_p9)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #55000: origin
                    (at_c_p9)

                    ; #72562: <==commonly_known== 11942 (neg)
                    (not_at_c_p0011)

                    ; #11942: origin
                    (not (at_c_p0011))

                    ; #33357: <==negation-removal== 55000 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p012_p0011
        :precondition (and (Bc_not_blocked_p0011)
                           (at_c_p012)
                           (checked_p0011)
                           (Pc_not_blocked_p0011)
                           (succ_p012_p0011))
        :effect (and
                    ; #11942: origin
                    (at_c_p0011)

                    ; #76287: <==commonly_known== 53676 (neg)
                    (not_at_c_p012)

                    ; #53676: origin
                    (not (at_c_p012))

                    ; #72562: <==negation-removal== 11942 (pos)
                    (not (not_at_c_p0011))))

    (:action move_c_p012_p012
        :precondition (and (checked_p012)
                           (Pc_not_blocked_p012)
                           (at_c_p012)
                           (Bc_not_blocked_p012)
                           (succ_p012_p012))
        :effect (and
                    ; #53676: origin
                    (at_c_p012)

                    ; #76287: <==commonly_known== 53676 (neg)
                    (not_at_c_p012)

                    ; #53676: origin
                    (not (at_c_p012))

                    ; #76287: <==negation-removal== 53676 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p012_p1
        :precondition (and (succ_p012_p1)
                           (checked_p1)
                           (at_c_p012)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #52794: origin
                    (at_c_p1)

                    ; #76287: <==commonly_known== 53676 (neg)
                    (not_at_c_p012)

                    ; #53676: origin
                    (not (at_c_p012))

                    ; #63868: <==negation-removal== 52794 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p012_p10
        :precondition (and (Bc_not_blocked_p10)
                           (at_c_p012)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (succ_p012_p10))
        :effect (and
                    ; #36374: origin
                    (at_c_p10)

                    ; #76287: <==commonly_known== 53676 (neg)
                    (not_at_c_p012)

                    ; #14652: <==negation-removal== 36374 (pos)
                    (not (not_at_c_p10))

                    ; #53676: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p2
        :precondition (and (succ_p012_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p012)
                           (checked_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #76287: <==commonly_known== 53676 (neg)
                    (not_at_c_p012)

                    ; #77264: origin
                    (at_c_p2)

                    ; #46515: <==negation-removal== 77264 (pos)
                    (not (not_at_c_p2))

                    ; #53676: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p3
        :precondition (and (Pc_not_blocked_p3)
                           (succ_p012_p3)
                           (checked_p3)
                           (at_c_p012)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #31647: origin
                    (at_c_p3)

                    ; #76287: <==commonly_known== 53676 (neg)
                    (not_at_c_p012)

                    ; #53676: origin
                    (not (at_c_p012))

                    ; #85804: <==negation-removal== 31647 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p012_p4
        :precondition (and (Pc_not_blocked_p4)
                           (Bc_not_blocked_p4)
                           (succ_p012_p4)
                           (at_c_p012)
                           (checked_p4))
        :effect (and
                    ; #49458: origin
                    (at_c_p4)

                    ; #76287: <==commonly_known== 53676 (neg)
                    (not_at_c_p012)

                    ; #50761: <==negation-removal== 49458 (pos)
                    (not (not_at_c_p4))

                    ; #53676: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p5
        :precondition (and (checked_p5)
                           (at_c_p012)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5)
                           (succ_p012_p5))
        :effect (and
                    ; #71773: origin
                    (at_c_p5)

                    ; #76287: <==commonly_known== 53676 (neg)
                    (not_at_c_p012)

                    ; #42386: <==negation-removal== 71773 (pos)
                    (not (not_at_c_p5))

                    ; #53676: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p6
        :precondition (and (checked_p6)
                           (Bc_not_blocked_p6)
                           (succ_p012_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p012))
        :effect (and
                    ; #39294: origin
                    (at_c_p6)

                    ; #76287: <==commonly_known== 53676 (neg)
                    (not_at_c_p012)

                    ; #39495: <==negation-removal== 39294 (pos)
                    (not (not_at_c_p6))

                    ; #53676: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p7
        :precondition (and (succ_p012_p7)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (at_c_p012)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #62048: origin
                    (at_c_p7)

                    ; #76287: <==commonly_known== 53676 (neg)
                    (not_at_c_p012)

                    ; #53676: origin
                    (not (at_c_p012))

                    ; #57846: <==negation-removal== 62048 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p012_p8
        :precondition (and (Pc_not_blocked_p8)
                           (succ_p012_p8)
                           (Bc_not_blocked_p8)
                           (at_c_p012)
                           (checked_p8))
        :effect (and
                    ; #76287: <==commonly_known== 53676 (neg)
                    (not_at_c_p012)

                    ; #78620: origin
                    (at_c_p8)

                    ; #38337: <==negation-removal== 78620 (pos)
                    (not (not_at_c_p8))

                    ; #53676: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p9
        :precondition (and (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (succ_p012_p9)
                           (at_c_p012)
                           (checked_p9))
        :effect (and
                    ; #55000: origin
                    (at_c_p9)

                    ; #76287: <==commonly_known== 53676 (neg)
                    (not_at_c_p012)

                    ; #33357: <==negation-removal== 55000 (pos)
                    (not (not_at_c_p9))

                    ; #53676: origin
                    (not (at_c_p012))))

    (:action move_c_p10_p0011
        :precondition (and (at_c_p10)
                           (Bc_not_blocked_p0011)
                           (succ_p10_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #11942: origin
                    (at_c_p0011)

                    ; #14652: <==commonly_known== 36374 (neg)
                    (not_at_c_p10)

                    ; #36374: origin
                    (not (at_c_p10))

                    ; #72562: <==negation-removal== 11942 (pos)
                    (not (not_at_c_p0011))))

    (:action move_c_p10_p012
        :precondition (and (at_c_p10)
                           (succ_p10_p012)
                           (checked_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012))
        :effect (and
                    ; #14652: <==commonly_known== 36374 (neg)
                    (not_at_c_p10)

                    ; #53676: origin
                    (at_c_p012)

                    ; #36374: origin
                    (not (at_c_p10))

                    ; #76287: <==negation-removal== 53676 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p10_p1
        :precondition (and (checked_p1)
                           (at_c_p10)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (succ_p10_p1))
        :effect (and
                    ; #14652: <==commonly_known== 36374 (neg)
                    (not_at_c_p10)

                    ; #52794: origin
                    (at_c_p1)

                    ; #36374: origin
                    (not (at_c_p10))

                    ; #63868: <==negation-removal== 52794 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p10_p10
        :precondition (and (at_c_p10)
                           (Bc_not_blocked_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (succ_p10_p10))
        :effect (and
                    ; #14652: <==commonly_known== 36374 (neg)
                    (not_at_c_p10)

                    ; #36374: origin
                    (at_c_p10)

                    ; #14652: <==negation-removal== 36374 (pos)
                    (not (not_at_c_p10))

                    ; #36374: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p2
        :precondition (and (succ_p10_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p10)
                           (checked_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #14652: <==commonly_known== 36374 (neg)
                    (not_at_c_p10)

                    ; #77264: origin
                    (at_c_p2)

                    ; #36374: origin
                    (not (at_c_p10))

                    ; #46515: <==negation-removal== 77264 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p10_p3
        :precondition (and (at_c_p10)
                           (Pc_not_blocked_p3)
                           (succ_p10_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #14652: <==commonly_known== 36374 (neg)
                    (not_at_c_p10)

                    ; #31647: origin
                    (at_c_p3)

                    ; #36374: origin
                    (not (at_c_p10))

                    ; #85804: <==negation-removal== 31647 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p10_p4
        :precondition (and (Pc_not_blocked_p4)
                           (at_c_p10)
                           (Bc_not_blocked_p4)
                           (checked_p4)
                           (succ_p10_p4))
        :effect (and
                    ; #14652: <==commonly_known== 36374 (neg)
                    (not_at_c_p10)

                    ; #49458: origin
                    (at_c_p4)

                    ; #36374: origin
                    (not (at_c_p10))

                    ; #50761: <==negation-removal== 49458 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p10_p5
        :precondition (and (succ_p10_p5)
                           (at_c_p10)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #14652: <==commonly_known== 36374 (neg)
                    (not_at_c_p10)

                    ; #71773: origin
                    (at_c_p5)

                    ; #36374: origin
                    (not (at_c_p10))

                    ; #42386: <==negation-removal== 71773 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p10_p6
        :precondition (and (checked_p6)
                           (Bc_not_blocked_p6)
                           (at_c_p10)
                           (Pc_not_blocked_p6)
                           (succ_p10_p6))
        :effect (and
                    ; #14652: <==commonly_known== 36374 (neg)
                    (not_at_c_p10)

                    ; #39294: origin
                    (at_c_p6)

                    ; #36374: origin
                    (not (at_c_p10))

                    ; #39495: <==negation-removal== 39294 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p10_p7
        :precondition (and (at_c_p10)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (succ_p10_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #14652: <==commonly_known== 36374 (neg)
                    (not_at_c_p10)

                    ; #62048: origin
                    (at_c_p7)

                    ; #36374: origin
                    (not (at_c_p10))

                    ; #57846: <==negation-removal== 62048 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p10_p8
        :precondition (and (Bc_not_blocked_p8)
                           (at_c_p10)
                           (Pc_not_blocked_p8)
                           (succ_p10_p8)
                           (checked_p8))
        :effect (and
                    ; #14652: <==commonly_known== 36374 (neg)
                    (not_at_c_p10)

                    ; #78620: origin
                    (at_c_p8)

                    ; #36374: origin
                    (not (at_c_p10))

                    ; #38337: <==negation-removal== 78620 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p10_p9
        :precondition (and (at_c_p10)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (checked_p9)
                           (succ_p10_p9))
        :effect (and
                    ; #14652: <==commonly_known== 36374 (neg)
                    (not_at_c_p10)

                    ; #55000: origin
                    (at_c_p9)

                    ; #33357: <==negation-removal== 55000 (pos)
                    (not (not_at_c_p9))

                    ; #36374: origin
                    (not (at_c_p10))))

    (:action move_c_p1_p0011
        :precondition (and (Bc_not_blocked_p0011)
                           (succ_p1_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011)
                           (at_c_p1))
        :effect (and
                    ; #11942: origin
                    (at_c_p0011)

                    ; #63868: <==commonly_known== 52794 (neg)
                    (not_at_c_p1)

                    ; #52794: origin
                    (not (at_c_p1))

                    ; #72562: <==negation-removal== 11942 (pos)
                    (not (not_at_c_p0011))))

    (:action move_c_p1_p012
        :precondition (and (checked_p012)
                           (succ_p1_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (at_c_p1))
        :effect (and
                    ; #53676: origin
                    (at_c_p012)

                    ; #63868: <==commonly_known== 52794 (neg)
                    (not_at_c_p1)

                    ; #52794: origin
                    (not (at_c_p1))

                    ; #76287: <==negation-removal== 53676 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p1_p1
        :precondition (and (checked_p1)
                           (Pc_not_blocked_p1)
                           (succ_p1_p1)
                           (Bc_not_blocked_p1)
                           (at_c_p1))
        :effect (and
                    ; #52794: origin
                    (at_c_p1)

                    ; #63868: <==commonly_known== 52794 (neg)
                    (not_at_c_p1)

                    ; #52794: origin
                    (not (at_c_p1))

                    ; #63868: <==negation-removal== 52794 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p1_p10
        :precondition (and (checked_p10)
                           (Bc_not_blocked_p10)
                           (Pc_not_blocked_p10)
                           (succ_p1_p10)
                           (at_c_p1))
        :effect (and
                    ; #36374: origin
                    (at_c_p10)

                    ; #63868: <==commonly_known== 52794 (neg)
                    (not_at_c_p1)

                    ; #14652: <==negation-removal== 36374 (pos)
                    (not (not_at_c_p10))

                    ; #52794: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p2
        :precondition (and (succ_p1_p2)
                           (Bc_not_blocked_p2)
                           (checked_p2)
                           (Pc_not_blocked_p2)
                           (at_c_p1))
        :effect (and
                    ; #63868: <==commonly_known== 52794 (neg)
                    (not_at_c_p1)

                    ; #77264: origin
                    (at_c_p2)

                    ; #46515: <==negation-removal== 77264 (pos)
                    (not (not_at_c_p2))

                    ; #52794: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p3
        :precondition (and (succ_p1_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3)
                           (at_c_p1))
        :effect (and
                    ; #31647: origin
                    (at_c_p3)

                    ; #63868: <==commonly_known== 52794 (neg)
                    (not_at_c_p1)

                    ; #52794: origin
                    (not (at_c_p1))

                    ; #85804: <==negation-removal== 31647 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p1_p4
        :precondition (and (Pc_not_blocked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p1)
                           (checked_p4)
                           (succ_p1_p4))
        :effect (and
                    ; #49458: origin
                    (at_c_p4)

                    ; #63868: <==commonly_known== 52794 (neg)
                    (not_at_c_p1)

                    ; #50761: <==negation-removal== 49458 (pos)
                    (not (not_at_c_p4))

                    ; #52794: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p5
        :precondition (and (succ_p1_p5)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p1))
        :effect (and
                    ; #63868: <==commonly_known== 52794 (neg)
                    (not_at_c_p1)

                    ; #71773: origin
                    (at_c_p5)

                    ; #42386: <==negation-removal== 71773 (pos)
                    (not (not_at_c_p5))

                    ; #52794: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p6
        :precondition (and (checked_p6)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (succ_p1_p6)
                           (at_c_p1))
        :effect (and
                    ; #39294: origin
                    (at_c_p6)

                    ; #63868: <==commonly_known== 52794 (neg)
                    (not_at_c_p1)

                    ; #39495: <==negation-removal== 39294 (pos)
                    (not (not_at_c_p6))

                    ; #52794: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p7
        :precondition (and (Pc_not_blocked_p7)
                           (checked_p7)
                           (succ_p1_p7)
                           (at_c_p1)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #62048: origin
                    (at_c_p7)

                    ; #63868: <==commonly_known== 52794 (neg)
                    (not_at_c_p1)

                    ; #52794: origin
                    (not (at_c_p1))

                    ; #57846: <==negation-removal== 62048 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p1_p8
        :precondition (and (succ_p1_p8)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (at_c_p1))
        :effect (and
                    ; #63868: <==commonly_known== 52794 (neg)
                    (not_at_c_p1)

                    ; #78620: origin
                    (at_c_p8)

                    ; #38337: <==negation-removal== 78620 (pos)
                    (not (not_at_c_p8))

                    ; #52794: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p9
        :precondition (and (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p1_p9)
                           (checked_p9)
                           (at_c_p1))
        :effect (and
                    ; #55000: origin
                    (at_c_p9)

                    ; #63868: <==commonly_known== 52794 (neg)
                    (not_at_c_p1)

                    ; #33357: <==negation-removal== 55000 (pos)
                    (not (not_at_c_p9))

                    ; #52794: origin
                    (not (at_c_p1))))

    (:action move_c_p2_p0011
        :precondition (and (succ_p2_p0011)
                           (Bc_not_blocked_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011)
                           (at_c_p2))
        :effect (and
                    ; #11942: origin
                    (at_c_p0011)

                    ; #46515: <==commonly_known== 77264 (neg)
                    (not_at_c_p2)

                    ; #72562: <==negation-removal== 11942 (pos)
                    (not (not_at_c_p0011))

                    ; #77264: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p012
        :precondition (and (checked_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (succ_p2_p012)
                           (at_c_p2))
        :effect (and
                    ; #46515: <==commonly_known== 77264 (neg)
                    (not_at_c_p2)

                    ; #53676: origin
                    (at_c_p012)

                    ; #76287: <==negation-removal== 53676 (pos)
                    (not (not_at_c_p012))

                    ; #77264: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p1
        :precondition (and (checked_p1)
                           (succ_p2_p1)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (at_c_p2))
        :effect (and
                    ; #46515: <==commonly_known== 77264 (neg)
                    (not_at_c_p2)

                    ; #52794: origin
                    (at_c_p1)

                    ; #63868: <==negation-removal== 52794 (pos)
                    (not (not_at_c_p1))

                    ; #77264: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p10
        :precondition (and (Bc_not_blocked_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (succ_p2_p10)
                           (at_c_p2))
        :effect (and
                    ; #36374: origin
                    (at_c_p10)

                    ; #46515: <==commonly_known== 77264 (neg)
                    (not_at_c_p2)

                    ; #14652: <==negation-removal== 36374 (pos)
                    (not (not_at_c_p10))

                    ; #77264: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p2
        :precondition (and (checked_p2)
                           (Bc_not_blocked_p2)
                           (succ_p2_p2)
                           (Pc_not_blocked_p2)
                           (at_c_p2))
        :effect (and
                    ; #46515: <==commonly_known== 77264 (neg)
                    (not_at_c_p2)

                    ; #77264: origin
                    (at_c_p2)

                    ; #46515: <==negation-removal== 77264 (pos)
                    (not (not_at_c_p2))

                    ; #77264: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p3
        :precondition (and (succ_p2_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3)
                           (at_c_p2))
        :effect (and
                    ; #31647: origin
                    (at_c_p3)

                    ; #46515: <==commonly_known== 77264 (neg)
                    (not_at_c_p2)

                    ; #77264: origin
                    (not (at_c_p2))

                    ; #85804: <==negation-removal== 31647 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p2_p4
        :precondition (and (Pc_not_blocked_p4)
                           (succ_p2_p4)
                           (Bc_not_blocked_p4)
                           (checked_p4)
                           (at_c_p2))
        :effect (and
                    ; #46515: <==commonly_known== 77264 (neg)
                    (not_at_c_p2)

                    ; #49458: origin
                    (at_c_p4)

                    ; #50761: <==negation-removal== 49458 (pos)
                    (not (not_at_c_p4))

                    ; #77264: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p5
        :precondition (and (checked_p5)
                           (succ_p2_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p2))
        :effect (and
                    ; #46515: <==commonly_known== 77264 (neg)
                    (not_at_c_p2)

                    ; #71773: origin
                    (at_c_p5)

                    ; #42386: <==negation-removal== 71773 (pos)
                    (not (not_at_c_p5))

                    ; #77264: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p6
        :precondition (and (checked_p6)
                           (Bc_not_blocked_p6)
                           (succ_p2_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p2))
        :effect (and
                    ; #39294: origin
                    (at_c_p6)

                    ; #46515: <==commonly_known== 77264 (neg)
                    (not_at_c_p2)

                    ; #39495: <==negation-removal== 39294 (pos)
                    (not (not_at_c_p6))

                    ; #77264: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p7
        :precondition (and (succ_p2_p7)
                           (at_c_p2)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #46515: <==commonly_known== 77264 (neg)
                    (not_at_c_p2)

                    ; #62048: origin
                    (at_c_p7)

                    ; #57846: <==negation-removal== 62048 (pos)
                    (not (not_at_c_p7))

                    ; #77264: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p8
        :precondition (and (Pc_not_blocked_p8)
                           (succ_p2_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (at_c_p2))
        :effect (and
                    ; #46515: <==commonly_known== 77264 (neg)
                    (not_at_c_p2)

                    ; #78620: origin
                    (at_c_p8)

                    ; #38337: <==negation-removal== 78620 (pos)
                    (not (not_at_c_p8))

                    ; #77264: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p9
        :precondition (and (succ_p2_p9)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (checked_p9)
                           (at_c_p2))
        :effect (and
                    ; #46515: <==commonly_known== 77264 (neg)
                    (not_at_c_p2)

                    ; #55000: origin
                    (at_c_p9)

                    ; #33357: <==negation-removal== 55000 (pos)
                    (not (not_at_c_p9))

                    ; #77264: origin
                    (not (at_c_p2))))

    (:action move_c_p3_p0011
        :precondition (and (at_c_p3)
                           (Bc_not_blocked_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011)
                           (succ_p3_p0011))
        :effect (and
                    ; #11942: origin
                    (at_c_p0011)

                    ; #85804: <==commonly_known== 31647 (neg)
                    (not_at_c_p3)

                    ; #31647: origin
                    (not (at_c_p3))

                    ; #72562: <==negation-removal== 11942 (pos)
                    (not (not_at_c_p0011))))

    (:action move_c_p3_p012
        :precondition (and (Bc_not_blocked_p012)
                           (checked_p012)
                           (at_c_p3)
                           (succ_p3_p012)
                           (Pc_not_blocked_p012))
        :effect (and
                    ; #53676: origin
                    (at_c_p012)

                    ; #85804: <==commonly_known== 31647 (neg)
                    (not_at_c_p3)

                    ; #31647: origin
                    (not (at_c_p3))

                    ; #76287: <==negation-removal== 53676 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p3_p1
        :precondition (and (checked_p1)
                           (succ_p3_p1)
                           (at_c_p3)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #52794: origin
                    (at_c_p1)

                    ; #85804: <==commonly_known== 31647 (neg)
                    (not_at_c_p3)

                    ; #31647: origin
                    (not (at_c_p3))

                    ; #63868: <==negation-removal== 52794 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p3_p10
        :precondition (and (Bc_not_blocked_p10)
                           (at_c_p3)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (succ_p3_p10))
        :effect (and
                    ; #36374: origin
                    (at_c_p10)

                    ; #85804: <==commonly_known== 31647 (neg)
                    (not_at_c_p3)

                    ; #14652: <==negation-removal== 36374 (pos)
                    (not (not_at_c_p10))

                    ; #31647: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p2
        :precondition (and (Bc_not_blocked_p2)
                           (succ_p3_p2)
                           (at_c_p3)
                           (checked_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #77264: origin
                    (at_c_p2)

                    ; #85804: <==commonly_known== 31647 (neg)
                    (not_at_c_p3)

                    ; #31647: origin
                    (not (at_c_p3))

                    ; #46515: <==negation-removal== 77264 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p3_p3
        :precondition (and (Pc_not_blocked_p3)
                           (succ_p3_p3)
                           (at_c_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #31647: origin
                    (at_c_p3)

                    ; #85804: <==commonly_known== 31647 (neg)
                    (not_at_c_p3)

                    ; #31647: origin
                    (not (at_c_p3))

                    ; #85804: <==negation-removal== 31647 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p3_p4
        :precondition (and (Pc_not_blocked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p3)
                           (succ_p3_p4)
                           (checked_p4))
        :effect (and
                    ; #49458: origin
                    (at_c_p4)

                    ; #85804: <==commonly_known== 31647 (neg)
                    (not_at_c_p3)

                    ; #31647: origin
                    (not (at_c_p3))

                    ; #50761: <==negation-removal== 49458 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p3_p5
        :precondition (and (checked_p5)
                           (at_c_p3)
                           (succ_p3_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #71773: origin
                    (at_c_p5)

                    ; #85804: <==commonly_known== 31647 (neg)
                    (not_at_c_p3)

                    ; #31647: origin
                    (not (at_c_p3))

                    ; #42386: <==negation-removal== 71773 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p3_p6
        :precondition (and (checked_p6)
                           (Bc_not_blocked_p6)
                           (at_c_p3)
                           (succ_p3_p6)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #39294: origin
                    (at_c_p6)

                    ; #85804: <==commonly_known== 31647 (neg)
                    (not_at_c_p3)

                    ; #31647: origin
                    (not (at_c_p3))

                    ; #39495: <==negation-removal== 39294 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p3_p7
        :precondition (and (Pc_not_blocked_p7)
                           (succ_p3_p7)
                           (checked_p7)
                           (at_c_p3)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #62048: origin
                    (at_c_p7)

                    ; #85804: <==commonly_known== 31647 (neg)
                    (not_at_c_p3)

                    ; #31647: origin
                    (not (at_c_p3))

                    ; #57846: <==negation-removal== 62048 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p3_p8
        :precondition (and (succ_p3_p8)
                           (Bc_not_blocked_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p3)
                           (checked_p8))
        :effect (and
                    ; #78620: origin
                    (at_c_p8)

                    ; #85804: <==commonly_known== 31647 (neg)
                    (not_at_c_p3)

                    ; #31647: origin
                    (not (at_c_p3))

                    ; #38337: <==negation-removal== 78620 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p3_p9
        :precondition (and (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p3)
                           (succ_p3_p9)
                           (checked_p9))
        :effect (and
                    ; #55000: origin
                    (at_c_p9)

                    ; #85804: <==commonly_known== 31647 (neg)
                    (not_at_c_p3)

                    ; #31647: origin
                    (not (at_c_p3))

                    ; #33357: <==negation-removal== 55000 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p4_p0011
        :precondition (and (at_c_p4)
                           (Bc_not_blocked_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011)
                           (succ_p4_p0011))
        :effect (and
                    ; #11942: origin
                    (at_c_p0011)

                    ; #50761: <==commonly_known== 49458 (neg)
                    (not_at_c_p4)

                    ; #49458: origin
                    (not (at_c_p4))

                    ; #72562: <==negation-removal== 11942 (pos)
                    (not (not_at_c_p0011))))

    (:action move_c_p4_p012
        :precondition (and (succ_p4_p012)
                           (at_c_p4)
                           (checked_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012))
        :effect (and
                    ; #50761: <==commonly_known== 49458 (neg)
                    (not_at_c_p4)

                    ; #53676: origin
                    (at_c_p012)

                    ; #49458: origin
                    (not (at_c_p4))

                    ; #76287: <==negation-removal== 53676 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p4_p1
        :precondition (and (checked_p1)
                           (at_c_p4)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (succ_p4_p1))
        :effect (and
                    ; #50761: <==commonly_known== 49458 (neg)
                    (not_at_c_p4)

                    ; #52794: origin
                    (at_c_p1)

                    ; #49458: origin
                    (not (at_c_p4))

                    ; #63868: <==negation-removal== 52794 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p4_p10
        :precondition (and (succ_p4_p10)
                           (at_c_p4)
                           (Bc_not_blocked_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #36374: origin
                    (at_c_p10)

                    ; #50761: <==commonly_known== 49458 (neg)
                    (not_at_c_p4)

                    ; #14652: <==negation-removal== 36374 (pos)
                    (not (not_at_c_p10))

                    ; #49458: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p2
        :precondition (and (succ_p4_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p4)
                           (checked_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #50761: <==commonly_known== 49458 (neg)
                    (not_at_c_p4)

                    ; #77264: origin
                    (at_c_p2)

                    ; #46515: <==negation-removal== 77264 (pos)
                    (not (not_at_c_p2))

                    ; #49458: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p3
        :precondition (and (at_c_p4)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (succ_p4_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #31647: origin
                    (at_c_p3)

                    ; #50761: <==commonly_known== 49458 (neg)
                    (not_at_c_p4)

                    ; #49458: origin
                    (not (at_c_p4))

                    ; #85804: <==negation-removal== 31647 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p4_p4
        :precondition (and (Pc_not_blocked_p4)
                           (at_c_p4)
                           (Bc_not_blocked_p4)
                           (succ_p4_p4)
                           (checked_p4))
        :effect (and
                    ; #49458: origin
                    (at_c_p4)

                    ; #50761: <==commonly_known== 49458 (neg)
                    (not_at_c_p4)

                    ; #49458: origin
                    (not (at_c_p4))

                    ; #50761: <==negation-removal== 49458 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p4_p5
        :precondition (and (at_c_p4)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5)
                           (succ_p4_p5))
        :effect (and
                    ; #50761: <==commonly_known== 49458 (neg)
                    (not_at_c_p4)

                    ; #71773: origin
                    (at_c_p5)

                    ; #42386: <==negation-removal== 71773 (pos)
                    (not (not_at_c_p5))

                    ; #49458: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p6
        :precondition (and (succ_p4_p6)
                           (checked_p6)
                           (Bc_not_blocked_p6)
                           (at_c_p4)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #39294: origin
                    (at_c_p6)

                    ; #50761: <==commonly_known== 49458 (neg)
                    (not_at_c_p4)

                    ; #39495: <==negation-removal== 39294 (pos)
                    (not (not_at_c_p6))

                    ; #49458: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p7
        :precondition (and (at_c_p4)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (succ_p4_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #50761: <==commonly_known== 49458 (neg)
                    (not_at_c_p4)

                    ; #62048: origin
                    (at_c_p7)

                    ; #49458: origin
                    (not (at_c_p4))

                    ; #57846: <==negation-removal== 62048 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p4_p8
        :precondition (and (succ_p4_p8)
                           (at_c_p4)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #50761: <==commonly_known== 49458 (neg)
                    (not_at_c_p4)

                    ; #78620: origin
                    (at_c_p8)

                    ; #38337: <==negation-removal== 78620 (pos)
                    (not (not_at_c_p8))

                    ; #49458: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p9
        :precondition (and (at_c_p4)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p4_p9)
                           (checked_p9))
        :effect (and
                    ; #50761: <==commonly_known== 49458 (neg)
                    (not_at_c_p4)

                    ; #55000: origin
                    (at_c_p9)

                    ; #33357: <==negation-removal== 55000 (pos)
                    (not (not_at_c_p9))

                    ; #49458: origin
                    (not (at_c_p4))))

    (:action move_c_p5_p0011
        :precondition (and (Bc_not_blocked_p0011)
                           (checked_p0011)
                           (at_c_p5)
                           (Pc_not_blocked_p0011)
                           (succ_p5_p0011))
        :effect (and
                    ; #11942: origin
                    (at_c_p0011)

                    ; #42386: <==commonly_known== 71773 (neg)
                    (not_at_c_p5)

                    ; #71773: origin
                    (not (at_c_p5))

                    ; #72562: <==negation-removal== 11942 (pos)
                    (not (not_at_c_p0011))))

    (:action move_c_p5_p012
        :precondition (and (succ_p5_p012)
                           (checked_p012)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012)
                           (at_c_p5))
        :effect (and
                    ; #42386: <==commonly_known== 71773 (neg)
                    (not_at_c_p5)

                    ; #53676: origin
                    (at_c_p012)

                    ; #71773: origin
                    (not (at_c_p5))

                    ; #76287: <==negation-removal== 53676 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p5_p1
        :precondition (and (succ_p5_p1)
                           (checked_p1)
                           (Pc_not_blocked_p1)
                           (at_c_p5)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #42386: <==commonly_known== 71773 (neg)
                    (not_at_c_p5)

                    ; #52794: origin
                    (at_c_p1)

                    ; #63868: <==negation-removal== 52794 (pos)
                    (not (not_at_c_p1))

                    ; #71773: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p10
        :precondition (and (Bc_not_blocked_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (succ_p5_p10)
                           (at_c_p5))
        :effect (and
                    ; #36374: origin
                    (at_c_p10)

                    ; #42386: <==commonly_known== 71773 (neg)
                    (not_at_c_p5)

                    ; #14652: <==negation-removal== 36374 (pos)
                    (not (not_at_c_p10))

                    ; #71773: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p2
        :precondition (and (checked_p2)
                           (succ_p5_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p5)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #42386: <==commonly_known== 71773 (neg)
                    (not_at_c_p5)

                    ; #77264: origin
                    (at_c_p2)

                    ; #46515: <==negation-removal== 77264 (pos)
                    (not (not_at_c_p2))

                    ; #71773: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p3
        :precondition (and (Pc_not_blocked_p3)
                           (succ_p5_p3)
                           (checked_p3)
                           (at_c_p5)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #31647: origin
                    (at_c_p3)

                    ; #42386: <==commonly_known== 71773 (neg)
                    (not_at_c_p5)

                    ; #71773: origin
                    (not (at_c_p5))

                    ; #85804: <==negation-removal== 31647 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p5_p4
        :precondition (and (Pc_not_blocked_p4)
                           (succ_p5_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p5)
                           (checked_p4))
        :effect (and
                    ; #42386: <==commonly_known== 71773 (neg)
                    (not_at_c_p5)

                    ; #49458: origin
                    (at_c_p4)

                    ; #50761: <==negation-removal== 49458 (pos)
                    (not (not_at_c_p4))

                    ; #71773: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p5
        :precondition (and (checked_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #42386: <==commonly_known== 71773 (neg)
                    (not_at_c_p5)

                    ; #71773: origin
                    (at_c_p5)

                    ; #42386: <==negation-removal== 71773 (pos)
                    (not (not_at_c_p5))

                    ; #71773: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p6
        :precondition (and (checked_p6)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p5)
                           (succ_p5_p6))
        :effect (and
                    ; #39294: origin
                    (at_c_p6)

                    ; #42386: <==commonly_known== 71773 (neg)
                    (not_at_c_p5)

                    ; #39495: <==negation-removal== 39294 (pos)
                    (not (not_at_c_p6))

                    ; #71773: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p7
        :precondition (and (succ_p5_p7)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (at_c_p5)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #42386: <==commonly_known== 71773 (neg)
                    (not_at_c_p5)

                    ; #62048: origin
                    (at_c_p7)

                    ; #57846: <==negation-removal== 62048 (pos)
                    (not (not_at_c_p7))

                    ; #71773: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p8
        :precondition (and (succ_p5_p8)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (at_c_p5))
        :effect (and
                    ; #42386: <==commonly_known== 71773 (neg)
                    (not_at_c_p5)

                    ; #78620: origin
                    (at_c_p8)

                    ; #38337: <==negation-removal== 78620 (pos)
                    (not (not_at_c_p8))

                    ; #71773: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p9
        :precondition (and (succ_p5_p9)
                           (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p5)
                           (checked_p9))
        :effect (and
                    ; #42386: <==commonly_known== 71773 (neg)
                    (not_at_c_p5)

                    ; #55000: origin
                    (at_c_p9)

                    ; #33357: <==negation-removal== 55000 (pos)
                    (not (not_at_c_p9))

                    ; #71773: origin
                    (not (at_c_p5))))

    (:action move_c_p6_p0011
        :precondition (and (succ_p6_p0011)
                           (at_c_p6)
                           (Bc_not_blocked_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #11942: origin
                    (at_c_p0011)

                    ; #39495: <==commonly_known== 39294 (neg)
                    (not_at_c_p6)

                    ; #39294: origin
                    (not (at_c_p6))

                    ; #72562: <==negation-removal== 11942 (pos)
                    (not (not_at_c_p0011))))

    (:action move_c_p6_p012
        :precondition (and (checked_p012)
                           (succ_p6_p012)
                           (at_c_p6)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012))
        :effect (and
                    ; #39495: <==commonly_known== 39294 (neg)
                    (not_at_c_p6)

                    ; #53676: origin
                    (at_c_p012)

                    ; #39294: origin
                    (not (at_c_p6))

                    ; #76287: <==negation-removal== 53676 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p6_p1
        :precondition (and (checked_p1)
                           (at_c_p6)
                           (succ_p6_p1)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #39495: <==commonly_known== 39294 (neg)
                    (not_at_c_p6)

                    ; #52794: origin
                    (at_c_p1)

                    ; #39294: origin
                    (not (at_c_p6))

                    ; #63868: <==negation-removal== 52794 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p6_p10
        :precondition (and (succ_p6_p10)
                           (at_c_p6)
                           (Bc_not_blocked_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #36374: origin
                    (at_c_p10)

                    ; #39495: <==commonly_known== 39294 (neg)
                    (not_at_c_p6)

                    ; #14652: <==negation-removal== 36374 (pos)
                    (not (not_at_c_p10))

                    ; #39294: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p2
        :precondition (and (Bc_not_blocked_p2)
                           (at_c_p6)
                           (checked_p2)
                           (Pc_not_blocked_p2)
                           (succ_p6_p2))
        :effect (and
                    ; #39495: <==commonly_known== 39294 (neg)
                    (not_at_c_p6)

                    ; #77264: origin
                    (at_c_p2)

                    ; #39294: origin
                    (not (at_c_p6))

                    ; #46515: <==negation-removal== 77264 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p6_p3
        :precondition (and (Pc_not_blocked_p3)
                           (at_c_p6)
                           (succ_p6_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #31647: origin
                    (at_c_p3)

                    ; #39495: <==commonly_known== 39294 (neg)
                    (not_at_c_p6)

                    ; #39294: origin
                    (not (at_c_p6))

                    ; #85804: <==negation-removal== 31647 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p6_p4
        :precondition (and (Pc_not_blocked_p4)
                           (at_c_p6)
                           (Bc_not_blocked_p4)
                           (succ_p6_p4)
                           (checked_p4))
        :effect (and
                    ; #39495: <==commonly_known== 39294 (neg)
                    (not_at_c_p6)

                    ; #49458: origin
                    (at_c_p4)

                    ; #39294: origin
                    (not (at_c_p6))

                    ; #50761: <==negation-removal== 49458 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p6_p5
        :precondition (and (succ_p6_p5)
                           (at_c_p6)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #39495: <==commonly_known== 39294 (neg)
                    (not_at_c_p6)

                    ; #71773: origin
                    (at_c_p5)

                    ; #39294: origin
                    (not (at_c_p6))

                    ; #42386: <==negation-removal== 71773 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p6_p6
        :precondition (and (checked_p6)
                           (Bc_not_blocked_p6)
                           (at_c_p6)
                           (Pc_not_blocked_p6)
                           (succ_p6_p6))
        :effect (and
                    ; #39294: origin
                    (at_c_p6)

                    ; #39495: <==commonly_known== 39294 (neg)
                    (not_at_c_p6)

                    ; #39294: origin
                    (not (at_c_p6))

                    ; #39495: <==negation-removal== 39294 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p6_p7
        :precondition (and (succ_p6_p7)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (at_c_p6)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #39495: <==commonly_known== 39294 (neg)
                    (not_at_c_p6)

                    ; #62048: origin
                    (at_c_p7)

                    ; #39294: origin
                    (not (at_c_p6))

                    ; #57846: <==negation-removal== 62048 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p6_p8
        :precondition (and (Pc_not_blocked_p8)
                           (at_c_p6)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (succ_p6_p8))
        :effect (and
                    ; #39495: <==commonly_known== 39294 (neg)
                    (not_at_c_p6)

                    ; #78620: origin
                    (at_c_p8)

                    ; #38337: <==negation-removal== 78620 (pos)
                    (not (not_at_c_p8))

                    ; #39294: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p9
        :precondition (and (Bc_not_blocked_p9)
                           (succ_p6_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p6)
                           (checked_p9))
        :effect (and
                    ; #39495: <==commonly_known== 39294 (neg)
                    (not_at_c_p6)

                    ; #55000: origin
                    (at_c_p9)

                    ; #33357: <==negation-removal== 55000 (pos)
                    (not (not_at_c_p9))

                    ; #39294: origin
                    (not (at_c_p6))))

    (:action move_c_p7_p0011
        :precondition (and (at_c_p7)
                           (Bc_not_blocked_p0011)
                           (checked_p0011)
                           (succ_p7_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #11942: origin
                    (at_c_p0011)

                    ; #57846: <==commonly_known== 62048 (neg)
                    (not_at_c_p7)

                    ; #62048: origin
                    (not (at_c_p7))

                    ; #72562: <==negation-removal== 11942 (pos)
                    (not (not_at_c_p0011))))

    (:action move_c_p7_p012
        :precondition (and (at_c_p7)
                           (Bc_not_blocked_p012)
                           (checked_p012)
                           (succ_p7_p012)
                           (Pc_not_blocked_p012))
        :effect (and
                    ; #53676: origin
                    (at_c_p012)

                    ; #57846: <==commonly_known== 62048 (neg)
                    (not_at_c_p7)

                    ; #62048: origin
                    (not (at_c_p7))

                    ; #76287: <==negation-removal== 53676 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p7_p1
        :precondition (and (at_c_p7)
                           (checked_p1)
                           (succ_p7_p1)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #52794: origin
                    (at_c_p1)

                    ; #57846: <==commonly_known== 62048 (neg)
                    (not_at_c_p7)

                    ; #62048: origin
                    (not (at_c_p7))

                    ; #63868: <==negation-removal== 52794 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p7_p10
        :precondition (and (at_c_p7)
                           (succ_p7_p10)
                           (Bc_not_blocked_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #36374: origin
                    (at_c_p10)

                    ; #57846: <==commonly_known== 62048 (neg)
                    (not_at_c_p7)

                    ; #14652: <==negation-removal== 36374 (pos)
                    (not (not_at_c_p10))

                    ; #62048: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p2
        :precondition (and (at_c_p7)
                           (Bc_not_blocked_p2)
                           (succ_p7_p2)
                           (checked_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #57846: <==commonly_known== 62048 (neg)
                    (not_at_c_p7)

                    ; #77264: origin
                    (at_c_p2)

                    ; #46515: <==negation-removal== 77264 (pos)
                    (not (not_at_c_p2))

                    ; #62048: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p3
        :precondition (and (at_c_p7)
                           (Pc_not_blocked_p3)
                           (succ_p7_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #31647: origin
                    (at_c_p3)

                    ; #57846: <==commonly_known== 62048 (neg)
                    (not_at_c_p7)

                    ; #62048: origin
                    (not (at_c_p7))

                    ; #85804: <==negation-removal== 31647 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p7_p4
        :precondition (and (at_c_p7)
                           (Pc_not_blocked_p4)
                           (Bc_not_blocked_p4)
                           (succ_p7_p4)
                           (checked_p4))
        :effect (and
                    ; #49458: origin
                    (at_c_p4)

                    ; #57846: <==commonly_known== 62048 (neg)
                    (not_at_c_p7)

                    ; #50761: <==negation-removal== 49458 (pos)
                    (not (not_at_c_p4))

                    ; #62048: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p5
        :precondition (and (at_c_p7)
                           (succ_p7_p5)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #57846: <==commonly_known== 62048 (neg)
                    (not_at_c_p7)

                    ; #71773: origin
                    (at_c_p5)

                    ; #42386: <==negation-removal== 71773 (pos)
                    (not (not_at_c_p5))

                    ; #62048: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p6
        :precondition (and (at_c_p7)
                           (checked_p6)
                           (Bc_not_blocked_p6)
                           (succ_p7_p6)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #39294: origin
                    (at_c_p6)

                    ; #57846: <==commonly_known== 62048 (neg)
                    (not_at_c_p7)

                    ; #39495: <==negation-removal== 39294 (pos)
                    (not (not_at_c_p6))

                    ; #62048: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p7
        :precondition (and (at_c_p7)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (succ_p7_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #57846: <==commonly_known== 62048 (neg)
                    (not_at_c_p7)

                    ; #62048: origin
                    (at_c_p7)

                    ; #57846: <==negation-removal== 62048 (pos)
                    (not (not_at_c_p7))

                    ; #62048: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p8
        :precondition (and (at_c_p7)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (succ_p7_p8))
        :effect (and
                    ; #57846: <==commonly_known== 62048 (neg)
                    (not_at_c_p7)

                    ; #78620: origin
                    (at_c_p8)

                    ; #38337: <==negation-removal== 78620 (pos)
                    (not (not_at_c_p8))

                    ; #62048: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p9
        :precondition (and (at_c_p7)
                           (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (succ_p7_p9)
                           (checked_p9))
        :effect (and
                    ; #55000: origin
                    (at_c_p9)

                    ; #57846: <==commonly_known== 62048 (neg)
                    (not_at_c_p7)

                    ; #33357: <==negation-removal== 55000 (pos)
                    (not (not_at_c_p9))

                    ; #62048: origin
                    (not (at_c_p7))))

    (:action move_c_p8_p0011
        :precondition (and (at_c_p8)
                           (Bc_not_blocked_p0011)
                           (succ_p8_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011))
        :effect (and
                    ; #11942: origin
                    (at_c_p0011)

                    ; #38337: <==commonly_known== 78620 (neg)
                    (not_at_c_p8)

                    ; #72562: <==negation-removal== 11942 (pos)
                    (not (not_at_c_p0011))

                    ; #78620: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p012
        :precondition (and (checked_p012)
                           (at_c_p8)
                           (Bc_not_blocked_p012)
                           (succ_p8_p012)
                           (Pc_not_blocked_p012))
        :effect (and
                    ; #38337: <==commonly_known== 78620 (neg)
                    (not_at_c_p8)

                    ; #53676: origin
                    (at_c_p012)

                    ; #76287: <==negation-removal== 53676 (pos)
                    (not (not_at_c_p012))

                    ; #78620: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p1
        :precondition (and (succ_p8_p1)
                           (checked_p1)
                           (at_c_p8)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #38337: <==commonly_known== 78620 (neg)
                    (not_at_c_p8)

                    ; #52794: origin
                    (at_c_p1)

                    ; #63868: <==negation-removal== 52794 (pos)
                    (not (not_at_c_p1))

                    ; #78620: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p10
        :precondition (and (at_c_p8)
                           (Bc_not_blocked_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (succ_p8_p10))
        :effect (and
                    ; #36374: origin
                    (at_c_p10)

                    ; #38337: <==commonly_known== 78620 (neg)
                    (not_at_c_p8)

                    ; #14652: <==negation-removal== 36374 (pos)
                    (not (not_at_c_p10))

                    ; #78620: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p2
        :precondition (and (succ_p8_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p8)
                           (checked_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #38337: <==commonly_known== 78620 (neg)
                    (not_at_c_p8)

                    ; #77264: origin
                    (at_c_p2)

                    ; #46515: <==negation-removal== 77264 (pos)
                    (not (not_at_c_p2))

                    ; #78620: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p3
        :precondition (and (succ_p8_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p8)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #31647: origin
                    (at_c_p3)

                    ; #38337: <==commonly_known== 78620 (neg)
                    (not_at_c_p8)

                    ; #78620: origin
                    (not (at_c_p8))

                    ; #85804: <==negation-removal== 31647 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p8_p4
        :precondition (and (Pc_not_blocked_p4)
                           (at_c_p8)
                           (Bc_not_blocked_p4)
                           (succ_p8_p4)
                           (checked_p4))
        :effect (and
                    ; #38337: <==commonly_known== 78620 (neg)
                    (not_at_c_p8)

                    ; #49458: origin
                    (at_c_p4)

                    ; #50761: <==negation-removal== 49458 (pos)
                    (not (not_at_c_p4))

                    ; #78620: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p5
        :precondition (and (at_c_p8)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5)
                           (succ_p8_p5))
        :effect (and
                    ; #38337: <==commonly_known== 78620 (neg)
                    (not_at_c_p8)

                    ; #71773: origin
                    (at_c_p5)

                    ; #42386: <==negation-removal== 71773 (pos)
                    (not (not_at_c_p5))

                    ; #78620: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p6
        :precondition (and (checked_p6)
                           (Bc_not_blocked_p6)
                           (succ_p8_p6)
                           (at_c_p8)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #38337: <==commonly_known== 78620 (neg)
                    (not_at_c_p8)

                    ; #39294: origin
                    (at_c_p6)

                    ; #39495: <==negation-removal== 39294 (pos)
                    (not (not_at_c_p6))

                    ; #78620: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p7
        :precondition (and (Pc_not_blocked_p7)
                           (succ_p8_p7)
                           (at_c_p8)
                           (checked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #38337: <==commonly_known== 78620 (neg)
                    (not_at_c_p8)

                    ; #62048: origin
                    (at_c_p7)

                    ; #57846: <==negation-removal== 62048 (pos)
                    (not (not_at_c_p7))

                    ; #78620: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p8
        :precondition (and (succ_p8_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #38337: <==commonly_known== 78620 (neg)
                    (not_at_c_p8)

                    ; #78620: origin
                    (at_c_p8)

                    ; #38337: <==negation-removal== 78620 (pos)
                    (not (not_at_c_p8))

                    ; #78620: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p9
        :precondition (and (succ_p8_p9)
                           (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p8)
                           (checked_p9))
        :effect (and
                    ; #38337: <==commonly_known== 78620 (neg)
                    (not_at_c_p8)

                    ; #55000: origin
                    (at_c_p9)

                    ; #33357: <==negation-removal== 55000 (pos)
                    (not (not_at_c_p9))

                    ; #78620: origin
                    (not (at_c_p8))))

    (:action move_c_p9_p0011
        :precondition (and (succ_p9_p0011)
                           (Bc_not_blocked_p0011)
                           (checked_p0011)
                           (Pc_not_blocked_p0011)
                           (at_c_p9))
        :effect (and
                    ; #11942: origin
                    (at_c_p0011)

                    ; #33357: <==commonly_known== 55000 (neg)
                    (not_at_c_p9)

                    ; #55000: origin
                    (not (at_c_p9))

                    ; #72562: <==negation-removal== 11942 (pos)
                    (not (not_at_c_p0011))))

    (:action move_c_p9_p012
        :precondition (and (checked_p012)
                           (Pc_not_blocked_p012)
                           (succ_p9_p012)
                           (Bc_not_blocked_p012)
                           (at_c_p9))
        :effect (and
                    ; #33357: <==commonly_known== 55000 (neg)
                    (not_at_c_p9)

                    ; #53676: origin
                    (at_c_p012)

                    ; #55000: origin
                    (not (at_c_p9))

                    ; #76287: <==negation-removal== 53676 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p9_p1
        :precondition (and (succ_p9_p1)
                           (checked_p1)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (at_c_p9))
        :effect (and
                    ; #33357: <==commonly_known== 55000 (neg)
                    (not_at_c_p9)

                    ; #52794: origin
                    (at_c_p1)

                    ; #55000: origin
                    (not (at_c_p9))

                    ; #63868: <==negation-removal== 52794 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p9_p10
        :precondition (and (succ_p9_p10)
                           (Bc_not_blocked_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (at_c_p9))
        :effect (and
                    ; #33357: <==commonly_known== 55000 (neg)
                    (not_at_c_p9)

                    ; #36374: origin
                    (at_c_p10)

                    ; #14652: <==negation-removal== 36374 (pos)
                    (not (not_at_c_p10))

                    ; #55000: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p2
        :precondition (and (checked_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p9)
                           (succ_p9_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #33357: <==commonly_known== 55000 (neg)
                    (not_at_c_p9)

                    ; #77264: origin
                    (at_c_p2)

                    ; #46515: <==negation-removal== 77264 (pos)
                    (not (not_at_c_p2))

                    ; #55000: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p3
        :precondition (and (Pc_not_blocked_p3)
                           (succ_p9_p3)
                           (checked_p3)
                           (at_c_p9)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #31647: origin
                    (at_c_p3)

                    ; #33357: <==commonly_known== 55000 (neg)
                    (not_at_c_p9)

                    ; #55000: origin
                    (not (at_c_p9))

                    ; #85804: <==negation-removal== 31647 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p9_p4
        :precondition (and (Pc_not_blocked_p4)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (succ_p9_p4)
                           (at_c_p9))
        :effect (and
                    ; #33357: <==commonly_known== 55000 (neg)
                    (not_at_c_p9)

                    ; #49458: origin
                    (at_c_p4)

                    ; #50761: <==negation-removal== 49458 (pos)
                    (not (not_at_c_p4))

                    ; #55000: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p5
        :precondition (and (checked_p5)
                           (succ_p9_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p9))
        :effect (and
                    ; #33357: <==commonly_known== 55000 (neg)
                    (not_at_c_p9)

                    ; #71773: origin
                    (at_c_p5)

                    ; #42386: <==negation-removal== 71773 (pos)
                    (not (not_at_c_p5))

                    ; #55000: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p6
        :precondition (and (checked_p6)
                           (Bc_not_blocked_p6)
                           (succ_p9_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p9))
        :effect (and
                    ; #33357: <==commonly_known== 55000 (neg)
                    (not_at_c_p9)

                    ; #39294: origin
                    (at_c_p6)

                    ; #39495: <==negation-removal== 39294 (pos)
                    (not (not_at_c_p6))

                    ; #55000: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p7
        :precondition (and (Pc_not_blocked_p7)
                           (checked_p7)
                           (succ_p9_p7)
                           (at_c_p9)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #33357: <==commonly_known== 55000 (neg)
                    (not_at_c_p9)

                    ; #62048: origin
                    (at_c_p7)

                    ; #55000: origin
                    (not (at_c_p9))

                    ; #57846: <==negation-removal== 62048 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p9_p8
        :precondition (and (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (at_c_p9)
                           (checked_p8)
                           (succ_p9_p8))
        :effect (and
                    ; #33357: <==commonly_known== 55000 (neg)
                    (not_at_c_p9)

                    ; #78620: origin
                    (at_c_p8)

                    ; #38337: <==negation-removal== 78620 (pos)
                    (not (not_at_c_p8))

                    ; #55000: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p9
        :precondition (and (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (checked_p9)
                           (succ_p9_p9)
                           (at_c_p9))
        :effect (and
                    ; #33357: <==commonly_known== 55000 (neg)
                    (not_at_c_p9)

                    ; #55000: origin
                    (at_c_p9)

                    ; #33357: <==negation-removal== 55000 (pos)
                    (not (not_at_c_p9))

                    ; #55000: origin
                    (not (at_c_p9))))

    (:action sensecells_a_p0011_p0011
        :precondition (and (succ_p0011_p0011)
                           (at_a_p0011))
        :effect (and
                    ; #16063: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #16432: <==closure== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #69035: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #84657: <==closure== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #11965: <==negation-removal== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #12070: <==uncertain_firing== 69035 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #25073: <==negation-removal== 84657 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #36474: <==negation-removal== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #44520: <==unclosure== 12070 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #57978: <==negation-removal== 16432 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p0011_p012
        :precondition (and (at_a_p0011)
                           (succ_p0011_p012))
        :effect (and
                    ; #26213: origin
                    (checked_p012)

                    ; #40792: <==closure== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #44107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #46900: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #78183: <==closure== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #11276: <==unclosure== 24246 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #24246: <==uncertain_firing== 46900 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #28499: <==negation-removal== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41912: <==negation-removal== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #72364: <==negation-removal== 78183 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #79774: <==negation-removal== 40792 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))))

    (:action sensecells_a_p0011_p1
        :precondition (and (succ_p0011_p1)
                           (at_a_p0011))
        :effect (and
                    ; #34895: <==closure== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #62718: <==closure== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #69301: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #91965: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #32439: <==negation-removal== 62718 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49619: <==uncertain_firing== 91965 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #52646: <==unclosure== 49619 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #54338: <==negation-removal== 34895 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #60374: <==negation-removal== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #85909: <==negation-removal== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p0011_p10
        :precondition (and (succ_p0011_p10)
                           (at_a_p0011))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #18251: <==closure== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #31622: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #37654: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #47107: <==closure== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #12809: <==unclosure== 21386 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #21386: <==uncertain_firing== 31622 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #54794: <==negation-removal== 18251 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #56661: <==negation-removal== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #76688: <==negation-removal== 47107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #80084: <==negation-removal== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))))

    (:action sensecells_a_p0011_p2
        :precondition (and (succ_p0011_p2)
                           (at_a_p0011))
        :effect (and
                    ; #46301: origin
                    (checked_p2)

                    ; #50395: <==closure== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #61233: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #81137: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #81421: <==closure== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #22095: <==negation-removal== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #38751: <==uncertain_firing== 61233 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #46783: <==negation-removal== 81421 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #51361: <==negation-removal== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #79110: <==unclosure== 38751 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #90873: <==negation-removal== 50395 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))))

    (:action sensecells_a_p0011_p3
        :precondition (and (succ_p0011_p3)
                           (at_a_p0011))
        :effect (and
                    ; #46161: origin
                    (checked_p3)

                    ; #62668: <==closure== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #66259: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #68031: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #95916: <==closure== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #10524: <==negation-removal== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #46730: <==unclosure== 47390 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #47390: <==uncertain_firing== 68031 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #54557: <==negation-removal== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #82914: <==negation-removal== 95916 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #85865: <==negation-removal== 62668 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p0011_p4
        :precondition (and (at_a_p0011)
                           (succ_p0011_p4))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36710: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #52742: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #73081: <==closure== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #88339: <==closure== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #18496: <==negation-removal== 73081 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #27932: <==negation-removal== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #30796: <==negation-removal== 88339 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57073: <==negation-removal== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #59373: <==uncertain_firing== 36710 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #63223: <==unclosure== 59373 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p0011_p5
        :precondition (and (succ_p0011_p5)
                           (at_a_p0011))
        :effect (and
                    ; #23276: <==closure== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #55505: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #79689: <==closure== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #87754: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #22280: <==unclosure== 39564 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #24336: <==negation-removal== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #39564: <==uncertain_firing== 55505 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #61851: <==negation-removal== 23276 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #71940: <==negation-removal== 79689 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #73316: <==negation-removal== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))))

    (:action sensecells_a_p0011_p6
        :precondition (and (succ_p0011_p6)
                           (at_a_p0011))
        :effect (and
                    ; #10670: <==closure== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #26395: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #40448: <==closure== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #90072: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #42220: <==unclosure== 85747 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #52890: <==negation-removal== 10670 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #62070: <==negation-removal== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #66958: <==negation-removal== 40448 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #85747: <==uncertain_firing== 90072 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #94339: <==negation-removal== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p0011_p7
        :precondition (and (succ_p0011_p7)
                           (at_a_p0011))
        :effect (and
                    ; #20502: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #27470: <==closure== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #71823: <==closure== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #85979: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #20542: <==negation-removal== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #34433: <==uncertain_firing== 20502 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #43048: <==negation-removal== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #52701: <==unclosure== 34433 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))

                    ; #90591: <==negation-removal== 71823 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #92286: <==negation-removal== 27470 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))))

    (:action sensecells_a_p0011_p8
        :precondition (and (at_a_p0011)
                           (succ_p0011_p8))
        :effect (and
                    ; #26888: <==closure== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #50837: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #68697: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #89387: <==closure== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #15307: <==negation-removal== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #43700: <==negation-removal== 26888 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #46814: <==negation-removal== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #51706: <==unclosure== 74001 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74001: <==uncertain_firing== 50837 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #90161: <==negation-removal== 89387 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p0011_p9
        :precondition (and (succ_p0011_p9)
                           (at_a_p0011))
        :effect (and
                    ; #26492: <==closure== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #62323: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #85482: <==closure== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #86353: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20643: <==negation-removal== 85482 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #22985: <==unclosure== 75835 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #45339: <==negation-removal== 26492 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #55627: <==negation-removal== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))

                    ; #75835: <==uncertain_firing== 62323 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #89199: <==negation-removal== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p012_p0011
        :precondition (and (at_a_p012)
                           (succ_p012_p0011))
        :effect (and
                    ; #16063: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #16432: <==closure== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #69035: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #84657: <==closure== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #11965: <==negation-removal== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #12070: <==uncertain_firing== 69035 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #25073: <==negation-removal== 84657 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #36474: <==negation-removal== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #44520: <==unclosure== 12070 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #57978: <==negation-removal== 16432 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p012_p012
        :precondition (and (at_a_p012)
                           (succ_p012_p012))
        :effect (and
                    ; #26213: origin
                    (checked_p012)

                    ; #40792: <==closure== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #44107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #46900: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #78183: <==closure== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #11276: <==unclosure== 24246 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #24246: <==uncertain_firing== 46900 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #28499: <==negation-removal== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41912: <==negation-removal== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #72364: <==negation-removal== 78183 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #79774: <==negation-removal== 40792 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))))

    (:action sensecells_a_p012_p1
        :precondition (and (at_a_p012)
                           (succ_p012_p1))
        :effect (and
                    ; #34895: <==closure== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #62718: <==closure== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #69301: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #91965: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #32439: <==negation-removal== 62718 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49619: <==uncertain_firing== 91965 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #52646: <==unclosure== 49619 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #54338: <==negation-removal== 34895 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #60374: <==negation-removal== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #85909: <==negation-removal== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p012_p10
        :precondition (and (at_a_p012)
                           (succ_p012_p10))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #18251: <==closure== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #31622: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #37654: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #47107: <==closure== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #12809: <==unclosure== 21386 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #21386: <==uncertain_firing== 31622 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #54794: <==negation-removal== 18251 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #56661: <==negation-removal== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #76688: <==negation-removal== 47107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #80084: <==negation-removal== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))))

    (:action sensecells_a_p012_p2
        :precondition (and (at_a_p012)
                           (succ_p012_p2))
        :effect (and
                    ; #46301: origin
                    (checked_p2)

                    ; #50395: <==closure== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #61233: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #81137: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #81421: <==closure== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #22095: <==negation-removal== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #38751: <==uncertain_firing== 61233 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #46783: <==negation-removal== 81421 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #51361: <==negation-removal== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #79110: <==unclosure== 38751 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #90873: <==negation-removal== 50395 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))))

    (:action sensecells_a_p012_p3
        :precondition (and (at_a_p012)
                           (succ_p012_p3))
        :effect (and
                    ; #46161: origin
                    (checked_p3)

                    ; #62668: <==closure== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #66259: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #68031: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #95916: <==closure== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #10524: <==negation-removal== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #46730: <==unclosure== 47390 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #47390: <==uncertain_firing== 68031 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #54557: <==negation-removal== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #82914: <==negation-removal== 95916 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #85865: <==negation-removal== 62668 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p012_p4
        :precondition (and (at_a_p012)
                           (succ_p012_p4))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36710: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #52742: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #73081: <==closure== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #88339: <==closure== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #18496: <==negation-removal== 73081 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #27932: <==negation-removal== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #30796: <==negation-removal== 88339 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57073: <==negation-removal== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #59373: <==uncertain_firing== 36710 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #63223: <==unclosure== 59373 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p012_p5
        :precondition (and (at_a_p012)
                           (succ_p012_p5))
        :effect (and
                    ; #23276: <==closure== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #55505: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #79689: <==closure== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #87754: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #22280: <==unclosure== 39564 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #24336: <==negation-removal== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #39564: <==uncertain_firing== 55505 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #61851: <==negation-removal== 23276 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #71940: <==negation-removal== 79689 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #73316: <==negation-removal== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))))

    (:action sensecells_a_p012_p6
        :precondition (and (at_a_p012)
                           (succ_p012_p6))
        :effect (and
                    ; #10670: <==closure== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #26395: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #40448: <==closure== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #90072: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #42220: <==unclosure== 85747 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #52890: <==negation-removal== 10670 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #62070: <==negation-removal== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #66958: <==negation-removal== 40448 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #85747: <==uncertain_firing== 90072 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #94339: <==negation-removal== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p012_p7
        :precondition (and (at_a_p012)
                           (succ_p012_p7))
        :effect (and
                    ; #20502: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #27470: <==closure== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #71823: <==closure== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #85979: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #20542: <==negation-removal== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #34433: <==uncertain_firing== 20502 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #43048: <==negation-removal== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #52701: <==unclosure== 34433 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))

                    ; #90591: <==negation-removal== 71823 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #92286: <==negation-removal== 27470 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))))

    (:action sensecells_a_p012_p8
        :precondition (and (at_a_p012)
                           (succ_p012_p8))
        :effect (and
                    ; #26888: <==closure== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #50837: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #68697: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #89387: <==closure== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #15307: <==negation-removal== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #43700: <==negation-removal== 26888 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #46814: <==negation-removal== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #51706: <==unclosure== 74001 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74001: <==uncertain_firing== 50837 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #90161: <==negation-removal== 89387 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p012_p9
        :precondition (and (at_a_p012)
                           (succ_p012_p9))
        :effect (and
                    ; #26492: <==closure== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #62323: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #85482: <==closure== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #86353: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20643: <==negation-removal== 85482 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #22985: <==unclosure== 75835 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #45339: <==negation-removal== 26492 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #55627: <==negation-removal== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))

                    ; #75835: <==uncertain_firing== 62323 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #89199: <==negation-removal== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p10_p0011
        :precondition (and (succ_p10_p0011)
                           (at_a_p10))
        :effect (and
                    ; #16063: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #16432: <==closure== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #69035: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #84657: <==closure== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #11965: <==negation-removal== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #12070: <==uncertain_firing== 69035 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #25073: <==negation-removal== 84657 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #36474: <==negation-removal== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #44520: <==unclosure== 12070 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #57978: <==negation-removal== 16432 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p10_p012
        :precondition (and (succ_p10_p012)
                           (at_a_p10))
        :effect (and
                    ; #26213: origin
                    (checked_p012)

                    ; #40792: <==closure== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #44107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #46900: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #78183: <==closure== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #11276: <==unclosure== 24246 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #24246: <==uncertain_firing== 46900 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #28499: <==negation-removal== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41912: <==negation-removal== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #72364: <==negation-removal== 78183 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #79774: <==negation-removal== 40792 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))))

    (:action sensecells_a_p10_p1
        :precondition (and (at_a_p10)
                           (succ_p10_p1))
        :effect (and
                    ; #34895: <==closure== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #62718: <==closure== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #69301: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #91965: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #32439: <==negation-removal== 62718 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49619: <==uncertain_firing== 91965 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #52646: <==unclosure== 49619 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #54338: <==negation-removal== 34895 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #60374: <==negation-removal== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #85909: <==negation-removal== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p10_p10
        :precondition (and (succ_p10_p10)
                           (at_a_p10))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #18251: <==closure== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #31622: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #37654: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #47107: <==closure== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #12809: <==unclosure== 21386 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #21386: <==uncertain_firing== 31622 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #54794: <==negation-removal== 18251 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #56661: <==negation-removal== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #76688: <==negation-removal== 47107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #80084: <==negation-removal== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))))

    (:action sensecells_a_p10_p2
        :precondition (and (succ_p10_p2)
                           (at_a_p10))
        :effect (and
                    ; #46301: origin
                    (checked_p2)

                    ; #50395: <==closure== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #61233: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #81137: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #81421: <==closure== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #22095: <==negation-removal== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #38751: <==uncertain_firing== 61233 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #46783: <==negation-removal== 81421 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #51361: <==negation-removal== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #79110: <==unclosure== 38751 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #90873: <==negation-removal== 50395 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))))

    (:action sensecells_a_p10_p3
        :precondition (and (succ_p10_p3)
                           (at_a_p10))
        :effect (and
                    ; #46161: origin
                    (checked_p3)

                    ; #62668: <==closure== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #66259: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #68031: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #95916: <==closure== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #10524: <==negation-removal== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #46730: <==unclosure== 47390 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #47390: <==uncertain_firing== 68031 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #54557: <==negation-removal== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #82914: <==negation-removal== 95916 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #85865: <==negation-removal== 62668 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p10_p4
        :precondition (and (succ_p10_p4)
                           (at_a_p10))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36710: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #52742: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #73081: <==closure== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #88339: <==closure== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #18496: <==negation-removal== 73081 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #27932: <==negation-removal== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #30796: <==negation-removal== 88339 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57073: <==negation-removal== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #59373: <==uncertain_firing== 36710 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #63223: <==unclosure== 59373 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p10_p5
        :precondition (and (succ_p10_p5)
                           (at_a_p10))
        :effect (and
                    ; #23276: <==closure== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #55505: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #79689: <==closure== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #87754: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #22280: <==unclosure== 39564 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #24336: <==negation-removal== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #39564: <==uncertain_firing== 55505 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #61851: <==negation-removal== 23276 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #71940: <==negation-removal== 79689 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #73316: <==negation-removal== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))))

    (:action sensecells_a_p10_p6
        :precondition (and (at_a_p10)
                           (succ_p10_p6))
        :effect (and
                    ; #10670: <==closure== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #26395: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #40448: <==closure== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #90072: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #42220: <==unclosure== 85747 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #52890: <==negation-removal== 10670 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #62070: <==negation-removal== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #66958: <==negation-removal== 40448 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #85747: <==uncertain_firing== 90072 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #94339: <==negation-removal== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p10_p7
        :precondition (and (at_a_p10)
                           (succ_p10_p7))
        :effect (and
                    ; #20502: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #27470: <==closure== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #71823: <==closure== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #85979: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #20542: <==negation-removal== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #34433: <==uncertain_firing== 20502 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #43048: <==negation-removal== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #52701: <==unclosure== 34433 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))

                    ; #90591: <==negation-removal== 71823 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #92286: <==negation-removal== 27470 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))))

    (:action sensecells_a_p10_p8
        :precondition (and (succ_p10_p8)
                           (at_a_p10))
        :effect (and
                    ; #26888: <==closure== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #50837: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #68697: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #89387: <==closure== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #15307: <==negation-removal== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #43700: <==negation-removal== 26888 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #46814: <==negation-removal== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #51706: <==unclosure== 74001 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74001: <==uncertain_firing== 50837 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #90161: <==negation-removal== 89387 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p10_p9
        :precondition (and (at_a_p10)
                           (succ_p10_p9))
        :effect (and
                    ; #26492: <==closure== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #62323: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #85482: <==closure== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #86353: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20643: <==negation-removal== 85482 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #22985: <==unclosure== 75835 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #45339: <==negation-removal== 26492 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #55627: <==negation-removal== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))

                    ; #75835: <==uncertain_firing== 62323 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #89199: <==negation-removal== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p1_p0011
        :precondition (and (at_a_p1)
                           (succ_p1_p0011))
        :effect (and
                    ; #16063: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #16432: <==closure== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #69035: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #84657: <==closure== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #11965: <==negation-removal== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #12070: <==uncertain_firing== 69035 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #25073: <==negation-removal== 84657 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #36474: <==negation-removal== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #44520: <==unclosure== 12070 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #57978: <==negation-removal== 16432 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p1_p012
        :precondition (and (at_a_p1)
                           (succ_p1_p012))
        :effect (and
                    ; #26213: origin
                    (checked_p012)

                    ; #40792: <==closure== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #44107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #46900: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #78183: <==closure== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #11276: <==unclosure== 24246 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #24246: <==uncertain_firing== 46900 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #28499: <==negation-removal== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41912: <==negation-removal== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #72364: <==negation-removal== 78183 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #79774: <==negation-removal== 40792 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))))

    (:action sensecells_a_p1_p1
        :precondition (and (at_a_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #34895: <==closure== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #62718: <==closure== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #69301: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #91965: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #32439: <==negation-removal== 62718 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49619: <==uncertain_firing== 91965 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #52646: <==unclosure== 49619 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #54338: <==negation-removal== 34895 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #60374: <==negation-removal== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #85909: <==negation-removal== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p1_p10
        :precondition (and (at_a_p1)
                           (succ_p1_p10))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #18251: <==closure== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #31622: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #37654: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #47107: <==closure== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #12809: <==unclosure== 21386 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #21386: <==uncertain_firing== 31622 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #54794: <==negation-removal== 18251 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #56661: <==negation-removal== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #76688: <==negation-removal== 47107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #80084: <==negation-removal== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))))

    (:action sensecells_a_p1_p2
        :precondition (and (succ_p1_p2)
                           (at_a_p1))
        :effect (and
                    ; #46301: origin
                    (checked_p2)

                    ; #50395: <==closure== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #61233: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #81137: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #81421: <==closure== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #22095: <==negation-removal== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #38751: <==uncertain_firing== 61233 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #46783: <==negation-removal== 81421 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #51361: <==negation-removal== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #79110: <==unclosure== 38751 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #90873: <==negation-removal== 50395 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))))

    (:action sensecells_a_p1_p3
        :precondition (and (at_a_p1)
                           (succ_p1_p3))
        :effect (and
                    ; #46161: origin
                    (checked_p3)

                    ; #62668: <==closure== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #66259: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #68031: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #95916: <==closure== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #10524: <==negation-removal== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #46730: <==unclosure== 47390 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #47390: <==uncertain_firing== 68031 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #54557: <==negation-removal== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #82914: <==negation-removal== 95916 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #85865: <==negation-removal== 62668 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p1_p4
        :precondition (and (at_a_p1)
                           (succ_p1_p4))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36710: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #52742: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #73081: <==closure== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #88339: <==closure== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #18496: <==negation-removal== 73081 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #27932: <==negation-removal== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #30796: <==negation-removal== 88339 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57073: <==negation-removal== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #59373: <==uncertain_firing== 36710 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #63223: <==unclosure== 59373 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p1_p5
        :precondition (and (succ_p1_p5)
                           (at_a_p1))
        :effect (and
                    ; #23276: <==closure== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #55505: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #79689: <==closure== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #87754: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #22280: <==unclosure== 39564 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #24336: <==negation-removal== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #39564: <==uncertain_firing== 55505 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #61851: <==negation-removal== 23276 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #71940: <==negation-removal== 79689 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #73316: <==negation-removal== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))))

    (:action sensecells_a_p1_p6
        :precondition (and (at_a_p1)
                           (succ_p1_p6))
        :effect (and
                    ; #10670: <==closure== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #26395: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #40448: <==closure== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #90072: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #42220: <==unclosure== 85747 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #52890: <==negation-removal== 10670 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #62070: <==negation-removal== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #66958: <==negation-removal== 40448 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #85747: <==uncertain_firing== 90072 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #94339: <==negation-removal== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p1_p7
        :precondition (and (at_a_p1)
                           (succ_p1_p7))
        :effect (and
                    ; #20502: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #27470: <==closure== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #71823: <==closure== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #85979: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #20542: <==negation-removal== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #34433: <==uncertain_firing== 20502 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #43048: <==negation-removal== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #52701: <==unclosure== 34433 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))

                    ; #90591: <==negation-removal== 71823 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #92286: <==negation-removal== 27470 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))))

    (:action sensecells_a_p1_p8
        :precondition (and (at_a_p1)
                           (succ_p1_p8))
        :effect (and
                    ; #26888: <==closure== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #50837: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #68697: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #89387: <==closure== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #15307: <==negation-removal== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #43700: <==negation-removal== 26888 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #46814: <==negation-removal== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #51706: <==unclosure== 74001 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74001: <==uncertain_firing== 50837 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #90161: <==negation-removal== 89387 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p1_p9
        :precondition (and (succ_p1_p9)
                           (at_a_p1))
        :effect (and
                    ; #26492: <==closure== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #62323: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #85482: <==closure== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #86353: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20643: <==negation-removal== 85482 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #22985: <==unclosure== 75835 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #45339: <==negation-removal== 26492 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #55627: <==negation-removal== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))

                    ; #75835: <==uncertain_firing== 62323 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #89199: <==negation-removal== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p2_p0011
        :precondition (and (at_a_p2)
                           (succ_p2_p0011))
        :effect (and
                    ; #16063: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #16432: <==closure== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #69035: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #84657: <==closure== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #11965: <==negation-removal== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #12070: <==uncertain_firing== 69035 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #25073: <==negation-removal== 84657 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #36474: <==negation-removal== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #44520: <==unclosure== 12070 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #57978: <==negation-removal== 16432 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p2_p012
        :precondition (and (at_a_p2)
                           (succ_p2_p012))
        :effect (and
                    ; #26213: origin
                    (checked_p012)

                    ; #40792: <==closure== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #44107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #46900: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #78183: <==closure== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #11276: <==unclosure== 24246 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #24246: <==uncertain_firing== 46900 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #28499: <==negation-removal== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41912: <==negation-removal== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #72364: <==negation-removal== 78183 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #79774: <==negation-removal== 40792 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))))

    (:action sensecells_a_p2_p1
        :precondition (and (at_a_p2)
                           (succ_p2_p1))
        :effect (and
                    ; #34895: <==closure== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #62718: <==closure== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #69301: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #91965: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #32439: <==negation-removal== 62718 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49619: <==uncertain_firing== 91965 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #52646: <==unclosure== 49619 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #54338: <==negation-removal== 34895 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #60374: <==negation-removal== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #85909: <==negation-removal== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p2_p10
        :precondition (and (at_a_p2)
                           (succ_p2_p10))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #18251: <==closure== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #31622: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #37654: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #47107: <==closure== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #12809: <==unclosure== 21386 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #21386: <==uncertain_firing== 31622 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #54794: <==negation-removal== 18251 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #56661: <==negation-removal== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #76688: <==negation-removal== 47107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #80084: <==negation-removal== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))))

    (:action sensecells_a_p2_p2
        :precondition (and (at_a_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #46301: origin
                    (checked_p2)

                    ; #50395: <==closure== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #61233: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #81137: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #81421: <==closure== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #22095: <==negation-removal== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #38751: <==uncertain_firing== 61233 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #46783: <==negation-removal== 81421 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #51361: <==negation-removal== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #79110: <==unclosure== 38751 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #90873: <==negation-removal== 50395 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))))

    (:action sensecells_a_p2_p3
        :precondition (and (at_a_p2)
                           (succ_p2_p3))
        :effect (and
                    ; #46161: origin
                    (checked_p3)

                    ; #62668: <==closure== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #66259: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #68031: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #95916: <==closure== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #10524: <==negation-removal== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #46730: <==unclosure== 47390 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #47390: <==uncertain_firing== 68031 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #54557: <==negation-removal== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #82914: <==negation-removal== 95916 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #85865: <==negation-removal== 62668 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p2_p4
        :precondition (and (at_a_p2)
                           (succ_p2_p4))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36710: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #52742: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #73081: <==closure== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #88339: <==closure== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #18496: <==negation-removal== 73081 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #27932: <==negation-removal== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #30796: <==negation-removal== 88339 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57073: <==negation-removal== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #59373: <==uncertain_firing== 36710 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #63223: <==unclosure== 59373 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p2_p5
        :precondition (and (at_a_p2)
                           (succ_p2_p5))
        :effect (and
                    ; #23276: <==closure== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #55505: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #79689: <==closure== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #87754: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #22280: <==unclosure== 39564 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #24336: <==negation-removal== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #39564: <==uncertain_firing== 55505 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #61851: <==negation-removal== 23276 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #71940: <==negation-removal== 79689 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #73316: <==negation-removal== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))))

    (:action sensecells_a_p2_p6
        :precondition (and (at_a_p2)
                           (succ_p2_p6))
        :effect (and
                    ; #10670: <==closure== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #26395: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #40448: <==closure== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #90072: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #42220: <==unclosure== 85747 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #52890: <==negation-removal== 10670 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #62070: <==negation-removal== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #66958: <==negation-removal== 40448 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #85747: <==uncertain_firing== 90072 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #94339: <==negation-removal== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p2_p7
        :precondition (and (succ_p2_p7)
                           (at_a_p2))
        :effect (and
                    ; #20502: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #27470: <==closure== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #71823: <==closure== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #85979: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #20542: <==negation-removal== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #34433: <==uncertain_firing== 20502 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #43048: <==negation-removal== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #52701: <==unclosure== 34433 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))

                    ; #90591: <==negation-removal== 71823 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #92286: <==negation-removal== 27470 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))))

    (:action sensecells_a_p2_p8
        :precondition (and (at_a_p2)
                           (succ_p2_p8))
        :effect (and
                    ; #26888: <==closure== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #50837: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #68697: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #89387: <==closure== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #15307: <==negation-removal== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #43700: <==negation-removal== 26888 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #46814: <==negation-removal== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #51706: <==unclosure== 74001 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74001: <==uncertain_firing== 50837 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #90161: <==negation-removal== 89387 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p2_p9
        :precondition (and (at_a_p2)
                           (succ_p2_p9))
        :effect (and
                    ; #26492: <==closure== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #62323: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #85482: <==closure== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #86353: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20643: <==negation-removal== 85482 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #22985: <==unclosure== 75835 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #45339: <==negation-removal== 26492 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #55627: <==negation-removal== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))

                    ; #75835: <==uncertain_firing== 62323 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #89199: <==negation-removal== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p3_p0011
        :precondition (and (succ_p3_p0011)
                           (at_a_p3))
        :effect (and
                    ; #16063: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #16432: <==closure== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #69035: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #84657: <==closure== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #11965: <==negation-removal== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #12070: <==uncertain_firing== 69035 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #25073: <==negation-removal== 84657 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #36474: <==negation-removal== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #44520: <==unclosure== 12070 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #57978: <==negation-removal== 16432 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p3_p012
        :precondition (and (succ_p3_p012)
                           (at_a_p3))
        :effect (and
                    ; #26213: origin
                    (checked_p012)

                    ; #40792: <==closure== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #44107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #46900: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #78183: <==closure== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #11276: <==unclosure== 24246 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #24246: <==uncertain_firing== 46900 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #28499: <==negation-removal== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41912: <==negation-removal== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #72364: <==negation-removal== 78183 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #79774: <==negation-removal== 40792 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))))

    (:action sensecells_a_p3_p1
        :precondition (and (succ_p3_p1)
                           (at_a_p3))
        :effect (and
                    ; #34895: <==closure== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #62718: <==closure== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #69301: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #91965: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #32439: <==negation-removal== 62718 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49619: <==uncertain_firing== 91965 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #52646: <==unclosure== 49619 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #54338: <==negation-removal== 34895 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #60374: <==negation-removal== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #85909: <==negation-removal== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p3_p10
        :precondition (and (succ_p3_p10)
                           (at_a_p3))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #18251: <==closure== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #31622: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #37654: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #47107: <==closure== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #12809: <==unclosure== 21386 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #21386: <==uncertain_firing== 31622 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #54794: <==negation-removal== 18251 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #56661: <==negation-removal== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #76688: <==negation-removal== 47107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #80084: <==negation-removal== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))))

    (:action sensecells_a_p3_p2
        :precondition (and (succ_p3_p2)
                           (at_a_p3))
        :effect (and
                    ; #46301: origin
                    (checked_p2)

                    ; #50395: <==closure== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #61233: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #81137: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #81421: <==closure== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #22095: <==negation-removal== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #38751: <==uncertain_firing== 61233 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #46783: <==negation-removal== 81421 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #51361: <==negation-removal== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #79110: <==unclosure== 38751 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #90873: <==negation-removal== 50395 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))))

    (:action sensecells_a_p3_p3
        :precondition (and (succ_p3_p3)
                           (at_a_p3))
        :effect (and
                    ; #46161: origin
                    (checked_p3)

                    ; #62668: <==closure== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #66259: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #68031: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #95916: <==closure== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #10524: <==negation-removal== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #46730: <==unclosure== 47390 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #47390: <==uncertain_firing== 68031 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #54557: <==negation-removal== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #82914: <==negation-removal== 95916 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #85865: <==negation-removal== 62668 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p3_p4
        :precondition (and (succ_p3_p4)
                           (at_a_p3))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36710: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #52742: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #73081: <==closure== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #88339: <==closure== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #18496: <==negation-removal== 73081 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #27932: <==negation-removal== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #30796: <==negation-removal== 88339 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57073: <==negation-removal== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #59373: <==uncertain_firing== 36710 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #63223: <==unclosure== 59373 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p3_p5
        :precondition (and (succ_p3_p5)
                           (at_a_p3))
        :effect (and
                    ; #23276: <==closure== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #55505: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #79689: <==closure== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #87754: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #22280: <==unclosure== 39564 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #24336: <==negation-removal== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #39564: <==uncertain_firing== 55505 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #61851: <==negation-removal== 23276 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #71940: <==negation-removal== 79689 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #73316: <==negation-removal== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))))

    (:action sensecells_a_p3_p6
        :precondition (and (succ_p3_p6)
                           (at_a_p3))
        :effect (and
                    ; #10670: <==closure== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #26395: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #40448: <==closure== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #90072: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #42220: <==unclosure== 85747 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #52890: <==negation-removal== 10670 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #62070: <==negation-removal== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #66958: <==negation-removal== 40448 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #85747: <==uncertain_firing== 90072 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #94339: <==negation-removal== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p3_p7
        :precondition (and (succ_p3_p7)
                           (at_a_p3))
        :effect (and
                    ; #20502: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #27470: <==closure== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #71823: <==closure== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #85979: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #20542: <==negation-removal== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #34433: <==uncertain_firing== 20502 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #43048: <==negation-removal== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #52701: <==unclosure== 34433 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))

                    ; #90591: <==negation-removal== 71823 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #92286: <==negation-removal== 27470 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))))

    (:action sensecells_a_p3_p8
        :precondition (and (succ_p3_p8)
                           (at_a_p3))
        :effect (and
                    ; #26888: <==closure== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #50837: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #68697: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #89387: <==closure== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #15307: <==negation-removal== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #43700: <==negation-removal== 26888 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #46814: <==negation-removal== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #51706: <==unclosure== 74001 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74001: <==uncertain_firing== 50837 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #90161: <==negation-removal== 89387 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p3_p9
        :precondition (and (succ_p3_p9)
                           (at_a_p3))
        :effect (and
                    ; #26492: <==closure== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #62323: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #85482: <==closure== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #86353: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20643: <==negation-removal== 85482 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #22985: <==unclosure== 75835 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #45339: <==negation-removal== 26492 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #55627: <==negation-removal== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))

                    ; #75835: <==uncertain_firing== 62323 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #89199: <==negation-removal== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p4_p0011
        :precondition (and (at_a_p4)
                           (succ_p4_p0011))
        :effect (and
                    ; #16063: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #16432: <==closure== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #69035: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #84657: <==closure== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #11965: <==negation-removal== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #12070: <==uncertain_firing== 69035 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #25073: <==negation-removal== 84657 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #36474: <==negation-removal== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #44520: <==unclosure== 12070 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #57978: <==negation-removal== 16432 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p4_p012
        :precondition (and (succ_p4_p012)
                           (at_a_p4))
        :effect (and
                    ; #26213: origin
                    (checked_p012)

                    ; #40792: <==closure== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #44107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #46900: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #78183: <==closure== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #11276: <==unclosure== 24246 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #24246: <==uncertain_firing== 46900 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #28499: <==negation-removal== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41912: <==negation-removal== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #72364: <==negation-removal== 78183 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #79774: <==negation-removal== 40792 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))))

    (:action sensecells_a_p4_p1
        :precondition (and (at_a_p4)
                           (succ_p4_p1))
        :effect (and
                    ; #34895: <==closure== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #62718: <==closure== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #69301: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #91965: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #32439: <==negation-removal== 62718 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49619: <==uncertain_firing== 91965 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #52646: <==unclosure== 49619 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #54338: <==negation-removal== 34895 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #60374: <==negation-removal== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #85909: <==negation-removal== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p4_p10
        :precondition (and (succ_p4_p10)
                           (at_a_p4))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #18251: <==closure== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #31622: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #37654: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #47107: <==closure== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #12809: <==unclosure== 21386 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #21386: <==uncertain_firing== 31622 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #54794: <==negation-removal== 18251 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #56661: <==negation-removal== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #76688: <==negation-removal== 47107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #80084: <==negation-removal== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))))

    (:action sensecells_a_p4_p2
        :precondition (and (succ_p4_p2)
                           (at_a_p4))
        :effect (and
                    ; #46301: origin
                    (checked_p2)

                    ; #50395: <==closure== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #61233: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #81137: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #81421: <==closure== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #22095: <==negation-removal== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #38751: <==uncertain_firing== 61233 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #46783: <==negation-removal== 81421 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #51361: <==negation-removal== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #79110: <==unclosure== 38751 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #90873: <==negation-removal== 50395 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))))

    (:action sensecells_a_p4_p3
        :precondition (and (succ_p4_p3)
                           (at_a_p4))
        :effect (and
                    ; #46161: origin
                    (checked_p3)

                    ; #62668: <==closure== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #66259: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #68031: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #95916: <==closure== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #10524: <==negation-removal== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #46730: <==unclosure== 47390 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #47390: <==uncertain_firing== 68031 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #54557: <==negation-removal== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #82914: <==negation-removal== 95916 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #85865: <==negation-removal== 62668 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p4_p4
        :precondition (and (succ_p4_p4)
                           (at_a_p4))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36710: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #52742: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #73081: <==closure== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #88339: <==closure== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #18496: <==negation-removal== 73081 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #27932: <==negation-removal== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #30796: <==negation-removal== 88339 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57073: <==negation-removal== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #59373: <==uncertain_firing== 36710 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #63223: <==unclosure== 59373 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p4_p5
        :precondition (and (at_a_p4)
                           (succ_p4_p5))
        :effect (and
                    ; #23276: <==closure== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #55505: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #79689: <==closure== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #87754: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #22280: <==unclosure== 39564 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #24336: <==negation-removal== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #39564: <==uncertain_firing== 55505 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #61851: <==negation-removal== 23276 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #71940: <==negation-removal== 79689 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #73316: <==negation-removal== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))))

    (:action sensecells_a_p4_p6
        :precondition (and (succ_p4_p6)
                           (at_a_p4))
        :effect (and
                    ; #10670: <==closure== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #26395: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #40448: <==closure== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #90072: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #42220: <==unclosure== 85747 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #52890: <==negation-removal== 10670 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #62070: <==negation-removal== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #66958: <==negation-removal== 40448 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #85747: <==uncertain_firing== 90072 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #94339: <==negation-removal== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p4_p7
        :precondition (and (at_a_p4)
                           (succ_p4_p7))
        :effect (and
                    ; #20502: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #27470: <==closure== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #71823: <==closure== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #85979: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #20542: <==negation-removal== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #34433: <==uncertain_firing== 20502 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #43048: <==negation-removal== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #52701: <==unclosure== 34433 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))

                    ; #90591: <==negation-removal== 71823 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #92286: <==negation-removal== 27470 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))))

    (:action sensecells_a_p4_p8
        :precondition (and (succ_p4_p8)
                           (at_a_p4))
        :effect (and
                    ; #26888: <==closure== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #50837: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #68697: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #89387: <==closure== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #15307: <==negation-removal== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #43700: <==negation-removal== 26888 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #46814: <==negation-removal== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #51706: <==unclosure== 74001 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74001: <==uncertain_firing== 50837 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #90161: <==negation-removal== 89387 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p4_p9
        :precondition (and (at_a_p4)
                           (succ_p4_p9))
        :effect (and
                    ; #26492: <==closure== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #62323: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #85482: <==closure== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #86353: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20643: <==negation-removal== 85482 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #22985: <==unclosure== 75835 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #45339: <==negation-removal== 26492 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #55627: <==negation-removal== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))

                    ; #75835: <==uncertain_firing== 62323 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #89199: <==negation-removal== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p5_p0011
        :precondition (and (at_a_p5)
                           (succ_p5_p0011))
        :effect (and
                    ; #16063: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #16432: <==closure== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #69035: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #84657: <==closure== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #11965: <==negation-removal== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #12070: <==uncertain_firing== 69035 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #25073: <==negation-removal== 84657 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #36474: <==negation-removal== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #44520: <==unclosure== 12070 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #57978: <==negation-removal== 16432 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p5_p012
        :precondition (and (at_a_p5)
                           (succ_p5_p012))
        :effect (and
                    ; #26213: origin
                    (checked_p012)

                    ; #40792: <==closure== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #44107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #46900: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #78183: <==closure== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #11276: <==unclosure== 24246 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #24246: <==uncertain_firing== 46900 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #28499: <==negation-removal== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41912: <==negation-removal== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #72364: <==negation-removal== 78183 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #79774: <==negation-removal== 40792 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))))

    (:action sensecells_a_p5_p1
        :precondition (and (succ_p5_p1)
                           (at_a_p5))
        :effect (and
                    ; #34895: <==closure== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #62718: <==closure== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #69301: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #91965: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #32439: <==negation-removal== 62718 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49619: <==uncertain_firing== 91965 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #52646: <==unclosure== 49619 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #54338: <==negation-removal== 34895 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #60374: <==negation-removal== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #85909: <==negation-removal== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p5_p10
        :precondition (and (at_a_p5)
                           (succ_p5_p10))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #18251: <==closure== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #31622: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #37654: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #47107: <==closure== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #12809: <==unclosure== 21386 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #21386: <==uncertain_firing== 31622 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #54794: <==negation-removal== 18251 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #56661: <==negation-removal== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #76688: <==negation-removal== 47107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #80084: <==negation-removal== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))))

    (:action sensecells_a_p5_p2
        :precondition (and (at_a_p5)
                           (succ_p5_p2))
        :effect (and
                    ; #46301: origin
                    (checked_p2)

                    ; #50395: <==closure== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #61233: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #81137: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #81421: <==closure== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #22095: <==negation-removal== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #38751: <==uncertain_firing== 61233 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #46783: <==negation-removal== 81421 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #51361: <==negation-removal== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #79110: <==unclosure== 38751 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #90873: <==negation-removal== 50395 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))))

    (:action sensecells_a_p5_p3
        :precondition (and (at_a_p5)
                           (succ_p5_p3))
        :effect (and
                    ; #46161: origin
                    (checked_p3)

                    ; #62668: <==closure== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #66259: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #68031: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #95916: <==closure== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #10524: <==negation-removal== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #46730: <==unclosure== 47390 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #47390: <==uncertain_firing== 68031 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #54557: <==negation-removal== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #82914: <==negation-removal== 95916 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #85865: <==negation-removal== 62668 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p5_p4
        :precondition (and (succ_p5_p4)
                           (at_a_p5))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36710: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #52742: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #73081: <==closure== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #88339: <==closure== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #18496: <==negation-removal== 73081 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #27932: <==negation-removal== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #30796: <==negation-removal== 88339 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57073: <==negation-removal== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #59373: <==uncertain_firing== 36710 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #63223: <==unclosure== 59373 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p5_p5
        :precondition (and (at_a_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #23276: <==closure== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #55505: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #79689: <==closure== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #87754: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #22280: <==unclosure== 39564 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #24336: <==negation-removal== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #39564: <==uncertain_firing== 55505 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #61851: <==negation-removal== 23276 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #71940: <==negation-removal== 79689 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #73316: <==negation-removal== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))))

    (:action sensecells_a_p5_p6
        :precondition (and (at_a_p5)
                           (succ_p5_p6))
        :effect (and
                    ; #10670: <==closure== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #26395: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #40448: <==closure== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #90072: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #42220: <==unclosure== 85747 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #52890: <==negation-removal== 10670 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #62070: <==negation-removal== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #66958: <==negation-removal== 40448 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #85747: <==uncertain_firing== 90072 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #94339: <==negation-removal== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p5_p7
        :precondition (and (succ_p5_p7)
                           (at_a_p5))
        :effect (and
                    ; #20502: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #27470: <==closure== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #71823: <==closure== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #85979: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #20542: <==negation-removal== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #34433: <==uncertain_firing== 20502 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #43048: <==negation-removal== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #52701: <==unclosure== 34433 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))

                    ; #90591: <==negation-removal== 71823 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #92286: <==negation-removal== 27470 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))))

    (:action sensecells_a_p5_p8
        :precondition (and (at_a_p5)
                           (succ_p5_p8))
        :effect (and
                    ; #26888: <==closure== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #50837: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #68697: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #89387: <==closure== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #15307: <==negation-removal== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #43700: <==negation-removal== 26888 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #46814: <==negation-removal== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #51706: <==unclosure== 74001 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74001: <==uncertain_firing== 50837 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #90161: <==negation-removal== 89387 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p5_p9
        :precondition (and (succ_p5_p9)
                           (at_a_p5))
        :effect (and
                    ; #26492: <==closure== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #62323: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #85482: <==closure== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #86353: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20643: <==negation-removal== 85482 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #22985: <==unclosure== 75835 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #45339: <==negation-removal== 26492 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #55627: <==negation-removal== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))

                    ; #75835: <==uncertain_firing== 62323 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #89199: <==negation-removal== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p6_p0011
        :precondition (and (succ_p6_p0011)
                           (at_a_p6))
        :effect (and
                    ; #16063: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #16432: <==closure== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #69035: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #84657: <==closure== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #11965: <==negation-removal== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #12070: <==uncertain_firing== 69035 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #25073: <==negation-removal== 84657 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #36474: <==negation-removal== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #44520: <==unclosure== 12070 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #57978: <==negation-removal== 16432 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p6_p012
        :precondition (and (at_a_p6)
                           (succ_p6_p012))
        :effect (and
                    ; #26213: origin
                    (checked_p012)

                    ; #40792: <==closure== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #44107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #46900: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #78183: <==closure== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #11276: <==unclosure== 24246 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #24246: <==uncertain_firing== 46900 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #28499: <==negation-removal== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41912: <==negation-removal== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #72364: <==negation-removal== 78183 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #79774: <==negation-removal== 40792 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))))

    (:action sensecells_a_p6_p1
        :precondition (and (succ_p6_p1)
                           (at_a_p6))
        :effect (and
                    ; #34895: <==closure== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #62718: <==closure== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #69301: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #91965: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #32439: <==negation-removal== 62718 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49619: <==uncertain_firing== 91965 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #52646: <==unclosure== 49619 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #54338: <==negation-removal== 34895 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #60374: <==negation-removal== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #85909: <==negation-removal== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p6_p10
        :precondition (and (succ_p6_p10)
                           (at_a_p6))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #18251: <==closure== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #31622: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #37654: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #47107: <==closure== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #12809: <==unclosure== 21386 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #21386: <==uncertain_firing== 31622 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #54794: <==negation-removal== 18251 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #56661: <==negation-removal== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #76688: <==negation-removal== 47107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #80084: <==negation-removal== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))))

    (:action sensecells_a_p6_p2
        :precondition (and (at_a_p6)
                           (succ_p6_p2))
        :effect (and
                    ; #46301: origin
                    (checked_p2)

                    ; #50395: <==closure== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #61233: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #81137: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #81421: <==closure== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #22095: <==negation-removal== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #38751: <==uncertain_firing== 61233 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #46783: <==negation-removal== 81421 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #51361: <==negation-removal== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #79110: <==unclosure== 38751 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #90873: <==negation-removal== 50395 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))))

    (:action sensecells_a_p6_p3
        :precondition (and (at_a_p6)
                           (succ_p6_p3))
        :effect (and
                    ; #46161: origin
                    (checked_p3)

                    ; #62668: <==closure== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #66259: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #68031: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #95916: <==closure== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #10524: <==negation-removal== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #46730: <==unclosure== 47390 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #47390: <==uncertain_firing== 68031 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #54557: <==negation-removal== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #82914: <==negation-removal== 95916 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #85865: <==negation-removal== 62668 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p6_p4
        :precondition (and (succ_p6_p4)
                           (at_a_p6))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36710: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #52742: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #73081: <==closure== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #88339: <==closure== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #18496: <==negation-removal== 73081 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #27932: <==negation-removal== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #30796: <==negation-removal== 88339 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57073: <==negation-removal== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #59373: <==uncertain_firing== 36710 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #63223: <==unclosure== 59373 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p6_p5
        :precondition (and (succ_p6_p5)
                           (at_a_p6))
        :effect (and
                    ; #23276: <==closure== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #55505: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #79689: <==closure== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #87754: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #22280: <==unclosure== 39564 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #24336: <==negation-removal== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #39564: <==uncertain_firing== 55505 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #61851: <==negation-removal== 23276 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #71940: <==negation-removal== 79689 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #73316: <==negation-removal== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))))

    (:action sensecells_a_p6_p6
        :precondition (and (succ_p6_p6)
                           (at_a_p6))
        :effect (and
                    ; #10670: <==closure== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #26395: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #40448: <==closure== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #90072: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #42220: <==unclosure== 85747 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #52890: <==negation-removal== 10670 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #62070: <==negation-removal== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #66958: <==negation-removal== 40448 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #85747: <==uncertain_firing== 90072 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #94339: <==negation-removal== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p6_p7
        :precondition (and (succ_p6_p7)
                           (at_a_p6))
        :effect (and
                    ; #20502: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #27470: <==closure== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #71823: <==closure== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #85979: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #20542: <==negation-removal== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #34433: <==uncertain_firing== 20502 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #43048: <==negation-removal== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #52701: <==unclosure== 34433 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))

                    ; #90591: <==negation-removal== 71823 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #92286: <==negation-removal== 27470 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))))

    (:action sensecells_a_p6_p8
        :precondition (and (at_a_p6)
                           (succ_p6_p8))
        :effect (and
                    ; #26888: <==closure== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #50837: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #68697: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #89387: <==closure== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #15307: <==negation-removal== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #43700: <==negation-removal== 26888 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #46814: <==negation-removal== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #51706: <==unclosure== 74001 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74001: <==uncertain_firing== 50837 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #90161: <==negation-removal== 89387 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p6_p9
        :precondition (and (at_a_p6)
                           (succ_p6_p9))
        :effect (and
                    ; #26492: <==closure== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #62323: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #85482: <==closure== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #86353: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20643: <==negation-removal== 85482 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #22985: <==unclosure== 75835 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #45339: <==negation-removal== 26492 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #55627: <==negation-removal== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))

                    ; #75835: <==uncertain_firing== 62323 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #89199: <==negation-removal== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p7_p0011
        :precondition (and (at_a_p7)
                           (succ_p7_p0011))
        :effect (and
                    ; #16063: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #16432: <==closure== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #69035: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #84657: <==closure== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #11965: <==negation-removal== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #12070: <==uncertain_firing== 69035 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #25073: <==negation-removal== 84657 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #36474: <==negation-removal== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #44520: <==unclosure== 12070 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #57978: <==negation-removal== 16432 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p7_p012
        :precondition (and (succ_p7_p012)
                           (at_a_p7))
        :effect (and
                    ; #26213: origin
                    (checked_p012)

                    ; #40792: <==closure== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #44107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #46900: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #78183: <==closure== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #11276: <==unclosure== 24246 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #24246: <==uncertain_firing== 46900 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #28499: <==negation-removal== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41912: <==negation-removal== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #72364: <==negation-removal== 78183 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #79774: <==negation-removal== 40792 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))))

    (:action sensecells_a_p7_p1
        :precondition (and (at_a_p7)
                           (succ_p7_p1))
        :effect (and
                    ; #34895: <==closure== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #62718: <==closure== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #69301: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #91965: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #32439: <==negation-removal== 62718 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49619: <==uncertain_firing== 91965 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #52646: <==unclosure== 49619 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #54338: <==negation-removal== 34895 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #60374: <==negation-removal== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #85909: <==negation-removal== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p7_p10
        :precondition (and (succ_p7_p10)
                           (at_a_p7))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #18251: <==closure== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #31622: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #37654: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #47107: <==closure== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #12809: <==unclosure== 21386 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #21386: <==uncertain_firing== 31622 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #54794: <==negation-removal== 18251 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #56661: <==negation-removal== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #76688: <==negation-removal== 47107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #80084: <==negation-removal== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))))

    (:action sensecells_a_p7_p2
        :precondition (and (succ_p7_p2)
                           (at_a_p7))
        :effect (and
                    ; #46301: origin
                    (checked_p2)

                    ; #50395: <==closure== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #61233: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #81137: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #81421: <==closure== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #22095: <==negation-removal== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #38751: <==uncertain_firing== 61233 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #46783: <==negation-removal== 81421 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #51361: <==negation-removal== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #79110: <==unclosure== 38751 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #90873: <==negation-removal== 50395 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))))

    (:action sensecells_a_p7_p3
        :precondition (and (at_a_p7)
                           (succ_p7_p3))
        :effect (and
                    ; #46161: origin
                    (checked_p3)

                    ; #62668: <==closure== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #66259: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #68031: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #95916: <==closure== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #10524: <==negation-removal== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #46730: <==unclosure== 47390 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #47390: <==uncertain_firing== 68031 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #54557: <==negation-removal== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #82914: <==negation-removal== 95916 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #85865: <==negation-removal== 62668 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p7_p4
        :precondition (and (succ_p7_p4)
                           (at_a_p7))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36710: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #52742: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #73081: <==closure== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #88339: <==closure== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #18496: <==negation-removal== 73081 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #27932: <==negation-removal== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #30796: <==negation-removal== 88339 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57073: <==negation-removal== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #59373: <==uncertain_firing== 36710 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #63223: <==unclosure== 59373 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p7_p5
        :precondition (and (at_a_p7)
                           (succ_p7_p5))
        :effect (and
                    ; #23276: <==closure== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #55505: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #79689: <==closure== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #87754: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #22280: <==unclosure== 39564 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #24336: <==negation-removal== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #39564: <==uncertain_firing== 55505 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #61851: <==negation-removal== 23276 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #71940: <==negation-removal== 79689 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #73316: <==negation-removal== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))))

    (:action sensecells_a_p7_p6
        :precondition (and (at_a_p7)
                           (succ_p7_p6))
        :effect (and
                    ; #10670: <==closure== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #26395: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #40448: <==closure== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #90072: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #42220: <==unclosure== 85747 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #52890: <==negation-removal== 10670 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #62070: <==negation-removal== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #66958: <==negation-removal== 40448 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #85747: <==uncertain_firing== 90072 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #94339: <==negation-removal== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p7_p7
        :precondition (and (succ_p7_p7)
                           (at_a_p7))
        :effect (and
                    ; #20502: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #27470: <==closure== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #71823: <==closure== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #85979: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #20542: <==negation-removal== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #34433: <==uncertain_firing== 20502 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #43048: <==negation-removal== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #52701: <==unclosure== 34433 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))

                    ; #90591: <==negation-removal== 71823 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #92286: <==negation-removal== 27470 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))))

    (:action sensecells_a_p7_p8
        :precondition (and (at_a_p7)
                           (succ_p7_p8))
        :effect (and
                    ; #26888: <==closure== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #50837: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #68697: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #89387: <==closure== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #15307: <==negation-removal== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #43700: <==negation-removal== 26888 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #46814: <==negation-removal== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #51706: <==unclosure== 74001 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74001: <==uncertain_firing== 50837 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #90161: <==negation-removal== 89387 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p7_p9
        :precondition (and (succ_p7_p9)
                           (at_a_p7))
        :effect (and
                    ; #26492: <==closure== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #62323: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #85482: <==closure== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #86353: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20643: <==negation-removal== 85482 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #22985: <==unclosure== 75835 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #45339: <==negation-removal== 26492 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #55627: <==negation-removal== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))

                    ; #75835: <==uncertain_firing== 62323 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #89199: <==negation-removal== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p8_p0011
        :precondition (and (succ_p8_p0011)
                           (at_a_p8))
        :effect (and
                    ; #16063: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #16432: <==closure== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #69035: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #84657: <==closure== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #11965: <==negation-removal== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #12070: <==uncertain_firing== 69035 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #25073: <==negation-removal== 84657 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #36474: <==negation-removal== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #44520: <==unclosure== 12070 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #57978: <==negation-removal== 16432 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p8_p012
        :precondition (and (succ_p8_p012)
                           (at_a_p8))
        :effect (and
                    ; #26213: origin
                    (checked_p012)

                    ; #40792: <==closure== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #44107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #46900: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #78183: <==closure== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #11276: <==unclosure== 24246 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #24246: <==uncertain_firing== 46900 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #28499: <==negation-removal== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41912: <==negation-removal== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #72364: <==negation-removal== 78183 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #79774: <==negation-removal== 40792 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))))

    (:action sensecells_a_p8_p1
        :precondition (and (succ_p8_p1)
                           (at_a_p8))
        :effect (and
                    ; #34895: <==closure== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #62718: <==closure== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #69301: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #91965: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #32439: <==negation-removal== 62718 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49619: <==uncertain_firing== 91965 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #52646: <==unclosure== 49619 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #54338: <==negation-removal== 34895 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #60374: <==negation-removal== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #85909: <==negation-removal== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p8_p10
        :precondition (and (succ_p8_p10)
                           (at_a_p8))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #18251: <==closure== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #31622: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #37654: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #47107: <==closure== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #12809: <==unclosure== 21386 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #21386: <==uncertain_firing== 31622 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #54794: <==negation-removal== 18251 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #56661: <==negation-removal== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #76688: <==negation-removal== 47107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #80084: <==negation-removal== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))))

    (:action sensecells_a_p8_p2
        :precondition (and (succ_p8_p2)
                           (at_a_p8))
        :effect (and
                    ; #46301: origin
                    (checked_p2)

                    ; #50395: <==closure== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #61233: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #81137: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #81421: <==closure== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #22095: <==negation-removal== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #38751: <==uncertain_firing== 61233 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #46783: <==negation-removal== 81421 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #51361: <==negation-removal== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #79110: <==unclosure== 38751 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #90873: <==negation-removal== 50395 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))))

    (:action sensecells_a_p8_p3
        :precondition (and (succ_p8_p3)
                           (at_a_p8))
        :effect (and
                    ; #46161: origin
                    (checked_p3)

                    ; #62668: <==closure== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #66259: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #68031: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #95916: <==closure== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #10524: <==negation-removal== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #46730: <==unclosure== 47390 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #47390: <==uncertain_firing== 68031 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #54557: <==negation-removal== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #82914: <==negation-removal== 95916 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #85865: <==negation-removal== 62668 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p8_p4
        :precondition (and (succ_p8_p4)
                           (at_a_p8))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36710: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #52742: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #73081: <==closure== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #88339: <==closure== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #18496: <==negation-removal== 73081 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #27932: <==negation-removal== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #30796: <==negation-removal== 88339 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57073: <==negation-removal== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #59373: <==uncertain_firing== 36710 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #63223: <==unclosure== 59373 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p8_p5
        :precondition (and (succ_p8_p5)
                           (at_a_p8))
        :effect (and
                    ; #23276: <==closure== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #55505: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #79689: <==closure== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #87754: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #22280: <==unclosure== 39564 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #24336: <==negation-removal== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #39564: <==uncertain_firing== 55505 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #61851: <==negation-removal== 23276 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #71940: <==negation-removal== 79689 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #73316: <==negation-removal== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))))

    (:action sensecells_a_p8_p6
        :precondition (and (succ_p8_p6)
                           (at_a_p8))
        :effect (and
                    ; #10670: <==closure== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #26395: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #40448: <==closure== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #90072: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #42220: <==unclosure== 85747 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #52890: <==negation-removal== 10670 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #62070: <==negation-removal== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #66958: <==negation-removal== 40448 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #85747: <==uncertain_firing== 90072 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #94339: <==negation-removal== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p8_p7
        :precondition (and (succ_p8_p7)
                           (at_a_p8))
        :effect (and
                    ; #20502: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #27470: <==closure== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #71823: <==closure== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #85979: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #20542: <==negation-removal== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #34433: <==uncertain_firing== 20502 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #43048: <==negation-removal== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #52701: <==unclosure== 34433 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))

                    ; #90591: <==negation-removal== 71823 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #92286: <==negation-removal== 27470 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))))

    (:action sensecells_a_p8_p8
        :precondition (and (succ_p8_p8)
                           (at_a_p8))
        :effect (and
                    ; #26888: <==closure== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #50837: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #68697: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #89387: <==closure== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #15307: <==negation-removal== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #43700: <==negation-removal== 26888 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #46814: <==negation-removal== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #51706: <==unclosure== 74001 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74001: <==uncertain_firing== 50837 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #90161: <==negation-removal== 89387 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p8_p9
        :precondition (and (succ_p8_p9)
                           (at_a_p8))
        :effect (and
                    ; #26492: <==closure== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #62323: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #85482: <==closure== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #86353: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20643: <==negation-removal== 85482 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #22985: <==unclosure== 75835 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #45339: <==negation-removal== 26492 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #55627: <==negation-removal== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))

                    ; #75835: <==uncertain_firing== 62323 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #89199: <==negation-removal== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p9_p0011
        :precondition (and (at_a_p9)
                           (succ_p9_p0011))
        :effect (and
                    ; #16063: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #16432: <==closure== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #69035: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #84657: <==closure== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #11965: <==negation-removal== 69035 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #12070: <==uncertain_firing== 69035 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #25073: <==negation-removal== 84657 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #36474: <==negation-removal== 16063 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #44520: <==unclosure== 12070 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #57978: <==negation-removal== 16432 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p9_p012
        :precondition (and (succ_p9_p012)
                           (at_a_p9))
        :effect (and
                    ; #26213: origin
                    (checked_p012)

                    ; #40792: <==closure== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #44107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #46900: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #78183: <==closure== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #11276: <==unclosure== 24246 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #24246: <==uncertain_firing== 46900 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #28499: <==negation-removal== 44107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41912: <==negation-removal== 46900 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #72364: <==negation-removal== 78183 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #79774: <==negation-removal== 40792 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))))

    (:action sensecells_a_p9_p1
        :precondition (and (succ_p9_p1)
                           (at_a_p9))
        :effect (and
                    ; #34895: <==closure== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #62718: <==closure== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #69301: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #91965: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #32439: <==negation-removal== 62718 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49619: <==uncertain_firing== 91965 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #52646: <==unclosure== 49619 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #54338: <==negation-removal== 34895 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #60374: <==negation-removal== 69301 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #85909: <==negation-removal== 91965 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))))

    (:action sensecells_a_p9_p10
        :precondition (and (succ_p9_p10)
                           (at_a_p9))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #18251: <==closure== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #31622: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #37654: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #47107: <==closure== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #12809: <==unclosure== 21386 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #21386: <==uncertain_firing== 31622 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #54794: <==negation-removal== 18251 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #56661: <==negation-removal== 31622 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #76688: <==negation-removal== 47107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #80084: <==negation-removal== 37654 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))))

    (:action sensecells_a_p9_p2
        :precondition (and (at_a_p9)
                           (succ_p9_p2))
        :effect (and
                    ; #46301: origin
                    (checked_p2)

                    ; #50395: <==closure== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #61233: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #81137: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #81421: <==closure== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #22095: <==negation-removal== 81137 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #38751: <==uncertain_firing== 61233 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #46783: <==negation-removal== 81421 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #51361: <==negation-removal== 61233 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #79110: <==unclosure== 38751 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #90873: <==negation-removal== 50395 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))))

    (:action sensecells_a_p9_p3
        :precondition (and (at_a_p9)
                           (succ_p9_p3))
        :effect (and
                    ; #46161: origin
                    (checked_p3)

                    ; #62668: <==closure== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #66259: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #68031: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #95916: <==closure== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #10524: <==negation-removal== 68031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #46730: <==unclosure== 47390 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #47390: <==uncertain_firing== 68031 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #54557: <==negation-removal== 66259 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #82914: <==negation-removal== 95916 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #85865: <==negation-removal== 62668 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p9_p4
        :precondition (and (at_a_p9)
                           (succ_p9_p4))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36710: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #52742: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #73081: <==closure== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #88339: <==closure== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #18496: <==negation-removal== 73081 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #27932: <==negation-removal== 52742 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #30796: <==negation-removal== 88339 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57073: <==negation-removal== 36710 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #59373: <==uncertain_firing== 36710 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #63223: <==unclosure== 59373 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p9_p5
        :precondition (and (at_a_p9)
                           (succ_p9_p5))
        :effect (and
                    ; #23276: <==closure== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #55505: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #79689: <==closure== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #87754: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #22280: <==unclosure== 39564 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #24336: <==negation-removal== 55505 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #39564: <==uncertain_firing== 55505 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #61851: <==negation-removal== 23276 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #71940: <==negation-removal== 79689 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #73316: <==negation-removal== 87754 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))))

    (:action sensecells_a_p9_p6
        :precondition (and (at_a_p9)
                           (succ_p9_p6))
        :effect (and
                    ; #10670: <==closure== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #26395: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #40448: <==closure== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #90072: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #42220: <==unclosure== 85747 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #52890: <==negation-removal== 10670 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #62070: <==negation-removal== 26395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #66958: <==negation-removal== 40448 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #85747: <==uncertain_firing== 90072 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #94339: <==negation-removal== 90072 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p9_p7
        :precondition (and (succ_p9_p7)
                           (at_a_p9))
        :effect (and
                    ; #20502: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #27470: <==closure== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #71823: <==closure== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #85979: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #20542: <==negation-removal== 85979 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #34433: <==uncertain_firing== 20502 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #43048: <==negation-removal== 20502 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #52701: <==unclosure== 34433 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))

                    ; #90591: <==negation-removal== 71823 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #92286: <==negation-removal== 27470 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))))

    (:action sensecells_a_p9_p8
        :precondition (and (at_a_p9)
                           (succ_p9_p8))
        :effect (and
                    ; #26888: <==closure== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #50837: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #68697: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #89387: <==closure== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #15307: <==negation-removal== 68697 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #43700: <==negation-removal== 26888 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #46814: <==negation-removal== 50837 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #51706: <==unclosure== 74001 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74001: <==uncertain_firing== 50837 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #90161: <==negation-removal== 89387 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))))

    (:action sensecells_a_p9_p9
        :precondition (and (at_a_p9)
                           (succ_p9_p9))
        :effect (and
                    ; #26492: <==closure== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #62323: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #85482: <==closure== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #86353: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20643: <==negation-removal== 85482 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #22985: <==unclosure== 75835 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #45339: <==negation-removal== 26492 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #55627: <==negation-removal== 86353 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))

                    ; #75835: <==uncertain_firing== 62323 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #89199: <==negation-removal== 62323 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_b_p0011_p0011
        :precondition (and (at_b_p0011)
                           (succ_p0011_p0011))
        :effect (and
                    ; #47058: origin
                    (checked_p0011)

                    ; #49013: <==closure== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #73985: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #77879: <==closure== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #89602: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #22332: <==negation-removal== 77879 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #42013: <==negation-removal== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #50383: <==uncertain_firing== 73985 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #53762: <==unclosure== 50383 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #84811: <==negation-removal== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #92069: <==negation-removal== 49013 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))))

    (:action sensecells_b_p0011_p012
        :precondition (and (at_b_p0011)
                           (succ_p0011_p012))
        :effect (and
                    ; #20807: <==closure== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #29455: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #72703: <==closure== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #79218: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #20119: <==negation-removal== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #23833: <==unclosure== 36944 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #31504: <==negation-removal== 72703 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #36944: <==uncertain_firing== 29455 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66589: <==negation-removal== 20807 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #82199: <==negation-removal== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p0011_p1
        :precondition (and (succ_p0011_p1)
                           (at_b_p0011))
        :effect (and
                    ; #25740: <==closure== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #33186: <==closure== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #55626: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #79331: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #33044: <==negation-removal== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #34072: <==unclosure== 57244 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #57244: <==uncertain_firing== 55626 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #78373: <==negation-removal== 33186 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #81357: <==negation-removal== 25740 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #86148: <==negation-removal== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p0011_p10
        :precondition (and (succ_p0011_p10)
                           (at_b_p0011))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #64561: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #79434: <==closure== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #88052: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #90963: <==closure== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #38614: <==unclosure== 77391 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #43104: <==negation-removal== 79434 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #55584: <==negation-removal== 90963 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #64504: <==negation-removal== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #77391: <==uncertain_firing== 64561 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #90512: <==negation-removal== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))))

    (:action sensecells_b_p0011_p2
        :precondition (and (succ_p0011_p2)
                           (at_b_p0011))
        :effect (and
                    ; #22640: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #37628: <==closure== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #38191: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #50860: <==closure== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #25127: <==negation-removal== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #26611: <==negation-removal== 50860 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #29795: <==uncertain_firing== 22640 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #46088: <==negation-removal== 37628 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #67361: <==negation-removal== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #92122: <==unclosure== 29795 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p0011_p3
        :precondition (and (succ_p0011_p3)
                           (at_b_p0011))
        :effect (and
                    ; #24734: <==closure== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #39022: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #41943: <==closure== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #42717: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #19317: <==negation-removal== 24734 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #23649: <==unclosure== 86841 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #51199: <==negation-removal== 41943 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #67749: <==negation-removal== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #86841: <==uncertain_firing== 42717 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #88881: <==negation-removal== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p0011_p4
        :precondition (and (at_b_p0011)
                           (succ_p0011_p4))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36608: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #47694: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #49808: <==closure== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #71128: <==closure== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #35718: <==negation-removal== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #45042: <==negation-removal== 49808 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #50923: <==uncertain_firing== 36608 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #55508: <==negation-removal== 71128 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #78934: <==unclosure== 50923 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #82956: <==negation-removal== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))))

    (:action sensecells_b_p0011_p5
        :precondition (and (at_b_p0011)
                           (succ_p0011_p5))
        :effect (and
                    ; #19774: <==closure== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #52661: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64301: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #77186: <==closure== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #24742: <==negation-removal== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #36403: <==uncertain_firing== 64301 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #55704: <==negation-removal== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #68489: <==negation-removal== 77186 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73946: <==unclosure== 36403 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #77558: <==negation-removal== 19774 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p0011_p6
        :precondition (and (succ_p0011_p6)
                           (at_b_p0011))
        :effect (and
                    ; #20857: <==closure== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #52799: <==closure== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #63208: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #69572: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15454: <==negation-removal== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24186: <==negation-removal== 52799 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #27366: <==negation-removal== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #39668: <==negation-removal== 20857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #61438: <==uncertain_firing== 63208 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #88536: <==unclosure== 61438 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p0011_p7
        :precondition (and (succ_p0011_p7)
                           (at_b_p0011))
        :effect (and
                    ; #12981: <==closure== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #47720: <==closure== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #73648: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #80862: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #10025: <==uncertain_firing== 80862 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #19040: <==negation-removal== 47720 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #26327: <==negation-removal== 12981 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #34054: <==negation-removal== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #67582: <==negation-removal== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #78206: <==unclosure== 10025 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p0011_p8
        :precondition (and (at_b_p0011)
                           (succ_p0011_p8))
        :effect (and
                    ; #28479: <==closure== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #51960: <==closure== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #77722: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #90828: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #42141: <==negation-removal== 51960 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #42210: <==unclosure== 64580 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #64580: <==uncertain_firing== 77722 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74232: <==negation-removal== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #75329: <==negation-removal== 28479 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #91107: <==negation-removal== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))))

    (:action sensecells_b_p0011_p9
        :precondition (and (succ_p0011_p9)
                           (at_b_p0011))
        :effect (and
                    ; #25088: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #36245: <==closure== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #57406: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #61210: <==closure== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #15829: <==negation-removal== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #18960: <==negation-removal== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #19462: <==uncertain_firing== 57406 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #32204: <==unclosure== 19462 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #38322: <==negation-removal== 36245 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #52609: <==negation-removal== 61210 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_b_p012_p0011
        :precondition (and (at_b_p012)
                           (succ_p012_p0011))
        :effect (and
                    ; #47058: origin
                    (checked_p0011)

                    ; #49013: <==closure== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #73985: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #77879: <==closure== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #89602: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #22332: <==negation-removal== 77879 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #42013: <==negation-removal== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #50383: <==uncertain_firing== 73985 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #53762: <==unclosure== 50383 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #84811: <==negation-removal== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #92069: <==negation-removal== 49013 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))))

    (:action sensecells_b_p012_p012
        :precondition (and (succ_p012_p012)
                           (at_b_p012))
        :effect (and
                    ; #20807: <==closure== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #29455: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #72703: <==closure== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #79218: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #20119: <==negation-removal== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #23833: <==unclosure== 36944 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #31504: <==negation-removal== 72703 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #36944: <==uncertain_firing== 29455 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66589: <==negation-removal== 20807 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #82199: <==negation-removal== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p012_p1
        :precondition (and (succ_p012_p1)
                           (at_b_p012))
        :effect (and
                    ; #25740: <==closure== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #33186: <==closure== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #55626: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #79331: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #33044: <==negation-removal== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #34072: <==unclosure== 57244 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #57244: <==uncertain_firing== 55626 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #78373: <==negation-removal== 33186 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #81357: <==negation-removal== 25740 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #86148: <==negation-removal== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p012_p10
        :precondition (and (succ_p012_p10)
                           (at_b_p012))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #64561: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #79434: <==closure== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #88052: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #90963: <==closure== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #38614: <==unclosure== 77391 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #43104: <==negation-removal== 79434 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #55584: <==negation-removal== 90963 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #64504: <==negation-removal== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #77391: <==uncertain_firing== 64561 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #90512: <==negation-removal== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))))

    (:action sensecells_b_p012_p2
        :precondition (and (succ_p012_p2)
                           (at_b_p012))
        :effect (and
                    ; #22640: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #37628: <==closure== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #38191: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #50860: <==closure== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #25127: <==negation-removal== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #26611: <==negation-removal== 50860 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #29795: <==uncertain_firing== 22640 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #46088: <==negation-removal== 37628 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #67361: <==negation-removal== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #92122: <==unclosure== 29795 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p012_p3
        :precondition (and (succ_p012_p3)
                           (at_b_p012))
        :effect (and
                    ; #24734: <==closure== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #39022: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #41943: <==closure== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #42717: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #19317: <==negation-removal== 24734 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #23649: <==unclosure== 86841 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #51199: <==negation-removal== 41943 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #67749: <==negation-removal== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #86841: <==uncertain_firing== 42717 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #88881: <==negation-removal== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p012_p4
        :precondition (and (succ_p012_p4)
                           (at_b_p012))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36608: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #47694: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #49808: <==closure== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #71128: <==closure== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #35718: <==negation-removal== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #45042: <==negation-removal== 49808 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #50923: <==uncertain_firing== 36608 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #55508: <==negation-removal== 71128 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #78934: <==unclosure== 50923 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #82956: <==negation-removal== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))))

    (:action sensecells_b_p012_p5
        :precondition (and (at_b_p012)
                           (succ_p012_p5))
        :effect (and
                    ; #19774: <==closure== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #52661: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64301: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #77186: <==closure== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #24742: <==negation-removal== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #36403: <==uncertain_firing== 64301 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #55704: <==negation-removal== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #68489: <==negation-removal== 77186 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73946: <==unclosure== 36403 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #77558: <==negation-removal== 19774 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p012_p6
        :precondition (and (succ_p012_p6)
                           (at_b_p012))
        :effect (and
                    ; #20857: <==closure== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #52799: <==closure== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #63208: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #69572: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15454: <==negation-removal== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24186: <==negation-removal== 52799 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #27366: <==negation-removal== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #39668: <==negation-removal== 20857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #61438: <==uncertain_firing== 63208 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #88536: <==unclosure== 61438 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p012_p7
        :precondition (and (succ_p012_p7)
                           (at_b_p012))
        :effect (and
                    ; #12981: <==closure== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #47720: <==closure== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #73648: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #80862: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #10025: <==uncertain_firing== 80862 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #19040: <==negation-removal== 47720 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #26327: <==negation-removal== 12981 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #34054: <==negation-removal== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #67582: <==negation-removal== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #78206: <==unclosure== 10025 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p012_p8
        :precondition (and (at_b_p012)
                           (succ_p012_p8))
        :effect (and
                    ; #28479: <==closure== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #51960: <==closure== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #77722: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #90828: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #42141: <==negation-removal== 51960 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #42210: <==unclosure== 64580 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #64580: <==uncertain_firing== 77722 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74232: <==negation-removal== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #75329: <==negation-removal== 28479 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #91107: <==negation-removal== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))))

    (:action sensecells_b_p012_p9
        :precondition (and (succ_p012_p9)
                           (at_b_p012))
        :effect (and
                    ; #25088: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #36245: <==closure== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #57406: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #61210: <==closure== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #15829: <==negation-removal== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #18960: <==negation-removal== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #19462: <==uncertain_firing== 57406 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #32204: <==unclosure== 19462 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #38322: <==negation-removal== 36245 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #52609: <==negation-removal== 61210 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_b_p10_p0011
        :precondition (and (at_b_p10)
                           (succ_p10_p0011))
        :effect (and
                    ; #47058: origin
                    (checked_p0011)

                    ; #49013: <==closure== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #73985: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #77879: <==closure== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #89602: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #22332: <==negation-removal== 77879 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #42013: <==negation-removal== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #50383: <==uncertain_firing== 73985 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #53762: <==unclosure== 50383 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #84811: <==negation-removal== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #92069: <==negation-removal== 49013 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))))

    (:action sensecells_b_p10_p012
        :precondition (and (at_b_p10)
                           (succ_p10_p012))
        :effect (and
                    ; #20807: <==closure== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #29455: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #72703: <==closure== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #79218: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #20119: <==negation-removal== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #23833: <==unclosure== 36944 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #31504: <==negation-removal== 72703 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #36944: <==uncertain_firing== 29455 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66589: <==negation-removal== 20807 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #82199: <==negation-removal== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p10_p1
        :precondition (and (at_b_p10)
                           (succ_p10_p1))
        :effect (and
                    ; #25740: <==closure== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #33186: <==closure== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #55626: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #79331: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #33044: <==negation-removal== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #34072: <==unclosure== 57244 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #57244: <==uncertain_firing== 55626 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #78373: <==negation-removal== 33186 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #81357: <==negation-removal== 25740 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #86148: <==negation-removal== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p10_p10
        :precondition (and (at_b_p10)
                           (succ_p10_p10))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #64561: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #79434: <==closure== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #88052: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #90963: <==closure== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #38614: <==unclosure== 77391 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #43104: <==negation-removal== 79434 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #55584: <==negation-removal== 90963 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #64504: <==negation-removal== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #77391: <==uncertain_firing== 64561 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #90512: <==negation-removal== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))))

    (:action sensecells_b_p10_p2
        :precondition (and (at_b_p10)
                           (succ_p10_p2))
        :effect (and
                    ; #22640: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #37628: <==closure== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #38191: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #50860: <==closure== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #25127: <==negation-removal== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #26611: <==negation-removal== 50860 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #29795: <==uncertain_firing== 22640 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #46088: <==negation-removal== 37628 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #67361: <==negation-removal== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #92122: <==unclosure== 29795 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p10_p3
        :precondition (and (at_b_p10)
                           (succ_p10_p3))
        :effect (and
                    ; #24734: <==closure== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #39022: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #41943: <==closure== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #42717: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #19317: <==negation-removal== 24734 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #23649: <==unclosure== 86841 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #51199: <==negation-removal== 41943 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #67749: <==negation-removal== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #86841: <==uncertain_firing== 42717 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #88881: <==negation-removal== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p10_p4
        :precondition (and (at_b_p10)
                           (succ_p10_p4))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36608: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #47694: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #49808: <==closure== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #71128: <==closure== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #35718: <==negation-removal== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #45042: <==negation-removal== 49808 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #50923: <==uncertain_firing== 36608 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #55508: <==negation-removal== 71128 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #78934: <==unclosure== 50923 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #82956: <==negation-removal== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))))

    (:action sensecells_b_p10_p5
        :precondition (and (at_b_p10)
                           (succ_p10_p5))
        :effect (and
                    ; #19774: <==closure== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #52661: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64301: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #77186: <==closure== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #24742: <==negation-removal== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #36403: <==uncertain_firing== 64301 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #55704: <==negation-removal== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #68489: <==negation-removal== 77186 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73946: <==unclosure== 36403 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #77558: <==negation-removal== 19774 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p10_p6
        :precondition (and (at_b_p10)
                           (succ_p10_p6))
        :effect (and
                    ; #20857: <==closure== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #52799: <==closure== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #63208: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #69572: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15454: <==negation-removal== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24186: <==negation-removal== 52799 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #27366: <==negation-removal== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #39668: <==negation-removal== 20857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #61438: <==uncertain_firing== 63208 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #88536: <==unclosure== 61438 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p10_p7
        :precondition (and (at_b_p10)
                           (succ_p10_p7))
        :effect (and
                    ; #12981: <==closure== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #47720: <==closure== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #73648: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #80862: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #10025: <==uncertain_firing== 80862 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #19040: <==negation-removal== 47720 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #26327: <==negation-removal== 12981 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #34054: <==negation-removal== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #67582: <==negation-removal== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #78206: <==unclosure== 10025 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p10_p8
        :precondition (and (at_b_p10)
                           (succ_p10_p8))
        :effect (and
                    ; #28479: <==closure== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #51960: <==closure== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #77722: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #90828: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #42141: <==negation-removal== 51960 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #42210: <==unclosure== 64580 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #64580: <==uncertain_firing== 77722 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74232: <==negation-removal== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #75329: <==negation-removal== 28479 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #91107: <==negation-removal== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))))

    (:action sensecells_b_p10_p9
        :precondition (and (at_b_p10)
                           (succ_p10_p9))
        :effect (and
                    ; #25088: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #36245: <==closure== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #57406: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #61210: <==closure== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #15829: <==negation-removal== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #18960: <==negation-removal== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #19462: <==uncertain_firing== 57406 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #32204: <==unclosure== 19462 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #38322: <==negation-removal== 36245 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #52609: <==negation-removal== 61210 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_b_p1_p0011
        :precondition (and (at_b_p1)
                           (succ_p1_p0011))
        :effect (and
                    ; #47058: origin
                    (checked_p0011)

                    ; #49013: <==closure== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #73985: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #77879: <==closure== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #89602: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #22332: <==negation-removal== 77879 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #42013: <==negation-removal== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #50383: <==uncertain_firing== 73985 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #53762: <==unclosure== 50383 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #84811: <==negation-removal== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #92069: <==negation-removal== 49013 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))))

    (:action sensecells_b_p1_p012
        :precondition (and (at_b_p1)
                           (succ_p1_p012))
        :effect (and
                    ; #20807: <==closure== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #29455: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #72703: <==closure== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #79218: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #20119: <==negation-removal== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #23833: <==unclosure== 36944 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #31504: <==negation-removal== 72703 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #36944: <==uncertain_firing== 29455 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66589: <==negation-removal== 20807 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #82199: <==negation-removal== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p1_p1
        :precondition (and (at_b_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #25740: <==closure== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #33186: <==closure== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #55626: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #79331: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #33044: <==negation-removal== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #34072: <==unclosure== 57244 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #57244: <==uncertain_firing== 55626 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #78373: <==negation-removal== 33186 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #81357: <==negation-removal== 25740 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #86148: <==negation-removal== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p1_p10
        :precondition (and (at_b_p1)
                           (succ_p1_p10))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #64561: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #79434: <==closure== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #88052: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #90963: <==closure== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #38614: <==unclosure== 77391 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #43104: <==negation-removal== 79434 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #55584: <==negation-removal== 90963 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #64504: <==negation-removal== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #77391: <==uncertain_firing== 64561 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #90512: <==negation-removal== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))))

    (:action sensecells_b_p1_p2
        :precondition (and (at_b_p1)
                           (succ_p1_p2))
        :effect (and
                    ; #22640: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #37628: <==closure== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #38191: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #50860: <==closure== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #25127: <==negation-removal== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #26611: <==negation-removal== 50860 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #29795: <==uncertain_firing== 22640 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #46088: <==negation-removal== 37628 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #67361: <==negation-removal== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #92122: <==unclosure== 29795 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p1_p3
        :precondition (and (at_b_p1)
                           (succ_p1_p3))
        :effect (and
                    ; #24734: <==closure== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #39022: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #41943: <==closure== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #42717: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #19317: <==negation-removal== 24734 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #23649: <==unclosure== 86841 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #51199: <==negation-removal== 41943 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #67749: <==negation-removal== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #86841: <==uncertain_firing== 42717 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #88881: <==negation-removal== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p1_p4
        :precondition (and (at_b_p1)
                           (succ_p1_p4))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36608: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #47694: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #49808: <==closure== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #71128: <==closure== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #35718: <==negation-removal== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #45042: <==negation-removal== 49808 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #50923: <==uncertain_firing== 36608 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #55508: <==negation-removal== 71128 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #78934: <==unclosure== 50923 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #82956: <==negation-removal== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))))

    (:action sensecells_b_p1_p5
        :precondition (and (succ_p1_p5)
                           (at_b_p1))
        :effect (and
                    ; #19774: <==closure== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #52661: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64301: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #77186: <==closure== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #24742: <==negation-removal== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #36403: <==uncertain_firing== 64301 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #55704: <==negation-removal== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #68489: <==negation-removal== 77186 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73946: <==unclosure== 36403 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #77558: <==negation-removal== 19774 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p1_p6
        :precondition (and (at_b_p1)
                           (succ_p1_p6))
        :effect (and
                    ; #20857: <==closure== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #52799: <==closure== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #63208: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #69572: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15454: <==negation-removal== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24186: <==negation-removal== 52799 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #27366: <==negation-removal== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #39668: <==negation-removal== 20857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #61438: <==uncertain_firing== 63208 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #88536: <==unclosure== 61438 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p1_p7
        :precondition (and (at_b_p1)
                           (succ_p1_p7))
        :effect (and
                    ; #12981: <==closure== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #47720: <==closure== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #73648: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #80862: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #10025: <==uncertain_firing== 80862 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #19040: <==negation-removal== 47720 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #26327: <==negation-removal== 12981 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #34054: <==negation-removal== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #67582: <==negation-removal== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #78206: <==unclosure== 10025 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p1_p8
        :precondition (and (at_b_p1)
                           (succ_p1_p8))
        :effect (and
                    ; #28479: <==closure== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #51960: <==closure== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #77722: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #90828: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #42141: <==negation-removal== 51960 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #42210: <==unclosure== 64580 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #64580: <==uncertain_firing== 77722 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74232: <==negation-removal== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #75329: <==negation-removal== 28479 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #91107: <==negation-removal== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))))

    (:action sensecells_b_p1_p9
        :precondition (and (at_b_p1)
                           (succ_p1_p9))
        :effect (and
                    ; #25088: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #36245: <==closure== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #57406: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #61210: <==closure== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #15829: <==negation-removal== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #18960: <==negation-removal== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #19462: <==uncertain_firing== 57406 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #32204: <==unclosure== 19462 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #38322: <==negation-removal== 36245 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #52609: <==negation-removal== 61210 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_b_p2_p0011
        :precondition (and (succ_p2_p0011)
                           (at_b_p2))
        :effect (and
                    ; #47058: origin
                    (checked_p0011)

                    ; #49013: <==closure== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #73985: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #77879: <==closure== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #89602: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #22332: <==negation-removal== 77879 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #42013: <==negation-removal== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #50383: <==uncertain_firing== 73985 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #53762: <==unclosure== 50383 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #84811: <==negation-removal== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #92069: <==negation-removal== 49013 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))))

    (:action sensecells_b_p2_p012
        :precondition (and (at_b_p2)
                           (succ_p2_p012))
        :effect (and
                    ; #20807: <==closure== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #29455: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #72703: <==closure== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #79218: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #20119: <==negation-removal== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #23833: <==unclosure== 36944 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #31504: <==negation-removal== 72703 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #36944: <==uncertain_firing== 29455 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66589: <==negation-removal== 20807 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #82199: <==negation-removal== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p2_p1
        :precondition (and (at_b_p2)
                           (succ_p2_p1))
        :effect (and
                    ; #25740: <==closure== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #33186: <==closure== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #55626: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #79331: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #33044: <==negation-removal== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #34072: <==unclosure== 57244 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #57244: <==uncertain_firing== 55626 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #78373: <==negation-removal== 33186 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #81357: <==negation-removal== 25740 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #86148: <==negation-removal== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p2_p10
        :precondition (and (at_b_p2)
                           (succ_p2_p10))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #64561: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #79434: <==closure== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #88052: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #90963: <==closure== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #38614: <==unclosure== 77391 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #43104: <==negation-removal== 79434 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #55584: <==negation-removal== 90963 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #64504: <==negation-removal== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #77391: <==uncertain_firing== 64561 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #90512: <==negation-removal== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))))

    (:action sensecells_b_p2_p2
        :precondition (and (at_b_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #22640: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #37628: <==closure== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #38191: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #50860: <==closure== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #25127: <==negation-removal== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #26611: <==negation-removal== 50860 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #29795: <==uncertain_firing== 22640 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #46088: <==negation-removal== 37628 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #67361: <==negation-removal== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #92122: <==unclosure== 29795 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p2_p3
        :precondition (and (succ_p2_p3)
                           (at_b_p2))
        :effect (and
                    ; #24734: <==closure== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #39022: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #41943: <==closure== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #42717: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #19317: <==negation-removal== 24734 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #23649: <==unclosure== 86841 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #51199: <==negation-removal== 41943 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #67749: <==negation-removal== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #86841: <==uncertain_firing== 42717 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #88881: <==negation-removal== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p2_p4
        :precondition (and (succ_p2_p4)
                           (at_b_p2))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36608: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #47694: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #49808: <==closure== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #71128: <==closure== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #35718: <==negation-removal== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #45042: <==negation-removal== 49808 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #50923: <==uncertain_firing== 36608 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #55508: <==negation-removal== 71128 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #78934: <==unclosure== 50923 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #82956: <==negation-removal== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))))

    (:action sensecells_b_p2_p5
        :precondition (and (succ_p2_p5)
                           (at_b_p2))
        :effect (and
                    ; #19774: <==closure== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #52661: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64301: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #77186: <==closure== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #24742: <==negation-removal== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #36403: <==uncertain_firing== 64301 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #55704: <==negation-removal== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #68489: <==negation-removal== 77186 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73946: <==unclosure== 36403 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #77558: <==negation-removal== 19774 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p2_p6
        :precondition (and (at_b_p2)
                           (succ_p2_p6))
        :effect (and
                    ; #20857: <==closure== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #52799: <==closure== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #63208: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #69572: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15454: <==negation-removal== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24186: <==negation-removal== 52799 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #27366: <==negation-removal== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #39668: <==negation-removal== 20857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #61438: <==uncertain_firing== 63208 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #88536: <==unclosure== 61438 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p2_p7
        :precondition (and (succ_p2_p7)
                           (at_b_p2))
        :effect (and
                    ; #12981: <==closure== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #47720: <==closure== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #73648: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #80862: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #10025: <==uncertain_firing== 80862 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #19040: <==negation-removal== 47720 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #26327: <==negation-removal== 12981 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #34054: <==negation-removal== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #67582: <==negation-removal== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #78206: <==unclosure== 10025 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p2_p8
        :precondition (and (at_b_p2)
                           (succ_p2_p8))
        :effect (and
                    ; #28479: <==closure== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #51960: <==closure== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #77722: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #90828: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #42141: <==negation-removal== 51960 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #42210: <==unclosure== 64580 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #64580: <==uncertain_firing== 77722 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74232: <==negation-removal== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #75329: <==negation-removal== 28479 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #91107: <==negation-removal== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))))

    (:action sensecells_b_p2_p9
        :precondition (and (succ_p2_p9)
                           (at_b_p2))
        :effect (and
                    ; #25088: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #36245: <==closure== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #57406: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #61210: <==closure== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #15829: <==negation-removal== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #18960: <==negation-removal== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #19462: <==uncertain_firing== 57406 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #32204: <==unclosure== 19462 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #38322: <==negation-removal== 36245 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #52609: <==negation-removal== 61210 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_b_p3_p0011
        :precondition (and (at_b_p3)
                           (succ_p3_p0011))
        :effect (and
                    ; #47058: origin
                    (checked_p0011)

                    ; #49013: <==closure== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #73985: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #77879: <==closure== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #89602: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #22332: <==negation-removal== 77879 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #42013: <==negation-removal== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #50383: <==uncertain_firing== 73985 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #53762: <==unclosure== 50383 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #84811: <==negation-removal== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #92069: <==negation-removal== 49013 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))))

    (:action sensecells_b_p3_p012
        :precondition (and (succ_p3_p012)
                           (at_b_p3))
        :effect (and
                    ; #20807: <==closure== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #29455: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #72703: <==closure== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #79218: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #20119: <==negation-removal== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #23833: <==unclosure== 36944 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #31504: <==negation-removal== 72703 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #36944: <==uncertain_firing== 29455 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66589: <==negation-removal== 20807 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #82199: <==negation-removal== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p3_p1
        :precondition (and (at_b_p3)
                           (succ_p3_p1))
        :effect (and
                    ; #25740: <==closure== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #33186: <==closure== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #55626: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #79331: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #33044: <==negation-removal== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #34072: <==unclosure== 57244 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #57244: <==uncertain_firing== 55626 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #78373: <==negation-removal== 33186 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #81357: <==negation-removal== 25740 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #86148: <==negation-removal== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p3_p10
        :precondition (and (succ_p3_p10)
                           (at_b_p3))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #64561: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #79434: <==closure== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #88052: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #90963: <==closure== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #38614: <==unclosure== 77391 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #43104: <==negation-removal== 79434 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #55584: <==negation-removal== 90963 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #64504: <==negation-removal== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #77391: <==uncertain_firing== 64561 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #90512: <==negation-removal== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))))

    (:action sensecells_b_p3_p2
        :precondition (and (at_b_p3)
                           (succ_p3_p2))
        :effect (and
                    ; #22640: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #37628: <==closure== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #38191: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #50860: <==closure== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #25127: <==negation-removal== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #26611: <==negation-removal== 50860 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #29795: <==uncertain_firing== 22640 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #46088: <==negation-removal== 37628 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #67361: <==negation-removal== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #92122: <==unclosure== 29795 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p3_p3
        :precondition (and (succ_p3_p3)
                           (at_b_p3))
        :effect (and
                    ; #24734: <==closure== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #39022: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #41943: <==closure== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #42717: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #19317: <==negation-removal== 24734 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #23649: <==unclosure== 86841 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #51199: <==negation-removal== 41943 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #67749: <==negation-removal== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #86841: <==uncertain_firing== 42717 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #88881: <==negation-removal== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p3_p4
        :precondition (and (succ_p3_p4)
                           (at_b_p3))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36608: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #47694: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #49808: <==closure== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #71128: <==closure== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #35718: <==negation-removal== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #45042: <==negation-removal== 49808 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #50923: <==uncertain_firing== 36608 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #55508: <==negation-removal== 71128 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #78934: <==unclosure== 50923 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #82956: <==negation-removal== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))))

    (:action sensecells_b_p3_p5
        :precondition (and (succ_p3_p5)
                           (at_b_p3))
        :effect (and
                    ; #19774: <==closure== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #52661: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64301: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #77186: <==closure== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #24742: <==negation-removal== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #36403: <==uncertain_firing== 64301 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #55704: <==negation-removal== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #68489: <==negation-removal== 77186 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73946: <==unclosure== 36403 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #77558: <==negation-removal== 19774 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p3_p6
        :precondition (and (succ_p3_p6)
                           (at_b_p3))
        :effect (and
                    ; #20857: <==closure== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #52799: <==closure== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #63208: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #69572: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15454: <==negation-removal== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24186: <==negation-removal== 52799 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #27366: <==negation-removal== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #39668: <==negation-removal== 20857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #61438: <==uncertain_firing== 63208 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #88536: <==unclosure== 61438 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p3_p7
        :precondition (and (succ_p3_p7)
                           (at_b_p3))
        :effect (and
                    ; #12981: <==closure== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #47720: <==closure== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #73648: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #80862: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #10025: <==uncertain_firing== 80862 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #19040: <==negation-removal== 47720 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #26327: <==negation-removal== 12981 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #34054: <==negation-removal== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #67582: <==negation-removal== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #78206: <==unclosure== 10025 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p3_p8
        :precondition (and (succ_p3_p8)
                           (at_b_p3))
        :effect (and
                    ; #28479: <==closure== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #51960: <==closure== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #77722: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #90828: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #42141: <==negation-removal== 51960 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #42210: <==unclosure== 64580 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #64580: <==uncertain_firing== 77722 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74232: <==negation-removal== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #75329: <==negation-removal== 28479 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #91107: <==negation-removal== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))))

    (:action sensecells_b_p3_p9
        :precondition (and (succ_p3_p9)
                           (at_b_p3))
        :effect (and
                    ; #25088: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #36245: <==closure== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #57406: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #61210: <==closure== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #15829: <==negation-removal== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #18960: <==negation-removal== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #19462: <==uncertain_firing== 57406 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #32204: <==unclosure== 19462 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #38322: <==negation-removal== 36245 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #52609: <==negation-removal== 61210 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_b_p4_p0011
        :precondition (and (at_b_p4)
                           (succ_p4_p0011))
        :effect (and
                    ; #47058: origin
                    (checked_p0011)

                    ; #49013: <==closure== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #73985: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #77879: <==closure== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #89602: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #22332: <==negation-removal== 77879 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #42013: <==negation-removal== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #50383: <==uncertain_firing== 73985 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #53762: <==unclosure== 50383 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #84811: <==negation-removal== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #92069: <==negation-removal== 49013 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))))

    (:action sensecells_b_p4_p012
        :precondition (and (at_b_p4)
                           (succ_p4_p012))
        :effect (and
                    ; #20807: <==closure== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #29455: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #72703: <==closure== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #79218: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #20119: <==negation-removal== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #23833: <==unclosure== 36944 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #31504: <==negation-removal== 72703 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #36944: <==uncertain_firing== 29455 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66589: <==negation-removal== 20807 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #82199: <==negation-removal== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p4_p1
        :precondition (and (at_b_p4)
                           (succ_p4_p1))
        :effect (and
                    ; #25740: <==closure== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #33186: <==closure== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #55626: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #79331: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #33044: <==negation-removal== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #34072: <==unclosure== 57244 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #57244: <==uncertain_firing== 55626 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #78373: <==negation-removal== 33186 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #81357: <==negation-removal== 25740 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #86148: <==negation-removal== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p4_p10
        :precondition (and (succ_p4_p10)
                           (at_b_p4))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #64561: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #79434: <==closure== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #88052: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #90963: <==closure== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #38614: <==unclosure== 77391 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #43104: <==negation-removal== 79434 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #55584: <==negation-removal== 90963 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #64504: <==negation-removal== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #77391: <==uncertain_firing== 64561 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #90512: <==negation-removal== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))))

    (:action sensecells_b_p4_p2
        :precondition (and (at_b_p4)
                           (succ_p4_p2))
        :effect (and
                    ; #22640: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #37628: <==closure== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #38191: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #50860: <==closure== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #25127: <==negation-removal== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #26611: <==negation-removal== 50860 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #29795: <==uncertain_firing== 22640 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #46088: <==negation-removal== 37628 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #67361: <==negation-removal== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #92122: <==unclosure== 29795 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p4_p3
        :precondition (and (at_b_p4)
                           (succ_p4_p3))
        :effect (and
                    ; #24734: <==closure== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #39022: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #41943: <==closure== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #42717: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #19317: <==negation-removal== 24734 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #23649: <==unclosure== 86841 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #51199: <==negation-removal== 41943 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #67749: <==negation-removal== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #86841: <==uncertain_firing== 42717 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #88881: <==negation-removal== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p4_p4
        :precondition (and (at_b_p4)
                           (succ_p4_p4))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36608: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #47694: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #49808: <==closure== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #71128: <==closure== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #35718: <==negation-removal== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #45042: <==negation-removal== 49808 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #50923: <==uncertain_firing== 36608 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #55508: <==negation-removal== 71128 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #78934: <==unclosure== 50923 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #82956: <==negation-removal== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))))

    (:action sensecells_b_p4_p5
        :precondition (and (at_b_p4)
                           (succ_p4_p5))
        :effect (and
                    ; #19774: <==closure== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #52661: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64301: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #77186: <==closure== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #24742: <==negation-removal== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #36403: <==uncertain_firing== 64301 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #55704: <==negation-removal== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #68489: <==negation-removal== 77186 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73946: <==unclosure== 36403 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #77558: <==negation-removal== 19774 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p4_p6
        :precondition (and (succ_p4_p6)
                           (at_b_p4))
        :effect (and
                    ; #20857: <==closure== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #52799: <==closure== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #63208: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #69572: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15454: <==negation-removal== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24186: <==negation-removal== 52799 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #27366: <==negation-removal== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #39668: <==negation-removal== 20857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #61438: <==uncertain_firing== 63208 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #88536: <==unclosure== 61438 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p4_p7
        :precondition (and (at_b_p4)
                           (succ_p4_p7))
        :effect (and
                    ; #12981: <==closure== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #47720: <==closure== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #73648: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #80862: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #10025: <==uncertain_firing== 80862 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #19040: <==negation-removal== 47720 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #26327: <==negation-removal== 12981 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #34054: <==negation-removal== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #67582: <==negation-removal== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #78206: <==unclosure== 10025 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p4_p8
        :precondition (and (at_b_p4)
                           (succ_p4_p8))
        :effect (and
                    ; #28479: <==closure== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #51960: <==closure== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #77722: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #90828: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #42141: <==negation-removal== 51960 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #42210: <==unclosure== 64580 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #64580: <==uncertain_firing== 77722 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74232: <==negation-removal== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #75329: <==negation-removal== 28479 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #91107: <==negation-removal== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))))

    (:action sensecells_b_p4_p9
        :precondition (and (at_b_p4)
                           (succ_p4_p9))
        :effect (and
                    ; #25088: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #36245: <==closure== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #57406: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #61210: <==closure== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #15829: <==negation-removal== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #18960: <==negation-removal== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #19462: <==uncertain_firing== 57406 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #32204: <==unclosure== 19462 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #38322: <==negation-removal== 36245 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #52609: <==negation-removal== 61210 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_b_p5_p0011
        :precondition (and (at_b_p5)
                           (succ_p5_p0011))
        :effect (and
                    ; #47058: origin
                    (checked_p0011)

                    ; #49013: <==closure== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #73985: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #77879: <==closure== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #89602: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #22332: <==negation-removal== 77879 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #42013: <==negation-removal== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #50383: <==uncertain_firing== 73985 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #53762: <==unclosure== 50383 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #84811: <==negation-removal== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #92069: <==negation-removal== 49013 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))))

    (:action sensecells_b_p5_p012
        :precondition (and (succ_p5_p012)
                           (at_b_p5))
        :effect (and
                    ; #20807: <==closure== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #29455: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #72703: <==closure== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #79218: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #20119: <==negation-removal== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #23833: <==unclosure== 36944 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #31504: <==negation-removal== 72703 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #36944: <==uncertain_firing== 29455 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66589: <==negation-removal== 20807 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #82199: <==negation-removal== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p5_p1
        :precondition (and (succ_p5_p1)
                           (at_b_p5))
        :effect (and
                    ; #25740: <==closure== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #33186: <==closure== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #55626: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #79331: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #33044: <==negation-removal== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #34072: <==unclosure== 57244 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #57244: <==uncertain_firing== 55626 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #78373: <==negation-removal== 33186 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #81357: <==negation-removal== 25740 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #86148: <==negation-removal== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p5_p10
        :precondition (and (succ_p5_p10)
                           (at_b_p5))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #64561: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #79434: <==closure== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #88052: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #90963: <==closure== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #38614: <==unclosure== 77391 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #43104: <==negation-removal== 79434 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #55584: <==negation-removal== 90963 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #64504: <==negation-removal== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #77391: <==uncertain_firing== 64561 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #90512: <==negation-removal== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))))

    (:action sensecells_b_p5_p2
        :precondition (and (succ_p5_p2)
                           (at_b_p5))
        :effect (and
                    ; #22640: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #37628: <==closure== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #38191: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #50860: <==closure== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #25127: <==negation-removal== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #26611: <==negation-removal== 50860 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #29795: <==uncertain_firing== 22640 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #46088: <==negation-removal== 37628 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #67361: <==negation-removal== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #92122: <==unclosure== 29795 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p5_p3
        :precondition (and (at_b_p5)
                           (succ_p5_p3))
        :effect (and
                    ; #24734: <==closure== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #39022: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #41943: <==closure== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #42717: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #19317: <==negation-removal== 24734 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #23649: <==unclosure== 86841 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #51199: <==negation-removal== 41943 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #67749: <==negation-removal== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #86841: <==uncertain_firing== 42717 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #88881: <==negation-removal== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p5_p4
        :precondition (and (succ_p5_p4)
                           (at_b_p5))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36608: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #47694: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #49808: <==closure== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #71128: <==closure== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #35718: <==negation-removal== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #45042: <==negation-removal== 49808 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #50923: <==uncertain_firing== 36608 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #55508: <==negation-removal== 71128 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #78934: <==unclosure== 50923 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #82956: <==negation-removal== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))))

    (:action sensecells_b_p5_p5
        :precondition (and (at_b_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #19774: <==closure== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #52661: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64301: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #77186: <==closure== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #24742: <==negation-removal== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #36403: <==uncertain_firing== 64301 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #55704: <==negation-removal== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #68489: <==negation-removal== 77186 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73946: <==unclosure== 36403 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #77558: <==negation-removal== 19774 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p5_p6
        :precondition (and (succ_p5_p6)
                           (at_b_p5))
        :effect (and
                    ; #20857: <==closure== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #52799: <==closure== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #63208: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #69572: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15454: <==negation-removal== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24186: <==negation-removal== 52799 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #27366: <==negation-removal== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #39668: <==negation-removal== 20857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #61438: <==uncertain_firing== 63208 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #88536: <==unclosure== 61438 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p5_p7
        :precondition (and (succ_p5_p7)
                           (at_b_p5))
        :effect (and
                    ; #12981: <==closure== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #47720: <==closure== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #73648: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #80862: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #10025: <==uncertain_firing== 80862 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #19040: <==negation-removal== 47720 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #26327: <==negation-removal== 12981 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #34054: <==negation-removal== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #67582: <==negation-removal== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #78206: <==unclosure== 10025 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p5_p8
        :precondition (and (succ_p5_p8)
                           (at_b_p5))
        :effect (and
                    ; #28479: <==closure== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #51960: <==closure== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #77722: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #90828: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #42141: <==negation-removal== 51960 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #42210: <==unclosure== 64580 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #64580: <==uncertain_firing== 77722 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74232: <==negation-removal== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #75329: <==negation-removal== 28479 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #91107: <==negation-removal== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))))

    (:action sensecells_b_p5_p9
        :precondition (and (succ_p5_p9)
                           (at_b_p5))
        :effect (and
                    ; #25088: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #36245: <==closure== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #57406: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #61210: <==closure== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #15829: <==negation-removal== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #18960: <==negation-removal== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #19462: <==uncertain_firing== 57406 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #32204: <==unclosure== 19462 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #38322: <==negation-removal== 36245 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #52609: <==negation-removal== 61210 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_b_p6_p0011
        :precondition (and (succ_p6_p0011)
                           (at_b_p6))
        :effect (and
                    ; #47058: origin
                    (checked_p0011)

                    ; #49013: <==closure== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #73985: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #77879: <==closure== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #89602: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #22332: <==negation-removal== 77879 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #42013: <==negation-removal== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #50383: <==uncertain_firing== 73985 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #53762: <==unclosure== 50383 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #84811: <==negation-removal== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #92069: <==negation-removal== 49013 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))))

    (:action sensecells_b_p6_p012
        :precondition (and (at_b_p6)
                           (succ_p6_p012))
        :effect (and
                    ; #20807: <==closure== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #29455: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #72703: <==closure== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #79218: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #20119: <==negation-removal== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #23833: <==unclosure== 36944 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #31504: <==negation-removal== 72703 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #36944: <==uncertain_firing== 29455 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66589: <==negation-removal== 20807 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #82199: <==negation-removal== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p6_p1
        :precondition (and (succ_p6_p1)
                           (at_b_p6))
        :effect (and
                    ; #25740: <==closure== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #33186: <==closure== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #55626: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #79331: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #33044: <==negation-removal== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #34072: <==unclosure== 57244 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #57244: <==uncertain_firing== 55626 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #78373: <==negation-removal== 33186 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #81357: <==negation-removal== 25740 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #86148: <==negation-removal== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p6_p10
        :precondition (and (at_b_p6)
                           (succ_p6_p10))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #64561: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #79434: <==closure== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #88052: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #90963: <==closure== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #38614: <==unclosure== 77391 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #43104: <==negation-removal== 79434 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #55584: <==negation-removal== 90963 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #64504: <==negation-removal== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #77391: <==uncertain_firing== 64561 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #90512: <==negation-removal== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))))

    (:action sensecells_b_p6_p2
        :precondition (and (at_b_p6)
                           (succ_p6_p2))
        :effect (and
                    ; #22640: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #37628: <==closure== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #38191: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #50860: <==closure== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #25127: <==negation-removal== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #26611: <==negation-removal== 50860 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #29795: <==uncertain_firing== 22640 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #46088: <==negation-removal== 37628 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #67361: <==negation-removal== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #92122: <==unclosure== 29795 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p6_p3
        :precondition (and (at_b_p6)
                           (succ_p6_p3))
        :effect (and
                    ; #24734: <==closure== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #39022: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #41943: <==closure== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #42717: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #19317: <==negation-removal== 24734 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #23649: <==unclosure== 86841 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #51199: <==negation-removal== 41943 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #67749: <==negation-removal== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #86841: <==uncertain_firing== 42717 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #88881: <==negation-removal== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p6_p4
        :precondition (and (succ_p6_p4)
                           (at_b_p6))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36608: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #47694: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #49808: <==closure== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #71128: <==closure== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #35718: <==negation-removal== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #45042: <==negation-removal== 49808 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #50923: <==uncertain_firing== 36608 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #55508: <==negation-removal== 71128 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #78934: <==unclosure== 50923 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #82956: <==negation-removal== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))))

    (:action sensecells_b_p6_p5
        :precondition (and (succ_p6_p5)
                           (at_b_p6))
        :effect (and
                    ; #19774: <==closure== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #52661: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64301: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #77186: <==closure== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #24742: <==negation-removal== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #36403: <==uncertain_firing== 64301 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #55704: <==negation-removal== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #68489: <==negation-removal== 77186 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73946: <==unclosure== 36403 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #77558: <==negation-removal== 19774 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p6_p6
        :precondition (and (at_b_p6)
                           (succ_p6_p6))
        :effect (and
                    ; #20857: <==closure== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #52799: <==closure== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #63208: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #69572: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15454: <==negation-removal== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24186: <==negation-removal== 52799 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #27366: <==negation-removal== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #39668: <==negation-removal== 20857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #61438: <==uncertain_firing== 63208 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #88536: <==unclosure== 61438 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p6_p7
        :precondition (and (succ_p6_p7)
                           (at_b_p6))
        :effect (and
                    ; #12981: <==closure== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #47720: <==closure== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #73648: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #80862: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #10025: <==uncertain_firing== 80862 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #19040: <==negation-removal== 47720 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #26327: <==negation-removal== 12981 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #34054: <==negation-removal== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #67582: <==negation-removal== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #78206: <==unclosure== 10025 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p6_p8
        :precondition (and (at_b_p6)
                           (succ_p6_p8))
        :effect (and
                    ; #28479: <==closure== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #51960: <==closure== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #77722: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #90828: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #42141: <==negation-removal== 51960 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #42210: <==unclosure== 64580 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #64580: <==uncertain_firing== 77722 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74232: <==negation-removal== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #75329: <==negation-removal== 28479 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #91107: <==negation-removal== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))))

    (:action sensecells_b_p6_p9
        :precondition (and (at_b_p6)
                           (succ_p6_p9))
        :effect (and
                    ; #25088: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #36245: <==closure== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #57406: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #61210: <==closure== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #15829: <==negation-removal== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #18960: <==negation-removal== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #19462: <==uncertain_firing== 57406 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #32204: <==unclosure== 19462 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #38322: <==negation-removal== 36245 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #52609: <==negation-removal== 61210 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_b_p7_p0011
        :precondition (and (at_b_p7)
                           (succ_p7_p0011))
        :effect (and
                    ; #47058: origin
                    (checked_p0011)

                    ; #49013: <==closure== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #73985: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #77879: <==closure== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #89602: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #22332: <==negation-removal== 77879 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #42013: <==negation-removal== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #50383: <==uncertain_firing== 73985 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #53762: <==unclosure== 50383 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #84811: <==negation-removal== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #92069: <==negation-removal== 49013 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))))

    (:action sensecells_b_p7_p012
        :precondition (and (succ_p7_p012)
                           (at_b_p7))
        :effect (and
                    ; #20807: <==closure== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #29455: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #72703: <==closure== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #79218: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #20119: <==negation-removal== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #23833: <==unclosure== 36944 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #31504: <==negation-removal== 72703 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #36944: <==uncertain_firing== 29455 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66589: <==negation-removal== 20807 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #82199: <==negation-removal== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p7_p1
        :precondition (and (at_b_p7)
                           (succ_p7_p1))
        :effect (and
                    ; #25740: <==closure== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #33186: <==closure== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #55626: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #79331: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #33044: <==negation-removal== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #34072: <==unclosure== 57244 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #57244: <==uncertain_firing== 55626 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #78373: <==negation-removal== 33186 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #81357: <==negation-removal== 25740 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #86148: <==negation-removal== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p7_p10
        :precondition (and (succ_p7_p10)
                           (at_b_p7))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #64561: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #79434: <==closure== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #88052: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #90963: <==closure== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #38614: <==unclosure== 77391 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #43104: <==negation-removal== 79434 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #55584: <==negation-removal== 90963 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #64504: <==negation-removal== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #77391: <==uncertain_firing== 64561 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #90512: <==negation-removal== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))))

    (:action sensecells_b_p7_p2
        :precondition (and (succ_p7_p2)
                           (at_b_p7))
        :effect (and
                    ; #22640: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #37628: <==closure== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #38191: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #50860: <==closure== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #25127: <==negation-removal== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #26611: <==negation-removal== 50860 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #29795: <==uncertain_firing== 22640 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #46088: <==negation-removal== 37628 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #67361: <==negation-removal== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #92122: <==unclosure== 29795 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p7_p3
        :precondition (and (at_b_p7)
                           (succ_p7_p3))
        :effect (and
                    ; #24734: <==closure== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #39022: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #41943: <==closure== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #42717: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #19317: <==negation-removal== 24734 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #23649: <==unclosure== 86841 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #51199: <==negation-removal== 41943 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #67749: <==negation-removal== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #86841: <==uncertain_firing== 42717 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #88881: <==negation-removal== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p7_p4
        :precondition (and (succ_p7_p4)
                           (at_b_p7))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36608: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #47694: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #49808: <==closure== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #71128: <==closure== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #35718: <==negation-removal== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #45042: <==negation-removal== 49808 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #50923: <==uncertain_firing== 36608 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #55508: <==negation-removal== 71128 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #78934: <==unclosure== 50923 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #82956: <==negation-removal== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))))

    (:action sensecells_b_p7_p5
        :precondition (and (at_b_p7)
                           (succ_p7_p5))
        :effect (and
                    ; #19774: <==closure== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #52661: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64301: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #77186: <==closure== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #24742: <==negation-removal== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #36403: <==uncertain_firing== 64301 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #55704: <==negation-removal== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #68489: <==negation-removal== 77186 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73946: <==unclosure== 36403 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #77558: <==negation-removal== 19774 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p7_p6
        :precondition (and (at_b_p7)
                           (succ_p7_p6))
        :effect (and
                    ; #20857: <==closure== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #52799: <==closure== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #63208: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #69572: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15454: <==negation-removal== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24186: <==negation-removal== 52799 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #27366: <==negation-removal== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #39668: <==negation-removal== 20857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #61438: <==uncertain_firing== 63208 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #88536: <==unclosure== 61438 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p7_p7
        :precondition (and (succ_p7_p7)
                           (at_b_p7))
        :effect (and
                    ; #12981: <==closure== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #47720: <==closure== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #73648: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #80862: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #10025: <==uncertain_firing== 80862 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #19040: <==negation-removal== 47720 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #26327: <==negation-removal== 12981 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #34054: <==negation-removal== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #67582: <==negation-removal== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #78206: <==unclosure== 10025 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p7_p8
        :precondition (and (at_b_p7)
                           (succ_p7_p8))
        :effect (and
                    ; #28479: <==closure== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #51960: <==closure== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #77722: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #90828: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #42141: <==negation-removal== 51960 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #42210: <==unclosure== 64580 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #64580: <==uncertain_firing== 77722 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74232: <==negation-removal== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #75329: <==negation-removal== 28479 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #91107: <==negation-removal== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))))

    (:action sensecells_b_p7_p9
        :precondition (and (succ_p7_p9)
                           (at_b_p7))
        :effect (and
                    ; #25088: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #36245: <==closure== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #57406: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #61210: <==closure== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #15829: <==negation-removal== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #18960: <==negation-removal== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #19462: <==uncertain_firing== 57406 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #32204: <==unclosure== 19462 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #38322: <==negation-removal== 36245 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #52609: <==negation-removal== 61210 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_b_p8_p0011
        :precondition (and (succ_p8_p0011)
                           (at_b_p8))
        :effect (and
                    ; #47058: origin
                    (checked_p0011)

                    ; #49013: <==closure== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #73985: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #77879: <==closure== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #89602: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #22332: <==negation-removal== 77879 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #42013: <==negation-removal== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #50383: <==uncertain_firing== 73985 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #53762: <==unclosure== 50383 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #84811: <==negation-removal== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #92069: <==negation-removal== 49013 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))))

    (:action sensecells_b_p8_p012
        :precondition (and (succ_p8_p012)
                           (at_b_p8))
        :effect (and
                    ; #20807: <==closure== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #29455: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #72703: <==closure== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #79218: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #20119: <==negation-removal== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #23833: <==unclosure== 36944 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #31504: <==negation-removal== 72703 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #36944: <==uncertain_firing== 29455 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66589: <==negation-removal== 20807 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #82199: <==negation-removal== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p8_p1
        :precondition (and (succ_p8_p1)
                           (at_b_p8))
        :effect (and
                    ; #25740: <==closure== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #33186: <==closure== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #55626: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #79331: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #33044: <==negation-removal== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #34072: <==unclosure== 57244 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #57244: <==uncertain_firing== 55626 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #78373: <==negation-removal== 33186 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #81357: <==negation-removal== 25740 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #86148: <==negation-removal== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p8_p10
        :precondition (and (succ_p8_p10)
                           (at_b_p8))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #64561: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #79434: <==closure== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #88052: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #90963: <==closure== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #38614: <==unclosure== 77391 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #43104: <==negation-removal== 79434 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #55584: <==negation-removal== 90963 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #64504: <==negation-removal== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #77391: <==uncertain_firing== 64561 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #90512: <==negation-removal== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))))

    (:action sensecells_b_p8_p2
        :precondition (and (succ_p8_p2)
                           (at_b_p8))
        :effect (and
                    ; #22640: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #37628: <==closure== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #38191: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #50860: <==closure== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #25127: <==negation-removal== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #26611: <==negation-removal== 50860 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #29795: <==uncertain_firing== 22640 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #46088: <==negation-removal== 37628 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #67361: <==negation-removal== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #92122: <==unclosure== 29795 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p8_p3
        :precondition (and (succ_p8_p3)
                           (at_b_p8))
        :effect (and
                    ; #24734: <==closure== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #39022: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #41943: <==closure== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #42717: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #19317: <==negation-removal== 24734 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #23649: <==unclosure== 86841 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #51199: <==negation-removal== 41943 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #67749: <==negation-removal== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #86841: <==uncertain_firing== 42717 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #88881: <==negation-removal== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p8_p4
        :precondition (and (succ_p8_p4)
                           (at_b_p8))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36608: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #47694: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #49808: <==closure== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #71128: <==closure== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #35718: <==negation-removal== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #45042: <==negation-removal== 49808 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #50923: <==uncertain_firing== 36608 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #55508: <==negation-removal== 71128 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #78934: <==unclosure== 50923 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #82956: <==negation-removal== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))))

    (:action sensecells_b_p8_p5
        :precondition (and (succ_p8_p5)
                           (at_b_p8))
        :effect (and
                    ; #19774: <==closure== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #52661: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64301: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #77186: <==closure== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #24742: <==negation-removal== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #36403: <==uncertain_firing== 64301 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #55704: <==negation-removal== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #68489: <==negation-removal== 77186 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73946: <==unclosure== 36403 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #77558: <==negation-removal== 19774 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p8_p6
        :precondition (and (succ_p8_p6)
                           (at_b_p8))
        :effect (and
                    ; #20857: <==closure== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #52799: <==closure== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #63208: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #69572: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15454: <==negation-removal== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24186: <==negation-removal== 52799 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #27366: <==negation-removal== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #39668: <==negation-removal== 20857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #61438: <==uncertain_firing== 63208 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #88536: <==unclosure== 61438 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p8_p7
        :precondition (and (succ_p8_p7)
                           (at_b_p8))
        :effect (and
                    ; #12981: <==closure== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #47720: <==closure== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #73648: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #80862: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #10025: <==uncertain_firing== 80862 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #19040: <==negation-removal== 47720 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #26327: <==negation-removal== 12981 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #34054: <==negation-removal== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #67582: <==negation-removal== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #78206: <==unclosure== 10025 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p8_p8
        :precondition (and (succ_p8_p8)
                           (at_b_p8))
        :effect (and
                    ; #28479: <==closure== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #51960: <==closure== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #77722: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #90828: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #42141: <==negation-removal== 51960 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #42210: <==unclosure== 64580 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #64580: <==uncertain_firing== 77722 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74232: <==negation-removal== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #75329: <==negation-removal== 28479 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #91107: <==negation-removal== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))))

    (:action sensecells_b_p8_p9
        :precondition (and (succ_p8_p9)
                           (at_b_p8))
        :effect (and
                    ; #25088: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #36245: <==closure== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #57406: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #61210: <==closure== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #15829: <==negation-removal== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #18960: <==negation-removal== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #19462: <==uncertain_firing== 57406 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #32204: <==unclosure== 19462 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #38322: <==negation-removal== 36245 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #52609: <==negation-removal== 61210 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_b_p9_p0011
        :precondition (and (at_b_p9)
                           (succ_p9_p0011))
        :effect (and
                    ; #47058: origin
                    (checked_p0011)

                    ; #49013: <==closure== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #73985: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #77879: <==closure== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #89602: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #22332: <==negation-removal== 77879 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #42013: <==negation-removal== 73985 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #50383: <==uncertain_firing== 73985 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #53762: <==unclosure== 50383 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #84811: <==negation-removal== 89602 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #92069: <==negation-removal== 49013 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))))

    (:action sensecells_b_p9_p012
        :precondition (and (at_b_p9)
                           (succ_p9_p012))
        :effect (and
                    ; #20807: <==closure== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #29455: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #72703: <==closure== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #79218: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #20119: <==negation-removal== 79218 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #23833: <==unclosure== 36944 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #31504: <==negation-removal== 72703 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #36944: <==uncertain_firing== 29455 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66589: <==negation-removal== 20807 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #82199: <==negation-removal== 29455 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p9_p1
        :precondition (and (succ_p9_p1)
                           (at_b_p9))
        :effect (and
                    ; #25740: <==closure== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #33186: <==closure== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #55626: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #79331: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #33044: <==negation-removal== 79331 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #34072: <==unclosure== 57244 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #57244: <==uncertain_firing== 55626 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #78373: <==negation-removal== 33186 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #81357: <==negation-removal== 25740 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #86148: <==negation-removal== 55626 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p9_p10
        :precondition (and (at_b_p9)
                           (succ_p9_p10))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #64561: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #79434: <==closure== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #88052: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #90963: <==closure== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #38614: <==unclosure== 77391 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #43104: <==negation-removal== 79434 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #55584: <==negation-removal== 90963 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))

                    ; #64504: <==negation-removal== 64561 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #77391: <==uncertain_firing== 64561 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #90512: <==negation-removal== 88052 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))))

    (:action sensecells_b_p9_p2
        :precondition (and (at_b_p9)
                           (succ_p9_p2))
        :effect (and
                    ; #22640: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #37628: <==closure== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #38191: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #50860: <==closure== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #25127: <==negation-removal== 22640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #26611: <==negation-removal== 50860 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #29795: <==uncertain_firing== 22640 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #46088: <==negation-removal== 37628 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #67361: <==negation-removal== 38191 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #92122: <==unclosure== 29795 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p9_p3
        :precondition (and (at_b_p9)
                           (succ_p9_p3))
        :effect (and
                    ; #24734: <==closure== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #39022: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #41943: <==closure== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #42717: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #19317: <==negation-removal== 24734 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #23649: <==unclosure== 86841 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #51199: <==negation-removal== 41943 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #67749: <==negation-removal== 39022 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #86841: <==uncertain_firing== 42717 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #88881: <==negation-removal== 42717 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p9_p4
        :precondition (and (at_b_p9)
                           (succ_p9_p4))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #36608: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #47694: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #49808: <==closure== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #71128: <==closure== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #35718: <==negation-removal== 47694 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #45042: <==negation-removal== 49808 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #50923: <==uncertain_firing== 36608 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #55508: <==negation-removal== 71128 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #78934: <==unclosure== 50923 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #82956: <==negation-removal== 36608 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))))

    (:action sensecells_b_p9_p5
        :precondition (and (at_b_p9)
                           (succ_p9_p5))
        :effect (and
                    ; #19774: <==closure== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #52661: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #64301: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #77186: <==closure== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #24742: <==negation-removal== 64301 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #36403: <==uncertain_firing== 64301 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #55704: <==negation-removal== 52661 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #68489: <==negation-removal== 77186 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73946: <==unclosure== 36403 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #77558: <==negation-removal== 19774 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p9_p6
        :precondition (and (at_b_p9)
                           (succ_p9_p6))
        :effect (and
                    ; #20857: <==closure== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #52799: <==closure== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #63208: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #69572: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15454: <==negation-removal== 63208 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24186: <==negation-removal== 52799 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #27366: <==negation-removal== 69572 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #39668: <==negation-removal== 20857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #61438: <==uncertain_firing== 63208 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #88536: <==unclosure== 61438 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p9_p7
        :precondition (and (succ_p9_p7)
                           (at_b_p9))
        :effect (and
                    ; #12981: <==closure== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #47720: <==closure== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #73648: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #80862: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #10025: <==uncertain_firing== 80862 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #19040: <==negation-removal== 47720 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #26327: <==negation-removal== 12981 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #34054: <==negation-removal== 73648 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #67582: <==negation-removal== 80862 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #78206: <==unclosure== 10025 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p9_p8
        :precondition (and (at_b_p9)
                           (succ_p9_p8))
        :effect (and
                    ; #28479: <==closure== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #51960: <==closure== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #77722: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #90828: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #42141: <==negation-removal== 51960 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #42210: <==unclosure== 64580 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #64580: <==uncertain_firing== 77722 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #74232: <==negation-removal== 77722 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #75329: <==negation-removal== 28479 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #91107: <==negation-removal== 90828 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))))

    (:action sensecells_b_p9_p9
        :precondition (and (at_b_p9)
                           (succ_p9_p9))
        :effect (and
                    ; #25088: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #36245: <==closure== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #57406: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #61210: <==closure== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #15829: <==negation-removal== 25088 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #18960: <==negation-removal== 57406 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #19462: <==uncertain_firing== 57406 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #32204: <==unclosure== 19462 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #38322: <==negation-removal== 36245 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #52609: <==negation-removal== 61210 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_c_p0011_p0011
        :precondition (and (at_c_p0011)
                           (succ_p0011_p0011))
        :effect (and
                    ; #35002: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #36066: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #53318: <==closure== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #88322: <==closure== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #11856: <==uncertain_firing== 35002 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #17771: <==negation-removal== 53318 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #21560: <==negation-removal== 88322 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #25760: <==negation-removal== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #31079: <==unclosure== 11856 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #89371: <==negation-removal== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))))

    (:action sensecells_c_p0011_p012
        :precondition (and (at_c_p0011)
                           (succ_p0011_p012))
        :effect (and
                    ; #10277: <==closure== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #33626: <==closure== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #39769: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #46719: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #48397: <==negation-removal== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #50647: <==negation-removal== 10277 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #52203: <==uncertain_firing== 39769 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #55858: <==unclosure== 52203 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66596: <==negation-removal== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #78172: <==negation-removal== 33626 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))))

    (:action sensecells_c_p0011_p1
        :precondition (and (at_c_p0011)
                           (succ_p0011_p1))
        :effect (and
                    ; #10789: <==closure== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #11973: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #50777: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #78046: <==closure== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #36948: <==uncertain_firing== 50777 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #39537: <==unclosure== 36948 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #50106: <==negation-removal== 10789 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #55720: <==negation-removal== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #62921: <==negation-removal== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63489: <==negation-removal== 78046 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p0011_p10
        :precondition (and (at_c_p0011)
                           (succ_p0011_p10))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #60406: <==closure== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #78858: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #79743: <==closure== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #81132: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #11801: <==uncertain_firing== 81132 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #20325: <==negation-removal== 79743 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #62712: <==negation-removal== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #67022: <==unclosure== 11801 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #85042: <==negation-removal== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #88350: <==negation-removal== 60406 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))))

    (:action sensecells_c_p0011_p2
        :precondition (and (at_c_p0011)
                           (succ_p0011_p2))
        :effect (and
                    ; #11411: <==closure== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #53639: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #59745: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #68407: <==closure== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23301: <==negation-removal== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #35068: <==negation-removal== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #40765: <==negation-removal== 68407 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #66761: <==negation-removal== 11411 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #68162: <==unclosure== 84842 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #84842: <==uncertain_firing== 53639 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p0011_p3
        :precondition (and (at_c_p0011)
                           (succ_p0011_p3))
        :effect (and
                    ; #12461: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #12537: <==closure== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #31941: <==closure== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #51306: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #31493: <==negation-removal== 31941 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #38928: <==unclosure== 85484 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #70616: <==negation-removal== 12537 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #74259: <==negation-removal== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #77179: <==negation-removal== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #85484: <==uncertain_firing== 12461 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p0011_p4
        :precondition (and (at_c_p0011)
                           (succ_p0011_p4))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #22924: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #57841: <==closure== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #73414: <==closure== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88885: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #12387: <==negation-removal== 73414 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #25915: <==uncertain_firing== 22924 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #48310: <==negation-removal== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #49895: <==negation-removal== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #50725: <==negation-removal== 57841 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #75600: <==unclosure== 25915 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p0011_p5
        :precondition (and (at_c_p0011)
                           (succ_p0011_p5))
        :effect (and
                    ; #34181: <==closure== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #35846: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #54256: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #88825: <==closure== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #11393: <==negation-removal== 34181 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #26574: <==unclosure== 40926 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #40926: <==uncertain_firing== 54256 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #62018: <==negation-removal== 88825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73665: <==negation-removal== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #73896: <==negation-removal== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))))

    (:action sensecells_c_p0011_p6
        :precondition (and (at_c_p0011)
                           (succ_p0011_p6))
        :effect (and
                    ; #25053: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #61427: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #66842: <==closure== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #72651: <==closure== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24868: <==negation-removal== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #41125: <==negation-removal== 72651 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #50883: <==negation-removal== 66842 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #53020: <==uncertain_firing== 61427 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #65272: <==negation-removal== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #82667: <==unclosure== 53020 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p0011_p7
        :precondition (and (at_c_p0011)
                           (succ_p0011_p7))
        :effect (and
                    ; #23381: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #37001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #56795: <==closure== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #75421: <==closure== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #11869: <==unclosure== 21463 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #21463: <==uncertain_firing== 23381 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #22198: <==negation-removal== 56795 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #24200: <==negation-removal== 75421 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #35303: <==negation-removal== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #35382: <==negation-removal== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_c_p0011_p8
        :precondition (and (at_c_p0011)
                           (succ_p0011_p8))
        :effect (and
                    ; #30207: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #54163: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #59759: <==closure== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #77350: <==closure== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #15548: <==negation-removal== 77350 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #25854: <==unclosure== 27410 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #27410: <==uncertain_firing== 30207 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #55249: <==negation-removal== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #56739: <==negation-removal== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #88527: <==negation-removal== 59759 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))))

    (:action sensecells_c_p0011_p9
        :precondition (and (at_c_p0011)
                           (succ_p0011_p9))
        :effect (and
                    ; #16617: <==closure== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #17795: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46628: <==closure== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #76393: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20772: <==negation-removal== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #27432: <==uncertain_firing== 17795 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #28014: <==negation-removal== 16617 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #42860: <==negation-removal== 46628 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #46451: <==negation-removal== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #57572: <==unclosure== 27432 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_c_p012_p0011
        :precondition (and (at_c_p012)
                           (succ_p012_p0011))
        :effect (and
                    ; #35002: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #36066: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #53318: <==closure== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #88322: <==closure== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #11856: <==uncertain_firing== 35002 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #17771: <==negation-removal== 53318 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #21560: <==negation-removal== 88322 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #25760: <==negation-removal== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #31079: <==unclosure== 11856 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #89371: <==negation-removal== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))))

    (:action sensecells_c_p012_p012
        :precondition (and (at_c_p012)
                           (succ_p012_p012))
        :effect (and
                    ; #10277: <==closure== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #33626: <==closure== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #39769: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #46719: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #48397: <==negation-removal== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #50647: <==negation-removal== 10277 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #52203: <==uncertain_firing== 39769 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #55858: <==unclosure== 52203 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66596: <==negation-removal== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #78172: <==negation-removal== 33626 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))))

    (:action sensecells_c_p012_p1
        :precondition (and (at_c_p012)
                           (succ_p012_p1))
        :effect (and
                    ; #10789: <==closure== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #11973: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #50777: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #78046: <==closure== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #36948: <==uncertain_firing== 50777 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #39537: <==unclosure== 36948 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #50106: <==negation-removal== 10789 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #55720: <==negation-removal== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #62921: <==negation-removal== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63489: <==negation-removal== 78046 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p012_p10
        :precondition (and (at_c_p012)
                           (succ_p012_p10))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #60406: <==closure== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #78858: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #79743: <==closure== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #81132: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #11801: <==uncertain_firing== 81132 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #20325: <==negation-removal== 79743 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #62712: <==negation-removal== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #67022: <==unclosure== 11801 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #85042: <==negation-removal== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #88350: <==negation-removal== 60406 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))))

    (:action sensecells_c_p012_p2
        :precondition (and (succ_p012_p2)
                           (at_c_p012))
        :effect (and
                    ; #11411: <==closure== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #53639: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #59745: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #68407: <==closure== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23301: <==negation-removal== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #35068: <==negation-removal== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #40765: <==negation-removal== 68407 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #66761: <==negation-removal== 11411 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #68162: <==unclosure== 84842 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #84842: <==uncertain_firing== 53639 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p012_p3
        :precondition (and (at_c_p012)
                           (succ_p012_p3))
        :effect (and
                    ; #12461: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #12537: <==closure== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #31941: <==closure== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #51306: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #31493: <==negation-removal== 31941 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #38928: <==unclosure== 85484 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #70616: <==negation-removal== 12537 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #74259: <==negation-removal== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #77179: <==negation-removal== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #85484: <==uncertain_firing== 12461 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p012_p4
        :precondition (and (succ_p012_p4)
                           (at_c_p012))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #22924: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #57841: <==closure== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #73414: <==closure== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88885: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #12387: <==negation-removal== 73414 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #25915: <==uncertain_firing== 22924 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #48310: <==negation-removal== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #49895: <==negation-removal== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #50725: <==negation-removal== 57841 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #75600: <==unclosure== 25915 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p012_p5
        :precondition (and (at_c_p012)
                           (succ_p012_p5))
        :effect (and
                    ; #34181: <==closure== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #35846: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #54256: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #88825: <==closure== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #11393: <==negation-removal== 34181 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #26574: <==unclosure== 40926 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #40926: <==uncertain_firing== 54256 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #62018: <==negation-removal== 88825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73665: <==negation-removal== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #73896: <==negation-removal== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))))

    (:action sensecells_c_p012_p6
        :precondition (and (at_c_p012)
                           (succ_p012_p6))
        :effect (and
                    ; #25053: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #61427: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #66842: <==closure== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #72651: <==closure== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24868: <==negation-removal== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #41125: <==negation-removal== 72651 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #50883: <==negation-removal== 66842 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #53020: <==uncertain_firing== 61427 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #65272: <==negation-removal== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #82667: <==unclosure== 53020 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p012_p7
        :precondition (and (at_c_p012)
                           (succ_p012_p7))
        :effect (and
                    ; #23381: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #37001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #56795: <==closure== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #75421: <==closure== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #11869: <==unclosure== 21463 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #21463: <==uncertain_firing== 23381 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #22198: <==negation-removal== 56795 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #24200: <==negation-removal== 75421 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #35303: <==negation-removal== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #35382: <==negation-removal== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_c_p012_p8
        :precondition (and (at_c_p012)
                           (succ_p012_p8))
        :effect (and
                    ; #30207: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #54163: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #59759: <==closure== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #77350: <==closure== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #15548: <==negation-removal== 77350 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #25854: <==unclosure== 27410 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #27410: <==uncertain_firing== 30207 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #55249: <==negation-removal== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #56739: <==negation-removal== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #88527: <==negation-removal== 59759 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))))

    (:action sensecells_c_p012_p9
        :precondition (and (succ_p012_p9)
                           (at_c_p012))
        :effect (and
                    ; #16617: <==closure== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #17795: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46628: <==closure== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #76393: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20772: <==negation-removal== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #27432: <==uncertain_firing== 17795 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #28014: <==negation-removal== 16617 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #42860: <==negation-removal== 46628 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #46451: <==negation-removal== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #57572: <==unclosure== 27432 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_c_p10_p0011
        :precondition (and (succ_p10_p0011)
                           (at_c_p10))
        :effect (and
                    ; #35002: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #36066: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #53318: <==closure== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #88322: <==closure== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #11856: <==uncertain_firing== 35002 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #17771: <==negation-removal== 53318 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #21560: <==negation-removal== 88322 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #25760: <==negation-removal== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #31079: <==unclosure== 11856 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #89371: <==negation-removal== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))))

    (:action sensecells_c_p10_p012
        :precondition (and (at_c_p10)
                           (succ_p10_p012))
        :effect (and
                    ; #10277: <==closure== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #33626: <==closure== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #39769: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #46719: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #48397: <==negation-removal== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #50647: <==negation-removal== 10277 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #52203: <==uncertain_firing== 39769 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #55858: <==unclosure== 52203 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66596: <==negation-removal== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #78172: <==negation-removal== 33626 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))))

    (:action sensecells_c_p10_p1
        :precondition (and (at_c_p10)
                           (succ_p10_p1))
        :effect (and
                    ; #10789: <==closure== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #11973: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #50777: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #78046: <==closure== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #36948: <==uncertain_firing== 50777 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #39537: <==unclosure== 36948 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #50106: <==negation-removal== 10789 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #55720: <==negation-removal== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #62921: <==negation-removal== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63489: <==negation-removal== 78046 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p10_p10
        :precondition (and (at_c_p10)
                           (succ_p10_p10))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #60406: <==closure== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #78858: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #79743: <==closure== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #81132: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #11801: <==uncertain_firing== 81132 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #20325: <==negation-removal== 79743 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #62712: <==negation-removal== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #67022: <==unclosure== 11801 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #85042: <==negation-removal== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #88350: <==negation-removal== 60406 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))))

    (:action sensecells_c_p10_p2
        :precondition (and (succ_p10_p2)
                           (at_c_p10))
        :effect (and
                    ; #11411: <==closure== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #53639: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #59745: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #68407: <==closure== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23301: <==negation-removal== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #35068: <==negation-removal== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #40765: <==negation-removal== 68407 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #66761: <==negation-removal== 11411 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #68162: <==unclosure== 84842 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #84842: <==uncertain_firing== 53639 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p10_p3
        :precondition (and (at_c_p10)
                           (succ_p10_p3))
        :effect (and
                    ; #12461: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #12537: <==closure== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #31941: <==closure== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #51306: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #31493: <==negation-removal== 31941 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #38928: <==unclosure== 85484 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #70616: <==negation-removal== 12537 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #74259: <==negation-removal== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #77179: <==negation-removal== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #85484: <==uncertain_firing== 12461 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p10_p4
        :precondition (and (at_c_p10)
                           (succ_p10_p4))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #22924: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #57841: <==closure== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #73414: <==closure== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88885: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #12387: <==negation-removal== 73414 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #25915: <==uncertain_firing== 22924 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #48310: <==negation-removal== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #49895: <==negation-removal== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #50725: <==negation-removal== 57841 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #75600: <==unclosure== 25915 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p10_p5
        :precondition (and (succ_p10_p5)
                           (at_c_p10))
        :effect (and
                    ; #34181: <==closure== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #35846: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #54256: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #88825: <==closure== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #11393: <==negation-removal== 34181 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #26574: <==unclosure== 40926 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #40926: <==uncertain_firing== 54256 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #62018: <==negation-removal== 88825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73665: <==negation-removal== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #73896: <==negation-removal== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))))

    (:action sensecells_c_p10_p6
        :precondition (and (at_c_p10)
                           (succ_p10_p6))
        :effect (and
                    ; #25053: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #61427: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #66842: <==closure== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #72651: <==closure== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24868: <==negation-removal== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #41125: <==negation-removal== 72651 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #50883: <==negation-removal== 66842 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #53020: <==uncertain_firing== 61427 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #65272: <==negation-removal== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #82667: <==unclosure== 53020 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p10_p7
        :precondition (and (at_c_p10)
                           (succ_p10_p7))
        :effect (and
                    ; #23381: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #37001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #56795: <==closure== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #75421: <==closure== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #11869: <==unclosure== 21463 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #21463: <==uncertain_firing== 23381 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #22198: <==negation-removal== 56795 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #24200: <==negation-removal== 75421 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #35303: <==negation-removal== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #35382: <==negation-removal== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_c_p10_p8
        :precondition (and (succ_p10_p8)
                           (at_c_p10))
        :effect (and
                    ; #30207: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #54163: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #59759: <==closure== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #77350: <==closure== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #15548: <==negation-removal== 77350 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #25854: <==unclosure== 27410 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #27410: <==uncertain_firing== 30207 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #55249: <==negation-removal== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #56739: <==negation-removal== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #88527: <==negation-removal== 59759 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))))

    (:action sensecells_c_p10_p9
        :precondition (and (at_c_p10)
                           (succ_p10_p9))
        :effect (and
                    ; #16617: <==closure== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #17795: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46628: <==closure== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #76393: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20772: <==negation-removal== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #27432: <==uncertain_firing== 17795 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #28014: <==negation-removal== 16617 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #42860: <==negation-removal== 46628 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #46451: <==negation-removal== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #57572: <==unclosure== 27432 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_c_p1_p0011
        :precondition (and (succ_p1_p0011)
                           (at_c_p1))
        :effect (and
                    ; #35002: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #36066: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #53318: <==closure== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #88322: <==closure== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #11856: <==uncertain_firing== 35002 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #17771: <==negation-removal== 53318 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #21560: <==negation-removal== 88322 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #25760: <==negation-removal== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #31079: <==unclosure== 11856 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #89371: <==negation-removal== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))))

    (:action sensecells_c_p1_p012
        :precondition (and (succ_p1_p012)
                           (at_c_p1))
        :effect (and
                    ; #10277: <==closure== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #33626: <==closure== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #39769: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #46719: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #48397: <==negation-removal== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #50647: <==negation-removal== 10277 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #52203: <==uncertain_firing== 39769 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #55858: <==unclosure== 52203 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66596: <==negation-removal== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #78172: <==negation-removal== 33626 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))))

    (:action sensecells_c_p1_p1
        :precondition (and (succ_p1_p1)
                           (at_c_p1))
        :effect (and
                    ; #10789: <==closure== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #11973: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #50777: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #78046: <==closure== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #36948: <==uncertain_firing== 50777 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #39537: <==unclosure== 36948 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #50106: <==negation-removal== 10789 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #55720: <==negation-removal== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #62921: <==negation-removal== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63489: <==negation-removal== 78046 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p1_p10
        :precondition (and (succ_p1_p10)
                           (at_c_p1))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #60406: <==closure== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #78858: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #79743: <==closure== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #81132: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #11801: <==uncertain_firing== 81132 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #20325: <==negation-removal== 79743 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #62712: <==negation-removal== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #67022: <==unclosure== 11801 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #85042: <==negation-removal== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #88350: <==negation-removal== 60406 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))))

    (:action sensecells_c_p1_p2
        :precondition (and (succ_p1_p2)
                           (at_c_p1))
        :effect (and
                    ; #11411: <==closure== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #53639: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #59745: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #68407: <==closure== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23301: <==negation-removal== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #35068: <==negation-removal== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #40765: <==negation-removal== 68407 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #66761: <==negation-removal== 11411 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #68162: <==unclosure== 84842 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #84842: <==uncertain_firing== 53639 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p1_p3
        :precondition (and (succ_p1_p3)
                           (at_c_p1))
        :effect (and
                    ; #12461: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #12537: <==closure== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #31941: <==closure== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #51306: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #31493: <==negation-removal== 31941 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #38928: <==unclosure== 85484 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #70616: <==negation-removal== 12537 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #74259: <==negation-removal== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #77179: <==negation-removal== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #85484: <==uncertain_firing== 12461 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p1_p4
        :precondition (and (succ_p1_p4)
                           (at_c_p1))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #22924: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #57841: <==closure== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #73414: <==closure== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88885: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #12387: <==negation-removal== 73414 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #25915: <==uncertain_firing== 22924 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #48310: <==negation-removal== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #49895: <==negation-removal== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #50725: <==negation-removal== 57841 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #75600: <==unclosure== 25915 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p1_p5
        :precondition (and (succ_p1_p5)
                           (at_c_p1))
        :effect (and
                    ; #34181: <==closure== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #35846: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #54256: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #88825: <==closure== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #11393: <==negation-removal== 34181 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #26574: <==unclosure== 40926 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #40926: <==uncertain_firing== 54256 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #62018: <==negation-removal== 88825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73665: <==negation-removal== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #73896: <==negation-removal== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))))

    (:action sensecells_c_p1_p6
        :precondition (and (succ_p1_p6)
                           (at_c_p1))
        :effect (and
                    ; #25053: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #61427: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #66842: <==closure== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #72651: <==closure== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24868: <==negation-removal== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #41125: <==negation-removal== 72651 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #50883: <==negation-removal== 66842 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #53020: <==uncertain_firing== 61427 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #65272: <==negation-removal== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #82667: <==unclosure== 53020 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p1_p7
        :precondition (and (succ_p1_p7)
                           (at_c_p1))
        :effect (and
                    ; #23381: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #37001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #56795: <==closure== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #75421: <==closure== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #11869: <==unclosure== 21463 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #21463: <==uncertain_firing== 23381 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #22198: <==negation-removal== 56795 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #24200: <==negation-removal== 75421 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #35303: <==negation-removal== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #35382: <==negation-removal== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_c_p1_p8
        :precondition (and (succ_p1_p8)
                           (at_c_p1))
        :effect (and
                    ; #30207: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #54163: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #59759: <==closure== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #77350: <==closure== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #15548: <==negation-removal== 77350 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #25854: <==unclosure== 27410 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #27410: <==uncertain_firing== 30207 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #55249: <==negation-removal== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #56739: <==negation-removal== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #88527: <==negation-removal== 59759 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))))

    (:action sensecells_c_p1_p9
        :precondition (and (succ_p1_p9)
                           (at_c_p1))
        :effect (and
                    ; #16617: <==closure== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #17795: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46628: <==closure== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #76393: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20772: <==negation-removal== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #27432: <==uncertain_firing== 17795 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #28014: <==negation-removal== 16617 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #42860: <==negation-removal== 46628 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #46451: <==negation-removal== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #57572: <==unclosure== 27432 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_c_p2_p0011
        :precondition (and (succ_p2_p0011)
                           (at_c_p2))
        :effect (and
                    ; #35002: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #36066: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #53318: <==closure== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #88322: <==closure== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #11856: <==uncertain_firing== 35002 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #17771: <==negation-removal== 53318 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #21560: <==negation-removal== 88322 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #25760: <==negation-removal== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #31079: <==unclosure== 11856 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #89371: <==negation-removal== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))))

    (:action sensecells_c_p2_p012
        :precondition (and (succ_p2_p012)
                           (at_c_p2))
        :effect (and
                    ; #10277: <==closure== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #33626: <==closure== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #39769: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #46719: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #48397: <==negation-removal== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #50647: <==negation-removal== 10277 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #52203: <==uncertain_firing== 39769 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #55858: <==unclosure== 52203 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66596: <==negation-removal== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #78172: <==negation-removal== 33626 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))))

    (:action sensecells_c_p2_p1
        :precondition (and (succ_p2_p1)
                           (at_c_p2))
        :effect (and
                    ; #10789: <==closure== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #11973: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #50777: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #78046: <==closure== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #36948: <==uncertain_firing== 50777 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #39537: <==unclosure== 36948 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #50106: <==negation-removal== 10789 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #55720: <==negation-removal== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #62921: <==negation-removal== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63489: <==negation-removal== 78046 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p2_p10
        :precondition (and (succ_p2_p10)
                           (at_c_p2))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #60406: <==closure== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #78858: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #79743: <==closure== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #81132: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #11801: <==uncertain_firing== 81132 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #20325: <==negation-removal== 79743 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #62712: <==negation-removal== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #67022: <==unclosure== 11801 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #85042: <==negation-removal== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #88350: <==negation-removal== 60406 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))))

    (:action sensecells_c_p2_p2
        :precondition (and (succ_p2_p2)
                           (at_c_p2))
        :effect (and
                    ; #11411: <==closure== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #53639: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #59745: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #68407: <==closure== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23301: <==negation-removal== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #35068: <==negation-removal== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #40765: <==negation-removal== 68407 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #66761: <==negation-removal== 11411 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #68162: <==unclosure== 84842 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #84842: <==uncertain_firing== 53639 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p2_p3
        :precondition (and (succ_p2_p3)
                           (at_c_p2))
        :effect (and
                    ; #12461: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #12537: <==closure== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #31941: <==closure== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #51306: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #31493: <==negation-removal== 31941 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #38928: <==unclosure== 85484 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #70616: <==negation-removal== 12537 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #74259: <==negation-removal== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #77179: <==negation-removal== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #85484: <==uncertain_firing== 12461 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p2_p4
        :precondition (and (succ_p2_p4)
                           (at_c_p2))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #22924: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #57841: <==closure== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #73414: <==closure== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88885: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #12387: <==negation-removal== 73414 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #25915: <==uncertain_firing== 22924 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #48310: <==negation-removal== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #49895: <==negation-removal== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #50725: <==negation-removal== 57841 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #75600: <==unclosure== 25915 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p2_p5
        :precondition (and (succ_p2_p5)
                           (at_c_p2))
        :effect (and
                    ; #34181: <==closure== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #35846: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #54256: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #88825: <==closure== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #11393: <==negation-removal== 34181 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #26574: <==unclosure== 40926 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #40926: <==uncertain_firing== 54256 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #62018: <==negation-removal== 88825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73665: <==negation-removal== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #73896: <==negation-removal== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))))

    (:action sensecells_c_p2_p6
        :precondition (and (succ_p2_p6)
                           (at_c_p2))
        :effect (and
                    ; #25053: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #61427: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #66842: <==closure== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #72651: <==closure== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24868: <==negation-removal== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #41125: <==negation-removal== 72651 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #50883: <==negation-removal== 66842 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #53020: <==uncertain_firing== 61427 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #65272: <==negation-removal== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #82667: <==unclosure== 53020 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p2_p7
        :precondition (and (succ_p2_p7)
                           (at_c_p2))
        :effect (and
                    ; #23381: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #37001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #56795: <==closure== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #75421: <==closure== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #11869: <==unclosure== 21463 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #21463: <==uncertain_firing== 23381 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #22198: <==negation-removal== 56795 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #24200: <==negation-removal== 75421 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #35303: <==negation-removal== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #35382: <==negation-removal== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_c_p2_p8
        :precondition (and (succ_p2_p8)
                           (at_c_p2))
        :effect (and
                    ; #30207: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #54163: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #59759: <==closure== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #77350: <==closure== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #15548: <==negation-removal== 77350 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #25854: <==unclosure== 27410 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #27410: <==uncertain_firing== 30207 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #55249: <==negation-removal== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #56739: <==negation-removal== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #88527: <==negation-removal== 59759 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))))

    (:action sensecells_c_p2_p9
        :precondition (and (succ_p2_p9)
                           (at_c_p2))
        :effect (and
                    ; #16617: <==closure== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #17795: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46628: <==closure== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #76393: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20772: <==negation-removal== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #27432: <==uncertain_firing== 17795 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #28014: <==negation-removal== 16617 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #42860: <==negation-removal== 46628 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #46451: <==negation-removal== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #57572: <==unclosure== 27432 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_c_p3_p0011
        :precondition (and (at_c_p3)
                           (succ_p3_p0011))
        :effect (and
                    ; #35002: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #36066: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #53318: <==closure== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #88322: <==closure== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #11856: <==uncertain_firing== 35002 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #17771: <==negation-removal== 53318 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #21560: <==negation-removal== 88322 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #25760: <==negation-removal== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #31079: <==unclosure== 11856 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #89371: <==negation-removal== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))))

    (:action sensecells_c_p3_p012
        :precondition (and (at_c_p3)
                           (succ_p3_p012))
        :effect (and
                    ; #10277: <==closure== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #33626: <==closure== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #39769: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #46719: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #48397: <==negation-removal== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #50647: <==negation-removal== 10277 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #52203: <==uncertain_firing== 39769 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #55858: <==unclosure== 52203 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66596: <==negation-removal== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #78172: <==negation-removal== 33626 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))))

    (:action sensecells_c_p3_p1
        :precondition (and (at_c_p3)
                           (succ_p3_p1))
        :effect (and
                    ; #10789: <==closure== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #11973: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #50777: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #78046: <==closure== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #36948: <==uncertain_firing== 50777 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #39537: <==unclosure== 36948 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #50106: <==negation-removal== 10789 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #55720: <==negation-removal== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #62921: <==negation-removal== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63489: <==negation-removal== 78046 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p3_p10
        :precondition (and (at_c_p3)
                           (succ_p3_p10))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #60406: <==closure== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #78858: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #79743: <==closure== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #81132: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #11801: <==uncertain_firing== 81132 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #20325: <==negation-removal== 79743 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #62712: <==negation-removal== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #67022: <==unclosure== 11801 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #85042: <==negation-removal== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #88350: <==negation-removal== 60406 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))))

    (:action sensecells_c_p3_p2
        :precondition (and (at_c_p3)
                           (succ_p3_p2))
        :effect (and
                    ; #11411: <==closure== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #53639: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #59745: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #68407: <==closure== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23301: <==negation-removal== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #35068: <==negation-removal== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #40765: <==negation-removal== 68407 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #66761: <==negation-removal== 11411 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #68162: <==unclosure== 84842 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #84842: <==uncertain_firing== 53639 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p3_p3
        :precondition (and (at_c_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #12461: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #12537: <==closure== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #31941: <==closure== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #51306: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #31493: <==negation-removal== 31941 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #38928: <==unclosure== 85484 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #70616: <==negation-removal== 12537 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #74259: <==negation-removal== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #77179: <==negation-removal== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #85484: <==uncertain_firing== 12461 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p3_p4
        :precondition (and (at_c_p3)
                           (succ_p3_p4))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #22924: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #57841: <==closure== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #73414: <==closure== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88885: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #12387: <==negation-removal== 73414 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #25915: <==uncertain_firing== 22924 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #48310: <==negation-removal== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #49895: <==negation-removal== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #50725: <==negation-removal== 57841 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #75600: <==unclosure== 25915 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p3_p5
        :precondition (and (at_c_p3)
                           (succ_p3_p5))
        :effect (and
                    ; #34181: <==closure== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #35846: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #54256: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #88825: <==closure== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #11393: <==negation-removal== 34181 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #26574: <==unclosure== 40926 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #40926: <==uncertain_firing== 54256 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #62018: <==negation-removal== 88825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73665: <==negation-removal== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #73896: <==negation-removal== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))))

    (:action sensecells_c_p3_p6
        :precondition (and (at_c_p3)
                           (succ_p3_p6))
        :effect (and
                    ; #25053: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #61427: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #66842: <==closure== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #72651: <==closure== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24868: <==negation-removal== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #41125: <==negation-removal== 72651 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #50883: <==negation-removal== 66842 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #53020: <==uncertain_firing== 61427 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #65272: <==negation-removal== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #82667: <==unclosure== 53020 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p3_p7
        :precondition (and (at_c_p3)
                           (succ_p3_p7))
        :effect (and
                    ; #23381: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #37001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #56795: <==closure== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #75421: <==closure== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #11869: <==unclosure== 21463 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #21463: <==uncertain_firing== 23381 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #22198: <==negation-removal== 56795 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #24200: <==negation-removal== 75421 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #35303: <==negation-removal== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #35382: <==negation-removal== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_c_p3_p8
        :precondition (and (at_c_p3)
                           (succ_p3_p8))
        :effect (and
                    ; #30207: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #54163: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #59759: <==closure== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #77350: <==closure== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #15548: <==negation-removal== 77350 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #25854: <==unclosure== 27410 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #27410: <==uncertain_firing== 30207 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #55249: <==negation-removal== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #56739: <==negation-removal== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #88527: <==negation-removal== 59759 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))))

    (:action sensecells_c_p3_p9
        :precondition (and (at_c_p3)
                           (succ_p3_p9))
        :effect (and
                    ; #16617: <==closure== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #17795: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46628: <==closure== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #76393: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20772: <==negation-removal== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #27432: <==uncertain_firing== 17795 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #28014: <==negation-removal== 16617 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #42860: <==negation-removal== 46628 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #46451: <==negation-removal== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #57572: <==unclosure== 27432 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_c_p4_p0011
        :precondition (and (at_c_p4)
                           (succ_p4_p0011))
        :effect (and
                    ; #35002: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #36066: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #53318: <==closure== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #88322: <==closure== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #11856: <==uncertain_firing== 35002 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #17771: <==negation-removal== 53318 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #21560: <==negation-removal== 88322 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #25760: <==negation-removal== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #31079: <==unclosure== 11856 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #89371: <==negation-removal== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))))

    (:action sensecells_c_p4_p012
        :precondition (and (succ_p4_p012)
                           (at_c_p4))
        :effect (and
                    ; #10277: <==closure== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #33626: <==closure== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #39769: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #46719: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #48397: <==negation-removal== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #50647: <==negation-removal== 10277 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #52203: <==uncertain_firing== 39769 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #55858: <==unclosure== 52203 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66596: <==negation-removal== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #78172: <==negation-removal== 33626 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))))

    (:action sensecells_c_p4_p1
        :precondition (and (at_c_p4)
                           (succ_p4_p1))
        :effect (and
                    ; #10789: <==closure== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #11973: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #50777: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #78046: <==closure== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #36948: <==uncertain_firing== 50777 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #39537: <==unclosure== 36948 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #50106: <==negation-removal== 10789 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #55720: <==negation-removal== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #62921: <==negation-removal== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63489: <==negation-removal== 78046 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p4_p10
        :precondition (and (succ_p4_p10)
                           (at_c_p4))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #60406: <==closure== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #78858: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #79743: <==closure== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #81132: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #11801: <==uncertain_firing== 81132 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #20325: <==negation-removal== 79743 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #62712: <==negation-removal== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #67022: <==unclosure== 11801 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #85042: <==negation-removal== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #88350: <==negation-removal== 60406 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))))

    (:action sensecells_c_p4_p2
        :precondition (and (succ_p4_p2)
                           (at_c_p4))
        :effect (and
                    ; #11411: <==closure== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #53639: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #59745: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #68407: <==closure== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23301: <==negation-removal== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #35068: <==negation-removal== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #40765: <==negation-removal== 68407 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #66761: <==negation-removal== 11411 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #68162: <==unclosure== 84842 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #84842: <==uncertain_firing== 53639 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p4_p3
        :precondition (and (succ_p4_p3)
                           (at_c_p4))
        :effect (and
                    ; #12461: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #12537: <==closure== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #31941: <==closure== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #51306: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #31493: <==negation-removal== 31941 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #38928: <==unclosure== 85484 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #70616: <==negation-removal== 12537 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #74259: <==negation-removal== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #77179: <==negation-removal== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #85484: <==uncertain_firing== 12461 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p4_p4
        :precondition (and (succ_p4_p4)
                           (at_c_p4))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #22924: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #57841: <==closure== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #73414: <==closure== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88885: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #12387: <==negation-removal== 73414 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #25915: <==uncertain_firing== 22924 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #48310: <==negation-removal== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #49895: <==negation-removal== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #50725: <==negation-removal== 57841 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #75600: <==unclosure== 25915 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p4_p5
        :precondition (and (at_c_p4)
                           (succ_p4_p5))
        :effect (and
                    ; #34181: <==closure== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #35846: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #54256: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #88825: <==closure== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #11393: <==negation-removal== 34181 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #26574: <==unclosure== 40926 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #40926: <==uncertain_firing== 54256 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #62018: <==negation-removal== 88825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73665: <==negation-removal== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #73896: <==negation-removal== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))))

    (:action sensecells_c_p4_p6
        :precondition (and (succ_p4_p6)
                           (at_c_p4))
        :effect (and
                    ; #25053: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #61427: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #66842: <==closure== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #72651: <==closure== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24868: <==negation-removal== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #41125: <==negation-removal== 72651 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #50883: <==negation-removal== 66842 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #53020: <==uncertain_firing== 61427 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #65272: <==negation-removal== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #82667: <==unclosure== 53020 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p4_p7
        :precondition (and (at_c_p4)
                           (succ_p4_p7))
        :effect (and
                    ; #23381: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #37001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #56795: <==closure== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #75421: <==closure== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #11869: <==unclosure== 21463 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #21463: <==uncertain_firing== 23381 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #22198: <==negation-removal== 56795 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #24200: <==negation-removal== 75421 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #35303: <==negation-removal== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #35382: <==negation-removal== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_c_p4_p8
        :precondition (and (succ_p4_p8)
                           (at_c_p4))
        :effect (and
                    ; #30207: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #54163: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #59759: <==closure== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #77350: <==closure== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #15548: <==negation-removal== 77350 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #25854: <==unclosure== 27410 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #27410: <==uncertain_firing== 30207 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #55249: <==negation-removal== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #56739: <==negation-removal== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #88527: <==negation-removal== 59759 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))))

    (:action sensecells_c_p4_p9
        :precondition (and (at_c_p4)
                           (succ_p4_p9))
        :effect (and
                    ; #16617: <==closure== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #17795: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46628: <==closure== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #76393: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20772: <==negation-removal== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #27432: <==uncertain_firing== 17795 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #28014: <==negation-removal== 16617 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #42860: <==negation-removal== 46628 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #46451: <==negation-removal== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #57572: <==unclosure== 27432 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_c_p5_p0011
        :precondition (and (at_c_p5)
                           (succ_p5_p0011))
        :effect (and
                    ; #35002: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #36066: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #53318: <==closure== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #88322: <==closure== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #11856: <==uncertain_firing== 35002 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #17771: <==negation-removal== 53318 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #21560: <==negation-removal== 88322 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #25760: <==negation-removal== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #31079: <==unclosure== 11856 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #89371: <==negation-removal== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))))

    (:action sensecells_c_p5_p012
        :precondition (and (succ_p5_p012)
                           (at_c_p5))
        :effect (and
                    ; #10277: <==closure== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #33626: <==closure== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #39769: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #46719: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #48397: <==negation-removal== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #50647: <==negation-removal== 10277 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #52203: <==uncertain_firing== 39769 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #55858: <==unclosure== 52203 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66596: <==negation-removal== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #78172: <==negation-removal== 33626 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))))

    (:action sensecells_c_p5_p1
        :precondition (and (succ_p5_p1)
                           (at_c_p5))
        :effect (and
                    ; #10789: <==closure== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #11973: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #50777: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #78046: <==closure== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #36948: <==uncertain_firing== 50777 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #39537: <==unclosure== 36948 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #50106: <==negation-removal== 10789 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #55720: <==negation-removal== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #62921: <==negation-removal== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63489: <==negation-removal== 78046 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p5_p10
        :precondition (and (succ_p5_p10)
                           (at_c_p5))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #60406: <==closure== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #78858: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #79743: <==closure== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #81132: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #11801: <==uncertain_firing== 81132 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #20325: <==negation-removal== 79743 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #62712: <==negation-removal== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #67022: <==unclosure== 11801 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #85042: <==negation-removal== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #88350: <==negation-removal== 60406 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))))

    (:action sensecells_c_p5_p2
        :precondition (and (succ_p5_p2)
                           (at_c_p5))
        :effect (and
                    ; #11411: <==closure== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #53639: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #59745: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #68407: <==closure== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23301: <==negation-removal== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #35068: <==negation-removal== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #40765: <==negation-removal== 68407 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #66761: <==negation-removal== 11411 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #68162: <==unclosure== 84842 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #84842: <==uncertain_firing== 53639 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p5_p3
        :precondition (and (at_c_p5)
                           (succ_p5_p3))
        :effect (and
                    ; #12461: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #12537: <==closure== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #31941: <==closure== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #51306: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #31493: <==negation-removal== 31941 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #38928: <==unclosure== 85484 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #70616: <==negation-removal== 12537 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #74259: <==negation-removal== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #77179: <==negation-removal== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #85484: <==uncertain_firing== 12461 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p5_p4
        :precondition (and (succ_p5_p4)
                           (at_c_p5))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #22924: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #57841: <==closure== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #73414: <==closure== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88885: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #12387: <==negation-removal== 73414 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #25915: <==uncertain_firing== 22924 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #48310: <==negation-removal== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #49895: <==negation-removal== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #50725: <==negation-removal== 57841 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #75600: <==unclosure== 25915 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p5_p5
        :precondition (and (at_c_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #34181: <==closure== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #35846: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #54256: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #88825: <==closure== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #11393: <==negation-removal== 34181 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #26574: <==unclosure== 40926 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #40926: <==uncertain_firing== 54256 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #62018: <==negation-removal== 88825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73665: <==negation-removal== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #73896: <==negation-removal== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))))

    (:action sensecells_c_p5_p6
        :precondition (and (at_c_p5)
                           (succ_p5_p6))
        :effect (and
                    ; #25053: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #61427: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #66842: <==closure== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #72651: <==closure== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24868: <==negation-removal== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #41125: <==negation-removal== 72651 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #50883: <==negation-removal== 66842 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #53020: <==uncertain_firing== 61427 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #65272: <==negation-removal== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #82667: <==unclosure== 53020 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p5_p7
        :precondition (and (succ_p5_p7)
                           (at_c_p5))
        :effect (and
                    ; #23381: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #37001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #56795: <==closure== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #75421: <==closure== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #11869: <==unclosure== 21463 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #21463: <==uncertain_firing== 23381 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #22198: <==negation-removal== 56795 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #24200: <==negation-removal== 75421 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #35303: <==negation-removal== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #35382: <==negation-removal== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_c_p5_p8
        :precondition (and (succ_p5_p8)
                           (at_c_p5))
        :effect (and
                    ; #30207: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #54163: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #59759: <==closure== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #77350: <==closure== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #15548: <==negation-removal== 77350 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #25854: <==unclosure== 27410 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #27410: <==uncertain_firing== 30207 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #55249: <==negation-removal== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #56739: <==negation-removal== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #88527: <==negation-removal== 59759 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))))

    (:action sensecells_c_p5_p9
        :precondition (and (succ_p5_p9)
                           (at_c_p5))
        :effect (and
                    ; #16617: <==closure== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #17795: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46628: <==closure== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #76393: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20772: <==negation-removal== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #27432: <==uncertain_firing== 17795 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #28014: <==negation-removal== 16617 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #42860: <==negation-removal== 46628 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #46451: <==negation-removal== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #57572: <==unclosure== 27432 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_c_p6_p0011
        :precondition (and (succ_p6_p0011)
                           (at_c_p6))
        :effect (and
                    ; #35002: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #36066: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #53318: <==closure== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #88322: <==closure== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #11856: <==uncertain_firing== 35002 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #17771: <==negation-removal== 53318 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #21560: <==negation-removal== 88322 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #25760: <==negation-removal== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #31079: <==unclosure== 11856 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #89371: <==negation-removal== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))))

    (:action sensecells_c_p6_p012
        :precondition (and (succ_p6_p012)
                           (at_c_p6))
        :effect (and
                    ; #10277: <==closure== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #33626: <==closure== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #39769: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #46719: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #48397: <==negation-removal== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #50647: <==negation-removal== 10277 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #52203: <==uncertain_firing== 39769 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #55858: <==unclosure== 52203 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66596: <==negation-removal== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #78172: <==negation-removal== 33626 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))))

    (:action sensecells_c_p6_p1
        :precondition (and (succ_p6_p1)
                           (at_c_p6))
        :effect (and
                    ; #10789: <==closure== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #11973: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #50777: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #78046: <==closure== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #36948: <==uncertain_firing== 50777 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #39537: <==unclosure== 36948 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #50106: <==negation-removal== 10789 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #55720: <==negation-removal== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #62921: <==negation-removal== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63489: <==negation-removal== 78046 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p6_p10
        :precondition (and (succ_p6_p10)
                           (at_c_p6))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #60406: <==closure== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #78858: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #79743: <==closure== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #81132: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #11801: <==uncertain_firing== 81132 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #20325: <==negation-removal== 79743 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #62712: <==negation-removal== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #67022: <==unclosure== 11801 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #85042: <==negation-removal== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #88350: <==negation-removal== 60406 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))))

    (:action sensecells_c_p6_p2
        :precondition (and (at_c_p6)
                           (succ_p6_p2))
        :effect (and
                    ; #11411: <==closure== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #53639: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #59745: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #68407: <==closure== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23301: <==negation-removal== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #35068: <==negation-removal== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #40765: <==negation-removal== 68407 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #66761: <==negation-removal== 11411 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #68162: <==unclosure== 84842 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #84842: <==uncertain_firing== 53639 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p6_p3
        :precondition (and (at_c_p6)
                           (succ_p6_p3))
        :effect (and
                    ; #12461: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #12537: <==closure== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #31941: <==closure== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #51306: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #31493: <==negation-removal== 31941 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #38928: <==unclosure== 85484 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #70616: <==negation-removal== 12537 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #74259: <==negation-removal== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #77179: <==negation-removal== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #85484: <==uncertain_firing== 12461 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p6_p4
        :precondition (and (succ_p6_p4)
                           (at_c_p6))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #22924: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #57841: <==closure== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #73414: <==closure== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88885: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #12387: <==negation-removal== 73414 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #25915: <==uncertain_firing== 22924 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #48310: <==negation-removal== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #49895: <==negation-removal== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #50725: <==negation-removal== 57841 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #75600: <==unclosure== 25915 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p6_p5
        :precondition (and (succ_p6_p5)
                           (at_c_p6))
        :effect (and
                    ; #34181: <==closure== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #35846: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #54256: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #88825: <==closure== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #11393: <==negation-removal== 34181 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #26574: <==unclosure== 40926 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #40926: <==uncertain_firing== 54256 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #62018: <==negation-removal== 88825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73665: <==negation-removal== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #73896: <==negation-removal== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))))

    (:action sensecells_c_p6_p6
        :precondition (and (succ_p6_p6)
                           (at_c_p6))
        :effect (and
                    ; #25053: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #61427: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #66842: <==closure== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #72651: <==closure== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24868: <==negation-removal== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #41125: <==negation-removal== 72651 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #50883: <==negation-removal== 66842 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #53020: <==uncertain_firing== 61427 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #65272: <==negation-removal== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #82667: <==unclosure== 53020 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p6_p7
        :precondition (and (succ_p6_p7)
                           (at_c_p6))
        :effect (and
                    ; #23381: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #37001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #56795: <==closure== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #75421: <==closure== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #11869: <==unclosure== 21463 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #21463: <==uncertain_firing== 23381 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #22198: <==negation-removal== 56795 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #24200: <==negation-removal== 75421 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #35303: <==negation-removal== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #35382: <==negation-removal== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_c_p6_p8
        :precondition (and (succ_p6_p8)
                           (at_c_p6))
        :effect (and
                    ; #30207: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #54163: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #59759: <==closure== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #77350: <==closure== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #15548: <==negation-removal== 77350 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #25854: <==unclosure== 27410 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #27410: <==uncertain_firing== 30207 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #55249: <==negation-removal== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #56739: <==negation-removal== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #88527: <==negation-removal== 59759 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))))

    (:action sensecells_c_p6_p9
        :precondition (and (succ_p6_p9)
                           (at_c_p6))
        :effect (and
                    ; #16617: <==closure== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #17795: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46628: <==closure== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #76393: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20772: <==negation-removal== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #27432: <==uncertain_firing== 17795 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #28014: <==negation-removal== 16617 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #42860: <==negation-removal== 46628 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #46451: <==negation-removal== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #57572: <==unclosure== 27432 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_c_p7_p0011
        :precondition (and (at_c_p7)
                           (succ_p7_p0011))
        :effect (and
                    ; #35002: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #36066: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #53318: <==closure== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #88322: <==closure== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #11856: <==uncertain_firing== 35002 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #17771: <==negation-removal== 53318 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #21560: <==negation-removal== 88322 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #25760: <==negation-removal== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #31079: <==unclosure== 11856 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #89371: <==negation-removal== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))))

    (:action sensecells_c_p7_p012
        :precondition (and (at_c_p7)
                           (succ_p7_p012))
        :effect (and
                    ; #10277: <==closure== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #33626: <==closure== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #39769: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #46719: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #48397: <==negation-removal== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #50647: <==negation-removal== 10277 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #52203: <==uncertain_firing== 39769 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #55858: <==unclosure== 52203 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66596: <==negation-removal== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #78172: <==negation-removal== 33626 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))))

    (:action sensecells_c_p7_p1
        :precondition (and (at_c_p7)
                           (succ_p7_p1))
        :effect (and
                    ; #10789: <==closure== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #11973: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #50777: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #78046: <==closure== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #36948: <==uncertain_firing== 50777 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #39537: <==unclosure== 36948 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #50106: <==negation-removal== 10789 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #55720: <==negation-removal== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #62921: <==negation-removal== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63489: <==negation-removal== 78046 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p7_p10
        :precondition (and (at_c_p7)
                           (succ_p7_p10))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #60406: <==closure== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #78858: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #79743: <==closure== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #81132: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #11801: <==uncertain_firing== 81132 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #20325: <==negation-removal== 79743 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #62712: <==negation-removal== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #67022: <==unclosure== 11801 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #85042: <==negation-removal== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #88350: <==negation-removal== 60406 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))))

    (:action sensecells_c_p7_p2
        :precondition (and (at_c_p7)
                           (succ_p7_p2))
        :effect (and
                    ; #11411: <==closure== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #53639: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #59745: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #68407: <==closure== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23301: <==negation-removal== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #35068: <==negation-removal== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #40765: <==negation-removal== 68407 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #66761: <==negation-removal== 11411 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #68162: <==unclosure== 84842 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #84842: <==uncertain_firing== 53639 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p7_p3
        :precondition (and (at_c_p7)
                           (succ_p7_p3))
        :effect (and
                    ; #12461: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #12537: <==closure== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #31941: <==closure== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #51306: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #31493: <==negation-removal== 31941 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #38928: <==unclosure== 85484 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #70616: <==negation-removal== 12537 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #74259: <==negation-removal== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #77179: <==negation-removal== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #85484: <==uncertain_firing== 12461 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p7_p4
        :precondition (and (at_c_p7)
                           (succ_p7_p4))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #22924: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #57841: <==closure== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #73414: <==closure== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88885: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #12387: <==negation-removal== 73414 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #25915: <==uncertain_firing== 22924 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #48310: <==negation-removal== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #49895: <==negation-removal== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #50725: <==negation-removal== 57841 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #75600: <==unclosure== 25915 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p7_p5
        :precondition (and (at_c_p7)
                           (succ_p7_p5))
        :effect (and
                    ; #34181: <==closure== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #35846: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #54256: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #88825: <==closure== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #11393: <==negation-removal== 34181 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #26574: <==unclosure== 40926 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #40926: <==uncertain_firing== 54256 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #62018: <==negation-removal== 88825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73665: <==negation-removal== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #73896: <==negation-removal== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))))

    (:action sensecells_c_p7_p6
        :precondition (and (at_c_p7)
                           (succ_p7_p6))
        :effect (and
                    ; #25053: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #61427: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #66842: <==closure== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #72651: <==closure== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24868: <==negation-removal== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #41125: <==negation-removal== 72651 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #50883: <==negation-removal== 66842 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #53020: <==uncertain_firing== 61427 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #65272: <==negation-removal== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #82667: <==unclosure== 53020 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p7_p7
        :precondition (and (at_c_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #23381: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #37001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #56795: <==closure== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #75421: <==closure== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #11869: <==unclosure== 21463 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #21463: <==uncertain_firing== 23381 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #22198: <==negation-removal== 56795 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #24200: <==negation-removal== 75421 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #35303: <==negation-removal== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #35382: <==negation-removal== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_c_p7_p8
        :precondition (and (at_c_p7)
                           (succ_p7_p8))
        :effect (and
                    ; #30207: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #54163: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #59759: <==closure== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #77350: <==closure== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #15548: <==negation-removal== 77350 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #25854: <==unclosure== 27410 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #27410: <==uncertain_firing== 30207 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #55249: <==negation-removal== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #56739: <==negation-removal== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #88527: <==negation-removal== 59759 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))))

    (:action sensecells_c_p7_p9
        :precondition (and (at_c_p7)
                           (succ_p7_p9))
        :effect (and
                    ; #16617: <==closure== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #17795: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46628: <==closure== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #76393: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20772: <==negation-removal== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #27432: <==uncertain_firing== 17795 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #28014: <==negation-removal== 16617 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #42860: <==negation-removal== 46628 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #46451: <==negation-removal== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #57572: <==unclosure== 27432 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_c_p8_p0011
        :precondition (and (succ_p8_p0011)
                           (at_c_p8))
        :effect (and
                    ; #35002: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #36066: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #53318: <==closure== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #88322: <==closure== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #11856: <==uncertain_firing== 35002 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #17771: <==negation-removal== 53318 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #21560: <==negation-removal== 88322 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #25760: <==negation-removal== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #31079: <==unclosure== 11856 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #89371: <==negation-removal== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))))

    (:action sensecells_c_p8_p012
        :precondition (and (succ_p8_p012)
                           (at_c_p8))
        :effect (and
                    ; #10277: <==closure== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #33626: <==closure== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #39769: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #46719: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #48397: <==negation-removal== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #50647: <==negation-removal== 10277 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #52203: <==uncertain_firing== 39769 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #55858: <==unclosure== 52203 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66596: <==negation-removal== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #78172: <==negation-removal== 33626 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))))

    (:action sensecells_c_p8_p1
        :precondition (and (succ_p8_p1)
                           (at_c_p8))
        :effect (and
                    ; #10789: <==closure== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #11973: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #50777: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #78046: <==closure== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #36948: <==uncertain_firing== 50777 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #39537: <==unclosure== 36948 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #50106: <==negation-removal== 10789 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #55720: <==negation-removal== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #62921: <==negation-removal== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63489: <==negation-removal== 78046 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p8_p10
        :precondition (and (succ_p8_p10)
                           (at_c_p8))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #60406: <==closure== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #78858: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #79743: <==closure== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #81132: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #11801: <==uncertain_firing== 81132 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #20325: <==negation-removal== 79743 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #62712: <==negation-removal== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #67022: <==unclosure== 11801 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #85042: <==negation-removal== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #88350: <==negation-removal== 60406 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))))

    (:action sensecells_c_p8_p2
        :precondition (and (succ_p8_p2)
                           (at_c_p8))
        :effect (and
                    ; #11411: <==closure== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #53639: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #59745: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #68407: <==closure== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23301: <==negation-removal== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #35068: <==negation-removal== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #40765: <==negation-removal== 68407 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #66761: <==negation-removal== 11411 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #68162: <==unclosure== 84842 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #84842: <==uncertain_firing== 53639 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p8_p3
        :precondition (and (succ_p8_p3)
                           (at_c_p8))
        :effect (and
                    ; #12461: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #12537: <==closure== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #31941: <==closure== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #51306: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #31493: <==negation-removal== 31941 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #38928: <==unclosure== 85484 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #70616: <==negation-removal== 12537 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #74259: <==negation-removal== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #77179: <==negation-removal== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #85484: <==uncertain_firing== 12461 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p8_p4
        :precondition (and (succ_p8_p4)
                           (at_c_p8))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #22924: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #57841: <==closure== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #73414: <==closure== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88885: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #12387: <==negation-removal== 73414 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #25915: <==uncertain_firing== 22924 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #48310: <==negation-removal== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #49895: <==negation-removal== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #50725: <==negation-removal== 57841 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #75600: <==unclosure== 25915 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p8_p5
        :precondition (and (at_c_p8)
                           (succ_p8_p5))
        :effect (and
                    ; #34181: <==closure== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #35846: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #54256: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #88825: <==closure== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #11393: <==negation-removal== 34181 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #26574: <==unclosure== 40926 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #40926: <==uncertain_firing== 54256 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #62018: <==negation-removal== 88825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73665: <==negation-removal== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #73896: <==negation-removal== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))))

    (:action sensecells_c_p8_p6
        :precondition (and (succ_p8_p6)
                           (at_c_p8))
        :effect (and
                    ; #25053: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #61427: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #66842: <==closure== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #72651: <==closure== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24868: <==negation-removal== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #41125: <==negation-removal== 72651 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #50883: <==negation-removal== 66842 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #53020: <==uncertain_firing== 61427 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #65272: <==negation-removal== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #82667: <==unclosure== 53020 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p8_p7
        :precondition (and (succ_p8_p7)
                           (at_c_p8))
        :effect (and
                    ; #23381: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #37001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #56795: <==closure== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #75421: <==closure== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #11869: <==unclosure== 21463 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #21463: <==uncertain_firing== 23381 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #22198: <==negation-removal== 56795 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #24200: <==negation-removal== 75421 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #35303: <==negation-removal== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #35382: <==negation-removal== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_c_p8_p8
        :precondition (and (succ_p8_p8)
                           (at_c_p8))
        :effect (and
                    ; #30207: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #54163: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #59759: <==closure== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #77350: <==closure== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #15548: <==negation-removal== 77350 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #25854: <==unclosure== 27410 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #27410: <==uncertain_firing== 30207 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #55249: <==negation-removal== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #56739: <==negation-removal== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #88527: <==negation-removal== 59759 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))))

    (:action sensecells_c_p8_p9
        :precondition (and (succ_p8_p9)
                           (at_c_p8))
        :effect (and
                    ; #16617: <==closure== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #17795: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46628: <==closure== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #76393: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20772: <==negation-removal== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #27432: <==uncertain_firing== 17795 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #28014: <==negation-removal== 16617 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #42860: <==negation-removal== 46628 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #46451: <==negation-removal== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #57572: <==unclosure== 27432 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_c_p9_p0011
        :precondition (and (succ_p9_p0011)
                           (at_c_p9))
        :effect (and
                    ; #35002: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #36066: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #47058: origin
                    (checked_p0011)

                    ; #53318: <==closure== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #88322: <==closure== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #11856: <==uncertain_firing== 35002 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #17771: <==negation-removal== 53318 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #21560: <==negation-removal== 88322 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #25760: <==negation-removal== 36066 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #27952: <==negation-removal== 47058 (pos)
                    (not (not_checked_p0011))

                    ; #31079: <==unclosure== 11856 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #89371: <==negation-removal== 35002 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))))

    (:action sensecells_c_p9_p012
        :precondition (and (succ_p9_p012)
                           (at_c_p9))
        :effect (and
                    ; #10277: <==closure== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #26213: origin
                    (checked_p012)

                    ; #33626: <==closure== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #39769: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #46719: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #48397: <==negation-removal== 46719 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #50647: <==negation-removal== 10277 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #52203: <==uncertain_firing== 39769 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #55858: <==unclosure== 52203 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #66152: <==negation-removal== 26213 (pos)
                    (not (not_checked_p012))

                    ; #66596: <==negation-removal== 39769 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #78172: <==negation-removal== 33626 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))))

    (:action sensecells_c_p9_p1
        :precondition (and (succ_p9_p1)
                           (at_c_p9))
        :effect (and
                    ; #10789: <==closure== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #11973: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #50132: origin
                    (checked_p1)

                    ; #50777: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #78046: <==closure== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #36948: <==uncertain_firing== 50777 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #39537: <==unclosure== 36948 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #50106: <==negation-removal== 10789 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #54200: <==negation-removal== 50132 (pos)
                    (not (not_checked_p1))

                    ; #55720: <==negation-removal== 50777 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #62921: <==negation-removal== 11973 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63489: <==negation-removal== 78046 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p9_p10
        :precondition (and (succ_p9_p10)
                           (at_c_p9))
        :effect (and
                    ; #11864: origin
                    (checked_p10)

                    ; #60406: <==closure== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #78858: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #79743: <==closure== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #81132: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #11801: <==uncertain_firing== 81132 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #20325: <==negation-removal== 79743 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #62712: <==negation-removal== 81132 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #67022: <==unclosure== 11801 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #78300: <==negation-removal== 11864 (pos)
                    (not (not_checked_p10))

                    ; #85042: <==negation-removal== 78858 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #88350: <==negation-removal== 60406 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))))

    (:action sensecells_c_p9_p2
        :precondition (and (succ_p9_p2)
                           (at_c_p9))
        :effect (and
                    ; #11411: <==closure== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #46301: origin
                    (checked_p2)

                    ; #53639: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #59745: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #68407: <==closure== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23301: <==negation-removal== 53639 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #35068: <==negation-removal== 59745 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #40765: <==negation-removal== 68407 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #66761: <==negation-removal== 11411 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #67623: <==negation-removal== 46301 (pos)
                    (not (not_checked_p2))

                    ; #68162: <==unclosure== 84842 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #84842: <==uncertain_firing== 53639 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p9_p3
        :precondition (and (succ_p9_p3)
                           (at_c_p9))
        :effect (and
                    ; #12461: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #12537: <==closure== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #31941: <==closure== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #46161: origin
                    (checked_p3)

                    ; #51306: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #31493: <==negation-removal== 31941 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #38928: <==unclosure== 85484 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #70616: <==negation-removal== 12537 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #72426: <==negation-removal== 46161 (pos)
                    (not (not_checked_p3))

                    ; #74259: <==negation-removal== 51306 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #77179: <==negation-removal== 12461 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #85484: <==uncertain_firing== 12461 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))))

    (:action sensecells_c_p9_p4
        :precondition (and (succ_p9_p4)
                           (at_c_p9))
        :effect (and
                    ; #16690: origin
                    (checked_p4)

                    ; #22924: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #57841: <==closure== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #73414: <==closure== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #88885: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #12387: <==negation-removal== 73414 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #25915: <==uncertain_firing== 22924 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #48310: <==negation-removal== 88885 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #49895: <==negation-removal== 22924 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #50725: <==negation-removal== 57841 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #62413: <==negation-removal== 16690 (pos)
                    (not (not_checked_p4))

                    ; #75600: <==unclosure== 25915 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p9_p5
        :precondition (and (succ_p9_p5)
                           (at_c_p9))
        :effect (and
                    ; #34181: <==closure== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #35846: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #54256: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #85409: origin
                    (checked_p5)

                    ; #88825: <==closure== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #11393: <==negation-removal== 34181 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #26574: <==unclosure== 40926 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #40926: <==uncertain_firing== 54256 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #62018: <==negation-removal== 88825 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #69521: <==negation-removal== 85409 (pos)
                    (not (not_checked_p5))

                    ; #73665: <==negation-removal== 35846 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #73896: <==negation-removal== 54256 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))))

    (:action sensecells_c_p9_p6
        :precondition (and (succ_p9_p6)
                           (at_c_p9))
        :effect (and
                    ; #25053: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #50735: origin
                    (checked_p6)

                    ; #61427: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #66842: <==closure== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #72651: <==closure== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #15920: <==negation-removal== 50735 (pos)
                    (not (not_checked_p6))

                    ; #24868: <==negation-removal== 25053 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #41125: <==negation-removal== 72651 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #50883: <==negation-removal== 66842 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #53020: <==uncertain_firing== 61427 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #65272: <==negation-removal== 61427 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #82667: <==unclosure== 53020 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p9_p7
        :precondition (and (succ_p9_p7)
                           (at_c_p9))
        :effect (and
                    ; #23381: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #37001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #41929: origin
                    (checked_p7)

                    ; #56795: <==closure== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #75421: <==closure== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #11869: <==unclosure== 21463 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #21463: <==uncertain_firing== 23381 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #22198: <==negation-removal== 56795 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #24200: <==negation-removal== 75421 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #35303: <==negation-removal== 23381 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #35382: <==negation-removal== 37001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #80167: <==negation-removal== 41929 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_c_p9_p8
        :precondition (and (succ_p9_p8)
                           (at_c_p9))
        :effect (and
                    ; #30207: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #51138: origin
                    (checked_p8)

                    ; #54163: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #59759: <==closure== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #77350: <==closure== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #15548: <==negation-removal== 77350 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #25854: <==unclosure== 27410 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #27410: <==uncertain_firing== 30207 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #55249: <==negation-removal== 54163 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #56739: <==negation-removal== 30207 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #70956: <==negation-removal== 51138 (pos)
                    (not (not_checked_p8))

                    ; #88527: <==negation-removal== 59759 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))))

    (:action sensecells_c_p9_p9
        :precondition (and (succ_p9_p9)
                           (at_c_p9))
        :effect (and
                    ; #16617: <==closure== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #17795: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46628: <==closure== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #76393: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #89773: origin
                    (checked_p9)

                    ; #20772: <==negation-removal== 17795 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #27432: <==uncertain_firing== 17795 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #28014: <==negation-removal== 16617 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #42860: <==negation-removal== 46628 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #46451: <==negation-removal== 76393 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #57572: <==unclosure== 27432 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #69147: <==negation-removal== 89773 (pos)
                    (not (not_checked_p9))))

    (:action sensesurvivors_a_p0011_s
        :precondition (and (at_a_p0011)
                           (not (obs_p0011)))
        :effect (and
                    ; #20749: <==closure== 90715 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (Pa_survivorat_s_p0011))

                    ; #78781: <==closure== 88955 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Pa_not_survivorat_s_p0011))

                    ; #87833: origin
                    (obs_p0011)

                    ; #88955: origin
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Ba_not_survivorat_s_p0011))

                    ; #90715: origin
                    (when (and (hiddensurvivorat_s_p0011))
                          (Ba_survivorat_s_p0011))

                    ; #54612: <==negation-removal== 20749 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Ba_not_survivorat_s_p0011)))

                    ; #55071: <==negation-removal== 90715 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Pa_not_survivorat_s_p0011)))

                    ; #55795: <==negation-removal== 78781 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Ba_survivorat_s_p0011)))

                    ; #65727: <==negation-removal== 87833 (pos)
                    (not (not_obs_p0011))

                    ; #70059: <==negation-removal== 88955 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Pa_survivorat_s_p0011)))

                    ; #86113: <==uncertain_firing== 90715 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Pa_not_survivorat_s_p0011)))

                    ; #91074: <==unclosure== 86113 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Ba_not_survivorat_s_p0011)))))

    (:action sensesurvivors_a_p012_s
        :precondition (and (at_a_p012)
                           (not (obs_p012)))
        :effect (and
                    ; #12065: <==closure== 35632 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Pa_not_survivorat_s_p012))

                    ; #35632: origin
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Ba_not_survivorat_s_p012))

                    ; #45407: origin
                    (when (and (hiddensurvivorat_s_p012))
                          (Ba_survivorat_s_p012))

                    ; #59887: <==closure== 45407 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (Pa_survivorat_s_p012))

                    ; #84412: origin
                    (obs_p012)

                    ; #23914: <==uncertain_firing== 45407 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Pa_not_survivorat_s_p012)))

                    ; #26550: <==unclosure== 23914 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Ba_not_survivorat_s_p012)))

                    ; #29548: <==negation-removal== 12065 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Ba_survivorat_s_p012)))

                    ; #45619: <==negation-removal== 84412 (pos)
                    (not (not_obs_p012))

                    ; #66073: <==negation-removal== 45407 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Pa_not_survivorat_s_p012)))

                    ; #70275: <==negation-removal== 35632 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Pa_survivorat_s_p012)))

                    ; #79941: <==negation-removal== 59887 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Ba_not_survivorat_s_p012)))))

    (:action sensesurvivors_a_p10_s
        :precondition (and (at_a_p10)
                           (not (obs_p10)))
        :effect (and
                    ; #15883: origin
                    (when (and (hiddensurvivorat_s_p10))
                          (Ba_survivorat_s_p10))

                    ; #18271: <==closure== 15883 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (Pa_survivorat_s_p10))

                    ; #33908: origin
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Ba_not_survivorat_s_p10))

                    ; #58173: <==closure== 33908 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Pa_not_survivorat_s_p10))

                    ; #73623: origin
                    (obs_p10)

                    ; #13921: <==negation-removal== 73623 (pos)
                    (not (not_obs_p10))

                    ; #14027: <==uncertain_firing== 15883 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Pa_not_survivorat_s_p10)))

                    ; #33699: <==unclosure== 14027 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Ba_not_survivorat_s_p10)))

                    ; #35908: <==negation-removal== 15883 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Pa_not_survivorat_s_p10)))

                    ; #43731: <==negation-removal== 58173 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Ba_survivorat_s_p10)))

                    ; #49145: <==negation-removal== 33908 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Pa_survivorat_s_p10)))

                    ; #65661: <==negation-removal== 18271 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Ba_not_survivorat_s_p10)))))

    (:action sensesurvivors_a_p1_s
        :precondition (and (at_a_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #21780: <==closure== 41127 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pa_survivorat_s_p1))

                    ; #41127: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Ba_survivorat_s_p1))

                    ; #44464: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Ba_not_survivorat_s_p1))

                    ; #51975: origin
                    (obs_p1)

                    ; #93666: <==closure== 44464 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pa_not_survivorat_s_p1))

                    ; #21630: <==unclosure== 66781 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Ba_not_survivorat_s_p1)))

                    ; #22229: <==negation-removal== 93666 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Ba_survivorat_s_p1)))

                    ; #38812: <==negation-removal== 44464 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pa_survivorat_s_p1)))

                    ; #42421: <==negation-removal== 21780 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Ba_not_survivorat_s_p1)))

                    ; #48132: <==negation-removal== 51975 (pos)
                    (not (not_obs_p1))

                    ; #66781: <==uncertain_firing== 41127 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pa_not_survivorat_s_p1)))

                    ; #79395: <==negation-removal== 41127 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pa_not_survivorat_s_p1)))))

    (:action sensesurvivors_a_p2_s
        :precondition (and (at_a_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #13695: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Ba_survivorat_s_p2))

                    ; #26180: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Ba_not_survivorat_s_p2))

                    ; #45503: <==closure== 26180 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pa_not_survivorat_s_p2))

                    ; #62404: origin
                    (obs_p2)

                    ; #77882: <==closure== 13695 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pa_survivorat_s_p2))

                    ; #21380: <==negation-removal== 13695 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pa_not_survivorat_s_p2)))

                    ; #25108: <==uncertain_firing== 13695 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pa_not_survivorat_s_p2)))

                    ; #25776: <==unclosure== 25108 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Ba_not_survivorat_s_p2)))

                    ; #42738: <==negation-removal== 26180 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pa_survivorat_s_p2)))

                    ; #70830: <==negation-removal== 45503 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Ba_survivorat_s_p2)))

                    ; #71875: <==negation-removal== 77882 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Ba_not_survivorat_s_p2)))

                    ; #74257: <==negation-removal== 62404 (pos)
                    (not (not_obs_p2))))

    (:action sensesurvivors_a_p3_s
        :precondition (and (at_a_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #27271: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Ba_not_survivorat_s_p3))

                    ; #29117: <==closure== 27271 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pa_not_survivorat_s_p3))

                    ; #50551: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Ba_survivorat_s_p3))

                    ; #52041: <==closure== 50551 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pa_survivorat_s_p3))

                    ; #71381: origin
                    (obs_p3)

                    ; #12490: <==negation-removal== 52041 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Ba_not_survivorat_s_p3)))

                    ; #15951: <==negation-removal== 50551 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pa_not_survivorat_s_p3)))

                    ; #21486: <==negation-removal== 27271 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pa_survivorat_s_p3)))

                    ; #38092: <==negation-removal== 71381 (pos)
                    (not (not_obs_p3))

                    ; #52441: <==unclosure== 60849 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Ba_not_survivorat_s_p3)))

                    ; #60849: <==uncertain_firing== 50551 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pa_not_survivorat_s_p3)))

                    ; #72277: <==negation-removal== 29117 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Ba_survivorat_s_p3)))))

    (:action sensesurvivors_a_p4_s
        :precondition (and (at_a_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #32419: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Ba_not_survivorat_s_p4))

                    ; #49311: <==closure== 67703 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pa_survivorat_s_p4))

                    ; #67703: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Ba_survivorat_s_p4))

                    ; #75082: origin
                    (obs_p4)

                    ; #79483: <==closure== 32419 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pa_not_survivorat_s_p4))

                    ; #11669: <==negation-removal== 49311 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Ba_not_survivorat_s_p4)))

                    ; #13169: <==unclosure== 36819 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Ba_not_survivorat_s_p4)))

                    ; #36819: <==uncertain_firing== 67703 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pa_not_survivorat_s_p4)))

                    ; #62277: <==negation-removal== 75082 (pos)
                    (not (not_obs_p4))

                    ; #67652: <==negation-removal== 32419 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pa_survivorat_s_p4)))

                    ; #86608: <==negation-removal== 79483 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Ba_survivorat_s_p4)))

                    ; #86977: <==negation-removal== 67703 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pa_not_survivorat_s_p4)))))

    (:action sensesurvivors_a_p5_s
        :precondition (and (at_a_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #64399: origin
                    (obs_p5)

                    ; #68480: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Ba_survivorat_s_p5))

                    ; #78052: <==closure== 68480 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pa_survivorat_s_p5))

                    ; #82125: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Ba_not_survivorat_s_p5))

                    ; #83662: <==closure== 82125 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pa_not_survivorat_s_p5))

                    ; #23229: <==negation-removal== 68480 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pa_not_survivorat_s_p5)))

                    ; #28588: <==unclosure== 90705 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Ba_not_survivorat_s_p5)))

                    ; #32860: <==negation-removal== 82125 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pa_survivorat_s_p5)))

                    ; #36444: <==negation-removal== 78052 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Ba_not_survivorat_s_p5)))

                    ; #47434: <==negation-removal== 64399 (pos)
                    (not (not_obs_p5))

                    ; #64766: <==negation-removal== 83662 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Ba_survivorat_s_p5)))

                    ; #90705: <==uncertain_firing== 68480 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pa_not_survivorat_s_p5)))))

    (:action sensesurvivors_a_p6_s
        :precondition (and (at_a_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #29302: origin
                    (obs_p6)

                    ; #35375: <==closure== 73844 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pa_survivorat_s_p6))

                    ; #63214: <==closure== 87319 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pa_not_survivorat_s_p6))

                    ; #73844: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Ba_survivorat_s_p6))

                    ; #87319: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Ba_not_survivorat_s_p6))

                    ; #12561: <==negation-removal== 35375 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Ba_not_survivorat_s_p6)))

                    ; #24690: <==negation-removal== 63214 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Ba_survivorat_s_p6)))

                    ; #34291: <==negation-removal== 87319 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pa_survivorat_s_p6)))

                    ; #45108: <==negation-removal== 73844 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pa_not_survivorat_s_p6)))

                    ; #50494: <==unclosure== 84772 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Ba_not_survivorat_s_p6)))

                    ; #71789: <==negation-removal== 29302 (pos)
                    (not (not_obs_p6))

                    ; #84772: <==uncertain_firing== 73844 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pa_not_survivorat_s_p6)))))

    (:action sensesurvivors_a_p7_s
        :precondition (and (at_a_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #37229: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Ba_survivorat_s_p7))

                    ; #44777: <==closure== 86188 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pa_not_survivorat_s_p7))

                    ; #61204: <==closure== 37229 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pa_survivorat_s_p7))

                    ; #82916: origin
                    (obs_p7)

                    ; #86188: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Ba_not_survivorat_s_p7))

                    ; #13087: <==negation-removal== 82916 (pos)
                    (not (not_obs_p7))

                    ; #28312: <==negation-removal== 37229 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pa_not_survivorat_s_p7)))

                    ; #34941: <==negation-removal== 61204 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Ba_not_survivorat_s_p7)))

                    ; #44519: <==negation-removal== 44777 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Ba_survivorat_s_p7)))

                    ; #59587: <==unclosure== 81253 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Ba_not_survivorat_s_p7)))

                    ; #64359: <==negation-removal== 86188 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pa_survivorat_s_p7)))

                    ; #81253: <==uncertain_firing== 37229 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pa_not_survivorat_s_p7)))))

    (:action sensesurvivors_a_p8_s
        :precondition (and (at_a_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #12036: <==closure== 73251 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pa_not_survivorat_s_p8))

                    ; #23077: origin
                    (obs_p8)

                    ; #38496: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Ba_survivorat_s_p8))

                    ; #46081: <==closure== 38496 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pa_survivorat_s_p8))

                    ; #73251: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Ba_not_survivorat_s_p8))

                    ; #25595: <==unclosure== 64658 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Ba_not_survivorat_s_p8)))

                    ; #32602: <==negation-removal== 38496 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pa_not_survivorat_s_p8)))

                    ; #43985: <==negation-removal== 12036 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Ba_survivorat_s_p8)))

                    ; #64658: <==uncertain_firing== 38496 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pa_not_survivorat_s_p8)))

                    ; #67914: <==negation-removal== 23077 (pos)
                    (not (not_obs_p8))

                    ; #77514: <==negation-removal== 73251 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pa_survivorat_s_p8)))

                    ; #90613: <==negation-removal== 46081 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Ba_not_survivorat_s_p8)))))

    (:action sensesurvivors_a_p9_s
        :precondition (and (at_a_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #12124: origin
                    (obs_p9)

                    ; #41675: <==closure== 79280 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pa_not_survivorat_s_p9))

                    ; #62912: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Ba_survivorat_s_p9))

                    ; #79280: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Ba_not_survivorat_s_p9))

                    ; #85413: <==closure== 62912 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pa_survivorat_s_p9))

                    ; #23647: <==negation-removal== 62912 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pa_not_survivorat_s_p9)))

                    ; #38178: <==negation-removal== 41675 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Ba_survivorat_s_p9)))

                    ; #58073: <==uncertain_firing== 62912 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pa_not_survivorat_s_p9)))

                    ; #67384: <==negation-removal== 79280 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pa_survivorat_s_p9)))

                    ; #72644: <==negation-removal== 85413 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Ba_not_survivorat_s_p9)))

                    ; #81778: <==unclosure== 58073 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Ba_not_survivorat_s_p9)))

                    ; #93066: <==negation-removal== 12124 (pos)
                    (not (not_obs_p9))))

    (:action sensesurvivors_b_p0011_s
        :precondition (and (at_b_p0011)
                           (not (obs_p0011)))
        :effect (and
                    ; #29220: <==closure== 46195 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Pb_not_survivorat_s_p0011))

                    ; #46195: origin
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Bb_not_survivorat_s_p0011))

                    ; #63062: origin
                    (when (and (hiddensurvivorat_s_p0011))
                          (Bb_survivorat_s_p0011))

                    ; #78595: <==closure== 63062 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (Pb_survivorat_s_p0011))

                    ; #87833: origin
                    (obs_p0011)

                    ; #10821: <==uncertain_firing== 63062 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Pb_not_survivorat_s_p0011)))

                    ; #18102: <==negation-removal== 63062 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Pb_not_survivorat_s_p0011)))

                    ; #46015: <==negation-removal== 29220 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Bb_survivorat_s_p0011)))

                    ; #55331: <==negation-removal== 78595 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Bb_not_survivorat_s_p0011)))

                    ; #61663: <==unclosure== 10821 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Bb_not_survivorat_s_p0011)))

                    ; #65727: <==negation-removal== 87833 (pos)
                    (not (not_obs_p0011))

                    ; #84913: <==negation-removal== 46195 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Pb_survivorat_s_p0011)))))

    (:action sensesurvivors_b_p012_s
        :precondition (and (at_b_p012)
                           (not (obs_p012)))
        :effect (and
                    ; #36041: <==closure== 82683 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (Pb_survivorat_s_p012))

                    ; #47936: <==closure== 54494 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Pb_not_survivorat_s_p012))

                    ; #54494: origin
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Bb_not_survivorat_s_p012))

                    ; #82683: origin
                    (when (and (hiddensurvivorat_s_p012))
                          (Bb_survivorat_s_p012))

                    ; #84412: origin
                    (obs_p012)

                    ; #45619: <==negation-removal== 84412 (pos)
                    (not (not_obs_p012))

                    ; #55933: <==negation-removal== 82683 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Pb_not_survivorat_s_p012)))

                    ; #56244: <==negation-removal== 36041 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Bb_not_survivorat_s_p012)))

                    ; #66845: <==unclosure== 87872 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Bb_not_survivorat_s_p012)))

                    ; #72700: <==negation-removal== 54494 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Pb_survivorat_s_p012)))

                    ; #75854: <==negation-removal== 47936 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Bb_survivorat_s_p012)))

                    ; #87872: <==uncertain_firing== 82683 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Pb_not_survivorat_s_p012)))))

    (:action sensesurvivors_b_p10_s
        :precondition (and (at_b_p10)
                           (not (obs_p10)))
        :effect (and
                    ; #21231: <==closure== 75031 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Pb_not_survivorat_s_p10))

                    ; #21775: origin
                    (when (and (hiddensurvivorat_s_p10))
                          (Bb_survivorat_s_p10))

                    ; #26919: <==closure== 21775 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (Pb_survivorat_s_p10))

                    ; #73623: origin
                    (obs_p10)

                    ; #75031: origin
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Bb_not_survivorat_s_p10))

                    ; #13921: <==negation-removal== 73623 (pos)
                    (not (not_obs_p10))

                    ; #57285: <==unclosure== 58255 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Bb_not_survivorat_s_p10)))

                    ; #57599: <==negation-removal== 75031 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Pb_survivorat_s_p10)))

                    ; #58255: <==uncertain_firing== 21775 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Pb_not_survivorat_s_p10)))

                    ; #62420: <==negation-removal== 21231 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Bb_survivorat_s_p10)))

                    ; #70036: <==negation-removal== 26919 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Bb_not_survivorat_s_p10)))

                    ; #76937: <==negation-removal== 21775 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Pb_not_survivorat_s_p10)))))

    (:action sensesurvivors_b_p1_s
        :precondition (and (at_b_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #12184: <==closure== 90998 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pb_not_survivorat_s_p1))

                    ; #12568: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Bb_survivorat_s_p1))

                    ; #51975: origin
                    (obs_p1)

                    ; #84916: <==closure== 12568 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pb_survivorat_s_p1))

                    ; #90998: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Bb_not_survivorat_s_p1))

                    ; #12008: <==unclosure== 17445 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Bb_not_survivorat_s_p1)))

                    ; #12376: <==negation-removal== 84916 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Bb_not_survivorat_s_p1)))

                    ; #17445: <==uncertain_firing== 12568 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pb_not_survivorat_s_p1)))

                    ; #20265: <==negation-removal== 12184 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Bb_survivorat_s_p1)))

                    ; #21338: <==negation-removal== 90998 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pb_survivorat_s_p1)))

                    ; #26827: <==negation-removal== 12568 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pb_not_survivorat_s_p1)))

                    ; #48132: <==negation-removal== 51975 (pos)
                    (not (not_obs_p1))))

    (:action sensesurvivors_b_p2_s
        :precondition (and (at_b_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #15290: <==closure== 90608 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pb_not_survivorat_s_p2))

                    ; #26449: <==closure== 80574 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pb_survivorat_s_p2))

                    ; #62404: origin
                    (obs_p2)

                    ; #80574: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Bb_survivorat_s_p2))

                    ; #90608: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Bb_not_survivorat_s_p2))

                    ; #44271: <==negation-removal== 80574 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pb_not_survivorat_s_p2)))

                    ; #49051: <==negation-removal== 15290 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Bb_survivorat_s_p2)))

                    ; #60434: <==negation-removal== 90608 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pb_survivorat_s_p2)))

                    ; #69702: <==negation-removal== 26449 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Bb_not_survivorat_s_p2)))

                    ; #74257: <==negation-removal== 62404 (pos)
                    (not (not_obs_p2))

                    ; #77821: <==unclosure== 82506 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Bb_not_survivorat_s_p2)))

                    ; #82506: <==uncertain_firing== 80574 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pb_not_survivorat_s_p2)))))

    (:action sensesurvivors_b_p3_s
        :precondition (and (at_b_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #13759: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Bb_not_survivorat_s_p3))

                    ; #42105: <==closure== 13759 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pb_not_survivorat_s_p3))

                    ; #46049: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Bb_survivorat_s_p3))

                    ; #71381: origin
                    (obs_p3)

                    ; #88801: <==closure== 46049 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pb_survivorat_s_p3))

                    ; #30553: <==negation-removal== 88801 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Bb_not_survivorat_s_p3)))

                    ; #38092: <==negation-removal== 71381 (pos)
                    (not (not_obs_p3))

                    ; #45783: <==negation-removal== 42105 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Bb_survivorat_s_p3)))

                    ; #47307: <==negation-removal== 13759 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pb_survivorat_s_p3)))

                    ; #72269: <==negation-removal== 46049 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pb_not_survivorat_s_p3)))

                    ; #75684: <==uncertain_firing== 46049 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pb_not_survivorat_s_p3)))

                    ; #78520: <==unclosure== 75684 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Bb_not_survivorat_s_p3)))))

    (:action sensesurvivors_b_p4_s
        :precondition (and (at_b_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #19226: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Bb_not_survivorat_s_p4))

                    ; #52459: <==closure== 19226 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pb_not_survivorat_s_p4))

                    ; #54444: <==closure== 61331 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pb_survivorat_s_p4))

                    ; #61331: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Bb_survivorat_s_p4))

                    ; #75082: origin
                    (obs_p4)

                    ; #10208: <==negation-removal== 19226 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pb_survivorat_s_p4)))

                    ; #15585: <==negation-removal== 61331 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pb_not_survivorat_s_p4)))

                    ; #41018: <==negation-removal== 54444 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Bb_not_survivorat_s_p4)))

                    ; #46398: <==negation-removal== 52459 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Bb_survivorat_s_p4)))

                    ; #62277: <==negation-removal== 75082 (pos)
                    (not (not_obs_p4))

                    ; #74648: <==unclosure== 77531 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Bb_not_survivorat_s_p4)))

                    ; #77531: <==uncertain_firing== 61331 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pb_not_survivorat_s_p4)))))

    (:action sensesurvivors_b_p5_s
        :precondition (and (at_b_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #11019: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Bb_survivorat_s_p5))

                    ; #23514: <==closure== 11019 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pb_survivorat_s_p5))

                    ; #55611: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Bb_not_survivorat_s_p5))

                    ; #61521: <==closure== 55611 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pb_not_survivorat_s_p5))

                    ; #64399: origin
                    (obs_p5)

                    ; #17121: <==negation-removal== 23514 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Bb_not_survivorat_s_p5)))

                    ; #38547: <==negation-removal== 61521 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Bb_survivorat_s_p5)))

                    ; #42034: <==unclosure== 48636 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Bb_not_survivorat_s_p5)))

                    ; #47434: <==negation-removal== 64399 (pos)
                    (not (not_obs_p5))

                    ; #48636: <==uncertain_firing== 11019 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pb_not_survivorat_s_p5)))

                    ; #56968: <==negation-removal== 11019 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pb_not_survivorat_s_p5)))

                    ; #64098: <==negation-removal== 55611 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pb_survivorat_s_p5)))))

    (:action sensesurvivors_b_p6_s
        :precondition (and (at_b_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #19284: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Bb_not_survivorat_s_p6))

                    ; #29302: origin
                    (obs_p6)

                    ; #44668: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Bb_survivorat_s_p6))

                    ; #54978: <==closure== 44668 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pb_survivorat_s_p6))

                    ; #84989: <==closure== 19284 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pb_not_survivorat_s_p6))

                    ; #31566: <==negation-removal== 19284 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pb_survivorat_s_p6)))

                    ; #35955: <==negation-removal== 44668 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pb_not_survivorat_s_p6)))

                    ; #52040: <==negation-removal== 84989 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Bb_survivorat_s_p6)))

                    ; #65347: <==unclosure== 77268 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Bb_not_survivorat_s_p6)))

                    ; #68627: <==negation-removal== 54978 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Bb_not_survivorat_s_p6)))

                    ; #71789: <==negation-removal== 29302 (pos)
                    (not (not_obs_p6))

                    ; #77268: <==uncertain_firing== 44668 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pb_not_survivorat_s_p6)))))

    (:action sensesurvivors_b_p7_s
        :precondition (and (at_b_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #24378: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Bb_survivorat_s_p7))

                    ; #34100: <==closure== 24378 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pb_survivorat_s_p7))

                    ; #54077: <==closure== 68271 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pb_not_survivorat_s_p7))

                    ; #68271: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Bb_not_survivorat_s_p7))

                    ; #82916: origin
                    (obs_p7)

                    ; #13087: <==negation-removal== 82916 (pos)
                    (not (not_obs_p7))

                    ; #27474: <==negation-removal== 24378 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pb_not_survivorat_s_p7)))

                    ; #28870: <==uncertain_firing== 24378 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pb_not_survivorat_s_p7)))

                    ; #51301: <==negation-removal== 34100 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Bb_not_survivorat_s_p7)))

                    ; #58821: <==unclosure== 28870 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Bb_not_survivorat_s_p7)))

                    ; #73955: <==negation-removal== 68271 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pb_survivorat_s_p7)))

                    ; #83513: <==negation-removal== 54077 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Bb_survivorat_s_p7)))))

    (:action sensesurvivors_b_p8_s
        :precondition (and (at_b_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #12258: <==closure== 60122 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pb_survivorat_s_p8))

                    ; #23077: origin
                    (obs_p8)

                    ; #42238: <==closure== 64478 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pb_not_survivorat_s_p8))

                    ; #60122: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Bb_survivorat_s_p8))

                    ; #64478: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Bb_not_survivorat_s_p8))

                    ; #12631: <==negation-removal== 12258 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Bb_not_survivorat_s_p8)))

                    ; #16940: <==negation-removal== 60122 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pb_not_survivorat_s_p8)))

                    ; #24726: <==negation-removal== 42238 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Bb_survivorat_s_p8)))

                    ; #56886: <==negation-removal== 64478 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pb_survivorat_s_p8)))

                    ; #67914: <==negation-removal== 23077 (pos)
                    (not (not_obs_p8))

                    ; #78966: <==uncertain_firing== 60122 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pb_not_survivorat_s_p8)))

                    ; #86347: <==unclosure== 78966 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Bb_not_survivorat_s_p8)))))

    (:action sensesurvivors_b_p9_s
        :precondition (and (at_b_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #12124: origin
                    (obs_p9)

                    ; #39333: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Bb_survivorat_s_p9))

                    ; #51594: <==closure== 60665 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pb_not_survivorat_s_p9))

                    ; #52812: <==closure== 39333 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pb_survivorat_s_p9))

                    ; #60665: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Bb_not_survivorat_s_p9))

                    ; #69310: <==unclosure== 72207 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Bb_not_survivorat_s_p9)))

                    ; #72207: <==uncertain_firing== 39333 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pb_not_survivorat_s_p9)))

                    ; #73790: <==negation-removal== 51594 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Bb_survivorat_s_p9)))

                    ; #79151: <==negation-removal== 60665 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pb_survivorat_s_p9)))

                    ; #80291: <==negation-removal== 39333 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pb_not_survivorat_s_p9)))

                    ; #89740: <==negation-removal== 52812 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Bb_not_survivorat_s_p9)))

                    ; #93066: <==negation-removal== 12124 (pos)
                    (not (not_obs_p9))))

    (:action sensesurvivors_c_p0011_s
        :precondition (and (at_c_p0011)
                           (not (obs_p0011)))
        :effect (and
                    ; #74372: <==closure== 86957 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Pc_not_survivorat_s_p0011))

                    ; #75345: origin
                    (when (and (hiddensurvivorat_s_p0011))
                          (Bc_survivorat_s_p0011))

                    ; #77626: <==closure== 75345 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (Pc_survivorat_s_p0011))

                    ; #86957: origin
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Bc_not_survivorat_s_p0011))

                    ; #87833: origin
                    (obs_p0011)

                    ; #24546: <==unclosure== 28579 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Bc_not_survivorat_s_p0011)))

                    ; #27713: <==negation-removal== 77626 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Bc_not_survivorat_s_p0011)))

                    ; #28579: <==uncertain_firing== 75345 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Pc_not_survivorat_s_p0011)))

                    ; #53794: <==negation-removal== 75345 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Pc_not_survivorat_s_p0011)))

                    ; #65727: <==negation-removal== 87833 (pos)
                    (not (not_obs_p0011))

                    ; #77352: <==negation-removal== 74372 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Bc_survivorat_s_p0011)))

                    ; #89860: <==negation-removal== 86957 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Pc_survivorat_s_p0011)))))

    (:action sensesurvivors_c_p012_s
        :precondition (and (at_c_p012)
                           (not (obs_p012)))
        :effect (and
                    ; #32964: origin
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Bc_not_survivorat_s_p012))

                    ; #42274: <==closure== 53048 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (Pc_survivorat_s_p012))

                    ; #53048: origin
                    (when (and (hiddensurvivorat_s_p012))
                          (Bc_survivorat_s_p012))

                    ; #84412: origin
                    (obs_p012)

                    ; #86945: <==closure== 32964 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Pc_not_survivorat_s_p012))

                    ; #24957: <==unclosure== 93594 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Bc_not_survivorat_s_p012)))

                    ; #45619: <==negation-removal== 84412 (pos)
                    (not (not_obs_p012))

                    ; #65435: <==negation-removal== 53048 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Pc_not_survivorat_s_p012)))

                    ; #78707: <==negation-removal== 32964 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Pc_survivorat_s_p012)))

                    ; #87038: <==negation-removal== 86945 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Bc_survivorat_s_p012)))

                    ; #87996: <==negation-removal== 42274 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Bc_not_survivorat_s_p012)))

                    ; #93594: <==uncertain_firing== 53048 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Pc_not_survivorat_s_p012)))))

    (:action sensesurvivors_c_p10_s
        :precondition (and (at_c_p10)
                           (not (obs_p10)))
        :effect (and
                    ; #16100: <==closure== 88327 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (Pc_survivorat_s_p10))

                    ; #60699: <==closure== 79598 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Pc_not_survivorat_s_p10))

                    ; #73623: origin
                    (obs_p10)

                    ; #79598: origin
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Bc_not_survivorat_s_p10))

                    ; #88327: origin
                    (when (and (hiddensurvivorat_s_p10))
                          (Bc_survivorat_s_p10))

                    ; #10607: <==unclosure== 15999 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Bc_not_survivorat_s_p10)))

                    ; #13921: <==negation-removal== 73623 (pos)
                    (not (not_obs_p10))

                    ; #15999: <==uncertain_firing== 88327 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Pc_not_survivorat_s_p10)))

                    ; #47350: <==negation-removal== 16100 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Bc_not_survivorat_s_p10)))

                    ; #62073: <==negation-removal== 79598 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Pc_survivorat_s_p10)))

                    ; #65646: <==negation-removal== 60699 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Bc_survivorat_s_p10)))

                    ; #93928: <==negation-removal== 88327 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Pc_not_survivorat_s_p10)))))

    (:action sensesurvivors_c_p1_s
        :precondition (and (at_c_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #21594: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Bc_not_survivorat_s_p1))

                    ; #51975: origin
                    (obs_p1)

                    ; #60179: <==closure== 88028 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pc_survivorat_s_p1))

                    ; #60921: <==closure== 21594 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pc_not_survivorat_s_p1))

                    ; #88028: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Bc_survivorat_s_p1))

                    ; #17977: <==negation-removal== 60179 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Bc_not_survivorat_s_p1)))

                    ; #28898: <==negation-removal== 88028 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pc_not_survivorat_s_p1)))

                    ; #36415: <==negation-removal== 21594 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pc_survivorat_s_p1)))

                    ; #47808: <==negation-removal== 60921 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Bc_survivorat_s_p1)))

                    ; #48132: <==negation-removal== 51975 (pos)
                    (not (not_obs_p1))

                    ; #55236: <==unclosure== 73528 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Bc_not_survivorat_s_p1)))

                    ; #73528: <==uncertain_firing== 88028 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pc_not_survivorat_s_p1)))))

    (:action sensesurvivors_c_p2_s
        :precondition (and (at_c_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #62260: <==closure== 67678 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pc_not_survivorat_s_p2))

                    ; #62404: origin
                    (obs_p2)

                    ; #67678: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Bc_not_survivorat_s_p2))

                    ; #75523: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Bc_survivorat_s_p2))

                    ; #76294: <==closure== 75523 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pc_survivorat_s_p2))

                    ; #26670: <==negation-removal== 75523 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pc_not_survivorat_s_p2)))

                    ; #33811: <==negation-removal== 67678 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pc_survivorat_s_p2)))

                    ; #35247: <==negation-removal== 62260 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Bc_survivorat_s_p2)))

                    ; #62846: <==uncertain_firing== 75523 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pc_not_survivorat_s_p2)))

                    ; #66250: <==unclosure== 62846 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Bc_not_survivorat_s_p2)))

                    ; #74257: <==negation-removal== 62404 (pos)
                    (not (not_obs_p2))

                    ; #75132: <==negation-removal== 76294 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Bc_not_survivorat_s_p2)))))

    (:action sensesurvivors_c_p3_s
        :precondition (and (at_c_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #11863: <==closure== 82981 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pc_not_survivorat_s_p3))

                    ; #26929: <==closure== 55789 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pc_survivorat_s_p3))

                    ; #55789: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Bc_survivorat_s_p3))

                    ; #71381: origin
                    (obs_p3)

                    ; #82981: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Bc_not_survivorat_s_p3))

                    ; #10704: <==negation-removal== 82981 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pc_survivorat_s_p3)))

                    ; #21167: <==negation-removal== 55789 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pc_not_survivorat_s_p3)))

                    ; #23290: <==unclosure== 75702 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Bc_not_survivorat_s_p3)))

                    ; #24529: <==negation-removal== 26929 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Bc_not_survivorat_s_p3)))

                    ; #38092: <==negation-removal== 71381 (pos)
                    (not (not_obs_p3))

                    ; #75702: <==uncertain_firing== 55789 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pc_not_survivorat_s_p3)))

                    ; #83012: <==negation-removal== 11863 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Bc_survivorat_s_p3)))))

    (:action sensesurvivors_c_p4_s
        :precondition (and (at_c_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #11139: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Bc_survivorat_s_p4))

                    ; #23172: <==closure== 11139 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pc_survivorat_s_p4))

                    ; #57037: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Bc_not_survivorat_s_p4))

                    ; #75082: origin
                    (obs_p4)

                    ; #77614: <==closure== 57037 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pc_not_survivorat_s_p4))

                    ; #38537: <==negation-removal== 57037 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pc_survivorat_s_p4)))

                    ; #43654: <==unclosure== 47830 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Bc_not_survivorat_s_p4)))

                    ; #47830: <==uncertain_firing== 11139 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pc_not_survivorat_s_p4)))

                    ; #59251: <==negation-removal== 23172 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Bc_not_survivorat_s_p4)))

                    ; #60645: <==negation-removal== 11139 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pc_not_survivorat_s_p4)))

                    ; #62277: <==negation-removal== 75082 (pos)
                    (not (not_obs_p4))

                    ; #69955: <==negation-removal== 77614 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Bc_survivorat_s_p4)))))

    (:action sensesurvivors_c_p5_s
        :precondition (and (at_c_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #25317: <==closure== 81412 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pc_survivorat_s_p5))

                    ; #46135: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Bc_not_survivorat_s_p5))

                    ; #64399: origin
                    (obs_p5)

                    ; #76579: <==closure== 46135 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pc_not_survivorat_s_p5))

                    ; #81412: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Bc_survivorat_s_p5))

                    ; #26955: <==uncertain_firing== 81412 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pc_not_survivorat_s_p5)))

                    ; #38764: <==negation-removal== 81412 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pc_not_survivorat_s_p5)))

                    ; #45602: <==unclosure== 26955 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Bc_not_survivorat_s_p5)))

                    ; #45686: <==negation-removal== 76579 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Bc_survivorat_s_p5)))

                    ; #47434: <==negation-removal== 64399 (pos)
                    (not (not_obs_p5))

                    ; #58034: <==negation-removal== 46135 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pc_survivorat_s_p5)))

                    ; #66087: <==negation-removal== 25317 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Bc_not_survivorat_s_p5)))))

    (:action sensesurvivors_c_p6_s
        :precondition (and (at_c_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #29302: origin
                    (obs_p6)

                    ; #41698: <==closure== 63529 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pc_survivorat_s_p6))

                    ; #52670: <==closure== 78926 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pc_not_survivorat_s_p6))

                    ; #63529: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Bc_survivorat_s_p6))

                    ; #78926: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Bc_not_survivorat_s_p6))

                    ; #11532: <==unclosure== 25424 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Bc_not_survivorat_s_p6)))

                    ; #25424: <==uncertain_firing== 63529 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pc_not_survivorat_s_p6)))

                    ; #67039: <==negation-removal== 41698 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Bc_not_survivorat_s_p6)))

                    ; #68019: <==negation-removal== 78926 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pc_survivorat_s_p6)))

                    ; #68138: <==negation-removal== 52670 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Bc_survivorat_s_p6)))

                    ; #70458: <==negation-removal== 63529 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pc_not_survivorat_s_p6)))

                    ; #71789: <==negation-removal== 29302 (pos)
                    (not (not_obs_p6))))

    (:action sensesurvivors_c_p7_s
        :precondition (and (at_c_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #17659: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Bc_survivorat_s_p7))

                    ; #37351: <==closure== 69566 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pc_not_survivorat_s_p7))

                    ; #69566: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Bc_not_survivorat_s_p7))

                    ; #71748: <==closure== 17659 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pc_survivorat_s_p7))

                    ; #82916: origin
                    (obs_p7)

                    ; #13087: <==negation-removal== 82916 (pos)
                    (not (not_obs_p7))

                    ; #30746: <==unclosure== 82290 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Bc_not_survivorat_s_p7)))

                    ; #56728: <==negation-removal== 69566 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pc_survivorat_s_p7)))

                    ; #66891: <==negation-removal== 71748 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Bc_not_survivorat_s_p7)))

                    ; #82034: <==negation-removal== 17659 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pc_not_survivorat_s_p7)))

                    ; #82290: <==uncertain_firing== 17659 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pc_not_survivorat_s_p7)))

                    ; #84622: <==negation-removal== 37351 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Bc_survivorat_s_p7)))))

    (:action sensesurvivors_c_p8_s
        :precondition (and (at_c_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #15947: <==closure== 76552 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pc_not_survivorat_s_p8))

                    ; #23077: origin
                    (obs_p8)

                    ; #44075: <==closure== 82114 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pc_survivorat_s_p8))

                    ; #76552: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Bc_not_survivorat_s_p8))

                    ; #82114: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Bc_survivorat_s_p8))

                    ; #20819: <==negation-removal== 76552 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pc_survivorat_s_p8)))

                    ; #35544: <==negation-removal== 44075 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Bc_not_survivorat_s_p8)))

                    ; #59654: <==unclosure== 64547 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Bc_not_survivorat_s_p8)))

                    ; #61250: <==negation-removal== 15947 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Bc_survivorat_s_p8)))

                    ; #64547: <==uncertain_firing== 82114 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pc_not_survivorat_s_p8)))

                    ; #67914: <==negation-removal== 23077 (pos)
                    (not (not_obs_p8))

                    ; #70547: <==negation-removal== 82114 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pc_not_survivorat_s_p8)))))

    (:action sensesurvivors_c_p9_s
        :precondition (and (at_c_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #11469: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Bc_survivorat_s_p9))

                    ; #12124: origin
                    (obs_p9)

                    ; #44009: <==closure== 11469 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pc_survivorat_s_p9))

                    ; #51396: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Bc_not_survivorat_s_p9))

                    ; #89029: <==closure== 51396 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pc_not_survivorat_s_p9))

                    ; #20624: <==negation-removal== 11469 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pc_not_survivorat_s_p9)))

                    ; #26499: <==unclosure== 61968 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Bc_not_survivorat_s_p9)))

                    ; #61968: <==uncertain_firing== 11469 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pc_not_survivorat_s_p9)))

                    ; #68816: <==negation-removal== 44009 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Bc_not_survivorat_s_p9)))

                    ; #79340: <==negation-removal== 89029 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Bc_survivorat_s_p9)))

                    ; #90896: <==negation-removal== 51396 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pc_survivorat_s_p9)))

                    ; #93066: <==negation-removal== 12124 (pos)
                    (not (not_obs_p9))))

)